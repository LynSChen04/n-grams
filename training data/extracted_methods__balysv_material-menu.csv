Branch Name,Commit Hash,File Name,Method Name,Method Code,Commit Link,Method Code No Comments,Tokens
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,BaseActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);

        SeekBar duration = (SeekBar) findViewById(R.id.item_animation_duration);
        duration.setMax(4600);
        duration.setProgress(2600);
        duration.setOnSeekBarChangeListener(this);

        materialMenuView = (MaterialMenuView) findViewById(R.id.material_menu_button);
        materialMenuView.setOnClickListener(this);

        findViewById(R.id.switch_item_arrow).setOnClickListener(this);
        findViewById(R.id.switch_item_menu).setOnClickListener(this);
        findViewById(R.id.switch_item_x).setOnClickListener(this);
        findViewById(R.id.animate_item_arrow).setOnClickListener(this);
        findViewById(R.id.animate_item_menu).setOnClickListener(this);
        findViewById(R.id.animate_item_x).setOnClickListener(this);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);

        SeekBar duration = (SeekBar) findViewById(R.id.item_animation_duration);
        duration.setMax(4600);
        duration.setProgress(2600);
        duration.setOnSeekBarChangeListener(this);

        materialMenuView = (MaterialMenuView) findViewById(R.id.material_menu_button);
        materialMenuView.setOnClickListener(this);

        findViewById(R.id.switch_item_arrow).setOnClickListener(this);
        findViewById(R.id.switch_item_menu).setOnClickListener(this);
        findViewById(R.id.switch_item_x).setOnClickListener(this);
        findViewById(R.id.animate_item_arrow).setOnClickListener(this);
        findViewById(R.id.animate_item_menu).setOnClickListener(this);
        findViewById(R.id.animate_item_x).setOnClickListener(this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '\n', '        ', 'SeekBar', ' ', 'duration', ' ', '=', ' ', '(', 'SeekBar', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'item_animation_duration', ')', ';', '\n', '        ', 'duration', '.', 'setMax', '(', '4600', ')', ';', '\n', '        ', 'duration', '.', 'setProgress', '(', '2600', ')', ';', '\n', '        ', 'duration', '.', 'setOnSeekBarChangeListener', '(', 'this', ')', ';', '\n', '\n', '        ', 'materialMenuView', ' ', '=', ' ', '(', 'MaterialMenuView', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'material_menu_button', ')', ';', '\n', '        ', 'materialMenuView', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_arrow', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_menu', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_x', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_arrow', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_menu', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_x', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,BaseActivity.java,onClick,"    @Override public void onClick(View v) {
        final int id = v.getId();
        switch (id) {
            case R.id.animate_item_menu:",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override public void onClick(View v) {
        final int id = v.getId();
        switch (id) {
            case R.id.animate_item_menu:
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '        ', 'final', ' ', 'int', ' ', 'id', ' ', '=', ' ', 'v', '.', 'getId', '(', ')', ';', '\n', '        ', 'switch', ' ', '(', 'id', ')', ' ', '{', '\n', '            ', 'case', ' ', 'R', '.', 'id', '.', 'animate_item_menu', ':', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,BaseActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.home_icon, menu);
        return true;
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.home_icon, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'home_icon', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,BaseActivity.java,onProgressChanged,"    @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
        materialMenuView.setTransformationDuration(400 + progress);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
        materialMenuView.setTransformationDuration(400 + progress);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onProgressChanged', '(', 'SeekBar', ' ', 'seekBar', ',', ' ', 'int', ' ', 'progress', ',', ' ', 'boolean', ' ', 'fromUser', ')', ' ', '{', '\n', '        ', 'materialMenuView', '.', 'setTransformationDuration', '(', '400', ' ', '+', ' ', 'progress', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,BaseActivity.java,generateState,"    protected int generateState(int previous) {
        int generated = new Random().nextInt(3);
        return generated != previous ? generated : generateState(previous);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected int generateState(int previous) {
        int generated = new Random().nextInt(3);
        return generated != previous ? generated : generateState(previous);
    }
","['    ', 'protected', ' ', 'int', ' ', 'generateState', '(', 'int', ' ', 'previous', ')', ' ', '{', '\n', '        ', 'int', ' ', 'generated', ' ', '=', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '3', ')', ';', '\n', '        ', 'return', ' ', 'generated', ' ', '!', '=', ' ', 'previous', ' ', '?', ' ', 'generated', ' ', ':', ' ', 'generateState', '(', 'previous', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,BaseActivity.java,intToState,"    protected IconState intToState(int state) {
        switch (state) {
            case 0:
                return IconState.BURGER;
            case 1:
                return IconState.ARROW;
            case 2:
                return IconState.X;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected IconState intToState(int state) {
        switch (state) {
            case 0:
                return IconState.BURGER;
            case 1:
                return IconState.ARROW;
            case 2:
                return IconState.X;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }
","['    ', 'protected', ' ', 'IconState', ' ', 'intToState', '(', 'int', ' ', 'state', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'state', ')', ' ', '{', '\n', '            ', 'case', ' ', '0', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'BURGER', ';', '\n', '            ', 'case', ' ', '1', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'ARROW', ';', '\n', '            ', 'case', ' ', '2', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'X', ';', '\n', '        ', '}', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Must be a number [0,3)', '""', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,CustomViewActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        initCustomActionBar();
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        initCustomActionBar();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'initCustomActionBar', '(', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,CustomViewActivity.java,initCustomActionBar,"    private void initCustomActionBar() {
        ActionBar actionBar = getActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setDisplayShowCustomEnabled(true);
        actionBar.setCustomView(R.layout.action_bar);
        materialMenu = (MaterialMenuView) actionBar.getCustomView().findViewById(R.id.action_bar_menu);
        materialMenu.setOnClickListener(this);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void initCustomActionBar() {
        ActionBar actionBar = getActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setDisplayShowCustomEnabled(true);
        actionBar.setCustomView(R.layout.action_bar);
        materialMenu = (MaterialMenuView) actionBar.getCustomView().findViewById(R.id.action_bar_menu);
        materialMenu.setOnClickListener(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'initCustomActionBar', '(', ')', ' ', '{', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'getActionBar', '(', ')', ';', '\n', '        ', 'actionBar', '.', 'setHomeButtonEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowHomeEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowTitleEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowCustomEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setCustomView', '(', 'R', '.', 'layout', '.', 'action_bar', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', '(', 'MaterialMenuView', ')', ' ', 'actionBar', '.', 'getCustomView', '(', ')', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'action_bar_menu', ')', ';', '\n', '        ', 'materialMenu', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,CustomViewActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.custom_view, menu);
        return true;
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.custom_view, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'custom_view', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,CustomViewActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            startActivity(new Intent(this, HomeIconActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            startActivity(new Intent(this, HomeIconActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'action_settings', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'HomeIconActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIcon(this, Color.WHITE);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIcon(this, Color.WHITE);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIcon', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,HomeIconActivity.java,onPostCreate,"    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        materialMenu.syncState(savedInstanceState);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        materialMenu.syncState(savedInstanceState);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onPostCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onPostCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', '.', 'syncState', '(', 'savedInstanceState', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,HomeIconActivity.java,onSaveInstanceState,"    @Override protected void onSaveInstanceState(Bundle outState) {
        materialMenu.onSaveInstanceState(outState);
        super.onSaveInstanceState(outState);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override protected void onSaveInstanceState(Bundle outState) {
        materialMenu.onSaveInstanceState(outState);
        super.onSaveInstanceState(outState);
    }
","['    ', '@Override', ' ', 'protected', ' ', 'void', ' ', 'onSaveInstanceState', '(', 'Bundle', ' ', 'outState', ')', ' ', '{', '\n', '        ', 'materialMenu', '.', 'onSaveInstanceState', '(', 'outState', ')', ';', '\n', '        ', 'super', '.', 'onSaveInstanceState', '(', 'outState', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,HomeIconActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            startActivity(new Intent(this, CustomViewActivity.class));
            finish();
            return true;
        }
        if (id == android.R.id.home) {
            // random state
            actionBarMenuState = generateState(actionBarMenuState);
            materialMenu.animatePressedState(intToState(actionBarMenuState));
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            startActivity(new Intent(this, CustomViewActivity.class));
            finish();
            return true;
        }
        if (id == android.R.id.home) {
            
            actionBarMenuState = generateState(actionBarMenuState);
            materialMenu.animatePressedState(intToState(actionBarMenuState));
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'action_settings', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'CustomViewActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'android', '.', 'R', '.', 'id', '.', 'home', ')', ' ', '{', '\n', '            ', '\n', '            ', 'actionBarMenuState', ' ', '=', ' ', 'generateState', '(', 'actionBarMenuState', ')', ';', '\n', '            ', 'materialMenu', '.', 'animatePressedState', '(', 'intToState', '(', 'actionBarMenuState', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void setState(IconState state);

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,setTransformationDuration,"    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,setPressedDuration,"    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenu.java,setInterpolator,"    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public abstract MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void setInterpolator(Interpolator interpolator);

    
    public abstract MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'abstract', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuBase.java,animateState,"    public final void animateState(IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, false);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public final void animateState(IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, false);
    }
","['    ', 'public', ' ', 'final', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'getDrawable', '(', ')', '.', 'animateIconState', '(', 'state', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuBase.java,animatePressedState,"    public final void animatePressedState(IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, true);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public final void animatePressedState(IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, true);
    }
","['    ', 'public', ' ', 'final', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'getDrawable', '(', ')', '.', 'animateIconState', '(', 'state', ',', ' ', 'true', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuBase.java,onSaveInstanceState,"    public void onSaveInstanceState(Bundle outState) {
        outState.putString(STATE_KEY, currentState.name());
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void onSaveInstanceState(Bundle outState) {
        outState.putString(STATE_KEY, currentState.name());
    }
","['    ', 'public', ' ', 'void', ' ', 'onSaveInstanceState', '(', 'Bundle', ' ', 'outState', ')', ' ', '{', '\n', '        ', 'outState', '.', 'putString', '(', 'STATE_KEY', ',', ' ', 'currentState', '.', 'name', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuBase.java,syncState,"    public void syncState(Bundle state) {
        if (state != null) {
            String iconStateName = state.getString(STATE_KEY, BURGER.name());",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void syncState(Bundle state) {
        if (state != null) {
            String iconStateName = state.getString(STATE_KEY, BURGER.name());
","['    ', 'public', ' ', 'void', ' ', 'syncState', '(', 'Bundle', ' ', 'state', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'state', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'String', ' ', 'iconStateName', ' ', '=', ' ', 'state', '.', 'getString', '(', 'STATE_KEY', ',', ' ', 'BURGER', '.', 'name', '(', ')', ')', ';', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        if (drawGrid) drawGrid(canvas);

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;
        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (drawTouchCircle) drawTouchCircle(canvas);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override public void draw(Canvas canvas) {
        if (drawGrid) drawGrid(canvas);

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;
        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (drawTouchCircle) drawTouchCircle(canvas);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'drawGrid', ')', ' ', 'drawGrid', '(', 'canvas', ')', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ')', ' ', 'drawTouchCircle', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,drawTouchCircle,"    private void drawTouchCircle(Canvas canvas) {
        canvas.restore();
        canvas.drawCircle(width / 2, height / 2, pressedProgressValue, circlePaint);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void drawTouchCircle(Canvas canvas) {
        canvas.restore();
        canvas.drawCircle(width / 2, height / 2, pressedProgressValue, circlePaint);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawTouchCircle', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'drawCircle', '(', 'width', ' ', '/', ' ', '2', ',', ' ', 'height', ' ', '/', ' ', '2', ',', ' ', 'pressedProgressValue', ',', ' ', 'circlePaint', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180 and shorten one end
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, width / 2, height / 2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, width / 2, height / 2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'transformationValue', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'width', ' ', '/', ' ', '2', ',', ' ', 'height', ' ', '/', ' ', '2', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,drawTopLine,"    private void drawTopLine(Canvas canvas, float ratio) {
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        // pivot at center of line
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = topPadding + dip2;

        float startX = sidePadding;
        float startY = topPadding + dip2;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip2;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate until required angle
                    rotation = ratio * ARROW_BOT_LINE_ANGLE;
                } else {
                    // rotate back to start doing a 360
                    rotation = ARROW_BOT_LINE_ANGLE + (1 - ratio) * ARROW_TOP_LINE_ANGLE;
                }
                // rotate by middle
                pivotX = width / 2;
                pivotY = height / 2;

                // shorten both ends
                startX += dip3 * ratio;
                stopX -= dip3 * ratio;

                break;
            case BURGER_X:
                // rotate until required angles
                rotation = X_TOP_LINE_ANGLE * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                // pivot at left corner of line
                pivotX = sidePadding + dip4;
                pivotY = topPadding + dip3;

                // lengthen one end
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                // rotate from ARROW angle to X angle
                rotation = ARROW_BOT_LINE_ANGLE + (X_TOP_LINE_ANGLE - ARROW_BOT_LINE_ANGLE) * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                // move pivot from ARROW pivot to X pivot
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (topPadding + dip3 - height / 2) * ratio;

                // lengthen both ends
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - (dip6 * ratio);
                break;
        }

        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void drawTopLine(Canvas canvas, float ratio) {
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = topPadding + dip2;

        float startX = sidePadding;
        float startY = topPadding + dip2;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip2;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ratio * ARROW_BOT_LINE_ANGLE;
                } else {
                    
                    rotation = ARROW_BOT_LINE_ANGLE + (1 - ratio) * ARROW_TOP_LINE_ANGLE;
                }
                
                pivotX = width / 2;
                pivotY = height / 2;

                
                startX += dip3 * ratio;
                stopX -= dip3 * ratio;

                break;
            case BURGER_X:
                
                rotation = X_TOP_LINE_ANGLE * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                
                pivotX = sidePadding + dip4;
                pivotY = topPadding + dip3;

                
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                
                rotation = ARROW_BOT_LINE_ANGLE + (X_TOP_LINE_ANGLE - ARROW_BOT_LINE_ANGLE) * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (topPadding + dip3 - height / 2) * ratio;

                
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - (dip6 * ratio);
                break;
        }

        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawTopLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ',', ' ', 'pivotX', ' ', '=', ' ', '0', ',', ' ', 'pivotY', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'rotation2', ' ', '=', ' ', '0', ';', '\n', '        ', '\n', '        ', 'float', ' ', 'pivotX2', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY2', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_TOP_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'X_TOP_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip4', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ';', '\n', '\n', '                ', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ' ', '+', ' ', '(', 'X_TOP_LINE_ANGLE', ' ', '-', ' ', 'ARROW_BOT_LINE_ANGLE', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'sidePadding', ' ', '+', ' ', 'dip4', ' ', '-', ' ', 'width', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '-', ' ', 'height', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '-', ' ', '(', 'dip6', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation2', ',', ' ', 'pivotX2', ',', ' ', 'pivotY2', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,drawBottomLine,"    private void drawBottomLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        // pivot at center of line
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = height - topPadding - dip2;

        float startX = sidePadding;
        float startY = height - topPadding - dip2;
        float stopX = width - sidePadding;
        float stopY = height - topPadding - dip2;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate to required angle
                    rotation = ARROW_TOP_LINE_ANGLE * ratio;
                } else {
                    // rotate back to start doing a 360
                    rotation = ARROW_TOP_LINE_ANGLE + (1 - ratio) * ARROW_BOT_LINE_ANGLE;
                }
                // pivot center of canvas
                pivotX = width / 2;
                pivotY = height / 2;

                // shorten both ends
                startX = sidePadding + dip3 * ratio;
                stopX = width - sidePadding - dip3 * ratio;
                break;
            case BURGER_X:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate around
                    rotation2 = -X_ROTATION_ANGLE * ratio;
                } else {
                    // rotate directly
                    rotation2 = X_ROTATION_ANGLE * ratio;
                }
                // rotate to required angle
                rotation = X_BOT_LINE_ANGLE * ratio;

                // pivot left corner of line
                pivotX = sidePadding + dip4;
                pivotY = height - topPadding - dip3;

                // lengthen one end
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                // rotate from ARROW angle to X angle
                rotation = ARROW_TOP_LINE_ANGLE + (360 + X_BOT_LINE_ANGLE - ARROW_TOP_LINE_ANGLE) * ratio;
                rotation2 = -X_ROTATION_ANGLE * ratio;

                // move pivot from ARROW pivot to X pivot
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (height / 2 - topPadding - dip3) * ratio;

                // lengthen both ends
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - dip6 * ratio;
                break;
        }

        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void drawBottomLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = height - topPadding - dip2;

        float startX = sidePadding;
        float startY = height - topPadding - dip2;
        float stopX = width - sidePadding;
        float stopY = height - topPadding - dip2;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ARROW_TOP_LINE_ANGLE * ratio;
                } else {
                    
                    rotation = ARROW_TOP_LINE_ANGLE + (1 - ratio) * ARROW_BOT_LINE_ANGLE;
                }
                
                pivotX = width / 2;
                pivotY = height / 2;

                
                startX = sidePadding + dip3 * ratio;
                stopX = width - sidePadding - dip3 * ratio;
                break;
            case BURGER_X:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation2 = -X_ROTATION_ANGLE * ratio;
                } else {
                    
                    rotation2 = X_ROTATION_ANGLE * ratio;
                }
                
                rotation = X_BOT_LINE_ANGLE * ratio;

                
                pivotX = sidePadding + dip4;
                pivotY = height - topPadding - dip3;

                
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                
                rotation = ARROW_TOP_LINE_ANGLE + (360 + X_BOT_LINE_ANGLE - ARROW_TOP_LINE_ANGLE) * ratio;
                rotation2 = -X_ROTATION_ANGLE * ratio;

                
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (height / 2 - topPadding - dip3) * ratio;

                
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - dip6 * ratio;
                break;
        }

        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawBottomLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ',', ' ', 'pivotX', ' ', '=', ' ', '0', ',', ' ', 'pivotY', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'rotation2', ' ', '=', ' ', '0', ';', '\n', '        ', '\n', '        ', 'float', ' ', 'pivotX2', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY2', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip2', ';', '\n', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip2', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip2', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ' ', '-', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation2', ' ', '=', ' ', '-', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'X_BOT_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip4', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip3', ';', '\n', '\n', '                ', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '+', ' ', '(', '360', ' ', '+', ' ', 'X_BOT_LINE_ANGLE', ' ', '-', ' ', 'ARROW_TOP_LINE_ANGLE', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', '-', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'sidePadding', ' ', '+', ' ', 'dip4', ' ', '-', ' ', 'width', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'height', ' ', '/', ' ', '2', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip3', ')', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '-', ' ', 'dip6', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation2', ',', ' ', 'pivotX2', ',', ' ', 'pivotY2', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,drawGrid,"    private void drawGrid(Canvas canvas) {
        for (int i = 0; i < width + 1; i += dip1) {
            if (i % sidePadding == 0) gridPaint.setColor(Color.BLUE);
            canvas.drawLine(i, 0, i, height, gridPaint);
            if (i % sidePadding == 0) gridPaint.setColor(Color.GREEN);
        }

        for (int i = 0; i < height + 1; i += dip1) {
            if (i % gridOffset == 0) gridPaint.setColor(Color.BLUE);",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void drawGrid(Canvas canvas) {
        for (int i = 0; i < width + 1; i += dip1) {
            if (i % sidePadding == 0) gridPaint.setColor(Color.BLUE);
            canvas.drawLine(i, 0, i, height, gridPaint);
            if (i % sidePadding == 0) gridPaint.setColor(Color.GREEN);
        }

        for (int i = 0; i < height + 1; i += dip1) {
            if (i % gridOffset == 0) gridPaint.setColor(Color.BLUE);
","['    ', 'private', ' ', 'void', ' ', 'drawGrid', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'width', ' ', '+', ' ', '1', ';', ' ', 'i', ' ', '+', '=', ' ', 'dip1', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'i', ' ', '%', ' ', 'sidePadding', ' ', '=', '=', ' ', '0', ')', ' ', 'gridPaint', '.', 'setColor', '(', 'Color', '.', 'BLUE', ')', ';', '\n', '            ', 'canvas', '.', 'drawLine', '(', 'i', ',', ' ', '0', ',', ' ', 'i', ',', ' ', 'height', ',', ' ', 'gridPaint', ')', ';', '\n', '            ', 'if', ' ', '(', 'i', ' ', '%', ' ', 'sidePadding', ' ', '=', '=', ' ', '0', ')', ' ', 'gridPaint', '.', 'setColor', '(', 'Color', '.', 'GREEN', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'height', ' ', '+', ' ', '1', ';', ' ', 'i', ' ', '+', '=', ' ', 'dip1', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'i', ' ', '%', ' ', 'gridOffset', ' ', '=', '=', ' ', '0', ')', ' ', 'gridPaint', '.', 'setColor', '(', 'Color', '.', 'BLUE', ')', ';', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,animateIconState,"    public synchronized void animateIconState(IconState state, boolean drawTouch) {
        if (!transformationRunning) {
            drawTouchCircle = drawTouch;",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public synchronized void animateIconState(IconState state, boolean drawTouch) {
        if (!transformationRunning) {
            drawTouchCircle = drawTouch;
","['    ', 'public', ' ', 'synchronized', ' ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ',', ' ', 'boolean', ' ', 'drawTouch', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'transformationRunning', ')', ' ', '{', '\n', '            ', 'drawTouchCircle', ' ', '=', ' ', 'drawTouch', ';', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,get,"        public Float get(MaterialMenuDrawable object) {
            return object.getTransformationValue();
        }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        public Float get(MaterialMenuDrawable object) {
            return object.getTransformationValue();
        }
","['        ', 'public', ' ', 'Float', ' ', 'get', '(', 'MaterialMenuDrawable', ' ', 'object', ')', ' ', '{', '\n', '            ', 'return', ' ', 'object', '.', 'getTransformationValue', '(', ')', ';', '\n', '        ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,set,"        public void set(MaterialMenuDrawable object, Float value) {
            object.setTransformationValue(value);
        }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        public void set(MaterialMenuDrawable object, Float value) {
            object.setTransformationValue(value);
        }
","['        ', 'public', ' ', 'void', ' ', 'set', '(', 'MaterialMenuDrawable', ' ', 'object', ',', ' ', 'Float', ' ', 'value', ')', ' ', '{', '\n', '            ', 'object', '.', 'setTransformationValue', '(', 'value', ')', ';', '\n', '        ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,get,"        public Float get(MaterialMenuDrawable object) {
            return object.getPressedProgress();
        }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        public Float get(MaterialMenuDrawable object) {
            return object.getPressedProgress();
        }
","['        ', 'public', ' ', 'Float', ' ', 'get', '(', 'MaterialMenuDrawable', ' ', 'object', ')', ' ', '{', '\n', '            ', 'return', ' ', 'object', '.', 'getPressedProgress', '(', ')', ';', '\n', '        ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,set,"        public void set(MaterialMenuDrawable object, Float value) {
            object.setPressedProgress(value);
        }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        public void set(MaterialMenuDrawable object, Float value) {
            object.setPressedProgress(value);
        }
","['        ', 'public', ' ', 'void', ' ', 'set', '(', 'MaterialMenuDrawable', ' ', 'object', ',', ' ', 'Float', ' ', 'value', ')', ' ', '{', '\n', '            ', 'object', '.', 'setPressedProgress', '(', 'value', ')', ';', '\n', '        ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,initAnimations,"    private void initAnimations(int transformDuration, int pressedDuration) {
        transformation = ObjectAnimator.ofFloat(this, transformationProperty, 0);
        transformation.setInterpolator(new DecelerateInterpolator(3));
        transformation.setDuration(transformDuration);
        transformation.addListener(new SimpleAnimatorListener() {
            @Override public void onAnimationEnd(Animator animation) {
                transformationRunning = false;
                setIconState(animatingIconState);
            }
        });


        pressedCircle = ObjectAnimator.ofFloat(this, pressedProgressProperty, 0, 0);
        pressedCircle.setDuration(pressedDuration);
        pressedCircle.setInterpolator(new DecelerateInterpolator());
        pressedCircle.addListener(new SimpleAnimatorListener() {
            @Override public void onAnimationEnd(Animator animation) {",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void initAnimations(int transformDuration, int pressedDuration) {
        transformation = ObjectAnimator.ofFloat(this, transformationProperty, 0);
        transformation.setInterpolator(new DecelerateInterpolator(3));
        transformation.setDuration(transformDuration);
        transformation.addListener(new SimpleAnimatorListener() {
            @Override public void onAnimationEnd(Animator animation) {
                transformationRunning = false;
                setIconState(animatingIconState);
            }
        });


        pressedCircle = ObjectAnimator.ofFloat(this, pressedProgressProperty, 0, 0);
        pressedCircle.setDuration(pressedDuration);
        pressedCircle.setInterpolator(new DecelerateInterpolator());
        pressedCircle.addListener(new SimpleAnimatorListener() {
            @Override public void onAnimationEnd(Animator animation) {
","['    ', 'private', ' ', 'void', ' ', 'initAnimations', '(', 'int', ' ', 'transformDuration', ',', ' ', 'int', ' ', 'pressedDuration', ')', ' ', '{', '\n', '        ', 'transformation', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'transformationProperty', ',', ' ', '0', ')', ';', '\n', '        ', 'transformation', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', '3', ')', ')', ';', '\n', '        ', 'transformation', '.', 'setDuration', '(', 'transformDuration', ')', ';', '\n', '        ', 'transformation', '.', 'addListener', '(', 'new', ' ', 'SimpleAnimatorListener', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'transformationRunning', ' ', '=', ' ', 'false', ';', '\n', '                ', 'setIconState', '(', 'animatingIconState', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '\n', '        ', 'pressedCircle', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'pressedProgressProperty', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '        ', 'pressedCircle', '.', 'setDuration', '(', 'pressedDuration', ')', ';', '\n', '        ', 'pressedCircle', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'pressedCircle', '.', 'addListener', '(', 'new', ' ', 'SimpleAnimatorListener', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                transformationRunning = false;
                setIconState(animatingIconState);
            }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"            @Override public void onAnimationEnd(Animator animation) {
                transformationRunning = false;
                setIconState(animatingIconState);
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'transformationRunning', ' ', '=', ' ', 'false', ';', '\n', '                ', 'setIconState', '(', 'animatingIconState', ')', ';', '\n', '            ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                pressedProgressValue = 0;
            }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"            @Override public void onAnimationEnd(Animator animation) {
                pressedProgressValue = 0;
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'pressedProgressValue', ' ', '=', ' ', '0', ';', '\n', '            ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationCancel,"            @Override public void onAnimationCancel(Animator animation) {
                pressedProgressValue = 0;
            }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"            @Override public void onAnimationCancel(Animator animation) {
                pressedProgressValue = 0;
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationCancel', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'pressedProgressValue', ' ', '=', ' ', '0', ';', '\n', '            ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,resolveTransformation,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        throw new IllegalStateException(""Current icon state or animating icon state are not set"");
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        throw new IllegalStateException(""Current icon state or animating icon state are not set"");
    }
","['    ', 'private', ' ', 'boolean', ' ', 'resolveTransformation', '(', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'isCurrentBurger', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isCurrentArrow', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isCurrentX', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingBurger', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingArrow', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingX', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ' ', '|', '|', ' ', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_ARROW', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_X', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_X', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Current icon state or animating icon state are not set', '""', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,start,"    @Override public void start() {
        if (transformationRunning || animatingIconState == null || animatingIconState == currentIconState) return;
        transformationRunning = true;

        final boolean direction = resolveTransformation();
        transformation.setFloatValues(
            direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
            direction ? TRANSFORMATION_MID : TRANSFORMATION_END
        );
        transformation.start();

        if (pressedCircle.isRunning()) {
            pressedCircle.cancel();
        }
        if (drawTouchCircle && !neverDrawTouch) {
            pressedCircle.setFloatValues(pressedProgressValue, circleRadius * 1.22f);
            pressedCircle.start();
        }

        invalidateSelf();
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override public void start() {
        if (transformationRunning || animatingIconState == null || animatingIconState == currentIconState) return;
        transformationRunning = true;

        final boolean direction = resolveTransformation();
        transformation.setFloatValues(
            direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
            direction ? TRANSFORMATION_MID : TRANSFORMATION_END
        );
        transformation.start();

        if (pressedCircle.isRunning()) {
            pressedCircle.cancel();
        }
        if (drawTouchCircle && !neverDrawTouch) {
            pressedCircle.setFloatValues(pressedProgressValue, circleRadius * 1.22f);
            pressedCircle.start();
        }

        invalidateSelf();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'start', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'transformationRunning', ' ', '|', '|', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'currentIconState', ')', ' ', 'return', ';', '\n', '        ', 'transformationRunning', ' ', '=', ' ', 'true', ';', '\n', '\n', '        ', 'final', ' ', 'boolean', ' ', 'direction', ' ', '=', ' ', 'resolveTransformation', '(', ')', ';', '\n', '        ', 'transformation', '.', 'setFloatValues', '(', '\n', '            ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_START', ' ', ':', ' ', 'TRANSFORMATION_MID', ',', '\n', '            ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_MID', ' ', ':', ' ', 'TRANSFORMATION_END', '\n', '        ', ')', ';', '\n', '        ', 'transformation', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'pressedCircle', '.', 'isRunning', '(', ')', ')', ' ', '{', '\n', '            ', 'pressedCircle', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ' ', '&', '&', ' ', '!', 'neverDrawTouch', ')', ' ', '{', '\n', '            ', 'pressedCircle', '.', 'setFloatValues', '(', 'pressedProgressValue', ',', ' ', 'circleRadius', ' ', '*', ' ', '1.22f', ')', ';', '\n', '            ', 'pressedCircle', '.', 'start', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'invalidateSelf', '(', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,stop,"    @Override public void stop() {
        if (!isRunning()) return;
        if (transformation.isRunning()) {
            transformation.end();",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override public void stop() {
        if (!isRunning()) return;
        if (transformation.isRunning()) {
            transformation.end();
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'stop', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'isRunning', '(', ')', ')', ' ', 'return', ';', '\n', '        ', 'if', ' ', '(', 'transformation', '.', 'isRunning', '(', ')', ')', ' ', '{', '\n', '            ', 'transformation', '.', 'end', '(', ')', ';', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,isRunning,"    @Override public boolean isRunning() {
        return transformationRunning;
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    @Override public boolean isRunning() {
        return transformationRunning;
    }
","['    ', '@Override', ' ', 'public', ' ', 'boolean', ' ', 'isRunning', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'transformationRunning', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationStart,"        @Override public void onAnimationStart(Animator animation) {
        }

        @Override public void onAnimationEnd(Animator animation) {
        }

        @Override public void onAnimationCancel(Animator animation) {
        }

        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        @Override public void onAnimationStart(Animator animation) {
        }

        @Override public void onAnimationEnd(Animator animation) {
        }

        @Override public void onAnimationCancel(Animator animation) {
        }

        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}
","['        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationStart', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '\n', '        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '\n', '        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationCancel', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '\n', '        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationRepeat', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'static', ' ', 'float', ' ', 'dpToPx', '(', 'Resources', ' ', 'resources', ',', ' ', 'float', ' ', 'dp', ')', ' ', '{', '\n', '        ', 'return', ' ', 'TypedValue', '.', 'applyDimension', '(', 'TypedValue', '.', 'COMPLEX_UNIT_DIP', ',', ' ', 'dp', ',', ' ', 'resources', '.', 'getDisplayMetrics', '(', ')', ')', ';', '\n', '    ', '}', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationEnd,"        @Override public void onAnimationEnd(Animator animation) {
        }

        @Override public void onAnimationCancel(Animator animation) {
        }

        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        @Override public void onAnimationEnd(Animator animation) {
        }

        @Override public void onAnimationCancel(Animator animation) {
        }

        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}
","['        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '\n', '        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationCancel', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '\n', '        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationRepeat', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'static', ' ', 'float', ' ', 'dpToPx', '(', 'Resources', ' ', 'resources', ',', ' ', 'float', ' ', 'dp', ')', ' ', '{', '\n', '        ', 'return', ' ', 'TypedValue', '.', 'applyDimension', '(', 'TypedValue', '.', 'COMPLEX_UNIT_DIP', ',', ' ', 'dp', ',', ' ', 'resources', '.', 'getDisplayMetrics', '(', ')', ')', ';', '\n', '    ', '}', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationCancel,"        @Override public void onAnimationCancel(Animator animation) {
        }

        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        @Override public void onAnimationCancel(Animator animation) {
        }

        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}
","['        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationCancel', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '\n', '        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationRepeat', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'static', ' ', 'float', ' ', 'dpToPx', '(', 'Resources', ' ', 'resources', ',', ' ', 'float', ' ', 'dp', ')', ' ', '{', '\n', '        ', 'return', ' ', 'TypedValue', '.', 'applyDimension', '(', 'TypedValue', '.', 'COMPLEX_UNIT_DIP', ',', ' ', 'dp', ',', ' ', 'resources', '.', 'getDisplayMetrics', '(', ')', ')', ';', '\n', '    ', '}', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,onAnimationRepeat,"        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        @Override public void onAnimationRepeat(Animator animation) {
        }
    }

    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
}
","['        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationRepeat', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'static', ' ', 'float', ' ', 'dpToPx', '(', 'Resources', ' ', 'resources', ',', ' ', 'float', ' ', 'dp', ')', ' ', '{', '\n', '        ', 'return', ' ', 'TypedValue', '.', 'applyDimension', '(', 'TypedValue', '.', 'COMPLEX_UNIT_DIP', ',', ' ', 'dp', ',', ' ', 'resources', '.', 'getDisplayMetrics', '(', ')', ')', ';', '\n', '    ', '}', '\n', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuDrawable.java,dpToPx,"    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
","['    ', 'static', ' ', 'float', ' ', 'dpToPx', '(', 'Resources', ' ', 'resources', ',', ' ', 'float', ' ', 'dp', ')', ' ', '{', '\n', '        ', 'return', ' ', 'TypedValue', '.', 'applyDimension', '(', 'TypedValue', '.', 'COMPLEX_UNIT_DIP', ',', ' ', 'dp', ',', ' ', 'resources', '.', 'getDisplayMetrics', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuIcon.java,setupActionBar,"    private void setupActionBar(Activity activity) {
        Resources resources = activity.getResources();
        int id = resources.getIdentifier(""android:id/home"", null, null);
        View view = activity.getWindow().getDecorView().findViewById(id);
        if (view == null) throw new IllegalStateException(""Could not find ActionBar icon view"");

        // need no margins so that clicked state would work nicely
        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        params.bottomMargin = 0;
        params.topMargin = 0;

        ActionBar actionBar = activity.getActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setHomeButtonEnabled(true);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setIcon(drawable);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void setupActionBar(Activity activity) {
        Resources resources = activity.getResources();
        int id = resources.getIdentifier(""android:id/home"", null, null);
        View view = activity.getWindow().getDecorView().findViewById(id);
        if (view == null) throw new IllegalStateException(""Could not find ActionBar icon view"");

        
        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        params.bottomMargin = 0;
        params.topMargin = 0;

        ActionBar actionBar = activity.getActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setHomeButtonEnabled(true);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setIcon(drawable);
    }
","['    ', 'private', ' ', 'void', ' ', 'setupActionBar', '(', 'Activity', ' ', 'activity', ')', ' ', '{', '\n', '        ', 'Resources', ' ', 'resources', ' ', '=', ' ', 'activity', '.', 'getResources', '(', ')', ';', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'resources', '.', 'getIdentifier', '(', '""', 'android:id/home', '""', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '        ', 'View', ' ', 'view', ' ', '=', ' ', 'activity', '.', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'findViewById', '(', 'id', ')', ';', '\n', '        ', 'if', ' ', '(', 'view', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Could not find ActionBar icon view', '""', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'params', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'view', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'params', '.', 'bottomMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'params', '.', 'topMargin', ' ', '=', ' ', '0', ';', '\n', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'activity', '.', 'getActionBar', '(', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowHomeEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setHomeButtonEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setIcon', '(', 'drawable', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,initAttributes,"    private void initAttributes(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, R.styleable.MaterialMenuView);

        if (attr == null) {
            return;
        }

        try {
            color = attr.getColor(R.styleable.MaterialMenuView_color, DEFAULT_COLOR);",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    private void initAttributes(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, R.styleable.MaterialMenuView);

        if (attr == null) {
            return;
        }

        try {
            color = attr.getColor(R.styleable.MaterialMenuView_color, DEFAULT_COLOR);
","['    ', 'private', ' ', 'void', ' ', 'initAttributes', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'attr', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,draw,"    public void draw(Canvas canvas) {
        super.draw(canvas);
        drawable.draw(canvas);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void draw(Canvas canvas) {
        super.draw(canvas);
        drawable.draw(canvas);
    }
","['    ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'super', '.', 'draw', '(', 'canvas', ')', ';', '\n', '        ', 'drawable', '.', 'draw', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,verifyDrawable,"    protected boolean verifyDrawable(Drawable who) {
        return who == drawable || super.verifyDrawable(who);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected boolean verifyDrawable(Drawable who) {
        return who == drawable || super.verifyDrawable(who);
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'verifyDrawable', '(', 'Drawable', ' ', 'who', ')', ' ', '{', '\n', '        ', 'return', ' ', 'who', ' ', '=', '=', ' ', 'drawable', ' ', '|', '|', ' ', 'super', '.', 'verifyDrawable', '(', 'who', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,animateState,"    public void animateState(IconState state) {
        currentState = state;
        drawable.animateIconState(state, false);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void animateState(IconState state) {
        currentState = state;
        drawable.animateIconState(state, false);
    }
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'drawable', '.', 'animateIconState', '(', 'state', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,animatePressedState,"    public void animatePressedState(IconState state) {
        currentState = state;
        drawable.animateIconState(state, true);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void animatePressedState(IconState state) {
        currentState = state;
        drawable.animateIconState(state, true);
    }
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'drawable', '.', 'animateIconState', '(', 'state', ',', ' ', 'true', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,onMeasure,"    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth(), MeasureSpec.EXACTLY);
        heightMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicHeight(), MeasureSpec.EXACTLY);
        setMeasuredDimension(widthMeasureSpec, heightMeasureSpec);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth(), MeasureSpec.EXACTLY);
        heightMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicHeight(), MeasureSpec.EXACTLY);
        setMeasuredDimension(widthMeasureSpec, heightMeasureSpec);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onMeasure', '(', 'int', ' ', 'widthMeasureSpec', ',', ' ', 'int', ' ', 'heightMeasureSpec', ')', ' ', '{', '\n', '        ', 'widthMeasureSpec', ' ', '=', ' ', 'MeasureSpec', '.', 'makeMeasureSpec', '(', 'drawable', '.', 'getIntrinsicWidth', '(', ')', ',', ' ', 'MeasureSpec', '.', 'EXACTLY', ')', ';', '\n', '        ', 'heightMeasureSpec', ' ', '=', ' ', 'MeasureSpec', '.', 'makeMeasureSpec', '(', 'drawable', '.', 'getIntrinsicHeight', '(', ')', ',', ' ', 'MeasureSpec', '.', 'EXACTLY', ')', ';', '\n', '        ', 'setMeasuredDimension', '(', 'widthMeasureSpec', ',', ' ', 'heightMeasureSpec', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,onSaveInstanceState,"    public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        return savedState;
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        return savedState;
    }
","['    ', 'public', ' ', 'Parcelable', ' ', 'onSaveInstanceState', '(', ')', ' ', '{', '\n', '        ', 'Parcelable', ' ', 'superState', ' ', '=', ' ', 'super', '.', 'onSaveInstanceState', '(', ')', ';', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', 'new', ' ', 'SavedState', '(', 'superState', ')', ';', '\n', '        ', 'savedState', '.', 'state', ' ', '=', ' ', 'currentState', ';', '\n', '        ', 'return', ' ', 'savedState', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,onRestoreInstanceState,"    public void onRestoreInstanceState(Parcelable state) {
        SavedState savedState = (SavedState) state;
        super.onRestoreInstanceState(savedState.getSuperState());
        setState(savedState.state);
    }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"    public void onRestoreInstanceState(Parcelable state) {
        SavedState savedState = (SavedState) state;
        super.onRestoreInstanceState(savedState.getSuperState());
        setState(savedState.state);
    }
","['    ', 'public', ' ', 'void', ' ', 'onRestoreInstanceState', '(', 'Parcelable', ' ', 'state', ')', ' ', '{', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', '(', 'SavedState', ')', ' ', 'state', ';', '\n', '        ', 'super', '.', 'onRestoreInstanceState', '(', 'savedState', '.', 'getSuperState', '(', ')', ')', ';', '\n', '        ', 'setState', '(', 'savedState', '.', 'state', ')', ';', '\n', '    ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,writeToParcel,"        public void writeToParcel(Parcel out, int flags) {
            super.writeToParcel(out, flags);
            out.writeString(state.name());
        }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"        public void writeToParcel(Parcel out, int flags) {
            super.writeToParcel(out, flags);
            out.writeString(state.name());
        }
","['        ', 'public', ' ', 'void', ' ', 'writeToParcel', '(', 'Parcel', ' ', 'out', ',', ' ', 'int', ' ', 'flags', ')', ' ', '{', '\n', '            ', 'super', '.', 'writeToParcel', '(', 'out', ',', ' ', 'flags', ')', ';', '\n', '            ', 'out', '.', 'writeString', '(', 'state', '.', 'name', '(', ')', ')', ';', '\n', '        ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,createFromParcel,"            public SavedState createFromParcel(Parcel in) {
                return new SavedState(in);
            }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"            public SavedState createFromParcel(Parcel in) {
                return new SavedState(in);
            }
","['            ', 'public', ' ', 'SavedState', ' ', 'createFromParcel', '(', 'Parcel', ' ', 'in', ')', ' ', '{', '\n', '                ', 'return', ' ', 'new', ' ', 'SavedState', '(', 'in', ')', ';', '\n', '            ', '}', '\n']"
master,fc3f64d4e0d64f7cf2dccb68db65b5421a962695,MaterialMenuView.java,newArray,"            public SavedState[] newArray(int size) {
                return new SavedState[size];
            }",https://www.github.com/balysv/material-menu/commit/fc3f64d4e0d64f7cf2dccb68db65b5421a962695,"            public SavedState[] newArray(int size) {
                return new SavedState[size];
            }
","['            ', 'public', ' ', 'SavedState', '[', ']', ' ', 'newArray', '(', 'int', ' ', 'size', ')', ' ', '{', '\n', '                ', 'return', ' ', 'new', ' ', 'SavedState', '[', 'size', ']', ';', '\n', '            ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,BaseActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);

        SeekBar duration = (SeekBar) findViewById(R.id.item_animation_duration);
        duration.setMax(4600);
        duration.setProgress(2600);
        duration.setOnSeekBarChangeListener(this);

        materialMenuView = (MaterialMenuView) findViewById(R.id.material_menu_button);
        materialMenuView.setOnClickListener(this);

        findViewById(R.id.switch_item_arrow).setOnClickListener(this);
        findViewById(R.id.switch_item_menu).setOnClickListener(this);
        findViewById(R.id.switch_item_x).setOnClickListener(this);
        findViewById(R.id.switch_item_check).setOnClickListener(this);
        findViewById(R.id.animate_item_arrow).setOnClickListener(this);
        findViewById(R.id.animate_item_menu).setOnClickListener(this);
        findViewById(R.id.animate_item_x).setOnClickListener(this);
        findViewById(R.id.animate_item_check).setOnClickListener(this);
    }",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);

        SeekBar duration = (SeekBar) findViewById(R.id.item_animation_duration);
        duration.setMax(4600);
        duration.setProgress(2600);
        duration.setOnSeekBarChangeListener(this);

        materialMenuView = (MaterialMenuView) findViewById(R.id.material_menu_button);
        materialMenuView.setOnClickListener(this);

        findViewById(R.id.switch_item_arrow).setOnClickListener(this);
        findViewById(R.id.switch_item_menu).setOnClickListener(this);
        findViewById(R.id.switch_item_x).setOnClickListener(this);
        findViewById(R.id.switch_item_check).setOnClickListener(this);
        findViewById(R.id.animate_item_arrow).setOnClickListener(this);
        findViewById(R.id.animate_item_menu).setOnClickListener(this);
        findViewById(R.id.animate_item_x).setOnClickListener(this);
        findViewById(R.id.animate_item_check).setOnClickListener(this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '\n', '        ', 'SeekBar', ' ', 'duration', ' ', '=', ' ', '(', 'SeekBar', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'item_animation_duration', ')', ';', '\n', '        ', 'duration', '.', 'setMax', '(', '4600', ')', ';', '\n', '        ', 'duration', '.', 'setProgress', '(', '2600', ')', ';', '\n', '        ', 'duration', '.', 'setOnSeekBarChangeListener', '(', 'this', ')', ';', '\n', '\n', '        ', 'materialMenuView', ' ', '=', ' ', '(', 'MaterialMenuView', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'material_menu_button', ')', ';', '\n', '        ', 'materialMenuView', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_arrow', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_menu', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_x', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_check', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_arrow', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_menu', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_x', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_check', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,BaseActivity.java,generateState,"    protected int generateState(int previous) {
        int generated = new Random().nextInt(4);
        return generated != previous ? generated : generateState(previous);
    }",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    protected int generateState(int previous) {
        int generated = new Random().nextInt(4);
        return generated != previous ? generated : generateState(previous);
    }
","['    ', 'protected', ' ', 'int', ' ', 'generateState', '(', 'int', ' ', 'previous', ')', ' ', '{', '\n', '        ', 'int', ' ', 'generated', ' ', '=', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '4', ')', ';', '\n', '        ', 'return', ' ', 'generated', ' ', '!', '=', ' ', 'previous', ' ', '?', ' ', 'generated', ' ', ':', ' ', 'generateState', '(', 'previous', ')', ';', '\n', '    ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,BaseActivity.java,intToState,"    protected IconState intToState(int state) {
        switch (state) {
            case 0:
                return IconState.BURGER;
            case 1:
                return IconState.ARROW;
            case 2:
                return IconState.X;
            case 3:
                return IconState.CHECK;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    protected IconState intToState(int state) {
        switch (state) {
            case 0:
                return IconState.BURGER;
            case 1:
                return IconState.ARROW;
            case 2:
                return IconState.X;
            case 3:
                return IconState.CHECK;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }
","['    ', 'protected', ' ', 'IconState', ' ', 'intToState', '(', 'int', ' ', 'state', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'state', ')', ' ', '{', '\n', '            ', 'case', ' ', '0', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'BURGER', ';', '\n', '            ', 'case', ' ', '1', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'ARROW', ';', '\n', '            ', 'case', ' ', '2', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'X', ';', '\n', '            ', 'case', ' ', '3', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'CHECK', ';', '\n', '        ', '}', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Must be a number [0,3)', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180 and shorten one end
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    // rotate back to start doing a 180
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    // shorten one end and lengthen the other
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'transformationValue', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '45', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip5', ')', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,MaterialMenuDrawable.java,drawTopLine,"    private void drawTopLine(Canvas canvas, float ratio) {
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        // pivot at center of line
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = topPadding + dip2;

        float startX = sidePadding;
        float startY = topPadding + dip2;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip2;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate until required angle
                    rotation = ratio * ARROW_BOT_LINE_ANGLE;
                } else {
                    // rotate back to start doing a 360
                    rotation = ARROW_BOT_LINE_ANGLE + (1 - ratio) * ARROW_TOP_LINE_ANGLE;
                }
                // rotate by middle
                pivotX = width / 2;
                pivotY = height / 2;

                // shorten both ends
                startX += dip3 * ratio;
                stopX -= dip3 * ratio;

                break;
            case BURGER_X:
                // rotate until required angles
                rotation = X_TOP_LINE_ANGLE * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                // pivot at left corner of line
                pivotX = sidePadding + dip4;
                pivotY = topPadding + dip3;

                // lengthen one end
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                // rotate from ARROW angle to X angle
                rotation = ARROW_BOT_LINE_ANGLE + (X_TOP_LINE_ANGLE - ARROW_BOT_LINE_ANGLE) * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                // move pivot from ARROW pivot to X pivot
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (topPadding + dip3 - height / 2) * ratio;

                // lengthen both ends
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - (dip6 * ratio);
                break;
            case ARROW_CHECK:
                // fade out
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                // retain starting arrow configuration
                rotation = ARROW_BOT_LINE_ANGLE;
                pivotX = width / 2;
                pivotY = height / 2;
                startX += dip3;
                stopX -= dip3;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    private void drawTopLine(Canvas canvas, float ratio) {
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = topPadding + dip2;

        float startX = sidePadding;
        float startY = topPadding + dip2;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip2;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ratio * ARROW_BOT_LINE_ANGLE;
                } else {
                    
                    rotation = ARROW_BOT_LINE_ANGLE + (1 - ratio) * ARROW_TOP_LINE_ANGLE;
                }
                
                pivotX = width / 2;
                pivotY = height / 2;

                
                startX += dip3 * ratio;
                stopX -= dip3 * ratio;

                break;
            case BURGER_X:
                
                rotation = X_TOP_LINE_ANGLE * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                
                pivotX = sidePadding + dip4;
                pivotY = topPadding + dip3;

                
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                
                rotation = ARROW_BOT_LINE_ANGLE + (X_TOP_LINE_ANGLE - ARROW_BOT_LINE_ANGLE) * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (topPadding + dip3 - height / 2) * ratio;

                
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - (dip6 * ratio);
                break;
            case ARROW_CHECK:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                
                rotation = ARROW_BOT_LINE_ANGLE;
                pivotX = width / 2;
                pivotY = height / 2;
                startX += dip3;
                stopX -= dip3;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawTopLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ',', ' ', 'pivotX', ' ', '=', ' ', '0', ',', ' ', 'pivotY', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'rotation2', ' ', '=', ' ', '0', ';', '\n', '        ', '\n', '        ', 'float', ' ', 'pivotX2', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY2', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_TOP_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'X_TOP_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip4', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ';', '\n', '\n', '                ', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ' ', '+', ' ', '(', 'X_TOP_LINE_ANGLE', ' ', '-', ' ', 'ARROW_BOT_LINE_ANGLE', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'sidePadding', ' ', '+', ' ', 'dip4', ' ', '-', ' ', 'width', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '-', ' ', 'height', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '-', ' ', '(', 'dip6', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation2', ',', ' ', 'pivotX2', ',', ' ', 'pivotY2', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,MaterialMenuDrawable.java,drawBottomLine,"    private void drawBottomLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        // pivot at center of line
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = height - topPadding - dip2;

        float startX = sidePadding;
        float startY = height - topPadding - dip2;
        float stopX = width - sidePadding;
        float stopY = height - topPadding - dip2;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate to required angle
                    rotation = ARROW_TOP_LINE_ANGLE * ratio;
                } else {
                    // rotate back to start doing a 360
                    rotation = ARROW_TOP_LINE_ANGLE + (1 - ratio) * ARROW_BOT_LINE_ANGLE;
                }
                // pivot center of canvas
                pivotX = width / 2;
                pivotY = height / 2;

                // shorten both ends
                startX = sidePadding + dip3 * ratio;
                stopX = width - sidePadding - dip3 * ratio;
                break;
            case BURGER_X:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate around
                    rotation2 = -X_ROTATION_ANGLE * ratio;
                } else {
                    // rotate directly
                    rotation2 = X_ROTATION_ANGLE * ratio;
                }
                // rotate to required angle
                rotation = X_BOT_LINE_ANGLE * ratio;

                // pivot left corner of line
                pivotX = sidePadding + dip4;
                pivotY = height - topPadding - dip3;

                // lengthen one end
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                // rotate from ARROW angle to X angle
                rotation = ARROW_TOP_LINE_ANGLE + (360 + X_BOT_LINE_ANGLE - ARROW_TOP_LINE_ANGLE) * ratio;
                rotation2 = -X_ROTATION_ANGLE * ratio;

                // move pivot from ARROW pivot to X pivot
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (height / 2 - topPadding - dip3) * ratio;

                // lengthen both ends
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - dip6 * ratio;
                break;
            case ARROW_CHECK:
                // rotate from ARROW angle to CHECK angle
                rotation = ARROW_TOP_LINE_ANGLE + ratio * CHECK_BOTTOM_ANGLE;

                // move pivot from ARROW pivot to CHECK pivot
                pivotX = width / 2 - strokeWidth * ratio;
                pivotY = height / 2 - strokeWidth * ratio;

                // length stays same as ARROW
                startX += dip3;
                stopX -= dip3;
                break;
        }

        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
    }",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    private void drawBottomLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = height - topPadding - dip2;

        float startX = sidePadding;
        float startY = height - topPadding - dip2;
        float stopX = width - sidePadding;
        float stopY = height - topPadding - dip2;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ARROW_TOP_LINE_ANGLE * ratio;
                } else {
                    
                    rotation = ARROW_TOP_LINE_ANGLE + (1 - ratio) * ARROW_BOT_LINE_ANGLE;
                }
                
                pivotX = width / 2;
                pivotY = height / 2;

                
                startX = sidePadding + dip3 * ratio;
                stopX = width - sidePadding - dip3 * ratio;
                break;
            case BURGER_X:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation2 = -X_ROTATION_ANGLE * ratio;
                } else {
                    
                    rotation2 = X_ROTATION_ANGLE * ratio;
                }
                
                rotation = X_BOT_LINE_ANGLE * ratio;

                
                pivotX = sidePadding + dip4;
                pivotY = height - topPadding - dip3;

                
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                
                rotation = ARROW_TOP_LINE_ANGLE + (360 + X_BOT_LINE_ANGLE - ARROW_TOP_LINE_ANGLE) * ratio;
                rotation2 = -X_ROTATION_ANGLE * ratio;

                
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (height / 2 - topPadding - dip3) * ratio;

                
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - dip6 * ratio;
                break;
            case ARROW_CHECK:
                
                rotation = ARROW_TOP_LINE_ANGLE + ratio * CHECK_BOTTOM_ANGLE;

                
                pivotX = width / 2 - strokeWidth * ratio;
                pivotY = height / 2 - strokeWidth * ratio;

                
                startX += dip3;
                stopX -= dip3;
                break;
        }

        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawBottomLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ',', ' ', 'pivotX', ' ', '=', ' ', '0', ',', ' ', 'pivotY', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'rotation2', ' ', '=', ' ', '0', ';', '\n', '        ', '\n', '        ', 'float', ' ', 'pivotX2', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY2', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip2', ';', '\n', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip2', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip2', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ' ', '-', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation2', ' ', '=', ' ', '-', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'X_BOT_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip4', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip3', ';', '\n', '\n', '                ', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '+', ' ', '(', '360', ' ', '+', ' ', 'X_BOT_LINE_ANGLE', ' ', '-', ' ', 'ARROW_TOP_LINE_ANGLE', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', '-', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'sidePadding', ' ', '+', ' ', 'dip4', ' ', '-', ' ', 'width', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'height', ' ', '/', ' ', '2', ' ', '-', ' ', 'topPadding', ' ', '-', ' ', 'dip3', ')', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '-', ' ', 'dip6', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_TOP_LINE_ANGLE', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'CHECK_BOTTOM_ANGLE', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '-', ' ', 'strokeWidth', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ' ', '-', ' ', 'strokeWidth', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation2', ',', ' ', 'pivotX2', ',', ' ', 'pivotY2', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '    ', '}', '\n']"
master,5a374ff651983020c3be2756bb67c64d26148c23,MaterialMenuDrawable.java,resolveTransformation,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isCurrentCheck = currentIconState == IconState.CHECK;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;
        boolean isAnimatingCheck = animatingIconState == IconState.CHECK;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_CHECK;
            return isCurrentArrow;
        }

        throw new IllegalStateException(
            String.format(""Animating from %s to %s is not supported"", currentIconState, animatingIconState)",https://www.github.com/balysv/material-menu/commit/5a374ff651983020c3be2756bb67c64d26148c23,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isCurrentCheck = currentIconState == IconState.CHECK;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;
        boolean isAnimatingCheck = animatingIconState == IconState.CHECK;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_CHECK;
            return isCurrentArrow;
        }

        throw new IllegalStateException(
            String.format(""Animating from %s to %s is not supported"", currentIconState, animatingIconState)
","['    ', 'private', ' ', 'boolean', ' ', 'resolveTransformation', '(', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'isCurrentBurger', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isCurrentArrow', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isCurrentX', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isCurrentCheck', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingBurger', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingArrow', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingX', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingCheck', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ' ', '|', '|', ' ', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_ARROW', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_X', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_X', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingCheck', ')', ' ', '|', '|', ' ', '(', 'isCurrentCheck', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_CHECK', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '\n', '            ', 'String', '.', 'format', '(', '""', 'Animating from %s to %s is not supported', '""', ',', ' ', 'currentIconState', ',', ' ', 'animatingIconState', ')', '\n']"
master,664253d027e71c1b0068c7c02f7a8cd5d2148f11,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180 and shorten one end
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    // rotate back to start doing a 180
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    // shorten one end and lengthen the other
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/664253d027e71c1b0068c7c02f7a8cd5d2148f11,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'transformationValue', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '45', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip5', ')', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,664253d027e71c1b0068c7c02f7a8cd5d2148f11,MaterialMenuDrawable.java,drawTopLine,"    private void drawTopLine(Canvas canvas, float ratio) {
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        // pivot at center of line
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = topPadding + dip2;

        float startX = sidePadding;
        float startY = topPadding + dip2;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip2;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate until required angle
                    rotation = ratio * ARROW_BOT_LINE_ANGLE;
                } else {
                    // rotate back to start doing a 360
                    rotation = ARROW_BOT_LINE_ANGLE + (1 - ratio) * ARROW_TOP_LINE_ANGLE;
                }
                // rotate by middle
                pivotX = width / 2;
                pivotY = height / 2;

                // shorten both ends
                startX += dip3 * ratio;
                stopX -= dip3 * ratio;

                break;
            case BURGER_X:
                // rotate until required angles
                rotation = X_TOP_LINE_ANGLE * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                // pivot at left corner of line
                pivotX = sidePadding + dip4;
                pivotY = topPadding + dip3;

                // lengthen one end
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                // rotate from ARROW angle to X angle
                rotation = ARROW_BOT_LINE_ANGLE + (X_TOP_LINE_ANGLE - ARROW_BOT_LINE_ANGLE) * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                // move pivot from ARROW pivot to X pivot
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (topPadding + dip3 - height / 2) * ratio;

                // lengthen both ends
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - (dip6 * ratio);
                break;
            case ARROW_CHECK:
                // fade out
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                // retain starting arrow configuration
                rotation = ARROW_BOT_LINE_ANGLE;
                pivotX = width / 2;
                pivotY = height / 2;
                startX += dip3;
                stopX -= dip3;
                break;
            case BURGER_CHECK:
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/664253d027e71c1b0068c7c02f7a8cd5d2148f11,"    private void drawTopLine(Canvas canvas, float ratio) {
        canvas.save();

        float rotation = 0, pivotX = 0, pivotY = 0;
        float rotation2 = 0;
        
        float pivotX2 = width / 2 + strokeWidth / 2;
        float pivotY2 = topPadding + dip2;

        float startX = sidePadding;
        float startY = topPadding + dip2;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip2;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ratio * ARROW_BOT_LINE_ANGLE;
                } else {
                    
                    rotation = ARROW_BOT_LINE_ANGLE + (1 - ratio) * ARROW_TOP_LINE_ANGLE;
                }
                
                pivotX = width / 2;
                pivotY = height / 2;

                
                startX += dip3 * ratio;
                stopX -= dip3 * ratio;

                break;
            case BURGER_X:
                
                rotation = X_TOP_LINE_ANGLE * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                
                pivotX = sidePadding + dip4;
                pivotY = topPadding + dip3;

                
                stopX += dip3 * ratio;
                break;
            case ARROW_X:
                
                rotation = ARROW_BOT_LINE_ANGLE + (X_TOP_LINE_ANGLE - ARROW_BOT_LINE_ANGLE) * ratio;
                rotation2 = X_ROTATION_ANGLE * ratio;

                
                pivotX = width / 2 + (sidePadding + dip4 - width / 2) * ratio;
                pivotY = height / 2 + (topPadding + dip3 - height / 2) * ratio;

                
                startX += dip3 * (1 - ratio);
                stopX -= dip3 - (dip6 * ratio);
                break;
            case ARROW_CHECK:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                
                rotation = ARROW_BOT_LINE_ANGLE;
                pivotX = width / 2;
                pivotY = height / 2;
                startX += dip3;
                stopX -= dip3;
                break;
            case BURGER_CHECK:
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.rotate(rotation2, pivotX2, pivotY2);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawTopLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ',', ' ', 'pivotX', ' ', '=', ' ', '0', ',', ' ', 'pivotY', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'rotation2', ' ', '=', ' ', '0', ';', '\n', '        ', '\n', '        ', 'float', ' ', 'pivotX2', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY2', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip2', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_TOP_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'X_TOP_LINE_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'sidePadding', ' ', '+', ' ', 'dip4', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ';', '\n', '\n', '                ', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ' ', '+', ' ', '(', 'X_TOP_LINE_ANGLE', ' ', '-', ' ', 'ARROW_BOT_LINE_ANGLE', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'rotation2', ' ', '=', ' ', 'X_ROTATION_ANGLE', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'sidePadding', ' ', '+', ' ', 'dip4', ' ', '-', ' ', 'width', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ' ', '+', ' ', '(', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '-', ' ', 'height', ' ', '/', ' ', '2', ')', ' ', '*', ' ', 'ratio', ';', '\n', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ' ', '-', ' ', '(', 'dip6', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ARROW_BOT_LINE_ANGLE', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '                ', 'pivotY', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'dip3', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation2', ',', ' ', 'pivotX2', ',', ' ', 'pivotY2', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,664253d027e71c1b0068c7c02f7a8cd5d2148f11,MaterialMenuDrawable.java,resolveTransformation,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isCurrentCheck = currentIconState == IconState.CHECK;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;
        boolean isAnimatingCheck = animatingIconState == IconState.CHECK;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_CHECK;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingCheck) || (isCurrentCheck && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_CHECK;
            return isCurrentBurger;
        }

        throw new IllegalStateException(
            String.format(""Animating from %s to %s is not supported"", currentIconState, animatingIconState)",https://www.github.com/balysv/material-menu/commit/664253d027e71c1b0068c7c02f7a8cd5d2148f11,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isCurrentCheck = currentIconState == IconState.CHECK;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;
        boolean isAnimatingCheck = animatingIconState == IconState.CHECK;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_CHECK;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingCheck) || (isCurrentCheck && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_CHECK;
            return isCurrentBurger;
        }

        throw new IllegalStateException(
            String.format(""Animating from %s to %s is not supported"", currentIconState, animatingIconState)
","['    ', 'private', ' ', 'boolean', ' ', 'resolveTransformation', '(', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'isCurrentBurger', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isCurrentArrow', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isCurrentX', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isCurrentCheck', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingBurger', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingArrow', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingX', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingCheck', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ' ', '|', '|', ' ', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_ARROW', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_X', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_X', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingCheck', ')', ' ', '|', '|', ' ', '(', 'isCurrentCheck', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_CHECK', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingCheck', ')', ' ', '|', '|', ' ', '(', 'isCurrentCheck', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_CHECK', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '\n', '            ', 'String', '.', 'format', '(', '""', 'Animating from %s to %s is not supported', '""', ',', ' ', 'currentIconState', ',', ' ', 'animatingIconState', ')', '\n']"
master,31ec5667786bdb22d2709afd77ace75265f817ff,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180 and shorten one end
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (transformationValue <= TRANSFORMATION_MID) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    // rotate back to start doing a 180
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    // shorten one end and lengthen the other
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case X_CHECK:
                // fade in
                alpha = (int) (ratio * 255);
                // rotation to check angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/31ec5667786bdb22d2709afd77ace75265f817ff,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                rotation = transformationValue * ARROW_MID_LINE_ANGLE;
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                break;
            case ARROW_X:
                
                alpha = Math.max(0, Math.min(255, (int) ((1 - ratio) * 255)));
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (transformationValue <= TRANSFORMATION_MID) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case X_CHECK:
                
                alpha = (int) (ratio * 255);
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'transformationValue', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', 'Math', '.', 'max', '(', '0', ',', ' ', 'Math', '.', 'min', '(', '255', ',', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ')', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '45', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip5', ')', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'X_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', 'ratio', ' ', '*', ' ', '255', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,31ec5667786bdb22d2709afd77ace75265f817ff,MaterialMenuDrawable.java,resolveTransformation,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isCurrentCheck = currentIconState == IconState.CHECK;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;
        boolean isAnimatingCheck = animatingIconState == IconState.CHECK;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_CHECK;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingCheck) || (isCurrentCheck && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_CHECK;
            return isCurrentBurger;
        }

        if ((isCurrentX && isAnimatingCheck) || (isCurrentCheck && isAnimatingX)) {
            animationState = AnimationState.X_CHECK;
            return isCurrentX;
        }

        throw new IllegalStateException(
            String.format(""Animating from %s to %s is not supported"", currentIconState, animatingIconState)",https://www.github.com/balysv/material-menu/commit/31ec5667786bdb22d2709afd77ace75265f817ff,"    private boolean resolveTransformation() {
        boolean isCurrentBurger = currentIconState == IconState.BURGER;
        boolean isCurrentArrow = currentIconState == IconState.ARROW;
        boolean isCurrentX = currentIconState == IconState.X;
        boolean isCurrentCheck = currentIconState == IconState.CHECK;
        boolean isAnimatingBurger = animatingIconState == IconState.BURGER;
        boolean isAnimatingArrow = animatingIconState == IconState.ARROW;
        boolean isAnimatingX = animatingIconState == IconState.X;
        boolean isAnimatingCheck = animatingIconState == IconState.CHECK;

        if ((isCurrentBurger && isAnimatingArrow) || (isCurrentArrow && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_ARROW;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingX) || (isCurrentX && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_X;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingX) || (isCurrentX && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_X;
            return isCurrentBurger;
        }

        if ((isCurrentArrow && isAnimatingCheck) || (isCurrentCheck && isAnimatingArrow)) {
            animationState = AnimationState.ARROW_CHECK;
            return isCurrentArrow;
        }

        if ((isCurrentBurger && isAnimatingCheck) || (isCurrentCheck && isAnimatingBurger)) {
            animationState = AnimationState.BURGER_CHECK;
            return isCurrentBurger;
        }

        if ((isCurrentX && isAnimatingCheck) || (isCurrentCheck && isAnimatingX)) {
            animationState = AnimationState.X_CHECK;
            return isCurrentX;
        }

        throw new IllegalStateException(
            String.format(""Animating from %s to %s is not supported"", currentIconState, animatingIconState)
","['    ', 'private', ' ', 'boolean', ' ', 'resolveTransformation', '(', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'isCurrentBurger', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isCurrentArrow', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isCurrentX', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isCurrentCheck', ' ', '=', ' ', 'currentIconState', ' ', '=', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingBurger', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingArrow', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingX', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'X', ';', '\n', '        ', 'boolean', ' ', 'isAnimatingCheck', ' ', '=', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ' ', '|', '|', ' ', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_ARROW', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_X', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingX', ')', ' ', '|', '|', ' ', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_X', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentArrow', ' ', '&', '&', ' ', 'isAnimatingCheck', ')', ' ', '|', '|', ' ', '(', 'isCurrentCheck', ' ', '&', '&', ' ', 'isAnimatingArrow', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'ARROW_CHECK', ';', '\n', '            ', 'return', ' ', 'isCurrentArrow', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentBurger', ' ', '&', '&', ' ', 'isAnimatingCheck', ')', ' ', '|', '|', ' ', '(', 'isCurrentCheck', ' ', '&', '&', ' ', 'isAnimatingBurger', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'BURGER_CHECK', ';', '\n', '            ', 'return', ' ', 'isCurrentBurger', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'isCurrentX', ' ', '&', '&', ' ', 'isAnimatingCheck', ')', ' ', '|', '|', ' ', '(', 'isCurrentCheck', ' ', '&', '&', ' ', 'isAnimatingX', ')', ')', ' ', '{', '\n', '            ', 'animationState', ' ', '=', ' ', 'AnimationState', '.', 'X_CHECK', ';', '\n', '            ', 'return', ' ', 'isCurrentX', ';', '\n', '        ', '}', '\n', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '\n', '            ', 'String', '.', 'format', '(', '""', 'Animating from %s to %s is not supported', '""', ',', ' ', 'currentIconState', ',', ' ', 'animatingIconState', ')', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void setState(IconState state);

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,setTransformationDuration,"    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,setPressedDuration,"    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenu.java,setInterpolator,"    public void setInterpolator(Interpolator interpolator);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    public void setInterpolator(Interpolator interpolator);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                // shorten one end
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    // rotate back to start doing a 180
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    // shorten one end and lengthen the other
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                // rotate until required angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case X_CHECK:
                // fade in
                alpha = (int) (ratio * 255);
                // rotation to check angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE + (1 - ratio) * 45;
                    
                    startX += strokeWidth / 2 + dip4 + (1 - ratio) * (strokeWidth / 2 + dip5);
                    stopX += (dip6 + dip2) + (1 - ratio) * dip2;
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case X_CHECK:
                
                alpha = (int) (ratio * 255);
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_MID_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '45', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip5', ')', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'X_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', 'ratio', ' ', '*', ' ', '255', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,ca2931e81f2ff900180bc3dfc948ec75987a9a54,MaterialMenuDrawable.java,isMorphingForward,"    private boolean isMorphingForward() {
        return transformationValue <= TRANSFORMATION_MID;
    }",https://www.github.com/balysv/material-menu/commit/ca2931e81f2ff900180bc3dfc948ec75987a9a54,"    private boolean isMorphingForward() {
        return transformationValue <= TRANSFORMATION_MID;
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isMorphingForward', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'transformationValue', ' ', '<', '=', ' ', 'TRANSFORMATION_MID', ';', '\n', '    ', '}', '\n']"
master,7a565388138bfeb4499cef381cda1c50d3c09431,MaterialMenuBase.java,syncState,"    public void syncState(Bundle state) {
        if (state != null) {
            String iconStateName = state.getString(STATE_KEY);",https://www.github.com/balysv/material-menu/commit/7a565388138bfeb4499cef381cda1c50d3c09431,"    public void syncState(Bundle state) {
        if (state != null) {
            String iconStateName = state.getString(STATE_KEY);
","['    ', 'public', ' ', 'void', ' ', 'syncState', '(', 'Bundle', ' ', 'state', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'state', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'String', ' ', 'iconStateName', ' ', '=', ' ', 'state', '.', 'getString', '(', 'STATE_KEY', ')', ';', '\n']"
master,35ec808ad5d9357e0db9e9ba2d39c1080e570570,MaterialMenuBase.java,animateState,"    public final void animateState(MaterialMenuDrawable.IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, false);
    }",https://www.github.com/balysv/material-menu/commit/35ec808ad5d9357e0db9e9ba2d39c1080e570570,"    public final void animateState(MaterialMenuDrawable.IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, false);
    }
","['    ', 'public', ' ', 'final', ' ', 'void', ' ', 'animateState', '(', 'MaterialMenuDrawable', '.', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'getDrawable', '(', ')', '.', 'animateIconState', '(', 'state', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,35ec808ad5d9357e0db9e9ba2d39c1080e570570,MaterialMenuBase.java,animatePressedState,"    public final void animatePressedState(MaterialMenuDrawable.IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, true);
    }",https://www.github.com/balysv/material-menu/commit/35ec808ad5d9357e0db9e9ba2d39c1080e570570,"    public final void animatePressedState(MaterialMenuDrawable.IconState state) {
        currentState = state;
        getDrawable().animateIconState(state, true);
    }
","['    ', 'public', ' ', 'final', ' ', 'void', ' ', 'animatePressedState', '(', 'MaterialMenuDrawable', '.', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'getDrawable', '(', ')', '.', 'animateIconState', '(', 'state', ',', ' ', 'true', ')', ';', '\n', '    ', '}', '\n']"
master,35ec808ad5d9357e0db9e9ba2d39c1080e570570,MaterialMenuView.java,initAttributes,"    private void initAttributes(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        if (attr == null) {
            return;
        }

        try {
            color = attr.getColor(com.balysv.materialmenu.R.styleable.MaterialMenuView_color, DEFAULT_COLOR);",https://www.github.com/balysv/material-menu/commit/35ec808ad5d9357e0db9e9ba2d39c1080e570570,"    private void initAttributes(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        if (attr == null) {
            return;
        }

        try {
            color = attr.getColor(com.balysv.materialmenu.R.styleable.MaterialMenuView_color, DEFAULT_COLOR);
","['    ', 'private', ' ', 'void', ' ', 'initAttributes', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'attr', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n']"
master,23b23323ff91d2d5fe92290b37be834d1d97b530,MaterialMenuIconCompat.java,setupActionBar,"    private void setupActionBar(ActionBarActivity activity) {
        View view;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            Resources resources = activity.getResources();
            int id = resources.getIdentifier(""android:id/home"", null, null);
            view = activity.getWindow().getDecorView().findViewById(id);
        } else {
            view = activity.getWindow().getDecorView().findViewById(R.id.home);
        }
        if (view == null) throw new IllegalStateException(""Could not find ActionBar icon view"");

        // need no margins so that clicked state would work nicely
        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        params.bottomMargin = 0;
        params.topMargin = 0;

        ActionBar actionBar = activity.getSupportActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setHomeButtonEnabled(true);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setIcon(drawable);
    }",https://www.github.com/balysv/material-menu/commit/23b23323ff91d2d5fe92290b37be834d1d97b530,"    private void setupActionBar(ActionBarActivity activity) {
        View view;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            Resources resources = activity.getResources();
            int id = resources.getIdentifier(""android:id/home"", null, null);
            view = activity.getWindow().getDecorView().findViewById(id);
        } else {
            view = activity.getWindow().getDecorView().findViewById(R.id.home);
        }
        if (view == null) throw new IllegalStateException(""Could not find ActionBar icon view"");

        
        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        params.bottomMargin = 0;
        params.topMargin = 0;

        ActionBar actionBar = activity.getSupportActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setHomeButtonEnabled(true);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setIcon(drawable);
    }
","['    ', 'private', ' ', 'void', ' ', 'setupActionBar', '(', 'ActionBarActivity', ' ', 'activity', ')', ' ', '{', '\n', '        ', 'View', ' ', 'view', ';', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', ' ', '{', '\n', '            ', 'Resources', ' ', 'resources', ' ', '=', ' ', 'activity', '.', 'getResources', '(', ')', ';', '\n', '            ', 'int', ' ', 'id', ' ', '=', ' ', 'resources', '.', 'getIdentifier', '(', '""', 'android:id/home', '""', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '            ', 'view', ' ', '=', ' ', 'activity', '.', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'findViewById', '(', 'id', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'view', ' ', '=', ' ', 'activity', '.', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'home', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'view', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Could not find ActionBar icon view', '""', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'params', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'view', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'params', '.', 'bottomMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'params', '.', 'topMargin', ' ', '=', ' ', '0', ';', '\n', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'activity', '.', 'getSupportActionBar', '(', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowHomeEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setHomeButtonEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setIcon', '(', 'drawable', ')', ';', '\n', '    ', '}', '\n']"
master,23b23323ff91d2d5fe92290b37be834d1d97b530,MaterialMenuIconSherlock.java,setupActionBar,"    private void setupActionBar(SherlockActivity activity) {
        View view;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            Resources resources = activity.getResources();
            int id = resources.getIdentifier(""android:id/home"", null, null);
            view = activity.getWindow().getDecorView().findViewById(id);
        } else {
            view = activity.getWindow().getDecorView().findViewById(R.id.abs__home);
        }

        if (view == null) throw new IllegalStateException(""Could not find ActionBar icon view"");

        // need no margins so that clicked state would work nicely
        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        params.bottomMargin = 0;
        params.topMargin = 0;

        ActionBar actionBar = activity.getSupportActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setHomeButtonEnabled(true);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setIcon(drawable);
    }",https://www.github.com/balysv/material-menu/commit/23b23323ff91d2d5fe92290b37be834d1d97b530,"    private void setupActionBar(SherlockActivity activity) {
        View view;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            Resources resources = activity.getResources();
            int id = resources.getIdentifier(""android:id/home"", null, null);
            view = activity.getWindow().getDecorView().findViewById(id);
        } else {
            view = activity.getWindow().getDecorView().findViewById(R.id.abs__home);
        }

        if (view == null) throw new IllegalStateException(""Could not find ActionBar icon view"");

        
        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        params.bottomMargin = 0;
        params.topMargin = 0;

        ActionBar actionBar = activity.getSupportActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setHomeButtonEnabled(true);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setIcon(drawable);
    }
","['    ', 'private', ' ', 'void', ' ', 'setupActionBar', '(', 'SherlockActivity', ' ', 'activity', ')', ' ', '{', '\n', '        ', 'View', ' ', 'view', ';', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', ' ', '{', '\n', '            ', 'Resources', ' ', 'resources', ' ', '=', ' ', 'activity', '.', 'getResources', '(', ')', ';', '\n', '            ', 'int', ' ', 'id', ' ', '=', ' ', 'resources', '.', 'getIdentifier', '(', '""', 'android:id/home', '""', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '            ', 'view', ' ', '=', ' ', 'activity', '.', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'findViewById', '(', 'id', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'view', ' ', '=', ' ', 'activity', '.', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'abs__home', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'view', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Could not find ActionBar icon view', '""', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'params', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'view', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'params', '.', 'bottomMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'params', '.', 'topMargin', ' ', '=', ' ', '0', ';', '\n', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'activity', '.', 'getSupportActionBar', '(', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowHomeEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setHomeButtonEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setIcon', '(', 'drawable', ')', ';', '\n', '    ', '}', '\n']"
master,23b23323ff91d2d5fe92290b37be834d1d97b530,MaterialMenuView.java,onMeasure,"    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth(), MeasureSpec.EXACTLY);",https://www.github.com/balysv/material-menu/commit/23b23323ff91d2d5fe92290b37be834d1d97b530,"    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth(), MeasureSpec.EXACTLY);
","['    ', 'protected', ' ', 'void', ' ', 'onMeasure', '(', 'int', ' ', 'widthMeasureSpec', ',', ' ', 'int', ' ', 'heightMeasureSpec', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', ' ', '{', '\n', '            ', 'widthMeasureSpec', ' ', '=', ' ', 'MeasureSpec', '.', 'makeMeasureSpec', '(', 'drawable', '.', 'getIntrinsicWidth', '(', ')', ',', ' ', 'MeasureSpec', '.', 'EXACTLY', ')', ';', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,BaseActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        helper = new BaseActivityHelper();
        helper.init(getWindow().getDecorView());
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        helper = new BaseActivityHelper();
        helper.init(getWindow().getDecorView());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '        ', 'helper', ' ', '=', ' ', 'new', ' ', 'BaseActivityHelper', '(', ')', ';', '\n', '        ', 'helper', '.', 'init', '(', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,CustomViewActivity.java,initCustomActionBar,"    private void initCustomActionBar() {
        ActionBar actionBar = getSupportActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setDisplayShowCustomEnabled(true);
        actionBar.setCustomView(R.layout.action_bar);
        materialMenu = (MaterialMenuView) actionBar.getCustomView().findViewById(R.id.action_bar_menu);
        materialMenu.setOnClickListener(this);
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    private void initCustomActionBar() {
        ActionBar actionBar = getSupportActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setDisplayShowCustomEnabled(true);
        actionBar.setCustomView(R.layout.action_bar);
        materialMenu = (MaterialMenuView) actionBar.getCustomView().findViewById(R.id.action_bar_menu);
        materialMenu.setOnClickListener(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'initCustomActionBar', '(', ')', ' ', '{', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'getSupportActionBar', '(', ')', ';', '\n', '        ', 'actionBar', '.', 'setHomeButtonEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowHomeEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowTitleEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowCustomEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setCustomView', '(', 'R', '.', 'layout', '.', 'action_bar', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', '(', 'MaterialMenuView', ')', ' ', 'actionBar', '.', 'getCustomView', '(', ')', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'action_bar_menu', ')', ';', '\n', '        ', 'materialMenu', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.WHITE);
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.WHITE);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconCompat', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ')', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,CustomViewActivity.java,initCustomActionBar,"    private void initCustomActionBar() {
        ActionBar actionBar = getSupportActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setDisplayShowCustomEnabled(true);
        actionBar.setCustomView(R.layout.action_bar);
        materialMenu = (MaterialMenuView) actionBar.getCustomView().findViewById(R.id.action_bar_menu);
        materialMenu.setOnClickListener(this);
        new Handler().postDelayed(new Runnable() {
            @Override public void run() {",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    private void initCustomActionBar() {
        ActionBar actionBar = getSupportActionBar();
        actionBar.setHomeButtonEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayHomeAsUpEnabled(false);
        actionBar.setDisplayShowCustomEnabled(true);
        actionBar.setCustomView(R.layout.action_bar);
        materialMenu = (MaterialMenuView) actionBar.getCustomView().findViewById(R.id.action_bar_menu);
        materialMenu.setOnClickListener(this);
        new Handler().postDelayed(new Runnable() {
            @Override public void run() {
","['    ', 'private', ' ', 'void', ' ', 'initCustomActionBar', '(', ')', ' ', '{', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'getSupportActionBar', '(', ')', ';', '\n', '        ', 'actionBar', '.', 'setHomeButtonEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowHomeEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowTitleEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'false', ')', ';', '\n', '        ', 'actionBar', '.', 'setDisplayShowCustomEnabled', '(', 'true', ')', ';', '\n', '        ', 'actionBar', '.', 'setCustomView', '(', 'R', '.', 'layout', '.', 'action_bar', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', '(', 'MaterialMenuView', ')', ' ', 'actionBar', '.', 'getCustomView', '(', ')', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'action_bar_menu', ')', ';', '\n', '        ', 'materialMenu', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'new', ' ', 'Handler', '(', ')', '.', 'postDelayed', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,CustomViewActivity.java,run,"            @Override public void run() {
                Log.i(""debug"", ""size: "" + materialMenu.getMeasuredWidth() + "" "" + materialMenu.getMeasuredHeight());
                Log.i(""debug"", ""size: "" + materialMenu.getWidth() + "" "" + materialMenu.getHeight());
            }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"            @Override public void run() {
                Log.i(""debug"", ""size: "" + materialMenu.getMeasuredWidth() + "" "" + materialMenu.getMeasuredHeight());
                Log.i(""debug"", ""size: "" + materialMenu.getWidth() + "" "" + materialMenu.getHeight());
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Log', '.', 'i', '(', '""', 'debug', '""', ',', ' ', '""', 'size: ', '""', ' ', '+', ' ', 'materialMenu', '.', 'getMeasuredWidth', '(', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'materialMenu', '.', 'getMeasuredHeight', '(', ')', ')', ';', '\n', '                ', 'Log', '.', 'i', '(', '""', 'debug', '""', ',', ' ', '""', 'size: ', '""', ' ', '+', ' ', 'materialMenu', '.', 'getWidth', '(', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'materialMenu', '.', 'getHeight', '(', ')', ')', ';', '\n', '            ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,CustomViewActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getSupportMenuInflater().inflate(R.menu.custom_view, menu);
        return true;
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    public boolean onCreateOptionsMenu(Menu menu) {
        getSupportMenuInflater().inflate(R.menu.custom_view, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getSupportMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'custom_view', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconSherlock(this, Color.WHITE);
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconSherlock(this, Color.WHITE);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconSherlock', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ')', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,HomeIconActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getSupportMenuInflater().inflate(R.menu.home_icon, menu);
        return true;
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    public boolean onCreateOptionsMenu(Menu menu) {
        getSupportMenuInflater().inflate(R.menu.home_icon, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getSupportMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'home_icon', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,BaseActivityHelper.java,init,"    public void init(View parent) {
        SeekBar duration = (SeekBar) parent.findViewById(R.id.item_animation_duration);
        duration.setMax(4600);
        duration.setProgress(2600);
        duration.setOnSeekBarChangeListener(this);

        materialMenuView = (MaterialMenuView) parent.findViewById(R.id.material_menu_button);
        materialMenuView.setOnClickListener(this);

        parent.findViewById(R.id.switch_item_arrow).setOnClickListener(this);
        parent.findViewById(R.id.switch_item_menu).setOnClickListener(this);
        parent.findViewById(R.id.switch_item_x).setOnClickListener(this);
        parent.findViewById(R.id.switch_item_check).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_arrow).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_menu).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_x).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_check).setOnClickListener(this);
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    public void init(View parent) {
        SeekBar duration = (SeekBar) parent.findViewById(R.id.item_animation_duration);
        duration.setMax(4600);
        duration.setProgress(2600);
        duration.setOnSeekBarChangeListener(this);

        materialMenuView = (MaterialMenuView) parent.findViewById(R.id.material_menu_button);
        materialMenuView.setOnClickListener(this);

        parent.findViewById(R.id.switch_item_arrow).setOnClickListener(this);
        parent.findViewById(R.id.switch_item_menu).setOnClickListener(this);
        parent.findViewById(R.id.switch_item_x).setOnClickListener(this);
        parent.findViewById(R.id.switch_item_check).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_arrow).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_menu).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_x).setOnClickListener(this);
        parent.findViewById(R.id.animate_item_check).setOnClickListener(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'init', '(', 'View', ' ', 'parent', ')', ' ', '{', '\n', '        ', 'SeekBar', ' ', 'duration', ' ', '=', ' ', '(', 'SeekBar', ')', ' ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'item_animation_duration', ')', ';', '\n', '        ', 'duration', '.', 'setMax', '(', '4600', ')', ';', '\n', '        ', 'duration', '.', 'setProgress', '(', '2600', ')', ';', '\n', '        ', 'duration', '.', 'setOnSeekBarChangeListener', '(', 'this', ')', ';', '\n', '\n', '        ', 'materialMenuView', ' ', '=', ' ', '(', 'MaterialMenuView', ')', ' ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'material_menu_button', ')', ';', '\n', '        ', 'materialMenuView', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_arrow', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_menu', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_x', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'switch_item_check', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_arrow', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_menu', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_x', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'parent', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'animate_item_check', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,BaseActivityHelper.java,generateState,"    public static int generateState(int previous) {
        int generated = new Random().nextInt(4);
        return generated != previous ? generated : generateState(previous);
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    public static int generateState(int previous) {
        int generated = new Random().nextInt(4);
        return generated != previous ? generated : generateState(previous);
    }
","['    ', 'public', ' ', 'static', ' ', 'int', ' ', 'generateState', '(', 'int', ' ', 'previous', ')', ' ', '{', '\n', '        ', 'int', ' ', 'generated', ' ', '=', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '4', ')', ';', '\n', '        ', 'return', ' ', 'generated', ' ', '!', '=', ' ', 'previous', ' ', '?', ' ', 'generated', ' ', ':', ' ', 'generateState', '(', 'previous', ')', ';', '\n', '    ', '}', '\n']"
master,023504a266dc6f43f77ece417dfea6ecd4755110,BaseActivityHelper.java,intToState,"    public static IconState intToState(int state) {
        switch (state) {
            case 0:
                return IconState.BURGER;
            case 1:
                return IconState.ARROW;
            case 2:
                return IconState.X;
            case 3:
                return IconState.CHECK;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }",https://www.github.com/balysv/material-menu/commit/023504a266dc6f43f77ece417dfea6ecd4755110,"    public static IconState intToState(int state) {
        switch (state) {
            case 0:
                return IconState.BURGER;
            case 1:
                return IconState.ARROW;
            case 2:
                return IconState.X;
            case 3:
                return IconState.CHECK;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }
","['    ', 'public', ' ', 'static', ' ', 'IconState', ' ', 'intToState', '(', 'int', ' ', 'state', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'state', ')', ' ', '{', '\n', '            ', 'case', ' ', '0', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'BURGER', ';', '\n', '            ', 'case', ' ', '1', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'ARROW', ';', '\n', '            ', 'case', ' ', '2', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'X', ';', '\n', '            ', 'case', ' ', '3', ':', '\n', '                ', 'return', ' ', 'IconState', '.', 'CHECK', ';', '\n', '        ', '}', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Must be a number [0,3)', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c9ca672ab22cf4f58e4f1f6ec38408ddd79eb686,MaterialMenuDrawable.java,animateIconState,"    public synchronized void animateIconState(IconState state, boolean drawTouch) {
        if (transformationRunning) {
            transformation.end();
            pressedCircle.end();
        }
        drawTouchCircle = drawTouch;
        animatingIconState = state;
        start();
    }",https://www.github.com/balysv/material-menu/commit/c9ca672ab22cf4f58e4f1f6ec38408ddd79eb686,"    public synchronized void animateIconState(IconState state, boolean drawTouch) {
        if (transformationRunning) {
            transformation.end();
            pressedCircle.end();
        }
        drawTouchCircle = drawTouch;
        animatingIconState = state;
        start();
    }
","['    ', 'public', ' ', 'synchronized', ' ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ',', ' ', 'boolean', ' ', 'drawTouch', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'transformationRunning', ')', ' ', '{', '\n', '            ', 'transformation', '.', 'end', '(', ')', ';', '\n', '            ', 'pressedCircle', '.', 'end', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'drawTouchCircle', ' ', '=', ' ', 'drawTouch', ';', '\n', '        ', 'animatingIconState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,c9ca672ab22cf4f58e4f1f6ec38408ddd79eb686,MaterialMenuDrawable.java,start,"    @Override public void start() {
        if (transformationRunning || animatingIconState == null || animatingIconState == currentIconState) return;
        transformationRunning = true;

        final boolean direction = resolveTransformation();
        transformation.setFloatValues(
            direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
            direction ? TRANSFORMATION_MID : TRANSFORMATION_END
        );
        transformation.start();

        if (pressedCircle.isRunning()) {
            pressedCircle.cancel();
        }
        if (drawTouchCircle && !neverDrawTouch) {
            pressedCircle.setFloatValues(0, circleRadius * 1.22f);
            pressedCircle.start();
        }

        invalidateSelf();
    }",https://www.github.com/balysv/material-menu/commit/c9ca672ab22cf4f58e4f1f6ec38408ddd79eb686,"    @Override public void start() {
        if (transformationRunning || animatingIconState == null || animatingIconState == currentIconState) return;
        transformationRunning = true;

        final boolean direction = resolveTransformation();
        transformation.setFloatValues(
            direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
            direction ? TRANSFORMATION_MID : TRANSFORMATION_END
        );
        transformation.start();

        if (pressedCircle.isRunning()) {
            pressedCircle.cancel();
        }
        if (drawTouchCircle && !neverDrawTouch) {
            pressedCircle.setFloatValues(0, circleRadius * 1.22f);
            pressedCircle.start();
        }

        invalidateSelf();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'start', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'transformationRunning', ' ', '|', '|', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'animatingIconState', ' ', '=', '=', ' ', 'currentIconState', ')', ' ', 'return', ';', '\n', '        ', 'transformationRunning', ' ', '=', ' ', 'true', ';', '\n', '\n', '        ', 'final', ' ', 'boolean', ' ', 'direction', ' ', '=', ' ', 'resolveTransformation', '(', ')', ';', '\n', '        ', 'transformation', '.', 'setFloatValues', '(', '\n', '            ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_START', ' ', ':', ' ', 'TRANSFORMATION_MID', ',', '\n', '            ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_MID', ' ', ':', ' ', 'TRANSFORMATION_END', '\n', '        ', ')', ';', '\n', '        ', 'transformation', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'pressedCircle', '.', 'isRunning', '(', ')', ')', ' ', '{', '\n', '            ', 'pressedCircle', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ' ', '&', '&', ' ', '!', 'neverDrawTouch', ')', ' ', '{', '\n', '            ', 'pressedCircle', '.', 'setFloatValues', '(', '0', ',', ' ', 'circleRadius', ' ', '*', ' ', '1.22f', ')', ';', '\n', '            ', 'pressedCircle', '.', 'start', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'invalidateSelf', '(', ')', ';', '\n', '    ', '}', '\n']"
master,78843f89529c436c5815f3a682fe5033a0dd2281,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                // shorten one end
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    // rotate back to starting angle
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                    // shorten one end and lengthen the other
                    startX += strokeWidth / 2 + dip4 - (1 - ratio) * dip3;
                    stopX += (dip6 + dip2) - (1 - ratio) * (dip2 + dip6);
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                // rotate until required angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case X_CHECK:
                // fade in
                alpha = (int) (ratio * 255);
                // rotation to check angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/78843f89529c436c5815f3a682fe5033a0dd2281,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + strokeWidth / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + strokeWidth / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                
                stopX -= ratio * strokeWidth / 2;
                break;
            case BURGER_X:
                
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * strokeWidth / 2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
                    startX += strokeWidth / 2 + ratio * dip4;
                    stopX += ratio * (dip6 + dip2);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                    
                    startX += strokeWidth / 2 + dip4 - (1 - ratio) * dip3;
                    stopX += (dip6 + dip2) - (1 - ratio) * (dip2 + dip6);
                }
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case BURGER_CHECK:
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
            case X_CHECK:
                
                alpha = (int) (ratio * 255);
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + strokeWidth / 2);
                stopX += ratio * (dip6 + dip2);
                pivotX = width / 2 + strokeWidth * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_MID_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'strokeWidth', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '-', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'strokeWidth', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip3', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'dip2', ' ', '+', ' ', 'dip6', ')', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'X_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', 'ratio', ' ', '*', ' ', '255', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'strokeWidth', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'dip2', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'strokeWidth', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,cd2ce3ed5171e4e5981954b92aa9ef71dcf65d2e,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + dip3 / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip3 / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                // shorten one end
                stopX -= ratio * resolveStrokeModifier(ratio) / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * dip2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
                    startX += dip3 / 2 + ratio * dip4;
                    stopX += ratio * (dip8 + diph);
                } else {
                    // rotate back to starting angle
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                    // shorten one end and lengthen the other
                    startX += dip3 / 2 + dip4 - (1 - ratio) * (dip2 + diph);
                    stopX += dip8 - (1 - ratio) * (dip2 + dip6);
                }
                pivotX = width / 2 + dip3 * 2;
                break;
            case BURGER_CHECK:
                // rotate until required angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
            case X_CHECK:
                // fade in
                alpha = (int) (ratio * 255);
                // rotation to check angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/cd2ce3ed5171e4e5981954b92aa9ef71dcf65d2e,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + dip3 / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip3 / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                
                stopX -= ratio * resolveStrokeModifier(ratio) / 2;
                break;
            case BURGER_X:
                
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * dip2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
                    startX += dip3 / 2 + ratio * dip4;
                    stopX += ratio * (dip8 + diph);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                    
                    startX += dip3 / 2 + dip4 - (1 - ratio) * (dip2 + diph);
                    stopX += dip8 - (1 - ratio) * (dip2 + dip6);
                }
                pivotX = width / 2 + dip3 * 2;
                break;
            case BURGER_CHECK:
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
            case X_CHECK:
                
                alpha = (int) (ratio * 255);
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_MID_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'resolveStrokeModifier', '(', 'ratio', ')', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'diph', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '-', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                    ', '\n', '                    ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'dip2', ' ', '+', ' ', 'diph', ')', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'dip8', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'dip2', ' ', '+', ' ', 'dip6', ')', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'diph', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'X_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', 'ratio', ' ', '*', ' ', '255', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'diph', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,cd2ce3ed5171e4e5981954b92aa9ef71dcf65d2e,MaterialMenuDrawable.java,resolveStrokeModifier,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X) {
                    return dip3 - (dip6 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X) {
                    return dip3 + diph - ((dip6 + diph) * ratio);
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X) {
                    return dip4 - ((dip6 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }",https://www.github.com/balysv/material-menu/commit/cd2ce3ed5171e4e5981954b92aa9ef71dcf65d2e,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X) {
                    return dip3 - (dip6 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X) {
                    return dip3 + diph - ((dip6 + diph) * ratio);
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X) {
                    return dip4 - ((dip6 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }
","['    ', 'private', ' ', 'float', ' ', 'resolveStrokeModifier', '(', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'stroke', ')', ' ', '{', '\n', '            ', 'case', ' ', 'REGULAR', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip3', ' ', '-', ' ', '(', 'dip6', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip3', ';', '\n', '            ', 'case', ' ', 'THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip3', ' ', '+', ' ', 'diph', ' ', '-', ' ', '(', '(', 'dip6', ' ', '+', ' ', 'diph', ')', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', '(', 'dip3', ' ', '+', ' ', 'diph', ')', ';', '\n', '            ', 'case', ' ', 'EXTRA_THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip4', ' ', '-', ' ', '(', '(', 'dip6', ' ', '+', ' ', 'dip1', ')', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', '0', ';', '\n', '    ', '}', '\n']"
master,cb533f6dead77555e3ae7d70f1d537335d10032c,MaterialMenuDrawable.java,valueOf,"        protected static Stroke valueOf(int strokeWidth) {
            switch (strokeWidth) {
                case 3:",https://www.github.com/balysv/material-menu/commit/cb533f6dead77555e3ae7d70f1d537335d10032c,"        protected static Stroke valueOf(int strokeWidth) {
            switch (strokeWidth) {
                case 3:
","['        ', 'protected', ' ', 'static', ' ', 'Stroke', ' ', 'valueOf', '(', 'int', ' ', 'strokeWidth', ')', ' ', '{', '\n', '            ', 'switch', ' ', '(', 'strokeWidth', ')', ' ', '{', '\n', '                ', 'case', ' ', '3', ':', '\n']"
master,6b43ebd8c1eb639cede70fd51e540f03c3e92077,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.WHITE, Stroke.THIN);
    }",https://www.github.com/balysv/material-menu/commit/6b43ebd8c1eb639cede70fd51e540f03c3e92077,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.WHITE, Stroke.THIN);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconCompat', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '    ', '}', '\n']"
master,6b43ebd8c1eb639cede70fd51e540f03c3e92077,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconSherlock(this, Color.WHITE, Stroke.THIN);
    }",https://www.github.com/balysv/material-menu/commit/6b43ebd8c1eb639cede70fd51e540f03c3e92077,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconSherlock(this, Color.WHITE, Stroke.THIN);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconSherlock', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '    ', '}', '\n']"
master,6b43ebd8c1eb639cede70fd51e540f03c3e92077,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIcon(this, Color.WHITE, Stroke.THIN);
    }",https://www.github.com/balysv/material-menu/commit/6b43ebd8c1eb639cede70fd51e540f03c3e92077,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIcon(this, Color.WHITE, Stroke.THIN);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIcon', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '    ', '}', '\n']"
master,2798b3ca238d52578e56d8051f07a6a813fe3987,MaterialMenuDrawable.java,resolveStrokeModifier,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 - (dip6 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 + diph - (dip6 + diph) * ratio;
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip4 - ((dip6 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }",https://www.github.com/balysv/material-menu/commit/2798b3ca238d52578e56d8051f07a6a813fe3987,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 - (dip6 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 + diph - (dip6 + diph) * ratio;
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip4 - ((dip6 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }
","['    ', 'private', ' ', 'float', ' ', 'resolveStrokeModifier', '(', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'stroke', ')', ' ', '{', '\n', '            ', 'case', ' ', 'REGULAR', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip3', ' ', '-', ' ', '(', 'dip6', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip3', ';', '\n', '            ', 'case', ' ', 'THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip3', ' ', '+', ' ', 'diph', ' ', '-', ' ', '(', 'dip6', ' ', '+', ' ', 'diph', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', '(', 'dip3', ' ', '+', ' ', 'diph', ')', ';', '\n', '            ', 'case', ' ', 'EXTRA_THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip4', ' ', '-', ' ', '(', '(', 'dip6', ' ', '+', ' ', 'dip1', ')', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', '0', ';', '\n', '    ', '}', '\n']"
master,78264af499723585088780165b0d8eb6ec15af6c,MaterialMenuDrawable.java,initPaint,"    private void initPaint(int color) {
        gridPaint.setAntiAlias(false);
        gridPaint.setColor(Color.GREEN);
        gridPaint.setStrokeWidth(1);

        iconPaint.setAntiAlias(true);
        iconPaint.setStyle(Style.STROKE);
        iconPaint.setStrokeWidth(strokeWidth);
        iconPaint.setColor(color);

        circlePaint.setAntiAlias(true);
        circlePaint.setStyle(Style.FILL);
        circlePaint.setColor(color);
        circlePaint.setAlpha(DEFAULT_CIRCLE_ALPHA);

        setBounds(0, 0, width, height);
    }",https://www.github.com/balysv/material-menu/commit/78264af499723585088780165b0d8eb6ec15af6c,"    private void initPaint(int color) {
        gridPaint.setAntiAlias(false);
        gridPaint.setColor(Color.GREEN);
        gridPaint.setStrokeWidth(1);

        iconPaint.setAntiAlias(true);
        iconPaint.setStyle(Style.STROKE);
        iconPaint.setStrokeWidth(strokeWidth);
        iconPaint.setColor(color);

        circlePaint.setAntiAlias(true);
        circlePaint.setStyle(Style.FILL);
        circlePaint.setColor(color);
        circlePaint.setAlpha(DEFAULT_CIRCLE_ALPHA);

        setBounds(0, 0, width, height);
    }
","['    ', 'private', ' ', 'void', ' ', 'initPaint', '(', 'int', ' ', 'color', ')', ' ', '{', '\n', '        ', 'gridPaint', '.', 'setAntiAlias', '(', 'false', ')', ';', '\n', '        ', 'gridPaint', '.', 'setColor', '(', 'Color', '.', 'GREEN', ')', ';', '\n', '        ', 'gridPaint', '.', 'setStrokeWidth', '(', '1', ')', ';', '\n', '\n', '        ', 'iconPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', '\n', '        ', 'iconPaint', '.', 'setStyle', '(', 'Style', '.', 'STROKE', ')', ';', '\n', '        ', 'iconPaint', '.', 'setStrokeWidth', '(', 'strokeWidth', ')', ';', '\n', '        ', 'iconPaint', '.', 'setColor', '(', 'color', ')', ';', '\n', '\n', '        ', 'circlePaint', '.', 'setAntiAlias', '(', 'true', ')', ';', '\n', '        ', 'circlePaint', '.', 'setStyle', '(', 'Style', '.', 'FILL', ')', ';', '\n', '        ', 'circlePaint', '.', 'setColor', '(', 'color', ')', ';', '\n', '        ', 'circlePaint', '.', 'setAlpha', '(', 'DEFAULT_CIRCLE_ALPHA', ')', ';', '\n', '\n', '        ', 'setBounds', '(', '0', ',', ' ', '0', ',', ' ', 'width', ',', ' ', 'height', ')', ';', '\n', '    ', '}', '\n']"
master,78264af499723585088780165b0d8eb6ec15af6c,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;
        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (drawTouchCircle) drawTouchCircle(canvas);
    }",https://www.github.com/balysv/material-menu/commit/78264af499723585088780165b0d8eb6ec15af6c,"    @Override public void draw(Canvas canvas) {
        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;
        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (drawTouchCircle) drawTouchCircle(canvas);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ')', ' ', 'drawTouchCircle', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,78264af499723585088780165b0d8eb6ec15af6c,MaterialMenuDrawable.java,initAnimations,"    private void initAnimations(int transformDuration, int pressedDuration) {
        transformation = ObjectAnimator.ofFloat(this, transformationProperty, 0);
        transformation.setInterpolator(new DecelerateInterpolator(3));
        transformation.setDuration(transformDuration);
        transformation.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                transformationRunning = false;
                setIconState(animatingIconState);
            }
        });


        pressedCircle = ObjectAnimator.ofFloat(this, pressedProgressProperty, 0, 0);
        pressedCircle.setDuration(pressedDuration);
        pressedCircle.setInterpolator(new DecelerateInterpolator());
        pressedCircle.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {",https://www.github.com/balysv/material-menu/commit/78264af499723585088780165b0d8eb6ec15af6c,"    private void initAnimations(int transformDuration, int pressedDuration) {
        transformation = ObjectAnimator.ofFloat(this, transformationProperty, 0);
        transformation.setInterpolator(new DecelerateInterpolator(3));
        transformation.setDuration(transformDuration);
        transformation.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                transformationRunning = false;
                setIconState(animatingIconState);
            }
        });


        pressedCircle = ObjectAnimator.ofFloat(this, pressedProgressProperty, 0, 0);
        pressedCircle.setDuration(pressedDuration);
        pressedCircle.setInterpolator(new DecelerateInterpolator());
        pressedCircle.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
","['    ', 'private', ' ', 'void', ' ', 'initAnimations', '(', 'int', ' ', 'transformDuration', ',', ' ', 'int', ' ', 'pressedDuration', ')', ' ', '{', '\n', '        ', 'transformation', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'transformationProperty', ',', ' ', '0', ')', ';', '\n', '        ', 'transformation', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', '3', ')', ')', ';', '\n', '        ', 'transformation', '.', 'setDuration', '(', 'transformDuration', ')', ';', '\n', '        ', 'transformation', '.', 'addListener', '(', 'new', ' ', 'AnimatorListenerAdapter', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'transformationRunning', ' ', '=', ' ', 'false', ';', '\n', '                ', 'setIconState', '(', 'animatingIconState', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '\n', '        ', 'pressedCircle', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'pressedProgressProperty', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '        ', 'pressedCircle', '.', 'setDuration', '(', 'pressedDuration', ')', ';', '\n', '        ', 'pressedCircle', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'pressedCircle', '.', 'addListener', '(', 'new', ' ', 'AnimatorListenerAdapter', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n']"
master,78264af499723585088780165b0d8eb6ec15af6c,MaterialMenuDrawable.java,mutate,"    public Drawable mutate() {
        materialMenuState = new MaterialMenuState();
        return this;
    }",https://www.github.com/balysv/material-menu/commit/78264af499723585088780165b0d8eb6ec15af6c,"    public Drawable mutate() {
        materialMenuState = new MaterialMenuState();
        return this;
    }
","['    ', 'public', ' ', 'Drawable', ' ', 'mutate', '(', ')', ' ', '{', '\n', '        ', 'materialMenuState', ' ', '=', ' ', 'new', ' ', 'MaterialMenuState', '(', ')', ';', '\n', '        ', 'return', ' ', 'this', ';', '\n', '    ', '}', '\n']"
master,78264af499723585088780165b0d8eb6ec15af6c,MaterialMenuDrawable.java,newDrawable,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            return drawable;
        }",https://www.github.com/balysv/material-menu/commit/78264af499723585088780165b0d8eb6ec15af6c,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            return drawable;
        }
","['        ', 'public', ' ', 'Drawable', ' ', 'newDrawable', '(', ')', ' ', '{', '\n', '            ', 'MaterialMenuDrawable', ' ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', '\n', '                ', 'circlePaint', '.', 'getColor', '(', ')', ',', ' ', 'stroke', ',', ' ', 'transformation', '.', 'getDuration', '(', ')', ',', '\n', '                ', 'pressedCircle', '.', 'getDuration', '(', ')', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'iconWidth', ',', ' ', 'circleRadius', ',', ' ', 'strokeWidth', ',', ' ', 'dip1', '\n', '            ', ')', ';', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '?', ' ', 'animatingIconState', ' ', ':', ' ', 'currentIconState', ')', ';', '\n', '            ', 'return', ' ', 'drawable', ';', '\n', '        ', '}', '\n']"
master,b125a68ef74e75d2c32e4f1f2c8e83e7060131af,MaterialMenuView.java,initAttributes,"    private void initAttributes(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        if (attr == null) {
            return;
        }

        try {
            color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);",https://www.github.com/balysv/material-menu/commit/b125a68ef74e75d2c32e4f1f2c8e83e7060131af,"    private void initAttributes(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        if (attr == null) {
            return;
        }

        try {
            color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
","['    ', 'private', ' ', 'void', ' ', 'initAttributes', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'attr', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n']"
master,6c6eb0389b15e61561e8e1aa5f3e53c2e2c4b047,MaterialMenuDrawable.java,animateIconState,"    public void animateIconState(IconState state, boolean drawTouch) {
        synchronized (lock) {
            if (transformationRunning) {",https://www.github.com/balysv/material-menu/commit/6c6eb0389b15e61561e8e1aa5f3e53c2e2c4b047,"    public void animateIconState(IconState state, boolean drawTouch) {
        synchronized (lock) {
            if (transformationRunning) {
","['    ', 'public', ' ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ',', ' ', 'boolean', ' ', 'drawTouch', ')', ' ', '{', '\n', '        ', 'synchronized', ' ', '(', 'lock', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'transformationRunning', ')', ' ', '{', '\n']"
master,d1ca8f652e74d2a3a9620bc480a56f20adc35eb7,MaterialMenuView.java,onMeasure,"    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        int paddingX = getPaddingLeft() + getPaddingRight();
        int paddingY = getPaddingTop() + getPaddingBottom();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth() + paddingX, MeasureSpec.EXACTLY);",https://www.github.com/balysv/material-menu/commit/d1ca8f652e74d2a3a9620bc480a56f20adc35eb7,"    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        int paddingX = getPaddingLeft() + getPaddingRight();
        int paddingY = getPaddingTop() + getPaddingBottom();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth() + paddingX, MeasureSpec.EXACTLY);
","['    ', 'protected', ' ', 'void', ' ', 'onMeasure', '(', 'int', ' ', 'widthMeasureSpec', ',', ' ', 'int', ' ', 'heightMeasureSpec', ')', ' ', '{', '\n', '        ', 'int', ' ', 'paddingX', ' ', '=', ' ', 'getPaddingLeft', '(', ')', ' ', '+', ' ', 'getPaddingRight', '(', ')', ';', '\n', '        ', 'int', ' ', 'paddingY', ' ', '=', ' ', 'getPaddingTop', '(', ')', ' ', '+', ' ', 'getPaddingBottom', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', ' ', '{', '\n', '            ', 'widthMeasureSpec', ' ', '=', ' ', 'MeasureSpec', '.', 'makeMeasureSpec', '(', 'drawable', '.', 'getIntrinsicWidth', '(', ')', ' ', '+', ' ', 'paddingX', ',', ' ', 'MeasureSpec', '.', 'EXACTLY', ')', ';', '\n']"
master,d1ca8f652e74d2a3a9620bc480a56f20adc35eb7,MaterialMenuView.java,onSizeChanged,"    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        adjustDrawablePadding();
    }",https://www.github.com/balysv/material-menu/commit/d1ca8f652e74d2a3a9620bc480a56f20adc35eb7,"    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        adjustDrawablePadding();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onSizeChanged', '(', 'int', ' ', 'w', ',', ' ', 'int', ' ', 'h', ',', ' ', 'int', ' ', 'oldw', ',', ' ', 'int', ' ', 'oldh', ')', ' ', '{', '\n', '        ', 'super', '.', 'onSizeChanged', '(', 'w', ',', ' ', 'h', ',', ' ', 'oldw', ',', ' ', 'oldh', ')', ';', '\n', '        ', 'adjustDrawablePadding', '(', ')', ';', '\n', '    ', '}', '\n']"
master,d1ca8f652e74d2a3a9620bc480a56f20adc35eb7,MaterialMenuView.java,adjustDrawablePadding,"    private void adjustDrawablePadding() {
        drawable.setBounds(
            0, 0,",https://www.github.com/balysv/material-menu/commit/d1ca8f652e74d2a3a9620bc480a56f20adc35eb7,"    private void adjustDrawablePadding() {
        drawable.setBounds(
            0, 0,
","['    ', 'private', ' ', 'void', ' ', 'adjustDrawablePadding', '(', ')', ' ', '{', '\n', '        ', 'drawable', '.', 'setBounds', '(', '\n', '            ', '0', ',', ' ', '0', ',', '\n']"
master,2fe051aef20ccbe73b5565910a699ddc65a6ec84,MaterialMenuView.java,adjustDrawablePadding,"    private void adjustDrawablePadding() {
        if (drawable != null) {
            drawable.setBounds(",https://www.github.com/balysv/material-menu/commit/2fe051aef20ccbe73b5565910a699ddc65a6ec84,"    private void adjustDrawablePadding() {
        if (drawable != null) {
            drawable.setBounds(
","['    ', 'private', ' ', 'void', ' ', 'adjustDrawablePadding', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'drawable', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'drawable', '.', 'setBounds', '(', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void setState(IconState state);

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,setTransformationDuration,"    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,setPressedDuration,"    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,setInterpolator,"    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenu.java,setRTLEnabled,"    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    public void setRTLEnabled(boolean rtlEnabled);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    @Override public void draw(Canvas canvas) {
        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'save', '(', ')', ';', '\n', '            ', 'canvas', '.', 'scale', '(', '-', '1', ',', ' ', '1', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '            ', 'canvas', '.', 'translate', '(', '-', 'getIntrinsicWidth', '(', ')', ',', ' ', '0', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ')', ' ', 'drawTouchCircle', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenuDrawable.java,newDrawable,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }
","['        ', 'public', ' ', 'Drawable', ' ', 'newDrawable', '(', ')', ' ', '{', '\n', '            ', 'MaterialMenuDrawable', ' ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', '\n', '                ', 'circlePaint', '.', 'getColor', '(', ')', ',', ' ', 'stroke', ',', ' ', 'transformation', '.', 'getDuration', '(', ')', ',', '\n', '                ', 'pressedCircle', '.', 'getDuration', '(', ')', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'iconWidth', ',', ' ', 'circleRadius', ',', ' ', 'strokeWidth', ',', ' ', 'dip1', '\n', '            ', ')', ';', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '?', ' ', 'animatingIconState', ' ', ':', ' ', 'currentIconState', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '            ', 'return', ' ', 'drawable', ';', '\n', '        ', '}', '\n']"
master,9893cb7fbab2871c0cd2840c01007882c80eca84,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration, pressedDuration);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/9893cb7fbab2871c0cd2840c01007882c80eca84,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration, pressedDuration);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'int', ' ', 'pressedDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_pressedDuration', ',', ' ', 'DEFAULT_PRESSED_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'scale', ',', ' ', 'transformDuration', ',', ' ', 'pressedDuration', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setState(IconState state);

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setTransformationDuration,"    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setPressedDuration,"    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setInterpolator,"    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setRTLEnabled,"    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,90f61b32b046d39f4d6785b77b94b9c13bcfd646,MaterialMenu.java,setTransformationOffset,"    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/90f61b32b046d39f4d6785b77b94b9c13bcfd646,"    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,dc52f529ab207f5ed592f100804663750fa3b267,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/dc52f529ab207f5ed592f100804663750fa3b267,"    public void setState(IconState state);

    
    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,dc52f529ab207f5ed592f100804663750fa3b267,MaterialMenu.java,getState,"    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/dc52f529ab207f5ed592f100804663750fa3b267,"    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,BaseActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        helper = new BaseActivityHelper();
    }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        helper = new BaseActivityHelper();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '        ', 'helper', ' ', '=', ' ', 'new', ' ', 'BaseActivityHelper', '(', ')', ';', '\n', '    ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,CustomViewActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        initCustomActionBar();
        helper.init(getWindow().getDecorView(), materialMenu);
    }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        initCustomActionBar();
        helper.init(getWindow().getDecorView(), materialMenu);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'initCustomActionBar', '(', ')', ';', '\n', '        ', 'helper', '.', 'init', '(', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', ',', ' ', 'materialMenu', ')', ';', '\n', '    ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.WHITE, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.WHITE, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconCompat', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '        ', 'helper', '.', 'init', '(', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', ',', ' ', 'materialMenu', ')', ';', '\n', '    ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconSherlock(this, Color.WHITE, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconSherlock(this, Color.WHITE, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconSherlock', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '        ', 'helper', '.', 'init', '(', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', ',', ' ', 'materialMenu', ')', ';', '\n', '    ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,BaseActivityHelper.java,onDrawerSlide,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                materialIcon.setTransformationOffset(
                    AnimationState.BURGER_ARROW,",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                materialIcon.setTransformationOffset(
                    AnimationState.BURGER_ARROW,
","['            ', 'public', ' ', 'void', ' ', 'onDrawerSlide', '(', 'View', ' ', 'drawerView', ',', ' ', 'float', ' ', 'slideOffset', ')', ' ', '{', '\n', '                ', 'materialIcon', '.', 'setTransformationOffset', '(', '\n', '                    ', 'AnimationState', '.', 'BURGER_ARROW', ',', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,BaseActivityHelper.java,onDrawerOpened,"            public void onDrawerOpened(android.view.View drawerView) {
                direction = true;
            }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"            public void onDrawerOpened(android.view.View drawerView) {
                direction = true;
            }
","['            ', 'public', ' ', 'void', ' ', 'onDrawerOpened', '(', 'android', '.', 'view', '.', 'View', ' ', 'drawerView', ')', ' ', '{', '\n', '                ', 'direction', ' ', '=', ' ', 'true', ';', '\n', '            ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,BaseActivityHelper.java,onDrawerClosed,"            public void onDrawerClosed(android.view.View drawerView) {
                direction = false;
            }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"            public void onDrawerClosed(android.view.View drawerView) {
                direction = false;
            }
","['            ', 'public', ' ', 'void', ' ', 'onDrawerClosed', '(', 'android', '.', 'view', '.', 'View', ' ', 'drawerView', ')', ' ', '{', '\n', '                ', 'direction', ' ', '=', ' ', 'false', ';', '\n', '            ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,BaseActivityHelper.java,run,"            @Override public void run() {
                drawerLayout.openDrawer(Gravity.LEFT);
            }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"            @Override public void run() {
                drawerLayout.openDrawer(Gravity.LEFT);
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'drawerLayout', '.', 'openDrawer', '(', 'Gravity', '.', 'LEFT', ')', ';', '\n', '            ', '}', '\n']"
master,b78f397b80463b644306dd7732d1e1418766f058,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIcon(this, Color.WHITE, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }",https://www.github.com/balysv/material-menu/commit/b78f397b80463b644306dd7732d1e1418766f058,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIcon(this, Color.WHITE, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIcon', '(', 'this', ',', ' ', 'Color', '.', 'WHITE', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '        ', 'helper', '.', 'init', '(', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', ',', ' ', 'materialMenu', ')', ';', '\n', '    ', '}', '\n']"
master,5f9972743bb73e2ab6e2b7f4a5a5a70f6399e4c1,BaseActivity.java,onPostCreate,"    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        helper.refreshDrawerState();
    }",https://www.github.com/balysv/material-menu/commit/5f9972743bb73e2ab6e2b7f4a5a5a70f6399e4c1,"    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        helper.refreshDrawerState();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onPostCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onPostCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'helper', '.', 'refreshDrawerState', '(', ')', ';', '\n', '    ', '}', '\n']"
master,5f9972743bb73e2ab6e2b7f4a5a5a70f6399e4c1,BaseActivityHelper.java,onDrawerSlide,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                materialIcon.setTransformationOffset(
                    MaterialMenuDrawable.AnimationState.BURGER_ARROW,",https://www.github.com/balysv/material-menu/commit/5f9972743bb73e2ab6e2b7f4a5a5a70f6399e4c1,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                materialIcon.setTransformationOffset(
                    MaterialMenuDrawable.AnimationState.BURGER_ARROW,
","['            ', 'public', ' ', 'void', ' ', 'onDrawerSlide', '(', 'View', ' ', 'drawerView', ',', ' ', 'float', ' ', 'slideOffset', ')', ' ', '{', '\n', '                ', 'materialIcon', '.', 'setTransformationOffset', '(', '\n', '                    ', 'MaterialMenuDrawable', '.', 'AnimationState', '.', 'BURGER_ARROW', ',', '\n']"
master,5f9972743bb73e2ab6e2b7f4a5a5a70f6399e4c1,BaseActivityHelper.java,refreshDrawerState,"    public void refreshDrawerState() {
        this.direction = drawerLayout.isDrawerOpen(Gravity.START);
    }",https://www.github.com/balysv/material-menu/commit/5f9972743bb73e2ab6e2b7f4a5a5a70f6399e4c1,"    public void refreshDrawerState() {
        this.direction = drawerLayout.isDrawerOpen(Gravity.START);
    }
","['    ', 'public', ' ', 'void', ' ', 'refreshDrawerState', '(', ')', ' ', '{', '\n', '        ', 'this', '.', 'direction', ' ', '=', ' ', 'drawerLayout', '.', 'isDrawerOpen', '(', 'Gravity', '.', 'START', ')', ';', '\n', '    ', '}', '\n']"
master,9c1612d27e1f991f210d9ffca5145e84257d25b7,MaterialMenuDrawable.java,stop,"    @Override public void stop() {
        if (isRunning() && transformation.isRunning()) {
            transformation.end();",https://www.github.com/balysv/material-menu/commit/9c1612d27e1f991f210d9ffca5145e84257d25b7,"    @Override public void stop() {
        if (isRunning() && transformation.isRunning()) {
            transformation.end();
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'stop', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'isRunning', '(', ')', ' ', '&', '&', ' ', 'transformation', '.', 'isRunning', '(', ')', ')', ' ', '{', '\n', '            ', 'transformation', '.', 'end', '(', ')', ';', '\n']"
master,cf507d88e12e11ed4320a9f72b013a8f21bbd125,MaterialMenuBase.java,setupActionBar,"    private void setupActionBar(Activity activity) {
        final View iconView = getActionBarHomeView(activity);
        final View upView = getActionBarUpView(activity);

        if (iconView == null || upView == null) throw new IllegalStateException(""Could not find ActionBar views"");

        // need no margins so that clicked state would work nicely
        ViewGroup.MarginLayoutParams iconParams = (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();
        iconParams.bottomMargin = 0;
        iconParams.topMargin = 0;
        iconView.setLayoutParams(iconParams);

        // remove up arrow margins
        ViewGroup.MarginLayoutParams upParams = (ViewGroup.MarginLayoutParams) upView.getLayoutParams();
        upParams.leftMargin = activity.getResources().getDimensionPixelSize(R.dimen.mm_up_arrow_margin);
        upParams.rightMargin = 0;
        upView.setLayoutParams(upParams);
    }",https://www.github.com/balysv/material-menu/commit/cf507d88e12e11ed4320a9f72b013a8f21bbd125,"    private void setupActionBar(Activity activity) {
        final View iconView = getActionBarHomeView(activity);
        final View upView = getActionBarUpView(activity);

        if (iconView == null || upView == null) throw new IllegalStateException(""Could not find ActionBar views"");

        
        ViewGroup.MarginLayoutParams iconParams = (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();
        iconParams.bottomMargin = 0;
        iconParams.topMargin = 0;
        iconView.setLayoutParams(iconParams);

        
        ViewGroup.MarginLayoutParams upParams = (ViewGroup.MarginLayoutParams) upView.getLayoutParams();
        upParams.leftMargin = activity.getResources().getDimensionPixelSize(R.dimen.mm_up_arrow_margin);
        upParams.rightMargin = 0;
        upView.setLayoutParams(upParams);
    }
","['    ', 'private', ' ', 'void', ' ', 'setupActionBar', '(', 'Activity', ' ', 'activity', ')', ' ', '{', '\n', '        ', 'final', ' ', 'View', ' ', 'iconView', ' ', '=', ' ', 'getActionBarHomeView', '(', 'activity', ')', ';', '\n', '        ', 'final', ' ', 'View', ' ', 'upView', ' ', '=', ' ', 'getActionBarUpView', '(', 'activity', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'iconView', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'upView', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Could not find ActionBar views', '""', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'iconParams', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'iconView', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'iconParams', '.', 'bottomMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconParams', '.', 'topMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconView', '.', 'setLayoutParams', '(', 'iconParams', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'upParams', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'upView', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'upParams', '.', 'leftMargin', ' ', '=', ' ', 'activity', '.', 'getResources', '(', ')', '.', 'getDimensionPixelSize', '(', 'R', '.', 'dimen', '.', 'mm_up_arrow_margin', ')', ';', '\n', '        ', 'upParams', '.', 'rightMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'upView', '.', 'setLayoutParams', '(', 'upParams', ')', ';', '\n', '    ', '}', '\n']"
master,e98b456f7499cf88c910844a5dbb2b76f8de8206,MaterialMenuBase.java,setupActionBar,"    private void setupActionBar(Activity activity) {
        final View iconView = getActionBarHomeView(activity);
        final View upView = getActionBarUpView(activity);

        if (iconView == null || upView == null) {
            throw new IllegalStateException(""Could not find ActionBar views"");
        }

        // need no margins so that clicked state would work nicely
        ViewGroup.MarginLayoutParams iconParams = (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();
        iconParams.bottomMargin = 0;
        iconParams.topMargin = 0;
        iconView.setLayoutParams(iconParams);

        // remove up arrow margins
        ViewGroup.MarginLayoutParams upParams = (ViewGroup.MarginLayoutParams) upView.getLayoutParams();
        upParams.leftMargin = activity.getResources().getDimensionPixelSize(R.dimen.mm_up_arrow_margin);
        upParams.rightMargin = 0;
        upView.setLayoutParams(upParams);
    }",https://www.github.com/balysv/material-menu/commit/e98b456f7499cf88c910844a5dbb2b76f8de8206,"    private void setupActionBar(Activity activity) {
        final View iconView = getActionBarHomeView(activity);
        final View upView = getActionBarUpView(activity);

        if (iconView == null || upView == null) {
            throw new IllegalStateException(""Could not find ActionBar views"");
        }

        
        ViewGroup.MarginLayoutParams iconParams = (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();
        iconParams.bottomMargin = 0;
        iconParams.topMargin = 0;
        iconView.setLayoutParams(iconParams);

        
        ViewGroup.MarginLayoutParams upParams = (ViewGroup.MarginLayoutParams) upView.getLayoutParams();
        upParams.leftMargin = activity.getResources().getDimensionPixelSize(R.dimen.mm_up_arrow_margin);
        upParams.rightMargin = 0;
        upView.setLayoutParams(upParams);
    }
","['    ', 'private', ' ', 'void', ' ', 'setupActionBar', '(', 'Activity', ' ', 'activity', ')', ' ', '{', '\n', '        ', 'final', ' ', 'View', ' ', 'iconView', ' ', '=', ' ', 'getActionBarHomeView', '(', 'activity', ')', ';', '\n', '        ', 'final', ' ', 'View', ' ', 'upView', ' ', '=', ' ', 'getActionBarUpView', '(', 'activity', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'iconView', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'upView', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Could not find ActionBar views', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'iconParams', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'iconView', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'iconParams', '.', 'bottomMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconParams', '.', 'topMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconView', '.', 'setLayoutParams', '(', 'iconParams', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'upParams', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'upView', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'upParams', '.', 'leftMargin', ' ', '=', ' ', 'activity', '.', 'getResources', '(', ')', '.', 'getDimensionPixelSize', '(', 'R', '.', 'dimen', '.', 'mm_up_arrow_margin', ')', ';', '\n', '        ', 'upParams', '.', 'rightMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'upView', '.', 'setLayoutParams', '(', 'upParams', ')', ';', '\n', '    ', '}', '\n']"
master,5be768717ff82063930d821421e1f0a62d87cf9c,ToolbarActivity.java,onClick,"            @Override public void onClick(View v) {
                // random state
                actionBarMenuState = generateState(actionBarMenuState);
                materialMenu.animatePressedState(intToState(actionBarMenuState));
            }",https://www.github.com/balysv/material-menu/commit/5be768717ff82063930d821421e1f0a62d87cf9c,"            @Override public void onClick(View v) {
                
                actionBarMenuState = generateState(actionBarMenuState);
                materialMenu.animatePressedState(intToState(actionBarMenuState));
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', '\n', '                ', 'actionBarMenuState', ' ', '=', ' ', 'generateState', '(', 'actionBarMenuState', ')', ';', '\n', '                ', 'materialMenu', '.', 'animatePressedState', '(', 'intToState', '(', 'actionBarMenuState', ')', ')', ';', '\n', '            ', '}', '\n']"
master,5be768717ff82063930d821421e1f0a62d87cf9c,ToolbarActivity.java,onPostCreate,"    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        helper.refreshDrawerState();
        materialMenu.syncState(savedInstanceState);
    }",https://www.github.com/balysv/material-menu/commit/5be768717ff82063930d821421e1f0a62d87cf9c,"    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        helper.refreshDrawerState();
        materialMenu.syncState(savedInstanceState);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onPostCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onPostCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'helper', '.', 'refreshDrawerState', '(', ')', ';', '\n', '        ', 'materialMenu', '.', 'syncState', '(', 'savedInstanceState', ')', ';', '\n', '    ', '}', '\n']"
master,cad2cb4bc4b1f2d298f0933b9231a8440e2bd156,MaterialMenuBase.java,setupActionBar,"    private void setupActionBar(Activity activity) {
        final View iconView = getActionBarHomeView(activity);
        final View upView = getActionBarUpView(activity);

        if (iconView == null || upView == null) {
            throw new IllegalStateException(""Could not find ActionBar views"");
        }

        // need no margins so that clicked state would work nicely
        ViewGroup.MarginLayoutParams iconParams = (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();
        iconParams.bottomMargin = 0;
        iconParams.topMargin = 0;
        iconParams.leftMargin = 0;
        iconView.setLayoutParams(iconParams);

        // remove up arrow margins
        ViewGroup.MarginLayoutParams upParams = (ViewGroup.MarginLayoutParams) upView.getLayoutParams();
        upParams.leftMargin = activity.getResources().getDimensionPixelSize(R.dimen.mm_up_arrow_margin);
        upParams.rightMargin = 0;
        upView.setLayoutParams(upParams);
    }",https://www.github.com/balysv/material-menu/commit/cad2cb4bc4b1f2d298f0933b9231a8440e2bd156,"    private void setupActionBar(Activity activity) {
        final View iconView = getActionBarHomeView(activity);
        final View upView = getActionBarUpView(activity);

        if (iconView == null || upView == null) {
            throw new IllegalStateException(""Could not find ActionBar views"");
        }

        
        ViewGroup.MarginLayoutParams iconParams = (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();
        iconParams.bottomMargin = 0;
        iconParams.topMargin = 0;
        iconParams.leftMargin = 0;
        iconView.setLayoutParams(iconParams);

        
        ViewGroup.MarginLayoutParams upParams = (ViewGroup.MarginLayoutParams) upView.getLayoutParams();
        upParams.leftMargin = activity.getResources().getDimensionPixelSize(R.dimen.mm_up_arrow_margin);
        upParams.rightMargin = 0;
        upView.setLayoutParams(upParams);
    }
","['    ', 'private', ' ', 'void', ' ', 'setupActionBar', '(', 'Activity', ' ', 'activity', ')', ' ', '{', '\n', '        ', 'final', ' ', 'View', ' ', 'iconView', ' ', '=', ' ', 'getActionBarHomeView', '(', 'activity', ')', ';', '\n', '        ', 'final', ' ', 'View', ' ', 'upView', ' ', '=', ' ', 'getActionBarUpView', '(', 'activity', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'iconView', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'upView', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Could not find ActionBar views', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'iconParams', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'iconView', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'iconParams', '.', 'bottomMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconParams', '.', 'topMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconParams', '.', 'leftMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'iconView', '.', 'setLayoutParams', '(', 'iconParams', ')', ';', '\n', '\n', '        ', '\n', '        ', 'ViewGroup', '.', 'MarginLayoutParams', ' ', 'upParams', ' ', '=', ' ', '(', 'ViewGroup', '.', 'MarginLayoutParams', ')', ' ', 'upView', '.', 'getLayoutParams', '(', ')', ';', '\n', '        ', 'upParams', '.', 'leftMargin', ' ', '=', ' ', 'activity', '.', 'getResources', '(', ')', '.', 'getDimensionPixelSize', '(', 'R', '.', 'dimen', '.', 'mm_up_arrow_margin', ')', ';', '\n', '        ', 'upParams', '.', 'rightMargin', ' ', '=', ' ', '0', ';', '\n', '        ', 'upView', '.', 'setLayoutParams', '(', 'upParams', ')', ';', '\n', '    ', '}', '\n']"
master,babcde50fc32d761b0ae7cfeb5fdb861b51b282a,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + dip3 / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip3 / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                // shorten one end
                stopX -= ratio * resolveStrokeModifier(ratio) / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * dip2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    // lengthen both ends
		    startX += dip3 / 2 + dip4 + ratio * dip4;
                    stopX += ratio * (dip8 + diph);
                } else {
                    // rotate back to starting angle
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                    // shorten one end and lengthen the other
		    startX += dip3 / 2 + dip8 - (1 - ratio) * (dip6 + diph);
                    stopX += dip8 - (1 - ratio) * (dip2 + dip6);
                }
                pivotX = width / 2 + dip3 * 2;
                break;
            case BURGER_CHECK:
                // rotate until required angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
		startX += ratio * (dip8 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
            case X_CHECK:
                // fade in
                alpha = (int) (ratio * 255);
                // rotation to check angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
		startX += ratio * (dip4 + dip4 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/babcde50fc32d761b0ae7cfeb5fdb861b51b282a,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + dip3 / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip3 / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                
                stopX -= ratio * resolveStrokeModifier(ratio) / 2;
                break;
            case BURGER_X:
                
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * dip2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                    
		    startX += dip3 / 2 + dip4 + ratio * dip4;
                    stopX += ratio * (dip8 + diph);
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                    
		    startX += dip3 / 2 + dip8 - (1 - ratio) * (dip6 + diph);
                    stopX += dip8 - (1 - ratio) * (dip2 + dip6);
                }
                pivotX = width / 2 + dip3 * 2;
                break;
            case BURGER_CHECK:
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
		startX += ratio * (dip8 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
            case X_CHECK:
                
                alpha = (int) (ratio * 255);
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
		startX += ratio * (dip4 + dip4 + dip3 / 2);
                stopX += ratio * (dip8 + diph);
                pivotX = width / 2 + dip3 * 2;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_MID_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'resolveStrokeModifier', '(', 'ratio', ')', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                    ', '\n', '\t\t    ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '+', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'diph', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '-', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                    ', '\n', '\t\t    ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip8', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'dip6', ' ', '+', ' ', 'diph', ')', ';', '\n', '                    ', 'stopX', ' ', '+', '=', ' ', 'dip8', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '(', 'dip2', ' ', '+', ' ', 'dip6', ')', ';', '\n', '                ', '}', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '\t\t', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'diph', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'X_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', 'ratio', ' ', '*', ' ', '255', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '\t\t', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'dip4', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip8', ' ', '+', ' ', 'diph', ')', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '*', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,babcde50fc32d761b0ae7cfeb5fdb861b51b282a,MaterialMenuDrawable.java,resolveStrokeModifier,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
		    return dip3 - (dip3 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
		    return dip3 + diph - (dip3 + diph) * ratio;
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
		    return dip4 - ((dip3 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }",https://www.github.com/balysv/material-menu/commit/babcde50fc32d761b0ae7cfeb5fdb861b51b282a,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
		    return dip3 - (dip3 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
		    return dip3 + diph - (dip3 + diph) * ratio;
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
		    return dip4 - ((dip3 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }
","['    ', 'private', ' ', 'float', ' ', 'resolveStrokeModifier', '(', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'stroke', ')', ' ', '{', '\n', '            ', 'case', ' ', 'REGULAR', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '\t\t    ', 'return', ' ', 'dip3', ' ', '-', ' ', '(', 'dip3', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip3', ';', '\n', '            ', 'case', ' ', 'THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '\t\t    ', 'return', ' ', 'dip3', ' ', '+', ' ', 'diph', ' ', '-', ' ', '(', 'dip3', ' ', '+', ' ', 'diph', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', '(', 'dip3', ' ', '+', ' ', 'diph', ')', ';', '\n', '            ', 'case', ' ', 'EXTRA_THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '\t\t    ', 'return', ' ', 'dip4', ' ', '-', ' ', '(', '(', 'dip3', ' ', '+', ' ', 'dip1', ')', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', '0', ';', '\n', '    ', '}', '\n']"
master,6844407621ef54a1a01f20cc6c28adb23d9a55cf,MaterialMenuDrawable.java,initPaint,"    private void initPaint(int color) {
        iconPaint.setAntiAlias(true);
        iconPaint.setStyle(Style.STROKE);
        iconPaint.setStrokeWidth(strokeWidth);
        iconPaint.setColor(color);

        circlePaint.setAntiAlias(true);
        circlePaint.setStyle(Style.FILL);
        circlePaint.setColor(color);
        circlePaint.setAlpha(DEFAULT_CIRCLE_ALPHA);

        setBounds(0, 0, width, height);
    }",https://www.github.com/balysv/material-menu/commit/6844407621ef54a1a01f20cc6c28adb23d9a55cf,"    private void initPaint(int color) {
        iconPaint.setAntiAlias(true);
        iconPaint.setStyle(Style.STROKE);
        iconPaint.setStrokeWidth(strokeWidth);
        iconPaint.setColor(color);

        circlePaint.setAntiAlias(true);
        circlePaint.setStyle(Style.FILL);
        circlePaint.setColor(color);
        circlePaint.setAlpha(DEFAULT_CIRCLE_ALPHA);

        setBounds(0, 0, width, height);
    }
","['    ', 'private', ' ', 'void', ' ', 'initPaint', '(', 'int', ' ', 'color', ')', ' ', '{', '\n', '        ', 'iconPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', '\n', '        ', 'iconPaint', '.', 'setStyle', '(', 'Style', '.', 'STROKE', ')', ';', '\n', '        ', 'iconPaint', '.', 'setStrokeWidth', '(', 'strokeWidth', ')', ';', '\n', '        ', 'iconPaint', '.', 'setColor', '(', 'color', ')', ';', '\n', '\n', '        ', 'circlePaint', '.', 'setAntiAlias', '(', 'true', ')', ';', '\n', '        ', 'circlePaint', '.', 'setStyle', '(', 'Style', '.', 'FILL', ')', ';', '\n', '        ', 'circlePaint', '.', 'setColor', '(', 'color', ')', ';', '\n', '        ', 'circlePaint', '.', 'setAlpha', '(', 'DEFAULT_CIRCLE_ALPHA', ')', ';', '\n', '\n', '        ', 'setBounds', '(', '0', ',', ' ', '0', ',', ' ', 'width', ',', ' ', 'height', ')', ';', '\n', '    ', '}', '\n']"
master,6844407621ef54a1a01f20cc6c28adb23d9a55cf,MaterialMenuDrawable.java,drawMiddleLine,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + dip3 / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip3 / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                // rotate by 180
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                // shorten one end
                stopX -= ratio * resolveStrokeModifier(ratio) / 2;
                break;
            case BURGER_X:
                // fade out
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                // fade out and shorten one end
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * dip2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    // rotate until required angle
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                } else {
                    // rotate back to starting angle
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                }
                // shorten one end and lengthen the other
                startX += dip3 / 2 + dip4 - (1 - ratio) * dip2;
                stopX += ratio * dip1;
                pivotX = width / 2 + dip3 + diph;
                break;
            case BURGER_CHECK:
                // rotate until required angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * dip1;
                pivotX = width / 2 + dip3 + diph;
                break;
            case X_CHECK:
                // fade in
                alpha = (int) (ratio * 255);
                // rotation to check angle
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                // lengthen both ends
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * dip1;
                pivotX = width / 2 + dip3 + diph;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }",https://www.github.com/balysv/material-menu/commit/6844407621ef54a1a01f20cc6c28adb23d9a55cf,"    private void drawMiddleLine(Canvas canvas, float ratio) {
        canvas.restore();
        canvas.save();

        float rotation = 0;
        float pivotX = width / 2;
        float pivotY = width / 2;
        float startX = sidePadding;
        float startY = topPadding + dip3 / 2 * 5;
        float stopX = width - sidePadding;
        float stopY = topPadding + dip3 / 2 * 5;
        int alpha = 255;

        switch (animationState) {
            case BURGER_ARROW:
                
                if (isMorphingForward()) {
                    rotation = ratio * ARROW_MID_LINE_ANGLE;
                } else {
                    rotation = ARROW_MID_LINE_ANGLE + (1 - ratio) * ARROW_MID_LINE_ANGLE;
                }
                
                stopX -= ratio * resolveStrokeModifier(ratio) / 2;
                break;
            case BURGER_X:
                
                alpha = (int) ((1 - ratio) * 255);
                break;
            case ARROW_X:
                
                alpha = (int) ((1 - ratio) * 255);
                startX += (1 - ratio) * dip2;
                break;
            case ARROW_CHECK:
                if (isMorphingForward()) {
                    
                    rotation = ratio * CHECK_MIDDLE_ANGLE;
                } else {
                    
                    rotation = CHECK_MIDDLE_ANGLE - CHECK_MIDDLE_ANGLE * (1 - ratio);
                }
                
                startX += dip3 / 2 + dip4 - (1 - ratio) * dip2;
                stopX += ratio * dip1;
                pivotX = width / 2 + dip3 + diph;
                break;
            case BURGER_CHECK:
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * dip1;
                pivotX = width / 2 + dip3 + diph;
                break;
            case X_CHECK:
                
                alpha = (int) (ratio * 255);
                
                rotation = ratio * CHECK_MIDDLE_ANGLE;
                
                startX += ratio * (dip4 + dip3 / 2);
                stopX += ratio * dip1;
                pivotX = width / 2 + dip3 + diph;
                break;
        }

        iconPaint.setAlpha(alpha);
        canvas.rotate(rotation, pivotX, pivotY);
        canvas.drawLine(startX, startY, stopX, stopY, iconPaint);
        iconPaint.setAlpha(255);
    }
","['    ', 'private', ' ', 'void', ' ', 'drawMiddleLine', '(', 'Canvas', ' ', 'canvas', ',', ' ', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', 'canvas', '.', 'save', '(', ')', ';', '\n', '\n', '        ', 'float', ' ', 'rotation', ' ', '=', ' ', '0', ';', '\n', '        ', 'float', ' ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'pivotY', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'float', ' ', 'startX', ' ', '=', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'startY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'float', ' ', 'stopX', ' ', '=', ' ', 'width', ' ', '-', ' ', 'sidePadding', ';', '\n', '        ', 'float', ' ', 'stopY', ' ', '=', ' ', 'topPadding', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '*', ' ', '5', ';', '\n', '        ', 'int', ' ', 'alpha', ' ', '=', ' ', '255', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'animationState', ')', ' ', '{', '\n', '            ', 'case', ' ', 'BURGER_ARROW', ':', '\n', '                ', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ARROW_MID_LINE_ANGLE', ' ', '+', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'ARROW_MID_LINE_ANGLE', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'stopX', ' ', '-', '=', ' ', 'ratio', ' ', '*', ' ', 'resolveStrokeModifier', '(', 'ratio', ')', ' ', '/', ' ', '2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_X', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', '255', ')', ';', '\n', '                ', 'startX', ' ', '+', '=', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'ARROW_CHECK', ':', '\n', '                ', 'if', ' ', '(', 'isMorphingForward', '(', ')', ')', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'rotation', ' ', '=', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '-', ' ', 'CHECK_MIDDLE_ANGLE', ' ', '*', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'dip3', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip4', ' ', '-', ' ', '(', '1', ' ', '-', ' ', 'ratio', ')', ' ', '*', ' ', 'dip2', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', 'dip1', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '+', ' ', 'diph', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'BURGER_CHECK', ':', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', 'dip1', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '+', ' ', 'diph', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', 'X_CHECK', ':', '\n', '                ', '\n', '                ', 'alpha', ' ', '=', ' ', '(', 'int', ')', ' ', '(', 'ratio', ' ', '*', ' ', '255', ')', ';', '\n', '                ', '\n', '                ', 'rotation', ' ', '=', ' ', 'ratio', ' ', '*', ' ', 'CHECK_MIDDLE_ANGLE', ';', '\n', '                ', '\n', '                ', 'startX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', '(', 'dip4', ' ', '+', ' ', 'dip3', ' ', '/', ' ', '2', ')', ';', '\n', '                ', 'stopX', ' ', '+', '=', ' ', 'ratio', ' ', '*', ' ', 'dip1', ';', '\n', '                ', 'pivotX', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ' ', '+', ' ', 'dip3', ' ', '+', ' ', 'diph', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', 'alpha', ')', ';', '\n', '        ', 'canvas', '.', 'rotate', '(', 'rotation', ',', ' ', 'pivotX', ',', ' ', 'pivotY', ')', ';', '\n', '        ', 'canvas', '.', 'drawLine', '(', 'startX', ',', ' ', 'startY', ',', ' ', 'stopX', ',', ' ', 'stopY', ',', ' ', 'iconPaint', ')', ';', '\n', '        ', 'iconPaint', '.', 'setAlpha', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,6844407621ef54a1a01f20cc6c28adb23d9a55cf,MaterialMenuDrawable.java,resolveStrokeModifier,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 - (dip3 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 + diph - (dip3 + diph) * ratio;
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip4 - ((dip3 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }",https://www.github.com/balysv/material-menu/commit/6844407621ef54a1a01f20cc6c28adb23d9a55cf,"    private float resolveStrokeModifier(float ratio) {
        switch (stroke) {
            case REGULAR:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 - (dip3 * ratio);
                }
                return ratio * dip3;
            case THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip3 + diph - (dip3 + diph) * ratio;
                }
                return ratio * (dip3 + diph);
            case EXTRA_THIN:
                if (animationState == AnimationState.ARROW_X || animationState == AnimationState.X_CHECK) {
                    return dip4 - ((dip3 + dip1) * ratio);
                }
                return ratio * dip4;
        }
        return 0;
    }
","['    ', 'private', ' ', 'float', ' ', 'resolveStrokeModifier', '(', 'float', ' ', 'ratio', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'stroke', ')', ' ', '{', '\n', '            ', 'case', ' ', 'REGULAR', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip3', ' ', '-', ' ', '(', 'dip3', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip3', ';', '\n', '            ', 'case', ' ', 'THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip3', ' ', '+', ' ', 'diph', ' ', '-', ' ', '(', 'dip3', ' ', '+', ' ', 'diph', ')', ' ', '*', ' ', 'ratio', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', '(', 'dip3', ' ', '+', ' ', 'diph', ')', ';', '\n', '            ', 'case', ' ', 'EXTRA_THIN', ':', '\n', '                ', 'if', ' ', '(', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'ARROW_X', ' ', '|', '|', ' ', 'animationState', ' ', '=', '=', ' ', 'AnimationState', '.', 'X_CHECK', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'dip4', ' ', '-', ' ', '(', '(', 'dip3', ' ', '+', ' ', 'dip1', ')', ' ', '*', ' ', 'ratio', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'ratio', ' ', '*', ' ', 'dip4', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', '0', ';', '\n', '    ', '}', '\n']"
master,e7f9576f350e95ee55371653b3844593a182d0cd,MaterialMenuDrawable.java,start,"    @Override public void start() {
        if (transformationRunning) return;

        if (animatingIconState != null && animatingIconState != currentIconState) {
            transformationRunning = true;

            final boolean direction = resolveTransformation();
            transformation.setFloatValues(
                direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
                direction ? TRANSFORMATION_MID : TRANSFORMATION_END
            );
            transformation.start();
        }

        if (pressedCircle.isRunning()) {
            pressedCircle.cancel();
        }
        if (drawTouchCircle && !neverDrawTouch) {
            pressedCircle.setFloatValues(0, circleRadius * 1.22f);
            pressedCircle.start();
        }

        invalidateSelf();
    }",https://www.github.com/balysv/material-menu/commit/e7f9576f350e95ee55371653b3844593a182d0cd,"    @Override public void start() {
        if (transformationRunning) return;

        if (animatingIconState != null && animatingIconState != currentIconState) {
            transformationRunning = true;

            final boolean direction = resolveTransformation();
            transformation.setFloatValues(
                direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
                direction ? TRANSFORMATION_MID : TRANSFORMATION_END
            );
            transformation.start();
        }

        if (pressedCircle.isRunning()) {
            pressedCircle.cancel();
        }
        if (drawTouchCircle && !neverDrawTouch) {
            pressedCircle.setFloatValues(0, circleRadius * 1.22f);
            pressedCircle.start();
        }

        invalidateSelf();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'start', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'transformationRunning', ')', ' ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'animatingIconState', ' ', '!', '=', ' ', 'currentIconState', ')', ' ', '{', '\n', '            ', 'transformationRunning', ' ', '=', ' ', 'true', ';', '\n', '\n', '            ', 'final', ' ', 'boolean', ' ', 'direction', ' ', '=', ' ', 'resolveTransformation', '(', ')', ';', '\n', '            ', 'transformation', '.', 'setFloatValues', '(', '\n', '                ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_START', ' ', ':', ' ', 'TRANSFORMATION_MID', ',', '\n', '                ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_MID', ' ', ':', ' ', 'TRANSFORMATION_END', '\n', '            ', ')', ';', '\n', '            ', 'transformation', '.', 'start', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'pressedCircle', '.', 'isRunning', '(', ')', ')', ' ', '{', '\n', '            ', 'pressedCircle', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ' ', '&', '&', ' ', '!', 'neverDrawTouch', ')', ' ', '{', '\n', '            ', 'pressedCircle', '.', 'setFloatValues', '(', '0', ',', ' ', 'circleRadius', ' ', '*', ' ', '1.22f', ')', ';', '\n', '            ', 'pressedCircle', '.', 'start', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'invalidateSelf', '(', ')', ';', '\n', '    ', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void setState(IconState state);

    
    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,getState,"    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void setColor(int color);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,setTransformationDuration,"    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,setPressedDuration,"    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,setInterpolator,"    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,29627a0d3792391841ca3c368f26179d67cf9a31,MaterialMenu.java,setAnimationListener,"    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/29627a0d3792391841ca3c368f26179d67cf9a31,"    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,f386eabbd8549a8efa2811a12d6389de2a892a8c,HomeIconActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.BLACK, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }",https://www.github.com/balysv/material-menu/commit/f386eabbd8549a8efa2811a12d6389de2a892a8c,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        materialMenu = new MaterialMenuIconCompat(this, Color.BLACK, Stroke.THIN);
        helper.init(getWindow().getDecorView(), materialMenu);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'materialMenu', ' ', '=', ' ', 'new', ' ', 'MaterialMenuIconCompat', '(', 'this', ',', ' ', 'Color', '.', 'BLACK', ',', ' ', 'Stroke', '.', 'THIN', ')', ';', '\n', '        ', 'helper', '.', 'init', '(', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', ',', ' ', 'materialMenu', ')', ';', '\n', '    ', '}', '\n']"
master,f386eabbd8549a8efa2811a12d6389de2a892a8c,HomeIconActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == android.R.id.home) {
            // random state
            actionBarMenuState = generateState(actionBarMenuState);
            materialMenu.animatePressedState(intToState(actionBarMenuState));
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-menu/commit/f386eabbd8549a8efa2811a12d6389de2a892a8c,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == android.R.id.home) {
            
            actionBarMenuState = generateState(actionBarMenuState);
            materialMenu.animatePressedState(intToState(actionBarMenuState));
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'android', '.', 'R', '.', 'id', '.', 'home', ')', ' ', '{', '\n', '            ', '\n', '            ', 'actionBarMenuState', ' ', '=', ' ', 'generateState', '(', 'actionBarMenuState', ')', ';', '\n', '            ', 'materialMenu', '.', 'animatePressedState', '(', 'intToState', '(', 'actionBarMenuState', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,61b7ffb1da6b65d19430d6f81476499f190856f5,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visibility new value for visibility
     */
    public void setVisibility(int visibility);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/61b7ffb1da6b65d19430d6f81476499f190856f5,"    public void setState(IconState state);

    
    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisibility(int visibility);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisibility', '(', 'int', ' ', 'visibility', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,61b7ffb1da6b65d19430d6f81476499f190856f5,MaterialMenu.java,getState,"    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visibility new value for visibility
     */
    public void setVisibility(int visibility);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/61b7ffb1da6b65d19430d6f81476499f190856f5,"    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisibility(int visibility);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisibility', '(', 'int', ' ', 'visibility', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,61b7ffb1da6b65d19430d6f81476499f190856f5,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visibility new value for visibility
     */
    public void setVisibility(int visibility);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/61b7ffb1da6b65d19430d6f81476499f190856f5,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisibility(int visibility);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisibility', '(', 'int', ' ', 'visibility', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,61b7ffb1da6b65d19430d6f81476499f190856f5,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visibility new value for visibility
     */
    public void setVisibility(int visibility);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/61b7ffb1da6b65d19430d6f81476499f190856f5,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisibility(int visibility);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisibility', '(', 'int', ' ', 'visibility', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,61b7ffb1da6b65d19430d6f81476499f190856f5,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visibility new value for visibility
     */
    public void setVisibility(int visibility);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/61b7ffb1da6b65d19430d6f81476499f190856f5,"    public void setColor(int color);

    
    public void setVisibility(int visibility);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisibility', '(', 'int', ' ', 'visibility', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,61b7ffb1da6b65d19430d6f81476499f190856f5,MaterialMenu.java,setVisibility,"    public void setVisibility(int visibility);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/61b7ffb1da6b65d19430d6f81476499f190856f5,"    public void setVisibility(int visibility);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setVisibility', '(', 'int', ' ', 'visibility', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setIconVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    public void setState(IconState state);

    
    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setIconVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setIconVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenu.java,getState,"    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setIconVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setIconVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setIconVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setIconVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setIconVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setIconVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setIconVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setIconVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setIconVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setIconVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    public void setColor(int color);

    
    public void setIconVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setIconVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenu.java,setIconVisible,"    public void setIconVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    public void setIconVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setIconVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        if(!iconVisible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    @Override public void draw(Canvas canvas) {
        if(!iconVisible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'if', '(', '!', 'iconVisible', ')', ' ', 'return', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'save', '(', ')', ';', '\n', '            ', 'canvas', '.', 'scale', '(', '-', '1', ',', ' ', '1', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '            ', 'canvas', '.', 'translate', '(', '-', 'getIntrinsicWidth', '(', ')', ',', ' ', '0', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ')', ' ', 'drawTouchCircle', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, true);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration, pressedDuration);
            drawable.setIconVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, true);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration, pressedDuration);
            drawable.setIconVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'boolean', ' ', 'visible', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_visible', ',', ' ', 'true', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'int', ' ', 'pressedDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_pressedDuration', ',', ' ', 'DEFAULT_PRESSED_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'scale', ',', ' ', 'transformDuration', ',', ' ', 'pressedDuration', ')', ';', '\n', '            ', 'drawable', '.', 'setIconVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,658cec278b1fdc21cd1ddb89ea74d148ad4d709c,MaterialMenuView.java,writeToParcel,"        public void writeToParcel(Parcel out, int flags) {
            super.writeToParcel(out, flags);
            out.writeString(state.name());
            out.writeByte((byte) (visible ? 1 : 0));
        }",https://www.github.com/balysv/material-menu/commit/658cec278b1fdc21cd1ddb89ea74d148ad4d709c,"        public void writeToParcel(Parcel out, int flags) {
            super.writeToParcel(out, flags);
            out.writeString(state.name());
            out.writeByte((byte) (visible ? 1 : 0));
        }
","['        ', 'public', ' ', 'void', ' ', 'writeToParcel', '(', 'Parcel', ' ', 'out', ',', ' ', 'int', ' ', 'flags', ')', ' ', '{', '\n', '            ', 'super', '.', 'writeToParcel', '(', 'out', ',', ' ', 'flags', ')', ';', '\n', '            ', 'out', '.', 'writeString', '(', 'state', '.', 'name', '(', ')', ')', ';', '\n', '            ', 'out', '.', 'writeByte', '(', '(', 'byte', ')', ' ', '(', 'visible', ' ', '?', ' ', '1', ' ', ':', ' ', '0', ')', ')', ';', '\n', '        ', '}', '\n']"
master,22c146cf8746836ff439b58576099e408d307304,MaterialMenuDrawable.java,newDrawable,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setIconVisible(iconVisible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }",https://www.github.com/balysv/material-menu/commit/22c146cf8746836ff439b58576099e408d307304,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setIconVisible(iconVisible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }
","['        ', 'public', ' ', 'Drawable', ' ', 'newDrawable', '(', ')', ' ', '{', '\n', '            ', 'MaterialMenuDrawable', ' ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', '\n', '                ', 'circlePaint', '.', 'getColor', '(', ')', ',', ' ', 'stroke', ',', ' ', 'transformation', '.', 'getDuration', '(', ')', ',', '\n', '                ', 'pressedCircle', '.', 'getDuration', '(', ')', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'iconWidth', ',', ' ', 'circleRadius', ',', ' ', 'strokeWidth', ',', ' ', 'dip1', '\n', '            ', ')', ';', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '?', ' ', 'animatingIconState', ' ', ':', ' ', 'currentIconState', ')', ';', '\n', '            ', 'drawable', '.', 'setIconVisible', '(', 'iconVisible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '            ', 'return', ' ', 'drawable', ';', '\n', '        ', '}', '\n']"
master,22c146cf8746836ff439b58576099e408d307304,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, true);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, visible, scale, transformDuration, pressedDuration);

            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/22c146cf8746836ff439b58576099e408d307304,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, true);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, visible, scale, transformDuration, pressedDuration);

            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'boolean', ' ', 'visible', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_visible', ',', ' ', 'true', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'int', ' ', 'pressedDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_pressedDuration', ',', ' ', 'DEFAULT_PRESSED_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'visible', ',', ' ', 'scale', ',', ' ', 'transformDuration', ',', ' ', 'pressedDuration', ')', ';', '\n', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenu.java,setState,"    public void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    public void setState(IconState state);

    
    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenu.java,getState,"    public IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    public IconState getState();

    
    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenu.java,animateState,"    public void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    public void animateState(IconState state);

    
    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenu.java,animatePressedState,"    public void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    public void animatePressedState(IconState state);

    
    public void setColor(int color);

    
    public void setVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenu.java,setColor,"    public void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    public void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    public void setColor(int color);

    
    public void setVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenu.java,setVisible,"    public void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    public void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    public void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    public void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    public void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    public void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    public MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    public void setVisible(boolean visible);

    
    public void setTransformationDuration(int duration);

    
    public void setPressedDuration(int duration);

    
    public void setInterpolator(Interpolator interpolator);

    
    public void setAnimationListener(Animator.AnimatorListener listener);

    
    public void setRTLEnabled(boolean rtlEnabled);

    
    public void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    public MaterialMenuDrawable getDrawable();
}
","['    ', 'public', ' ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'public', ' ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        if(!visible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    @Override public void draw(Canvas canvas) {
        if(!visible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'if', '(', '!', 'visible', ')', ' ', 'return', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'save', '(', ')', ';', '\n', '            ', 'canvas', '.', 'scale', '(', '-', '1', ',', ' ', '1', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '            ', 'canvas', '.', 'translate', '(', '-', 'getIntrinsicWidth', '(', ')', ',', ' ', '0', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ')', ' ', 'drawTouchCircle', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenuDrawable.java,newDrawable,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                pressedCircle.getDuration(), width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }
","['        ', 'public', ' ', 'Drawable', ' ', 'newDrawable', '(', ')', ' ', '{', '\n', '            ', 'MaterialMenuDrawable', ' ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', '\n', '                ', 'circlePaint', '.', 'getColor', '(', ')', ',', ' ', 'stroke', ',', ' ', 'transformation', '.', 'getDuration', '(', ')', ',', '\n', '                ', 'pressedCircle', '.', 'getDuration', '(', ')', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'iconWidth', ',', ' ', 'circleRadius', ',', ' ', 'strokeWidth', ',', ' ', 'dip1', '\n', '            ', ')', ';', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '?', ' ', 'animatingIconState', ' ', ':', ' ', 'currentIconState', ')', ';', '\n', '            ', 'drawable', '.', 'setVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '            ', 'return', ' ', 'drawable', ';', '\n', '        ', '}', '\n']"
master,b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, visible, scale, transformDuration, pressedDuration);

            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/b5ddfc10e4c4f55847a3ae0def4396bc9766bc88,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, visible, scale, transformDuration, pressedDuration);

            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'boolean', ' ', 'visible', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_visible', ',', ' ', 'DEFAULT_VISIBLE', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'int', ' ', 'pressedDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_pressedDuration', ',', ' ', 'DEFAULT_PRESSED_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'visible', ',', ' ', 'scale', ',', ' ', 'transformDuration', ',', ' ', 'pressedDuration', ')', ';', '\n', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setState,"    void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setState(IconState state);

    
    IconState getState();

    
    void animateState(IconState state);

    
    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,getState,"    IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    IconState getState();

    
    void animateState(IconState state);

    
    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,animateState,"    void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     */
    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void animateState(IconState state);

    
    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,animatePressedState,"    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setColor,"    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible   new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setVisible,"    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setTransformationDuration,"    void setTransformationDuration(int duration);

    /**
     * Set duration of pressed state circle animation
     *
     * @param duration new animation duration
     */
    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setTransformationDuration(int duration);

    
    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setPressedDuration,"    void setPressedDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setPressedDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setPressedDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setInterpolator,"    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setAnimationListener,"    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setRTLEnabled,"    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,94761096c5068699b0240ce2b85989e9d8f072c1,MaterialMenu.java,setTransformationOffset,"    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/94761096c5068699b0240ce2b85989e9d8f072c1,"    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,3126b80b260a513142d4870f3f8e8d810091bb50,MaterialMenuView.java,onRestoreInstanceState,"    public void onRestoreInstanceState(Parcelable state) {
        SavedState savedState = (SavedState) state;
        super.onRestoreInstanceState(savedState.getSuperState());
        setState(savedState.state);
        setVisible(savedState.visible);
    }",https://www.github.com/balysv/material-menu/commit/3126b80b260a513142d4870f3f8e8d810091bb50,"    public void onRestoreInstanceState(Parcelable state) {
        SavedState savedState = (SavedState) state;
        super.onRestoreInstanceState(savedState.getSuperState());
        setState(savedState.state);
        setVisible(savedState.visible);
    }
","['    ', 'public', ' ', 'void', ' ', 'onRestoreInstanceState', '(', 'Parcelable', ' ', 'state', ')', ' ', '{', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', '(', 'SavedState', ')', ' ', 'state', ';', '\n', '        ', 'super', '.', 'onRestoreInstanceState', '(', 'savedState', '.', 'getSuperState', '(', ')', ')', ';', '\n', '        ', 'setState', '(', 'savedState', '.', 'state', ')', ';', '\n', '        ', 'setVisible', '(', 'savedState', '.', 'visible', ')', ';', '\n', '    ', '}', '\n']"
master,2d05c7d1bf3ed7d4bc44bcd806b3dc4685cb1b21,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        if (!visible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }",https://www.github.com/balysv/material-menu/commit/2d05c7d1bf3ed7d4bc44bcd806b3dc4685cb1b21,"    @Override public void draw(Canvas canvas) {
        if (!visible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
        }

        if (drawTouchCircle) drawTouchCircle(canvas);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'visible', ')', ' ', 'return', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'save', '(', ')', ';', '\n', '            ', 'canvas', '.', 'scale', '(', '-', '1', ',', ' ', '1', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '            ', 'canvas', '.', 'translate', '(', '-', 'getIntrinsicWidth', '(', ')', ',', ' ', '0', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'restore', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'drawTouchCircle', ')', ' ', 'drawTouchCircle', '(', 'canvas', ')', ';', '\n', '    ', '}', '\n']"
master,2d05c7d1bf3ed7d4bc44bcd806b3dc4685cb1b21,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration, pressedDuration);

            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/2d05c7d1bf3ed7d4bc44bcd806b3dc4685cb1b21,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            int pressedDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_pressedDuration, DEFAULT_PRESSED_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration, pressedDuration);

            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'boolean', ' ', 'visible', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_visible', ',', ' ', 'DEFAULT_VISIBLE', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'int', ' ', 'pressedDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_pressedDuration', ',', ' ', 'DEFAULT_PRESSED_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'scale', ',', ' ', 'transformDuration', ',', ' ', 'pressedDuration', ')', ';', '\n', '\n', '            ', 'drawable', '.', 'setVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,setState,"    void setState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     * @deprecated Pressed state is not supported. Use {@link #animateState(IconState)}
     */
    @Deprecated
    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    void setState(IconState state);

    
    IconState getState();

    
    void animateState(IconState state);

    
    @Deprecated
    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', '@Deprecated', '\n', '    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,getState,"    IconState getState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     * @deprecated Pressed state is not supported. Use {@link #animateState(IconState)}
     */
    @Deprecated
    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    IconState getState();

    
    void animateState(IconState state);

    
    @Deprecated
    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'IconState', ' ', 'getState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', '@Deprecated', '\n', '    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,animateState,"    void animateState(IconState state);

    /**
     * Animate icon to given state and draw touch circle
     *
     * @param state new icon state
     * @deprecated Pressed state is not supported. Use {@link #animateState(IconState)}
     */
    @Deprecated
    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    void animateState(IconState state);

    
    @Deprecated
    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', '@Deprecated', '\n', '    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,animatePressedState,"    void animatePressedState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    void animatePressedState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,setColor,"    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,setVisible,"    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenu.java,setTransformationDuration,"    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    /**
     * @return {@link MaterialMenuDrawable} to be used for the menu
     */
    MaterialMenuDrawable getDrawable();
}",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    void setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);

    
    MaterialMenuDrawable getDrawable();
}
","['    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '\n', '    ', '\n', '    ', 'MaterialMenuDrawable', ' ', 'getDrawable', '(', ')', ';', '\n', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuBase.java,animateState,"    public final void animateState(MaterialMenuDrawable.IconState state) {
        currentState = state;
        getDrawable().animateIconState(state);
    }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    public final void animateState(MaterialMenuDrawable.IconState state) {
        currentState = state;
        getDrawable().animateIconState(state);
    }
","['    ', 'public', ' ', 'final', ' ', 'void', ' ', 'animateState', '(', 'MaterialMenuDrawable', '.', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'getDrawable', '(', ')', '.', 'animateIconState', '(', 'state', ')', ';', '\n', '    ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuBase.java,animatePressedState,"    public final void animatePressedState(MaterialMenuDrawable.IconState state) {
        animateState(state);
    }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    public final void animatePressedState(MaterialMenuDrawable.IconState state) {
        animateState(state);
    }
","['    ', 'public', ' ', 'final', ' ', 'void', ' ', 'animatePressedState', '(', 'MaterialMenuDrawable', '.', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'animateState', '(', 'state', ')', ';', '\n', '    ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuDrawable.java,draw,"    @Override public void draw(Canvas canvas) {
        if (!visible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    @Override public void draw(Canvas canvas) {
        if (!visible) return;

        final float ratio = transformationValue <= 1 ? transformationValue : 2 - transformationValue;

        if (rtlEnabled) {
            canvas.save();
            canvas.scale(-1, 1, 0, 0);
            canvas.translate(-getIntrinsicWidth(), 0);
        }

        drawTopLine(canvas, ratio);
        drawMiddleLine(canvas, ratio);
        drawBottomLine(canvas, ratio);

        if (rtlEnabled) {
            canvas.restore();
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'visible', ')', ' ', 'return', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'ratio', ' ', '=', ' ', 'transformationValue', ' ', '<', '=', ' ', '1', ' ', '?', ' ', 'transformationValue', ' ', ':', ' ', '2', ' ', '-', ' ', 'transformationValue', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'save', '(', ')', ';', '\n', '            ', 'canvas', '.', 'scale', '(', '-', '1', ',', ' ', '1', ',', ' ', '0', ',', ' ', '0', ')', ';', '\n', '            ', 'canvas', '.', 'translate', '(', '-', 'getIntrinsicWidth', '(', ')', ',', ' ', '0', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawTopLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawMiddleLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '        ', 'drawBottomLine', '(', 'canvas', ',', ' ', 'ratio', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rtlEnabled', ')', ' ', '{', '\n', '            ', 'canvas', '.', 'restore', '(', ')', ';', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuDrawable.java,animateIconState,"    public void animateIconState(IconState state) {
        synchronized (lock) {
            if (transformationRunning) {",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    public void animateIconState(IconState state) {
        synchronized (lock) {
            if (transformationRunning) {
","['    ', 'public', ' ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'synchronized', ' ', '(', 'lock', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'transformationRunning', ')', ' ', '{', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuDrawable.java,initAnimations,"    private void initAnimations(int transformDuration) {
        transformation = ObjectAnimator.ofFloat(this, transformationProperty, 0);
        transformation.setInterpolator(new DecelerateInterpolator(3));
        transformation.setDuration(transformDuration);
        transformation.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    private void initAnimations(int transformDuration) {
        transformation = ObjectAnimator.ofFloat(this, transformationProperty, 0);
        transformation.setInterpolator(new DecelerateInterpolator(3));
        transformation.setDuration(transformDuration);
        transformation.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
","['    ', 'private', ' ', 'void', ' ', 'initAnimations', '(', 'int', ' ', 'transformDuration', ')', ' ', '{', '\n', '        ', 'transformation', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'transformationProperty', ',', ' ', '0', ')', ';', '\n', '        ', 'transformation', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', '3', ')', ')', ';', '\n', '        ', 'transformation', '.', 'setDuration', '(', 'transformDuration', ')', ';', '\n', '        ', 'transformation', '.', 'addListener', '(', 'new', ' ', 'AnimatorListenerAdapter', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuDrawable.java,start,"    @Override public void start() {
        if (transformationRunning) return;

        if (animatingIconState != null && animatingIconState != currentIconState) {
            transformationRunning = true;

            final boolean direction = resolveTransformation();
            transformation.setFloatValues(
                direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
                direction ? TRANSFORMATION_MID : TRANSFORMATION_END
            );
            transformation.start();
        }

        invalidateSelf();
    }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    @Override public void start() {
        if (transformationRunning) return;

        if (animatingIconState != null && animatingIconState != currentIconState) {
            transformationRunning = true;

            final boolean direction = resolveTransformation();
            transformation.setFloatValues(
                direction ? TRANSFORMATION_START : TRANSFORMATION_MID,
                direction ? TRANSFORMATION_MID : TRANSFORMATION_END
            );
            transformation.start();
        }

        invalidateSelf();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'start', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'transformationRunning', ')', ' ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'animatingIconState', ' ', '!', '=', ' ', 'currentIconState', ')', ' ', '{', '\n', '            ', 'transformationRunning', ' ', '=', ' ', 'true', ';', '\n', '\n', '            ', 'final', ' ', 'boolean', ' ', 'direction', ' ', '=', ' ', 'resolveTransformation', '(', ')', ';', '\n', '            ', 'transformation', '.', 'setFloatValues', '(', '\n', '                ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_START', ' ', ':', ' ', 'TRANSFORMATION_MID', ',', '\n', '                ', 'direction', ' ', '?', ' ', 'TRANSFORMATION_MID', ' ', ':', ' ', 'TRANSFORMATION_END', '\n', '            ', ')', ';', '\n', '            ', 'transformation', '.', 'start', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'invalidateSelf', '(', ')', ';', '\n', '    ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuDrawable.java,newDrawable,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"        public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }
","['        ', 'public', ' ', 'Drawable', ' ', 'newDrawable', '(', ')', ' ', '{', '\n', '            ', 'MaterialMenuDrawable', ' ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', '\n', '                ', 'circlePaint', '.', 'getColor', '(', ')', ',', ' ', 'stroke', ',', ' ', 'transformation', '.', 'getDuration', '(', ')', ',', '\n', '                ', 'width', ',', ' ', 'height', ',', ' ', 'iconWidth', ',', ' ', 'circleRadius', ',', ' ', 'strokeWidth', ',', ' ', 'dip1', '\n', '            ', ')', ';', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '?', ' ', 'animatingIconState', ' ', ':', ' ', 'currentIconState', ')', ';', '\n', '            ', 'drawable', '.', 'setVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '            ', 'return', ' ', 'drawable', ';', '\n', '        ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration);

            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration);

            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'boolean', ' ', 'visible', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_visible', ',', ' ', 'DEFAULT_VISIBLE', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'scale', ',', ' ', 'transformDuration', ')', ';', '\n', '\n', '            ', 'drawable', '.', 'setVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuView.java,animateState,"    public void animateState(IconState state) {
        currentState = state;
        drawable.animateIconState(state);
    }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    public void animateState(IconState state) {
        currentState = state;
        drawable.animateIconState(state);
    }
","['    ', 'public', ' ', 'void', ' ', 'animateState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'drawable', '.', 'animateIconState', '(', 'state', ')', ';', '\n', '    ', '}', '\n']"
master,2d827505aea665ea9573f716c28a0dfd46a8ba9f,MaterialMenuView.java,animatePressedState,"    public void animatePressedState(IconState state) {
        animateState(state);
    }",https://www.github.com/balysv/material-menu/commit/2d827505aea665ea9573f716c28a0dfd46a8ba9f,"    public void animatePressedState(IconState state) {
        animateState(state);
    }
","['    ', 'public', ' ', 'void', ' ', 'animatePressedState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'animateState', '(', 'state', ')', ';', '\n', '    ', '}', '\n']"
master,7c50c924f921f12fe8d918688fa7063ef0ba2a36,MaterialMenuView.java,onSaveInstanceState,"    public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        savedState.visible = ((drawable != null) ? drawable.isDrawableVisible() : false);
        return savedState;
    }",https://www.github.com/balysv/material-menu/commit/7c50c924f921f12fe8d918688fa7063ef0ba2a36,"    public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        savedState.visible = ((drawable != null) ? drawable.isDrawableVisible() : false);
        return savedState;
    }
","['    ', 'public', ' ', 'Parcelable', ' ', 'onSaveInstanceState', '(', ')', ' ', '{', '\n', '        ', 'Parcelable', ' ', 'superState', ' ', '=', ' ', 'super', '.', 'onSaveInstanceState', '(', ')', ';', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', 'new', ' ', 'SavedState', '(', 'superState', ')', ';', '\n', '        ', 'savedState', '.', 'state', ' ', '=', ' ', 'currentState', ';', '\n', '        ', 'savedState', '.', 'visible', ' ', '=', ' ', '(', '(', 'drawable', ' ', '!', '=', ' ', 'null', ')', ' ', '?', ' ', 'drawable', '.', 'isDrawableVisible', '(', ')', ' ', ':', ' ', 'false', ')', ';', '\n', '        ', 'return', ' ', 'savedState', ';', '\n', '    ', '}', '\n']"
master,c0c91998f660247c4a0b9670a6322d8a28d83627,MaterialMenuView.java,onSaveInstanceState,"    public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        savedState.visible = drawable != null && drawable.isDrawableVisible();
        return savedState;
    }",https://www.github.com/balysv/material-menu/commit/c0c91998f660247c4a0b9670a6322d8a28d83627,"    public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        savedState.visible = drawable != null && drawable.isDrawableVisible();
        return savedState;
    }
","['    ', 'public', ' ', 'Parcelable', ' ', 'onSaveInstanceState', '(', ')', ' ', '{', '\n', '        ', 'Parcelable', ' ', 'superState', ' ', '=', ' ', 'super', '.', 'onSaveInstanceState', '(', ')', ';', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', 'new', ' ', 'SavedState', '(', 'superState', ')', ';', '\n', '        ', 'savedState', '.', 'state', ' ', '=', ' ', 'currentState', ';', '\n', '        ', 'savedState', '.', 'visible', ' ', '=', ' ', 'drawable', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'drawable', '.', 'isDrawableVisible', '(', ')', ';', '\n', '        ', 'return', ' ', 'savedState', ';', '\n', '    ', '}', '\n']"
master,49effb85318cfd83c067c3a16aed75c29aad166c,MaterialMenuView.java,init,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);
            int state = attr.getInt(R.styleable.MaterialMenuView_mm_iconState, 0);

            switch (state) {
                case 0:
                    currentState = IconState.BURGER;
                    break;
                case 1:
                    currentState = IconState.ARROW;
                    break;
                case 2:
                    currentState = IconState.X;
                    break;
                case 3:
                    currentState = IconState.CHECK;
                    break;
            }

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration);

            drawable.setIconState(currentState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }",https://www.github.com/balysv/material-menu/commit/49effb85318cfd83c067c3a16aed75c29aad166c,"    private void init(Context context, AttributeSet attributeSet) {
        TypedArray attr = getTypedArray(context, attributeSet, com.balysv.materialmenu.R.styleable.MaterialMenuView);

        try {
            int color = attr.getColor(R.styleable.MaterialMenuView_mm_color, DEFAULT_COLOR);
            boolean visible = attr.getBoolean(R.styleable.MaterialMenuView_mm_visible, DEFAULT_VISIBLE);
            int scale = attr.getInteger(R.styleable.MaterialMenuView_mm_scale, DEFAULT_SCALE);
            int transformDuration = attr.getInteger(R.styleable.MaterialMenuView_mm_transformDuration, DEFAULT_TRANSFORM_DURATION);
            Stroke stroke = Stroke.valueOf(attr.getInteger(R.styleable.MaterialMenuView_mm_strokeWidth, 0));
            boolean rtlEnabled = attr.getBoolean(R.styleable.MaterialMenuView_mm_rtlEnabled, false);
            int state = attr.getInt(R.styleable.MaterialMenuView_mm_iconState, 0);

            switch (state) {
                case 0:
                    currentState = IconState.BURGER;
                    break;
                case 1:
                    currentState = IconState.ARROW;
                    break;
                case 2:
                    currentState = IconState.X;
                    break;
                case 3:
                    currentState = IconState.CHECK;
                    break;
            }

            drawable = new MaterialMenuDrawable(context, color, stroke, scale, transformDuration);

            drawable.setIconState(currentState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
        } finally {
            attr.recycle();
        }

        drawable.setCallback(this);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', 'Context', ' ', 'context', ',', ' ', 'AttributeSet', ' ', 'attributeSet', ')', ' ', '{', '\n', '        ', 'TypedArray', ' ', 'attr', ' ', '=', ' ', 'getTypedArray', '(', 'context', ',', ' ', 'attributeSet', ',', ' ', 'com', '.', 'balysv', '.', 'materialmenu', '.', 'R', '.', 'styleable', '.', 'MaterialMenuView', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'int', ' ', 'color', ' ', '=', ' ', 'attr', '.', 'getColor', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_color', ',', ' ', 'DEFAULT_COLOR', ')', ';', '\n', '            ', 'boolean', ' ', 'visible', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_visible', ',', ' ', 'DEFAULT_VISIBLE', ')', ';', '\n', '            ', 'int', ' ', 'scale', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_scale', ',', ' ', 'DEFAULT_SCALE', ')', ';', '\n', '            ', 'int', ' ', 'transformDuration', ' ', '=', ' ', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_transformDuration', ',', ' ', 'DEFAULT_TRANSFORM_DURATION', ')', ';', '\n', '            ', 'Stroke', ' ', 'stroke', ' ', '=', ' ', 'Stroke', '.', 'valueOf', '(', 'attr', '.', 'getInteger', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_strokeWidth', ',', ' ', '0', ')', ')', ';', '\n', '            ', 'boolean', ' ', 'rtlEnabled', ' ', '=', ' ', 'attr', '.', 'getBoolean', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_rtlEnabled', ',', ' ', 'false', ')', ';', '\n', '            ', 'int', ' ', 'state', ' ', '=', ' ', 'attr', '.', 'getInt', '(', 'R', '.', 'styleable', '.', 'MaterialMenuView_mm_iconState', ',', ' ', '0', ')', ';', '\n', '\n', '            ', 'switch', ' ', '(', 'state', ')', ' ', '{', '\n', '                ', 'case', ' ', '0', ':', '\n', '                    ', 'currentState', ' ', '=', ' ', 'IconState', '.', 'BURGER', ';', '\n', '                    ', 'break', ';', '\n', '                ', 'case', ' ', '1', ':', '\n', '                    ', 'currentState', ' ', '=', ' ', 'IconState', '.', 'ARROW', ';', '\n', '                    ', 'break', ';', '\n', '                ', 'case', ' ', '2', ':', '\n', '                    ', 'currentState', ' ', '=', ' ', 'IconState', '.', 'X', ';', '\n', '                    ', 'break', ';', '\n', '                ', 'case', ' ', '3', ':', '\n', '                    ', 'currentState', ' ', '=', ' ', 'IconState', '.', 'CHECK', ';', '\n', '                    ', 'break', ';', '\n', '            ', '}', '\n', '\n', '            ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', 'context', ',', ' ', 'color', ',', ' ', 'stroke', ',', ' ', 'scale', ',', ' ', 'transformDuration', ')', ';', '\n', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'currentState', ')', ';', '\n', '            ', 'drawable', '.', 'setVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '        ', '}', ' ', 'finally', ' ', '{', '\n', '            ', 'attr', '.', 'recycle', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'drawable', '.', 'setCallback', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,onClick,"            @Override public void onClick(View v) {
                // random state
                actionBarMenuState = generateState(actionBarMenuState);
                getMaterialMenu(toolbar).animateIconState(intToState(actionBarMenuState));
            }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"            @Override public void onClick(View v) {
                
                actionBarMenuState = generateState(actionBarMenuState);
                getMaterialMenu(toolbar).animateIconState(intToState(actionBarMenuState));
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', '\n', '                ', 'actionBarMenuState', ' ', '=', ' ', 'generateState', '(', 'actionBarMenuState', ')', ';', '\n', '                ', 'getMaterialMenu', '(', 'toolbar', ')', '.', 'animateIconState', '(', 'intToState', '(', 'actionBarMenuState', ')', ')', ';', '\n', '            ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,run,"            @Override public void run() {
                drawerLayout.openDrawer(GravityCompat.START);
            }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"            @Override public void run() {
                drawerLayout.openDrawer(GravityCompat.START);
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'drawerLayout', '.', 'openDrawer', '(', 'GravityCompat', '.', 'START', ')', ';', '\n', '            ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,onDrawerSlide,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                getMaterialMenu(toolbar).setTransformationOffset(
                    MaterialMenuDrawable.AnimationState.BURGER_ARROW,",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                getMaterialMenu(toolbar).setTransformationOffset(
                    MaterialMenuDrawable.AnimationState.BURGER_ARROW,
","['            ', 'public', ' ', 'void', ' ', 'onDrawerSlide', '(', 'View', ' ', 'drawerView', ',', ' ', 'float', ' ', 'slideOffset', ')', ' ', '{', '\n', '                ', 'getMaterialMenu', '(', 'toolbar', ')', '.', 'setTransformationOffset', '(', '\n', '                    ', 'MaterialMenuDrawable', '.', 'AnimationState', '.', 'BURGER_ARROW', ',', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,onPostCreate,"    @Override protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        refreshDrawerState();
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        refreshDrawerState();
    }
","['    ', '@Override', ' ', 'protected', ' ', 'void', ' ', 'onPostCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onPostCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'refreshDrawerState', '(', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,refreshDrawerState,"    private void refreshDrawerState() {
        this.direction = drawerLayout.isDrawerOpen(GravityCompat.START);
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    private void refreshDrawerState() {
        this.direction = drawerLayout.isDrawerOpen(GravityCompat.START);
    }
","['    ', 'private', ' ', 'void', ' ', 'refreshDrawerState', '(', ')', ' ', '{', '\n', '        ', 'this', '.', 'direction', ' ', '=', ' ', 'drawerLayout', '.', 'isDrawerOpen', '(', 'GravityCompat', '.', 'START', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,generateState,"    private static int generateState(int previous) {
        int generated = new Random().nextInt(4);
        return generated != previous ? generated : generateState(previous);
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    private static int generateState(int previous) {
        int generated = new Random().nextInt(4);
        return generated != previous ? generated : generateState(previous);
    }
","['    ', 'private', ' ', 'static', ' ', 'int', ' ', 'generateState', '(', 'int', ' ', 'previous', ')', ' ', '{', '\n', '        ', 'int', ' ', 'generated', ' ', '=', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '4', ')', ';', '\n', '        ', 'return', ' ', 'generated', ' ', '!', '=', ' ', 'previous', ' ', '?', ' ', 'generated', ' ', ':', ' ', 'generateState', '(', 'previous', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,DemoActivity.java,intToState,"    private static MaterialMenuDrawable.IconState intToState(int state) {
        switch (state) {
            case 0:
                return MaterialMenuDrawable.IconState.BURGER;
            case 1:
                return MaterialMenuDrawable.IconState.ARROW;
            case 2:
                return MaterialMenuDrawable.IconState.X;
            case 3:
                return MaterialMenuDrawable.IconState.CHECK;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    private static MaterialMenuDrawable.IconState intToState(int state) {
        switch (state) {
            case 0:
                return MaterialMenuDrawable.IconState.BURGER;
            case 1:
                return MaterialMenuDrawable.IconState.ARROW;
            case 2:
                return MaterialMenuDrawable.IconState.X;
            case 3:
                return MaterialMenuDrawable.IconState.CHECK;
        }
        throw new IllegalArgumentException(""Must be a number [0,3)"");
    }
","['    ', 'private', ' ', 'static', ' ', 'MaterialMenuDrawable', '.', 'IconState', ' ', 'intToState', '(', 'int', ' ', 'state', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'state', ')', ' ', '{', '\n', '            ', 'case', ' ', '0', ':', '\n', '                ', 'return', ' ', 'MaterialMenuDrawable', '.', 'IconState', '.', 'BURGER', ';', '\n', '            ', 'case', ' ', '1', ':', '\n', '                ', 'return', ' ', 'MaterialMenuDrawable', '.', 'IconState', '.', 'ARROW', ';', '\n', '            ', 'case', ' ', '2', ':', '\n', '                ', 'return', ' ', 'MaterialMenuDrawable', '.', 'IconState', '.', 'X', ';', '\n', '            ', 'case', ' ', '3', ':', '\n', '                ', 'return', ' ', 'MaterialMenuDrawable', '.', 'IconState', '.', 'CHECK', ';', '\n', '        ', '}', '\n', '        ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Must be a number [0,3)', '""', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setIconState,"    void setIconState(IconState state);

    /**
     * Return current icon state
     *
     * @return icon state
     */
    IconState getIconState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    void animateIconState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setIconState(IconState state);

    
    IconState getIconState();

    
    void animateIconState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setIconState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'getIconState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,getIconState,"    IconState getIconState();

    /**
     * Animate icon to given state.
     *
     * @param state new icon state
     */
    void animateIconState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    IconState getIconState();

    
    void animateIconState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'IconState', ' ', 'getIconState', '(', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,animateIconState,"    void animateIconState(IconState state);

    /**
     * Set color of icon
     *
     * @param color new icon color
     */
    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void animateIconState(IconState state);

    
    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setColor,"    void setColor(int color);

    /**
     * Set visibility of icon
     *
     * @param visible new value for visibility
     */
    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setColor(int color);

    
    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setColor', '(', 'int', ' ', 'color', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setVisible,"    void setVisible(boolean visible);

    /**
     * Set duration of transformation animations
     *
     * @param duration new animation duration
     */
    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setVisible(boolean visible);

    
    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setVisible', '(', 'boolean', ' ', 'visible', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setTransformationDuration,"    void setTransformationDuration(int duration);

    /**
     * Set interpolator for transformation animations
     *
     * @param interpolator new interpolator
     */
    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setTransformationDuration(int duration);

    
    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setTransformationDuration', '(', 'int', ' ', 'duration', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setInterpolator,"    void setInterpolator(Interpolator interpolator);

    /**
     * Set listener for {@code MaterialMenuDrawable} animation events
     *
     * @param listener new listener or null to remove any listener
     */
    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setInterpolator(Interpolator interpolator);

    
    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setInterpolator', '(', 'Interpolator', ' ', 'interpolator', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setAnimationListener,"    void setAnimationListener(Animator.AnimatorListener listener);

    /**
     * Enable RTL layout. Flips all icons horizontally
     *
     * @param rtlEnabled true to enable RTL layout
     */
    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setAnimationListener(Animator.AnimatorListener listener);

    
    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setAnimationListener', '(', 'Animator', '.', 'AnimatorListener', ' ', 'listener', ')', ';', '\n', '\n', '    ', '\n', '    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setRTLEnabled,"    void setRTLEnabled(boolean rtlEnabled);

    /**
     * Manually set a transformation value for an {@link com.balysv.materialmenu.MaterialMenuDrawable.AnimationState}
     *
     * @param animationState state to set value in
     * @param value          between {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_START} and
     *                       {@link com.balysv.materialmenu.MaterialMenuDrawable#TRANSFORMATION_END}.
     */
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    void setRTLEnabled(boolean rtlEnabled);

    
    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'void', ' ', 'setRTLEnabled', '(', 'boolean', ' ', 'rtlEnabled', ')', ';', '\n', '\n', '    ', '\n', '    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenu.java,setTransformationOffset,"    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    IconState setTransformationOffset(MaterialMenuDrawable.AnimationState animationState, float value);
}
","['    ', 'IconState', ' ', 'setTransformationOffset', '(', 'MaterialMenuDrawable', '.', 'AnimationState', ' ', 'animationState', ',', ' ', 'float', ' ', 'value', ')', ';', '\n', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuDrawable.java,mutate,"    @Override public Drawable mutate() {
        materialMenuState = new MaterialMenuState();
        return this;
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override public Drawable mutate() {
        materialMenuState = new MaterialMenuState();
        return this;
    }
","['    ', '@Override', ' ', 'public', ' ', 'Drawable', ' ', 'mutate', '(', ')', ' ', '{', '\n', '        ', 'materialMenuState', ' ', '=', ' ', 'new', ' ', 'MaterialMenuState', '(', ')', ';', '\n', '        ', 'return', ' ', 'this', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuDrawable.java,newDrawable,"        @Override public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"        @Override public Drawable newDrawable() {
            MaterialMenuDrawable drawable = new MaterialMenuDrawable(
                circlePaint.getColor(), stroke, transformation.getDuration(),
                width, height, iconWidth, circleRadius, strokeWidth, dip1
            );
            drawable.setIconState(animatingIconState != null ? animatingIconState : currentIconState);
            drawable.setVisible(visible);
            drawable.setRTLEnabled(rtlEnabled);
            return drawable;
        }
","['        ', '@Override', ' ', 'public', ' ', 'Drawable', ' ', 'newDrawable', '(', ')', ' ', '{', '\n', '            ', 'MaterialMenuDrawable', ' ', 'drawable', ' ', '=', ' ', 'new', ' ', 'MaterialMenuDrawable', '(', '\n', '                ', 'circlePaint', '.', 'getColor', '(', ')', ',', ' ', 'stroke', ',', ' ', 'transformation', '.', 'getDuration', '(', ')', ',', '\n', '                ', 'width', ',', ' ', 'height', ',', ' ', 'iconWidth', ',', ' ', 'circleRadius', ',', ' ', 'strokeWidth', ',', ' ', 'dip1', '\n', '            ', ')', ';', '\n', '            ', 'drawable', '.', 'setIconState', '(', 'animatingIconState', ' ', '!', '=', ' ', 'null', ' ', '?', ' ', 'animatingIconState', ' ', ':', ' ', 'currentIconState', ')', ';', '\n', '            ', 'drawable', '.', 'setVisible', '(', 'visible', ')', ';', '\n', '            ', 'drawable', '.', 'setRTLEnabled', '(', 'rtlEnabled', ')', ';', '\n', '            ', 'return', ' ', 'drawable', ';', '\n', '        ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,verifyDrawable,"    @Override protected boolean verifyDrawable(Drawable who) {
        return who == drawable || super.verifyDrawable(who);
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override protected boolean verifyDrawable(Drawable who) {
        return who == drawable || super.verifyDrawable(who);
    }
","['    ', '@Override', ' ', 'protected', ' ', 'boolean', ' ', 'verifyDrawable', '(', 'Drawable', ' ', 'who', ')', ' ', '{', '\n', '        ', 'return', ' ', 'who', ' ', '=', '=', ' ', 'drawable', ' ', '|', '|', ' ', 'super', '.', 'verifyDrawable', '(', 'who', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,animateIconState,"    @Override public void animateIconState(IconState state) {
        currentState = state;
        drawable.animateIconState(state);
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override public void animateIconState(IconState state) {
        currentState = state;
        drawable.animateIconState(state);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'animateIconState', '(', 'IconState', ' ', 'state', ')', ' ', '{', '\n', '        ', 'currentState', ' ', '=', ' ', 'state', ';', '\n', '        ', 'drawable', '.', 'animateIconState', '(', 'state', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,onMeasure,"    @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        int paddingX = getPaddingLeft() + getPaddingRight();
        int paddingY = getPaddingTop() + getPaddingBottom();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth() + paddingX, MeasureSpec.EXACTLY);",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        int paddingX = getPaddingLeft() + getPaddingRight();
        int paddingY = getPaddingTop() + getPaddingBottom();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            widthMeasureSpec = MeasureSpec.makeMeasureSpec(drawable.getIntrinsicWidth() + paddingX, MeasureSpec.EXACTLY);
","['    ', '@Override', ' ', 'protected', ' ', 'void', ' ', 'onMeasure', '(', 'int', ' ', 'widthMeasureSpec', ',', ' ', 'int', ' ', 'heightMeasureSpec', ')', ' ', '{', '\n', '        ', 'int', ' ', 'paddingX', ' ', '=', ' ', 'getPaddingLeft', '(', ')', ' ', '+', ' ', 'getPaddingRight', '(', ')', ';', '\n', '        ', 'int', ' ', 'paddingY', ' ', '=', ' ', 'getPaddingTop', '(', ')', ' ', '+', ' ', 'getPaddingBottom', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', ' ', '{', '\n', '            ', 'widthMeasureSpec', ' ', '=', ' ', 'MeasureSpec', '.', 'makeMeasureSpec', '(', 'drawable', '.', 'getIntrinsicWidth', '(', ')', ' ', '+', ' ', 'paddingX', ',', ' ', 'MeasureSpec', '.', 'EXACTLY', ')', ';', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,onSizeChanged,"    @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        adjustDrawablePadding();
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        adjustDrawablePadding();
    }
","['    ', '@Override', ' ', 'protected', ' ', 'void', ' ', 'onSizeChanged', '(', 'int', ' ', 'w', ',', ' ', 'int', ' ', 'h', ',', ' ', 'int', ' ', 'oldw', ',', ' ', 'int', ' ', 'oldh', ')', ' ', '{', '\n', '        ', 'super', '.', 'onSizeChanged', '(', 'w', ',', ' ', 'h', ',', ' ', 'oldw', ',', ' ', 'oldh', ')', ';', '\n', '        ', 'adjustDrawablePadding', '(', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,onSaveInstanceState,"    @Override public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        savedState.visible = drawable != null && drawable.isDrawableVisible();
        return savedState;
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override public Parcelable onSaveInstanceState() {
        Parcelable superState = super.onSaveInstanceState();
        SavedState savedState = new SavedState(superState);
        savedState.state = currentState;
        savedState.visible = drawable != null && drawable.isDrawableVisible();
        return savedState;
    }
","['    ', '@Override', ' ', 'public', ' ', 'Parcelable', ' ', 'onSaveInstanceState', '(', ')', ' ', '{', '\n', '        ', 'Parcelable', ' ', 'superState', ' ', '=', ' ', 'super', '.', 'onSaveInstanceState', '(', ')', ';', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', 'new', ' ', 'SavedState', '(', 'superState', ')', ';', '\n', '        ', 'savedState', '.', 'state', ' ', '=', ' ', 'currentState', ';', '\n', '        ', 'savedState', '.', 'visible', ' ', '=', ' ', 'drawable', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'drawable', '.', 'isDrawableVisible', '(', ')', ';', '\n', '        ', 'return', ' ', 'savedState', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,onRestoreInstanceState,"    @Override public void onRestoreInstanceState(Parcelable state) {
        SavedState savedState = (SavedState) state;
        super.onRestoreInstanceState(savedState.getSuperState());
        setIconState(savedState.state);
        setVisible(savedState.visible);
    }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"    @Override public void onRestoreInstanceState(Parcelable state) {
        SavedState savedState = (SavedState) state;
        super.onRestoreInstanceState(savedState.getSuperState());
        setIconState(savedState.state);
        setVisible(savedState.visible);
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onRestoreInstanceState', '(', 'Parcelable', ' ', 'state', ')', ' ', '{', '\n', '        ', 'SavedState', ' ', 'savedState', ' ', '=', ' ', '(', 'SavedState', ')', ' ', 'state', ';', '\n', '        ', 'super', '.', 'onRestoreInstanceState', '(', 'savedState', '.', 'getSuperState', '(', ')', ')', ';', '\n', '        ', 'setIconState', '(', 'savedState', '.', 'state', ')', ';', '\n', '        ', 'setVisible', '(', 'savedState', '.', 'visible', ')', ';', '\n', '    ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,writeToParcel,"        @Override public void writeToParcel(Parcel out, int flags) {
            super.writeToParcel(out, flags);
            out.writeInt(state.ordinal());
            out.writeByte((byte) (visible ? 1 : 0));
        }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"        @Override public void writeToParcel(Parcel out, int flags) {
            super.writeToParcel(out, flags);
            out.writeInt(state.ordinal());
            out.writeByte((byte) (visible ? 1 : 0));
        }
","['        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'writeToParcel', '(', 'Parcel', ' ', 'out', ',', ' ', 'int', ' ', 'flags', ')', ' ', '{', '\n', '            ', 'super', '.', 'writeToParcel', '(', 'out', ',', ' ', 'flags', ')', ';', '\n', '            ', 'out', '.', 'writeInt', '(', 'state', '.', 'ordinal', '(', ')', ')', ';', '\n', '            ', 'out', '.', 'writeByte', '(', '(', 'byte', ')', ' ', '(', 'visible', ' ', '?', ' ', '1', ' ', ':', ' ', '0', ')', ')', ';', '\n', '        ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,createFromParcel,"            @Override public SavedState createFromParcel(Parcel in) {
                return new SavedState(in);
            }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"            @Override public SavedState createFromParcel(Parcel in) {
                return new SavedState(in);
            }
","['            ', '@Override', ' ', 'public', ' ', 'SavedState', ' ', 'createFromParcel', '(', 'Parcel', ' ', 'in', ')', ' ', '{', '\n', '                ', 'return', ' ', 'new', ' ', 'SavedState', '(', 'in', ')', ';', '\n', '            ', '}', '\n']"
master,8845a68efc019d2fff883aba61f77f7c616a2d9e,MaterialMenuView.java,newArray,"            @Override public SavedState[] newArray(int size) {
                return new SavedState[size];
            }",https://www.github.com/balysv/material-menu/commit/8845a68efc019d2fff883aba61f77f7c616a2d9e,"            @Override public SavedState[] newArray(int size) {
                return new SavedState[size];
            }
","['            ', '@Override', ' ', 'public', ' ', 'SavedState', '[', ']', ' ', 'newArray', '(', 'int', ' ', 'size', ')', ' ', '{', '\n', '                ', 'return', ' ', 'new', ' ', 'SavedState', '[', 'size', ']', ';', '\n', '            ', '}', '\n']"
