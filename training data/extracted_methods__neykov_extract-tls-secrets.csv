Branch Name,Commit Hash,File Name,Method Name,Method Code,Commit Link,Method Code No Comments,Tokens
master,f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,Main.java,premain,"	public static void premain(String agentArgs, Instrumentation inst) {
		String secretsFile;
		if (agentArgs != null && !agentArgs.isEmpty()) {
			secretsFile = agentArgs;
		} else {
			secretsFile = DEFAULT_SECRETS_FILE;
		}
		MasterSecretCallback.setSecretsFileName(secretsFile);
		inst.addTransformer(new Transformer());
	}",https://www.github.com/neykov/extract-tls-secrets/commit/f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,"	public static void premain(String agentArgs, Instrumentation inst) {
		String secretsFile;
		if (agentArgs != null && !agentArgs.isEmpty()) {
			secretsFile = agentArgs;
		} else {
			secretsFile = DEFAULT_SECRETS_FILE;
		}
		MasterSecretCallback.setSecretsFileName(secretsFile);
		inst.addTransformer(new Transformer());
	}
","['\t', 'public', ' ', 'static', ' ', 'void', ' ', 'premain', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '\t\t', 'String', ' ', 'secretsFile', ';', '\n', '\t\t', 'if', ' ', '(', 'agentArgs', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', '!', 'agentArgs', '.', 'isEmpty', '(', ')', ')', ' ', '{', '\n', '\t\t\t', 'secretsFile', ' ', '=', ' ', 'agentArgs', ';', '\n', '\t\t', '}', ' ', 'else', ' ', '{', '\n', '\t\t\t', 'secretsFile', ' ', '=', ' ', 'DEFAULT_SECRETS_FILE', ';', '\n', '\t\t', '}', '\n', '\t\t', 'MasterSecretCallback', '.', 'setSecretsFileName', '(', 'secretsFile', ')', ';', '\n', '\t\t', 'inst', '.', 'addTransformer', '(', 'new', ' ', 'Transformer', '(', ')', ')', ';', '\n', '\t', '}', '\n', '<END>']"
master,f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,MasterSecretCallback.java,onMasterSecret,"	public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
		try {
			String sessionKey = bytesToHex(sslSession.getId());",https://www.github.com/neykov/extract-tls-secrets/commit/f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,"	public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
		try {
			String sessionKey = bytesToHex(sslSession.getId());
","['\t', 'public', ' ', 'static', ' ', 'void', ' ', 'onMasterSecret', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '\t\t', 'try', ' ', '{', '\n', '\t\t\t', 'String', ' ', 'sessionKey', ' ', '=', ' ', 'bytesToHex', '(', 'sslSession', '.', 'getId', '(', ')', ')', ';', '\n', '<END>']"
master,f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,MasterSecretCallback.java,bytesToHex,"	public static String bytesToHex(byte[] bytes) {
	    char[] hexChars = new char[bytes.length * 2];
	    for ( int j = 0; j < bytes.length; j++ ) {
	        int v = bytes[j] & 0xFF;
	        hexChars[j * 2] = hexArray[v >>> 4];
	        hexChars[j * 2 + 1] = hexArray[v & 0x0F];
	    }
	    return new String(hexChars);
	}",https://www.github.com/neykov/extract-tls-secrets/commit/f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,"	public static String bytesToHex(byte[] bytes) {
	    char[] hexChars = new char[bytes.length * 2];
	    for ( int j = 0; j < bytes.length; j++ ) {
	        int v = bytes[j] & 0xFF;
	        hexChars[j * 2] = hexArray[v >>> 4];
	        hexChars[j * 2 + 1] = hexArray[v & 0x0F];
	    }
	    return new String(hexChars);
	}
","['\t', 'public', ' ', 'static', ' ', 'String', ' ', 'bytesToHex', '(', 'byte', '[', ']', ' ', 'bytes', ')', ' ', '{', '\n', '\t    ', 'char', '[', ']', ' ', 'hexChars', ' ', '=', ' ', 'new', ' ', 'char', '[', 'bytes', '.', 'length', ' ', '*', ' ', '2', ']', ';', '\n', '\t    ', 'for', ' ', '(', ' ', 'int', ' ', 'j', ' ', '=', ' ', '0', ';', ' ', 'j', ' ', '<', ' ', 'bytes', '.', 'length', ';', ' ', 'j', '+', '+', ' ', ')', ' ', '{', '\n', '\t        ', 'int', ' ', 'v', ' ', '=', ' ', 'bytes', '[', 'j', ']', ' ', '&', ' ', '0xFF', ';', '\n', '\t        ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '>', '>', '>', ' ', '4', ']', ';', '\n', '\t        ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ' ', '+', ' ', '1', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '&', ' ', '0x0F', ']', ';', '\n', '\t    ', '}', '\n', '\t    ', 'return', ' ', 'new', ' ', 'String', '(', 'hexChars', ')', ';', '\n', '\t', '}', '\n', '<END>']"
master,f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,Transformer.java,transform,"	public byte[] transform(
			ClassLoader loader,
			String classPath,
			Class<?> classBeingRedefined,
			ProtectionDomain protectionDomain,
			byte[] classfileBuffer) throws IllegalClassFormatException {
		String className = classPath.replace(""/"", ""."");
		if (className.equals(""sun.security.ssl.SSLSessionImpl"") ||
				className.equals(""com.sun.net.ssl.internal.ssl.SSLSessionImpl"")) {",https://www.github.com/neykov/extract-tls-secrets/commit/f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,"	public byte[] transform(
			ClassLoader loader,
			String classPath,
			Class<?> classBeingRedefined,
			ProtectionDomain protectionDomain,
			byte[] classfileBuffer) throws IllegalClassFormatException {
		String className = classPath.replace(""/"", ""."");
		if (className.equals(""sun.security.ssl.SSLSessionImpl"") ||
				className.equals(""com.sun.net.ssl.internal.ssl.SSLSessionImpl"")) {
","['\t', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', '\n', '\t\t\t', 'ClassLoader', ' ', 'loader', ',', '\n', '\t\t\t', 'String', ' ', 'classPath', ',', '\n', '\t\t\t', 'Class', '<', '?', '>', ' ', 'classBeingRedefined', ',', '\n', '\t\t\t', 'ProtectionDomain', ' ', 'protectionDomain', ',', '\n', '\t\t\t', 'byte', '[', ']', ' ', 'classfileBuffer', ')', ' ', 'throws', ' ', 'IllegalClassFormatException', ' ', '{', '\n', '\t\t', 'String', ' ', 'className', ' ', '=', ' ', 'classPath', '.', 'replace', '(', '""', '/', '""', ',', ' ', '""', '.', '""', ')', ';', '\n', '\t\t', 'if', ' ', '(', 'className', '.', 'equals', '(', '""', 'sun.security.ssl.SSLSessionImpl', '""', ')', ' ', '|', '|', '\n', '\t\t\t\t', 'className', '.', 'equals', '(', '""', 'com.sun.net.ssl.internal.ssl.SSLSessionImpl', '""', ')', ')', ' ', '{', '\n', '<END>']"
master,f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,TestExtract.java,main,"	public static void main(String[] args) throws Exception {
		URL url = new URL(""https://google.com"");
		BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));
		StringBuffer str = new StringBuffer();
		char[] buff = new char[4098];
		int read;
		while ((read = reader.read(buff)) != -1) {
			str.append(buff, 0, read);
		}
		System.out.println(str);
	}",https://www.github.com/neykov/extract-tls-secrets/commit/f26da176ad44d90c4b4f6da2dc8d8f657e855ec8,"	public static void main(String[] args) throws Exception {
		URL url = new URL(""https://google.com"");
		BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));
		StringBuffer str = new StringBuffer();
		char[] buff = new char[4098];
		int read;
		while ((read = reader.read(buff)) != -1) {
			str.append(buff, 0, read);
		}
		System.out.println(str);
	}
","['\t', 'public', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', '[', ']', ' ', 'args', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '\t\t', 'URL', ' ', 'url', ' ', '=', ' ', 'new', ' ', 'URL', '(', '""', 'https://google.com', '""', ')', ';', '\n', '\t\t', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', '\n', '\t\t', 'StringBuffer', ' ', 'str', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '\t\t', 'char', '[', ']', ' ', 'buff', ' ', '=', ' ', 'new', ' ', 'char', '[', '4098', ']', ';', '\n', '\t\t', 'int', ' ', 'read', ';', '\n', '\t\t', 'while', ' ', '(', '(', 'read', ' ', '=', ' ', 'reader', '.', 'read', '(', 'buff', ')', ')', ' ', '!', '=', ' ', '-', '1', ')', ' ', '{', '\n', '\t\t\t', 'str', '.', 'append', '(', 'buff', ',', ' ', '0', ',', ' ', 'read', ')', ';', '\n', '\t\t', '}', '\n', '\t\t', 'System', '.', 'out', '.', 'println', '(', 'str', ')', ';', '\n', '\t', '}', '\n', '<END>']"
master,a242f08d349b08b1fa5abc4b1d96c114f89838c2,MasterSecretCallback.java,onCalculateKeys,"	public static void onCalculateKeys(SSLSession sslSession, Object randomCookie, Key masterSecret) {
		try {
			String clientRandom = bytesToHex((byte[])get(randomCookie, ""random_bytes""));",https://www.github.com/neykov/extract-tls-secrets/commit/a242f08d349b08b1fa5abc4b1d96c114f89838c2,"	public static void onCalculateKeys(SSLSession sslSession, Object randomCookie, Key masterSecret) {
		try {
			String clientRandom = bytesToHex((byte[])get(randomCookie, ""random_bytes""));
","['\t', 'public', ' ', 'static', ' ', 'void', ' ', 'onCalculateKeys', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Object', ' ', 'randomCookie', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '\t\t', 'try', ' ', '{', '\n', '\t\t\t', 'String', ' ', 'clientRandom', ' ', '=', ' ', 'bytesToHex', '(', '(', 'byte', '[', ']', ')', 'get', '(', 'randomCookie', ',', ' ', '""', 'random_bytes', '""', ')', ')', ';', '\n', '<END>']"
master,a242f08d349b08b1fa5abc4b1d96c114f89838c2,MasterSecretCallback.java,get,"	private static Object get(Object newObj, String field) throws IllegalAccessException, NoSuchFieldException {
		Field f = newObj.getClass().getDeclaredField(field);
		f.setAccessible(true);
		return f.get(newObj);
	}",https://www.github.com/neykov/extract-tls-secrets/commit/a242f08d349b08b1fa5abc4b1d96c114f89838c2,"	private static Object get(Object newObj, String field) throws IllegalAccessException, NoSuchFieldException {
		Field f = newObj.getClass().getDeclaredField(field);
		f.setAccessible(true);
		return f.get(newObj);
	}
","['\t', 'private', ' ', 'static', ' ', 'Object', ' ', 'get', '(', 'Object', ' ', 'newObj', ',', ' ', 'String', ' ', 'field', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'NoSuchFieldException', ' ', '{', '\n', '\t\t', 'Field', ' ', 'f', ' ', '=', ' ', 'newObj', '.', 'getClass', '(', ')', '.', 'getDeclaredField', '(', 'field', ')', ';', '\n', '\t\t', 'f', '.', 'setAccessible', '(', 'true', ')', ';', '\n', '\t\t', 'return', ' ', 'f', '.', 'get', '(', 'newObj', ')', ';', '\n', '\t', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AgentAttach.java,isAttachApiAvailable,"    private static boolean isAttachApiAvailable() {
        try {
            AgentAttach.class.getClassLoader().loadClass(""com.sun.tools.attach.VirtualMachine"");",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    private static boolean isAttachApiAvailable() {
        try {
            AgentAttach.class.getClassLoader().loadClass(""com.sun.tools.attach.VirtualMachine"");
","['    ', 'private', ' ', 'static', ' ', 'boolean', ' ', 'isAttachApiAvailable', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'AgentAttach', '.', 'class', '.', 'getClassLoader', '(', ')', '.', 'loadClass', '(', '""', 'com.sun.tools.attach.VirtualMachine', '""', ')', ';', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AgentMain.java,agentmain,"    public static void agentmain(String agentArgs, Instrumentation inst) {
        main(agentArgs, inst);
        reloadClasses(inst);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    public static void agentmain(String agentArgs, Instrumentation inst) {
        main(agentArgs, inst);
        reloadClasses(inst);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'agentmain', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'main', '(', 'agentArgs', ',', ' ', 'inst', ')', ';', '\n', '        ', 'reloadClasses', '(', 'inst', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AgentMain.java,reloadClass,"    private static void reloadClass(Instrumentation inst, Class<?> loadedClass)
            throws ClassNotFoundException, UnmodifiableClassException, IOException {
        byte[] classBuffer = readFully(loadedClass.getResourceAsStream(loadedClass.getSimpleName() + "".class""));
        inst.redefineClasses(new ClassDefinition(loadedClass, classBuffer));
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    private static void reloadClass(Instrumentation inst, Class<?> loadedClass)
            throws ClassNotFoundException, UnmodifiableClassException, IOException {
        byte[] classBuffer = readFully(loadedClass.getResourceAsStream(loadedClass.getSimpleName() + "".class""));
        inst.redefineClasses(new ClassDefinition(loadedClass, classBuffer));
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'reloadClass', '(', 'Instrumentation', ' ', 'inst', ',', ' ', 'Class', '<', '?', '>', ' ', 'loadedClass', ')', '\n', '            ', 'throws', ' ', 'ClassNotFoundException', ',', ' ', 'UnmodifiableClassException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'byte', '[', ']', ' ', 'classBuffer', ' ', '=', ' ', 'readFully', '(', 'loadedClass', '.', 'getResourceAsStream', '(', 'loadedClass', '.', 'getSimpleName', '(', ')', ' ', '+', ' ', '""', '.class', '""', ')', ')', ';', '\n', '        ', 'inst', '.', 'redefineClasses', '(', 'new', ' ', 'ClassDefinition', '(', 'loadedClass', ',', ' ', 'classBuffer', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AgentMain.java,readFully,"    private static byte[] readFully(InputStream in) throws IOException {
        ByteArrayOutputStream buffer = new ByteArrayOutputStream();

        int read;
        byte[] buff = new byte[4096];
        while ((read = in.read(buff, 0, buff.length)) != -1) {
            buffer.write(buff, 0, read);
        }
        return buffer.toByteArray();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    private static byte[] readFully(InputStream in) throws IOException {
        ByteArrayOutputStream buffer = new ByteArrayOutputStream();

        int read;
        byte[] buff = new byte[4096];
        while ((read = in.read(buff, 0, buff.length)) != -1) {
            buffer.write(buff, 0, read);
        }
        return buffer.toByteArray();
    }
","['    ', 'private', ' ', 'static', ' ', 'byte', '[', ']', ' ', 'readFully', '(', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'ByteArrayOutputStream', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'ByteArrayOutputStream', '(', ')', ';', '\n', '\n', '        ', 'int', ' ', 'read', ';', '\n', '        ', 'byte', '[', ']', ' ', 'buff', ' ', '=', ' ', 'new', ' ', 'byte', '[', '4096', ']', ';', '\n', '        ', 'while', ' ', '(', '(', 'read', ' ', '=', ' ', 'in', '.', 'read', '(', 'buff', ',', ' ', '0', ',', ' ', 'buff', '.', 'length', ')', ')', ' ', '!', '=', ' ', '-', '1', ')', ' ', '{', '\n', '            ', 'buffer', '.', 'write', '(', 'buff', ',', ' ', '0', ',', ' ', 'read', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'buffer', '.', 'toByteArray', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AgentMain.java,main,"    private static void main(String agentArgs, Instrumentation inst) {
        String secretsFile;
        if (agentArgs != null && !agentArgs.isEmpty()) {
            secretsFile = agentArgs;
        } else {
            secretsFile = DEFAULT_SECRETS_FILE;
        }
        MasterSecretCallback.setSecretsFileName(secretsFile);
        inst.addTransformer(new Transformer());

        String secretsLocation = new File(System.getProperty(""user.dir""), secretsFile).getAbsolutePath();
        log.info(""Successfully attached extract-ssl-secrets agent. Logging to "" + secretsLocation);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    private static void main(String agentArgs, Instrumentation inst) {
        String secretsFile;
        if (agentArgs != null && !agentArgs.isEmpty()) {
            secretsFile = agentArgs;
        } else {
            secretsFile = DEFAULT_SECRETS_FILE;
        }
        MasterSecretCallback.setSecretsFileName(secretsFile);
        inst.addTransformer(new Transformer());

        String secretsLocation = new File(System.getProperty(""user.dir""), secretsFile).getAbsolutePath();
        log.info(""Successfully attached extract-ssl-secrets agent. Logging to "" + secretsLocation);
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secretsFile', ';', '\n', '        ', 'if', ' ', '(', 'agentArgs', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', '!', 'agentArgs', '.', 'isEmpty', '(', ')', ')', ' ', '{', '\n', '            ', 'secretsFile', ' ', '=', ' ', 'agentArgs', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'secretsFile', ' ', '=', ' ', 'DEFAULT_SECRETS_FILE', ';', '\n', '        ', '}', '\n', '        ', 'MasterSecretCallback', '.', 'setSecretsFileName', '(', 'secretsFile', ')', ';', '\n', '        ', 'inst', '.', 'addTransformer', '(', 'new', ' ', 'Transformer', '(', ')', ')', ';', '\n', '\n', '        ', 'String', ' ', 'secretsLocation', ' ', '=', ' ', 'new', ' ', 'File', '(', 'System', '.', 'getProperty', '(', '""', 'user.dir', '""', ')', ',', ' ', 'secretsFile', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'log', '.', 'info', '(', '""', 'Successfully attached extract-ssl-secrets agent. Logging to ', '""', ' ', '+', ' ', 'secretsLocation', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AttachHelper.java,attach,"    public static void attach(String pid, String jarPath, String options) {
        try {
            VirtualMachine vm = VirtualMachine.attach(pid);",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    public static void attach(String pid, String jarPath, String options) {
        try {
            VirtualMachine vm = VirtualMachine.attach(pid);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'attach', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'jarPath', ',', ' ', 'String', ' ', 'options', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'VirtualMachine', ' ', 'vm', ' ', '=', ' ', 'VirtualMachine', '.', 'attach', '(', 'pid', ')', ';', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AttachHelper.java,list,"    public static String list() {
        StringBuilder msg = new StringBuilder();
        for (VirtualMachineDescriptor vm : VirtualMachine.list()) {
            msg.append(""  "").append(vm.id()).append("" "").append(vm.displayName()).append(""\n"");
        }
        return msg.toString();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    public static String list() {
        StringBuilder msg = new StringBuilder();
        for (VirtualMachineDescriptor vm : VirtualMachine.list()) {
            msg.append(""  "").append(vm.id()).append("" "").append(vm.displayName()).append(""\n"");
        }
        return msg.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'list', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'msg', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'VirtualMachineDescriptor', ' ', 'vm', ' ', ':', ' ', 'VirtualMachine', '.', 'list', '(', ')', ')', ' ', '{', '\n', '            ', 'msg', '.', 'append', '(', '""', '  ', '""', ')', '.', 'append', '(', 'vm', '.', 'id', '(', ')', ')', '.', 'append', '(', '""', ' ', '""', ')', '.', 'append', '(', 'vm', '.', 'displayName', '(', ')', ')', '.', 'append', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'msg', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AttachHelper.java,error,"    private static IllegalStateException error(String pid, Exception e) {
        StringBuilder msg = new StringBuilder(""Failed to attach to java process "").append(pid).append(""."");
        if (!pidExists(pid)) {
            msg.append(""\n\nNo Java process with ID "").append(pid).append("" found. Running Java processes:\n"");
            msg.append(list());
        } else {
            msg.append("" Cause: "" + e.getMessage());
        }
        return new IllegalStateException(msg.toString(), e);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    private static IllegalStateException error(String pid, Exception e) {
        StringBuilder msg = new StringBuilder(""Failed to attach to java process "").append(pid).append(""."");
        if (!pidExists(pid)) {
            msg.append(""\n\nNo Java process with ID "").append(pid).append("" found. Running Java processes:\n"");
            msg.append(list());
        } else {
            msg.append("" Cause: "" + e.getMessage());
        }
        return new IllegalStateException(msg.toString(), e);
    }
","['    ', 'private', ' ', 'static', ' ', 'IllegalStateException', ' ', 'error', '(', 'String', ' ', 'pid', ',', ' ', 'Exception', ' ', 'e', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'msg', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', '""', 'Failed to attach to java process ', '""', ')', '.', 'append', '(', 'pid', ')', '.', 'append', '(', '""', '.', '""', ')', ';', '\n', '        ', 'if', ' ', '(', '!', 'pidExists', '(', 'pid', ')', ')', ' ', '{', '\n', '            ', 'msg', '.', 'append', '(', '""', '\\', 'n', '\\', 'nNo Java process with ID ', '""', ')', '.', 'append', '(', 'pid', ')', '.', 'append', '(', '""', ' found. Running Java processes:', '\\', 'n', '""', ')', ';', '\n', '            ', 'msg', '.', 'append', '(', 'list', '(', ')', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'msg', '.', 'append', '(', '""', ' Cause: ', '""', ' ', '+', ' ', 'e', '.', 'getMessage', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'IllegalStateException', '(', 'msg', '.', 'toString', '(', ')', ',', ' ', 'e', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,AttachHelper.java,pidExists,"    private static boolean pidExists(String pid) {
        for (VirtualMachineDescriptor vm : VirtualMachine.list()) {
            if (vm.id().equals(pid)) {
                return true;
            }
        }
        return false;
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    private static boolean pidExists(String pid) {
        for (VirtualMachineDescriptor vm : VirtualMachine.list()) {
            if (vm.id().equals(pid)) {
                return true;
            }
        }
        return false;
    }
","['    ', 'private', ' ', 'static', ' ', 'boolean', ' ', 'pidExists', '(', 'String', ' ', 'pid', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'VirtualMachineDescriptor', ' ', 'vm', ' ', ':', ' ', 'VirtualMachine', '.', 'list', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'vm', '.', 'id', '(', ')', '.', 'equals', '(', 'pid', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,Transformer.java,handles,"        public boolean handles(String className) {
            for (String cls : handledClasses) {
                if (className.equals(cls)) {
                    return true;
                }
            }
            return false;
        }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"        public boolean handles(String className) {
            for (String cls : handledClasses) {
                if (className.equals(cls)) {
                    return true;
                }
            }
            return false;
        }
","['        ', 'public', ' ', 'boolean', ' ', 'handles', '(', 'String', ' ', 'className', ')', ' ', '{', '\n', '            ', 'for', ' ', '(', 'String', ' ', 'cls', ' ', ':', ' ', 'handledClasses', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'className', '.', 'equals', '(', 'cls', ')', ')', ' ', '{', '\n', '                    ', 'return', ' ', 'true', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,Transformer.java,transform,"        public byte[] transform(String className, byte[] classfileBuffer, ClassLoader cl) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendClassPath(new LoaderClassPath(cl));
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (CannotCompileException e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                } catch (NotFoundException e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                } catch (IOException e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                }
            }
            return classfileBuffer;
        }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"        public byte[] transform(String className, byte[] classfileBuffer, ClassLoader cl) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendClassPath(new LoaderClassPath(cl));
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (CannotCompileException e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                } catch (NotFoundException e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                } catch (IOException e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                }
            }
            return classfileBuffer;
        }
","['        ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', 'String', ' ', 'className', ',', ' ', 'byte', '[', ']', ' ', 'classfileBuffer', ',', ' ', 'ClassLoader', ' ', 'cl', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'ClassPool', ' ', 'pool', ' ', '=', ' ', 'new', ' ', 'ClassPool', '(', ')', ';', '\n', '                    ', 'pool', '.', 'appendClassPath', '(', 'new', ' ', 'LoaderClassPath', '(', 'cl', ')', ')', ';', '\n', '                    ', 'CtClass', ' ', 'instrumentedClass', ' ', '=', ' ', 'pool', '.', 'makeClass', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'classfileBuffer', ')', ')', ';', '\n', '                    ', 'instrumentClass', '(', 'instrumentedClass', ')', ';', '\n', '                    ', 'return', ' ', 'instrumentedClass', '.', 'toBytecode', '(', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'CannotCompileException', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Error instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'NotFoundException', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Error instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Error instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'classfileBuffer', ';', '\n', '        ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,Transformer.java,instrumentClass,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""setMasterSecret"");
            method.insertAfter(MasterSecretCallback.class.getName() + "".onMasterSecret(this, $1);"");
        }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""setMasterSecret"");
            method.insertAfter(MasterSecretCallback.class.getName() + "".onMasterSecret(this, $1);"");
        }
","['        ', 'protected', ' ', 'void', ' ', 'instrumentClass', '(', 'CtClass', ' ', 'instrumentedClass', ')', ' ', 'throws', ' ', 'CannotCompileException', ',', ' ', 'NotFoundException', ' ', '{', '\n', '            ', 'CtMethod', ' ', 'method', ' ', '=', ' ', 'instrumentedClass', '.', 'getDeclaredMethod', '(', '""', 'setMasterSecret', '""', ')', ';', '\n', '            ', 'method', '.', 'insertAfter', '(', 'MasterSecretCallback', '.', 'class', '.', 'getName', '(', ')', ' ', '+', ' ', '""', '.onMasterSecret(this, $1);', '""', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,Transformer.java,instrumentClass,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""calculateConnectionKeys"");
            method.insertBefore(MasterSecretCallback.class.getName() + "".onCalculateKeys(session, clnt_random, $1);"");
        }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""calculateConnectionKeys"");
            method.insertBefore(MasterSecretCallback.class.getName() + "".onCalculateKeys(session, clnt_random, $1);"");
        }
","['        ', 'protected', ' ', 'void', ' ', 'instrumentClass', '(', 'CtClass', ' ', 'instrumentedClass', ')', ' ', 'throws', ' ', 'CannotCompileException', ',', ' ', 'NotFoundException', ' ', '{', '\n', '            ', 'CtMethod', ' ', 'method', ' ', '=', ' ', 'instrumentedClass', '.', 'getDeclaredMethod', '(', '""', 'calculateConnectionKeys', '""', ')', ';', '\n', '            ', 'method', '.', 'insertBefore', '(', 'MasterSecretCallback', '.', 'class', '.', 'getName', '(', ')', ' ', '+', ' ', '""', '.onCalculateKeys(session, clnt_random, $1);', '""', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,Transformer.java,transform,"    public byte[] transform(
            ClassLoader loader,
            String classPath,
            Class<?> classBeingRedefined,
            ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        String className = classPath.replace(""/"", ""."");
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return ic.transform(className, classfileBuffer, loader);
            }
        }
        return classfileBuffer;
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    public byte[] transform(
            ClassLoader loader,
            String classPath,
            Class<?> classBeingRedefined,
            ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        String className = classPath.replace(""/"", ""."");
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return ic.transform(className, classfileBuffer, loader);
            }
        }
        return classfileBuffer;
    }
","['    ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', '\n', '            ', 'ClassLoader', ' ', 'loader', ',', '\n', '            ', 'String', ' ', 'classPath', ',', '\n', '            ', 'Class', '<', '?', '>', ' ', 'classBeingRedefined', ',', '\n', '            ', 'ProtectionDomain', ' ', 'protectionDomain', ',', '\n', '            ', 'byte', '[', ']', ' ', 'classfileBuffer', ')', ' ', 'throws', ' ', 'IllegalClassFormatException', ' ', '{', '\n', '        ', 'String', ' ', 'className', ' ', '=', ' ', 'classPath', '.', 'replace', '(', '""', '/', '""', ',', ' ', '""', '.', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'InjectCallback', ' ', 'ic', ' ', ':', ' ', 'TRANSFORMERS', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'ic', '.', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'ic', '.', 'transform', '(', 'className', ',', ' ', 'classfileBuffer', ',', ' ', 'loader', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'classfileBuffer', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b9a919083773138da7591234b6621f510fe0328,Transformer.java,needsTransform,"    public static boolean needsTransform(String className) {
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return true;
            }
        }
        return false;
    }",https://www.github.com/neykov/extract-tls-secrets/commit/3b9a919083773138da7591234b6621f510fe0328,"    public static boolean needsTransform(String className) {
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return true;
            }
        }
        return false;
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'needsTransform', '(', 'String', ' ', 'className', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'InjectCallback', ' ', 'ic', ' ', ':', ' ', 'TRANSFORMERS', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'ic', '.', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n', '<END>']"
master,c39ed1bf17676acfc0bab7c0c591723e01b1961b,MasterSecretCallback.java,onMasterSecret,"    public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
        try {
            String sessionKey = bytesToHex(sslSession.getId());",https://www.github.com/neykov/extract-tls-secrets/commit/c39ed1bf17676acfc0bab7c0c591723e01b1961b,"    public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
        try {
            String sessionKey = bytesToHex(sslSession.getId());
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onMasterSecret', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'sessionKey', ' ', '=', ' ', 'bytesToHex', '(', 'sslSession', '.', 'getId', '(', ')', ')', ';', '\n', '<END>']"
master,c39ed1bf17676acfc0bab7c0c591723e01b1961b,MasterSecretCallback.java,onCalculateKeys,"    public static void onCalculateKeys(SSLSession sslSession, Object randomCookie, Key masterSecret) {
        try {
            String clientRandom = bytesToHex((byte[])get(randomCookie, ""random_bytes""));",https://www.github.com/neykov/extract-tls-secrets/commit/c39ed1bf17676acfc0bab7c0c591723e01b1961b,"    public static void onCalculateKeys(SSLSession sslSession, Object randomCookie, Key masterSecret) {
        try {
            String clientRandom = bytesToHex((byte[])get(randomCookie, ""random_bytes""));
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onCalculateKeys', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Object', ' ', 'randomCookie', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'clientRandom', ' ', '=', ' ', 'bytesToHex', '(', '(', 'byte', '[', ']', ')', 'get', '(', 'randomCookie', ',', ' ', '""', 'random_bytes', '""', ')', ')', ';', '\n', '<END>']"
master,c39ed1bf17676acfc0bab7c0c591723e01b1961b,MasterSecretCallback.java,bytesToHex,"    public static String bytesToHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for ( int j = 0; j < bytes.length; j++ ) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/c39ed1bf17676acfc0bab7c0c591723e01b1961b,"    public static String bytesToHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for ( int j = 0; j < bytes.length; j++ ) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'bytesToHex', '(', 'byte', '[', ']', ' ', 'bytes', ')', ' ', '{', '\n', '        ', 'char', '[', ']', ' ', 'hexChars', ' ', '=', ' ', 'new', ' ', 'char', '[', 'bytes', '.', 'length', ' ', '*', ' ', '2', ']', ';', '\n', '        ', 'for', ' ', '(', ' ', 'int', ' ', 'j', ' ', '=', ' ', '0', ';', ' ', 'j', ' ', '<', ' ', 'bytes', '.', 'length', ';', ' ', 'j', '+', '+', ' ', ')', ' ', '{', '\n', '            ', 'int', ' ', 'v', ' ', '=', ' ', 'bytes', '[', 'j', ']', ' ', '&', ' ', '0xFF', ';', '\n', '            ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '>', '>', '>', ' ', '4', ']', ';', '\n', '            ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ' ', '+', ' ', '1', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '&', ' ', '0x0F', ']', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'hexChars', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,c39ed1bf17676acfc0bab7c0c591723e01b1961b,MasterSecretCallback.java,get,"    private static Object get(Object newObj, String field) throws IllegalAccessException, NoSuchFieldException {
        Field f = newObj.getClass().getDeclaredField(field);
        f.setAccessible(true);
        return f.get(newObj);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/c39ed1bf17676acfc0bab7c0c591723e01b1961b,"    private static Object get(Object newObj, String field) throws IllegalAccessException, NoSuchFieldException {
        Field f = newObj.getClass().getDeclaredField(field);
        f.setAccessible(true);
        return f.get(newObj);
    }
","['    ', 'private', ' ', 'static', ' ', 'Object', ' ', 'get', '(', 'Object', ' ', 'newObj', ',', ' ', 'String', ' ', 'field', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'NoSuchFieldException', ' ', '{', '\n', '        ', 'Field', ' ', 'f', ' ', '=', ' ', 'newObj', '.', 'getClass', '(', ')', '.', 'getDeclaredField', '(', 'field', ')', ';', '\n', '        ', 'f', '.', 'setAccessible', '(', 'true', ')', ';', '\n', '        ', 'return', ' ', 'f', '.', 'get', '(', 'newObj', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,debc9498083b632e567f73f2a052620a60dce569,AgentMain.java,main,"    private static void main(String agentArgs, Instrumentation inst) {
        inst.addTransformer(new Transformer());

        URL jarUrl = AgentAttach.class.getProtectionDomain().getCodeSource().getLocation();
        File jarFile;
        try {
            jarFile = new File(jarUrl.toURI());
        } catch (URISyntaxException e) {
            log.log(Level.WARNING, ""Failed attaching to process. Can't convert jar to a local path "" + jarUrl, e);
            return;
        }

        String secretsFile;
        if (agentArgs != null && !agentArgs.isEmpty()) {
            secretsFile = agentArgs;
        } else {
            secretsFile = DEFAULT_SECRETS_FILE;
        }

        MasterSecretCallback.setSecretsFileName(secretsFile);
        String secretsLocation = new File(System.getProperty(""user.dir""), secretsFile).getAbsolutePath();
        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + secretsLocation);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/debc9498083b632e567f73f2a052620a60dce569,"    private static void main(String agentArgs, Instrumentation inst) {
        inst.addTransformer(new Transformer());

        URL jarUrl = AgentAttach.class.getProtectionDomain().getCodeSource().getLocation();
        File jarFile;
        try {
            jarFile = new File(jarUrl.toURI());
        } catch (URISyntaxException e) {
            log.log(Level.WARNING, ""Failed attaching to process. Can't convert jar to a local path "" + jarUrl, e);
            return;
        }

        String secretsFile;
        if (agentArgs != null && !agentArgs.isEmpty()) {
            secretsFile = agentArgs;
        } else {
            secretsFile = DEFAULT_SECRETS_FILE;
        }

        MasterSecretCallback.setSecretsFileName(secretsFile);
        String secretsLocation = new File(System.getProperty(""user.dir""), secretsFile).getAbsolutePath();
        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + secretsLocation);
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'inst', '.', 'addTransformer', '(', 'new', ' ', 'Transformer', '(', ')', ')', ';', '\n', '\n', '        ', 'URL', ' ', 'jarUrl', ' ', '=', ' ', 'AgentAttach', '.', 'class', '.', 'getProtectionDomain', '(', ')', '.', 'getCodeSource', '(', ')', '.', 'getLocation', '(', ')', ';', '\n', '        ', 'File', ' ', 'jarFile', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'jarFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'jarUrl', '.', 'toURI', '(', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'URISyntaxException', ' ', 'e', ')', ' ', '{', '\n', '            ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', ""Failed attaching to process. Can't convert jar to a local path "", '""', ' ', '+', ' ', 'jarUrl', ',', ' ', 'e', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'secretsFile', ';', '\n', '        ', 'if', ' ', '(', 'agentArgs', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', '!', 'agentArgs', '.', 'isEmpty', '(', ')', ')', ' ', '{', '\n', '            ', 'secretsFile', ' ', '=', ' ', 'agentArgs', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'secretsFile', ' ', '=', ' ', 'DEFAULT_SECRETS_FILE', ';', '\n', '        ', '}', '\n', '\n', '        ', 'MasterSecretCallback', '.', 'setSecretsFileName', '(', 'secretsFile', ')', ';', '\n', '        ', 'String', ' ', 'secretsLocation', ' ', '=', ' ', 'new', ' ', 'File', '(', 'System', '.', 'getProperty', '(', '""', 'user.dir', '""', ')', ',', ' ', 'secretsFile', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'log', '.', 'info', '(', '""', 'Successfully attached agent ', '""', ' ', '+', ' ', 'jarFile', ' ', '+', ' ', '""', '. Logging to ', '""', ' ', '+', ' ', 'secretsLocation', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,debc9498083b632e567f73f2a052620a60dce569,Transformer.java,transform,"        public byte[] transform(String className, byte[] classfileBuffer, ClassLoader cl) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendClassPath(new LoaderClassPath(cl));
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }",https://www.github.com/neykov/extract-tls-secrets/commit/debc9498083b632e567f73f2a052620a60dce569,"        public byte[] transform(String className, byte[] classfileBuffer, ClassLoader cl) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendClassPath(new LoaderClassPath(cl));
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }
","['        ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', 'String', ' ', 'className', ',', ' ', 'byte', '[', ']', ' ', 'classfileBuffer', ',', ' ', 'ClassLoader', ' ', 'cl', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'ClassPool', ' ', 'pool', ' ', '=', ' ', 'new', ' ', 'ClassPool', '(', ')', ';', '\n', '                    ', 'pool', '.', 'appendClassPath', '(', 'new', ' ', 'LoaderClassPath', '(', 'cl', ')', ')', ';', '\n', '                    ', 'CtClass', ' ', 'instrumentedClass', ' ', '=', ' ', 'pool', '.', 'makeClass', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'classfileBuffer', ')', ')', ';', '\n', '                    ', 'instrumentClass', '(', 'instrumentedClass', ')', ';', '\n', '                    ', 'return', ' ', 'instrumentedClass', '.', 'toBytecode', '(', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Throwable', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Error instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                    ', 'if', ' ', '(', 'e', ' ', 'instanceof', ' ', 'InterruptedException', ')', ' ', '{', '\n', '                        ', 'Thread', '.', 'currentThread', '(', ')', '.', 'interrupt', '(', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'classfileBuffer', ';', '\n', '        ', '}', '\n', '<END>']"
master,26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,AgentMain.java,premain,"    public static void premain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile.getAbsolutePath());
    }",https://www.github.com/neykov/extract-tls-secrets/commit/26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,"    public static void premain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile.getAbsolutePath());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'premain', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'File', ' ', 'jarFile', ' ', '=', ' ', 'getJarFile', '(', ')', ';', '\n', '        ', 'initClassPath', '(', 'inst', ',', ' ', 'jarFile', ')', ';', '\n', '        ', 'main', '(', 'agentArgs', ',', ' ', 'inst', ',', ' ', 'jarFile', '.', 'getAbsolutePath', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,AgentMain.java,agentmain,"    public static void agentmain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile.getAbsolutePath());
        reloadClasses(inst);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,"    public static void agentmain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile.getAbsolutePath());
        reloadClasses(inst);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'agentmain', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'File', ' ', 'jarFile', ' ', '=', ' ', 'getJarFile', '(', ')', ';', '\n', '        ', 'initClassPath', '(', 'inst', ',', ' ', 'jarFile', ')', ';', '\n', '        ', 'main', '(', 'agentArgs', ',', ' ', 'inst', ',', ' ', 'jarFile', '.', 'getAbsolutePath', '(', ')', ')', ';', '\n', '        ', 'reloadClasses', '(', 'inst', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,AgentMain.java,initClassPath,"    private static void initClassPath(Instrumentation inst, File jarFile) {
        try {
            inst.appendToBootstrapClassLoaderSearch(new JarFile(jarFile));",https://www.github.com/neykov/extract-tls-secrets/commit/26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,"    private static void initClassPath(Instrumentation inst, File jarFile) {
        try {
            inst.appendToBootstrapClassLoaderSearch(new JarFile(jarFile));
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'initClassPath', '(', 'Instrumentation', ' ', 'inst', ',', ' ', 'File', ' ', 'jarFile', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'inst', '.', 'appendToBootstrapClassLoaderSearch', '(', 'new', ' ', 'JarFile', '(', 'jarFile', ')', ')', ';', '\n', '<END>']"
master,26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,AgentMain.java,main,"    private static void main(String agentArgs, Instrumentation inst, String jarFile) {
        String secretsFile;
        if (agentArgs != null && !agentArgs.isEmpty()) {
            secretsFile = agentArgs;
        } else {
            secretsFile = DEFAULT_SECRETS_FILE;
        }

        // MasterSecretCallback is loaded in boot class loader
        MasterSecretCallback.setSecretsFileName(secretsFile);
        String secretsLocation = new File(System.getProperty(""user.dir""), secretsFile).getAbsolutePath();

        inst.addTransformer(new Transformer());

        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + secretsLocation + "". "");
    }",https://www.github.com/neykov/extract-tls-secrets/commit/26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,"    private static void main(String agentArgs, Instrumentation inst, String jarFile) {
        String secretsFile;
        if (agentArgs != null && !agentArgs.isEmpty()) {
            secretsFile = agentArgs;
        } else {
            secretsFile = DEFAULT_SECRETS_FILE;
        }

        
        MasterSecretCallback.setSecretsFileName(secretsFile);
        String secretsLocation = new File(System.getProperty(""user.dir""), secretsFile).getAbsolutePath();

        inst.addTransformer(new Transformer());

        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + secretsLocation + "". "");
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ',', ' ', 'String', ' ', 'jarFile', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secretsFile', ';', '\n', '        ', 'if', ' ', '(', 'agentArgs', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', '!', 'agentArgs', '.', 'isEmpty', '(', ')', ')', ' ', '{', '\n', '            ', 'secretsFile', ' ', '=', ' ', 'agentArgs', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'secretsFile', ' ', '=', ' ', 'DEFAULT_SECRETS_FILE', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'MasterSecretCallback', '.', 'setSecretsFileName', '(', 'secretsFile', ')', ';', '\n', '        ', 'String', ' ', 'secretsLocation', ' ', '=', ' ', 'new', ' ', 'File', '(', 'System', '.', 'getProperty', '(', '""', 'user.dir', '""', ')', ',', ' ', 'secretsFile', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'inst', '.', 'addTransformer', '(', 'new', ' ', 'Transformer', '(', ')', ')', ';', '\n', '\n', '        ', 'log', '.', 'info', '(', '""', 'Successfully attached agent ', '""', ' ', '+', ' ', 'jarFile', ' ', '+', ' ', '""', '. Logging to ', '""', ' ', '+', ' ', 'secretsLocation', ' ', '+', ' ', '""', '. ', '""', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,Transformer.java,transform,"        public byte[] transform(String className, byte[] classfileBuffer) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendSystemPath();
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }",https://www.github.com/neykov/extract-tls-secrets/commit/26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,"        public byte[] transform(String className, byte[] classfileBuffer) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendSystemPath();
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }
","['        ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', 'String', ' ', 'className', ',', ' ', 'byte', '[', ']', ' ', 'classfileBuffer', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'ClassPool', ' ', 'pool', ' ', '=', ' ', 'new', ' ', 'ClassPool', '(', ')', ';', '\n', '                    ', 'pool', '.', 'appendSystemPath', '(', ')', ';', '\n', '                    ', 'CtClass', ' ', 'instrumentedClass', ' ', '=', ' ', 'pool', '.', 'makeClass', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'classfileBuffer', ')', ')', ';', '\n', '                    ', 'instrumentClass', '(', 'instrumentedClass', ')', ';', '\n', '                    ', 'return', ' ', 'instrumentedClass', '.', 'toBytecode', '(', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Throwable', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Error instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                    ', 'if', ' ', '(', 'e', ' ', 'instanceof', ' ', 'InterruptedException', ')', ' ', '{', '\n', '                        ', 'Thread', '.', 'currentThread', '(', ')', '.', 'interrupt', '(', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'classfileBuffer', ';', '\n', '        ', '}', '\n', '<END>']"
master,26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,Transformer.java,transform,"    public byte[] transform(
            ClassLoader loader,
            String classPath,
            Class<?> classBeingRedefined,
            ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        String className = classPath.replace(""/"", ""."");
        // loader should be null (boot loader), so don't use it
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return ic.transform(className, classfileBuffer);
            }
        }
        return classfileBuffer;
    }",https://www.github.com/neykov/extract-tls-secrets/commit/26f0f2bf6d5bd7e6250faa24f3c36f3293e7517a,"    public byte[] transform(
            ClassLoader loader,
            String classPath,
            Class<?> classBeingRedefined,
            ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        String className = classPath.replace(""/"", ""."");
        
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return ic.transform(className, classfileBuffer);
            }
        }
        return classfileBuffer;
    }
","['    ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', '\n', '            ', 'ClassLoader', ' ', 'loader', ',', '\n', '            ', 'String', ' ', 'classPath', ',', '\n', '            ', 'Class', '<', '?', '>', ' ', 'classBeingRedefined', ',', '\n', '            ', 'ProtectionDomain', ' ', 'protectionDomain', ',', '\n', '            ', 'byte', '[', ']', ' ', 'classfileBuffer', ')', ' ', 'throws', ' ', 'IllegalClassFormatException', ' ', '{', '\n', '        ', 'String', ' ', 'className', ' ', '=', ' ', 'classPath', '.', 'replace', '(', '""', '/', '""', ',', ' ', '""', '.', '""', ')', ';', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'InjectCallback', ' ', 'ic', ' ', ':', ' ', 'TRANSFORMERS', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'ic', '.', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'ic', '.', 'transform', '(', 'className', ',', ' ', 'classfileBuffer', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'classfileBuffer', ';', '\n', '    ', '}', '\n', '<END>']"
master,e805b10235ef3f6995d9031e45647883b498f8a7,MasterSecretCallback.java,write,"    private static synchronized void write(String secret) throws IOException {
        Writer out = new FileWriter(secretsFileName, true);
        out.write(secret);
        out.write(NL);
        out.close();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/e805b10235ef3f6995d9031e45647883b498f8a7,"    private static synchronized void write(String secret) throws IOException {
        Writer out = new FileWriter(secretsFileName, true);
        out.write(secret);
        out.write(NL);
        out.close();
    }
","['    ', 'private', ' ', 'static', ' ', 'synchronized', ' ', 'void', ' ', 'write', '(', 'String', ' ', 'secret', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'Writer', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'FileWriter', '(', 'secretsFileName', ',', ' ', 'true', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'secret', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'NL', ')', ';', '\n', '        ', 'out', '.', 'close', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e805b10235ef3f6995d9031e45647883b498f8a7,MasterSecretCallback.java,bytesToHex,"    private static String bytesToHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for ( int j = 0; j < bytes.length; j++ ) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/e805b10235ef3f6995d9031e45647883b498f8a7,"    private static String bytesToHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for ( int j = 0; j < bytes.length; j++ ) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'bytesToHex', '(', 'byte', '[', ']', ' ', 'bytes', ')', ' ', '{', '\n', '        ', 'char', '[', ']', ' ', 'hexChars', ' ', '=', ' ', 'new', ' ', 'char', '[', 'bytes', '.', 'length', ' ', '*', ' ', '2', ']', ';', '\n', '        ', 'for', ' ', '(', ' ', 'int', ' ', 'j', ' ', '=', ' ', '0', ';', ' ', 'j', ' ', '<', ' ', 'bytes', '.', 'length', ';', ' ', 'j', '+', '+', ' ', ')', ' ', '{', '\n', '            ', 'int', ' ', 'v', ' ', '=', ' ', 'bytes', '[', 'j', ']', ' ', '&', ' ', '0xFF', ';', '\n', '            ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '>', '>', '>', ' ', '4', ']', ';', '\n', '            ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ' ', '+', ' ', '1', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '&', ' ', '0x0F', ']', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'hexChars', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,694b6d1ecff6621ae3c3e9e8623b825af7b4f6be,AgentMain.java,premain,"    public static void premain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/694b6d1ecff6621ae3c3e9e8623b825af7b4f6be,"    public static void premain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'premain', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'File', ' ', 'jarFile', ' ', '=', ' ', 'getJarFile', '(', ')', ';', '\n', '        ', 'initClassPath', '(', 'inst', ',', ' ', 'jarFile', ')', ';', '\n', '        ', 'main', '(', 'agentArgs', ',', ' ', 'inst', ',', ' ', 'jarFile', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,694b6d1ecff6621ae3c3e9e8623b825af7b4f6be,AgentMain.java,agentmain,"    public static void agentmain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile);
        reloadClasses(inst);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/694b6d1ecff6621ae3c3e9e8623b825af7b4f6be,"    public static void agentmain(String agentArgs, Instrumentation inst) {
        File jarFile = getJarFile();
        initClassPath(inst, jarFile);
        main(agentArgs, inst, jarFile);
        reloadClasses(inst);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'agentmain', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'File', ' ', 'jarFile', ' ', '=', ' ', 'getJarFile', '(', ')', ';', '\n', '        ', 'initClassPath', '(', 'inst', ',', ' ', 'jarFile', ')', ';', '\n', '        ', 'main', '(', 'agentArgs', ',', ' ', 'inst', ',', ' ', 'jarFile', ')', ';', '\n', '        ', 'reloadClasses', '(', 'inst', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,694b6d1ecff6621ae3c3e9e8623b825af7b4f6be,AgentMain.java,main,"    private static void main(String agentArgs, Instrumentation inst, File jarFile) {
        String canonicalSecretsPath = getCanonicalSecretsPath(agentArgs);

        // MasterSecretCallback is loaded in boot class loader
        MasterSecretCallback.setSecretsFileName(canonicalSecretsPath);
        inst.addTransformer(new Transformer(), true);

        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + canonicalSecretsPath + "". "");
    }",https://www.github.com/neykov/extract-tls-secrets/commit/694b6d1ecff6621ae3c3e9e8623b825af7b4f6be,"    private static void main(String agentArgs, Instrumentation inst, File jarFile) {
        String canonicalSecretsPath = getCanonicalSecretsPath(agentArgs);

        
        MasterSecretCallback.setSecretsFileName(canonicalSecretsPath);
        inst.addTransformer(new Transformer(), true);

        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + canonicalSecretsPath + "". "");
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ',', ' ', 'File', ' ', 'jarFile', ')', ' ', '{', '\n', '        ', 'String', ' ', 'canonicalSecretsPath', ' ', '=', ' ', 'getCanonicalSecretsPath', '(', 'agentArgs', ')', ';', '\n', '\n', '        ', '\n', '        ', 'MasterSecretCallback', '.', 'setSecretsFileName', '(', 'canonicalSecretsPath', ')', ';', '\n', '        ', 'inst', '.', 'addTransformer', '(', 'new', ' ', 'Transformer', '(', ')', ',', ' ', 'true', ')', ';', '\n', '\n', '        ', 'log', '.', 'info', '(', '""', 'Successfully attached agent ', '""', ' ', '+', ' ', 'jarFile', ' ', '+', ' ', '""', '. Logging to ', '""', ' ', '+', ' ', 'canonicalSecretsPath', ' ', '+', ' ', '""', '. ', '""', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,AgentMain.java,main,"    private static void main(String agentArgs, Instrumentation inst, File jarFile) {
        openBaseModule(inst);

        String canonicalSecretsPath = getCanonicalSecretsPath(agentArgs);

        // MasterSecretCallback is loaded in boot class loader
        MasterSecretCallback.setSecretsFileName(canonicalSecretsPath);
        inst.addTransformer(new Transformer(jarFile), true);

        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + canonicalSecretsPath + "". "");
    }",https://www.github.com/neykov/extract-tls-secrets/commit/58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,"    private static void main(String agentArgs, Instrumentation inst, File jarFile) {
        openBaseModule(inst);

        String canonicalSecretsPath = getCanonicalSecretsPath(agentArgs);

        
        MasterSecretCallback.setSecretsFileName(canonicalSecretsPath);
        inst.addTransformer(new Transformer(jarFile), true);

        log.info(""Successfully attached agent "" + jarFile + "". Logging to "" + canonicalSecretsPath + "". "");
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', ' ', 'agentArgs', ',', ' ', 'Instrumentation', ' ', 'inst', ',', ' ', 'File', ' ', 'jarFile', ')', ' ', '{', '\n', '        ', 'openBaseModule', '(', 'inst', ')', ';', '\n', '\n', '        ', 'String', ' ', 'canonicalSecretsPath', ' ', '=', ' ', 'getCanonicalSecretsPath', '(', 'agentArgs', ')', ';', '\n', '\n', '        ', '\n', '        ', 'MasterSecretCallback', '.', 'setSecretsFileName', '(', 'canonicalSecretsPath', ')', ';', '\n', '        ', 'inst', '.', 'addTransformer', '(', 'new', ' ', 'Transformer', '(', 'jarFile', ')', ',', ' ', 'true', ')', ';', '\n', '\n', '        ', 'log', '.', 'info', '(', '""', 'Successfully attached agent ', '""', ' ', '+', ' ', 'jarFile', ' ', '+', ' ', '""', '. Logging to ', '""', ' ', '+', ' ', 'canonicalSecretsPath', ' ', '+', ' ', '""', '. ', '""', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,AgentMain.java,openBaseModule,"    private static void openBaseModule(Instrumentation inst) {
        Method getModule;
        try {
            getModule = Class.class.getMethod(""getModule"");
        } catch (NoSuchMethodException e) {
            // No modules available, no need to open them (< Java 9)
            return;
        } catch (SecurityException e) {
            // No modules available, no need to open them (< Java 9)
            return;
        }

        try {
            Map<String, Set<Object>> extraOpens = new HashMap<String, Set<Object>>();",https://www.github.com/neykov/extract-tls-secrets/commit/58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,"    private static void openBaseModule(Instrumentation inst) {
        Method getModule;
        try {
            getModule = Class.class.getMethod(""getModule"");
        } catch (NoSuchMethodException e) {
            
            return;
        } catch (SecurityException e) {
            
            return;
        }

        try {
            Map<String, Set<Object>> extraOpens = new HashMap<String, Set<Object>>();
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'openBaseModule', '(', 'Instrumentation', ' ', 'inst', ')', ' ', '{', '\n', '        ', 'Method', ' ', 'getModule', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'getModule', ' ', '=', ' ', 'Class', '.', 'class', '.', 'getMethod', '(', '""', 'getModule', '""', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'NoSuchMethodException', ' ', 'e', ')', ' ', '{', '\n', '            ', '\n', '            ', 'return', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'SecurityException', ' ', 'e', ')', ' ', '{', '\n', '            ', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Map', '<', 'String', ',', ' ', 'Set', '<', 'Object', '>', '>', ' ', 'extraOpens', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', 'String', ',', ' ', 'Set', '<', 'Object', '>', '>', '(', ')', ';', '\n', '<END>']"
master,58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,Transformer.java,transform,"        public byte[] transform(String className, byte[] classfileBuffer, String jarFile) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendSystemPath();
                    // Needed for Java 9.
                    pool.appendClassPath(jarFile);
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }",https://www.github.com/neykov/extract-tls-secrets/commit/58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,"        public byte[] transform(String className, byte[] classfileBuffer, String jarFile) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendSystemPath();
                    
                    pool.appendClassPath(jarFile);
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Error instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }
","['        ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', 'String', ' ', 'className', ',', ' ', 'byte', '[', ']', ' ', 'classfileBuffer', ',', ' ', 'String', ' ', 'jarFile', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'ClassPool', ' ', 'pool', ' ', '=', ' ', 'new', ' ', 'ClassPool', '(', ')', ';', '\n', '                    ', 'pool', '.', 'appendSystemPath', '(', ')', ';', '\n', '                    ', '\n', '                    ', 'pool', '.', 'appendClassPath', '(', 'jarFile', ')', ';', '\n', '                    ', 'CtClass', ' ', 'instrumentedClass', ' ', '=', ' ', 'pool', '.', 'makeClass', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'classfileBuffer', ')', ')', ';', '\n', '                    ', 'instrumentClass', '(', 'instrumentedClass', ')', ';', '\n', '                    ', 'return', ' ', 'instrumentedClass', '.', 'toBytecode', '(', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Throwable', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Error instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                    ', 'if', ' ', '(', 'e', ' ', 'instanceof', ' ', 'InterruptedException', ')', ' ', '{', '\n', '                        ', 'Thread', '.', 'currentThread', '(', ')', '.', 'interrupt', '(', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'classfileBuffer', ';', '\n', '        ', '}', '\n', '<END>']"
master,58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,Transformer.java,transform,"    public byte[] transform(
            ClassLoader loader,
            String classPath,
            Class<?> classBeingRedefined,
            ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        String className = classPath.replace(""/"", ""."");
        // loader should be null (boot loader), so don't use it
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return ic.transform(className, classfileBuffer, jarFile.getAbsolutePath());
            }
        }
        return classfileBuffer;
    }",https://www.github.com/neykov/extract-tls-secrets/commit/58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,"    public byte[] transform(
            ClassLoader loader,
            String classPath,
            Class<?> classBeingRedefined,
            ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        String className = classPath.replace(""/"", ""."");
        
        for (InjectCallback ic : TRANSFORMERS) {
            if (ic.handles(className)) {
                return ic.transform(className, classfileBuffer, jarFile.getAbsolutePath());
            }
        }
        return classfileBuffer;
    }
","['    ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', '\n', '            ', 'ClassLoader', ' ', 'loader', ',', '\n', '            ', 'String', ' ', 'classPath', ',', '\n', '            ', 'Class', '<', '?', '>', ' ', 'classBeingRedefined', ',', '\n', '            ', 'ProtectionDomain', ' ', 'protectionDomain', ',', '\n', '            ', 'byte', '[', ']', ' ', 'classfileBuffer', ')', ' ', 'throws', ' ', 'IllegalClassFormatException', ' ', '{', '\n', '        ', 'String', ' ', 'className', ' ', '=', ' ', 'classPath', '.', 'replace', '(', '""', '/', '""', ',', ' ', '""', '.', '""', ')', ';', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'InjectCallback', ' ', 'ic', ' ', ':', ' ', 'TRANSFORMERS', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'ic', '.', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'ic', '.', 'transform', '(', 'className', ',', ' ', 'classfileBuffer', ',', ' ', 'jarFile', '.', 'getAbsolutePath', '(', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'classfileBuffer', ';', '\n', '    ', '}', '\n', '<END>']"
master,58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,TestExtract.java,main,"    public static void main(String[] args) throws Exception {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        while (true) {
            String line = in.readLine();",https://www.github.com/neykov/extract-tls-secrets/commit/58c74d1c40b03014d50384370ea4d1b4a9b0ef2b,"    public static void main(String[] args) throws Exception {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        while (true) {
            String line = in.readLine();
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', '[', ']', ' ', 'args', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'in', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'System', '.', 'in', ')', ')', ';', '\n', '        ', 'while', ' ', '(', 'true', ')', ' ', '{', '\n', '            ', 'String', ' ', 'line', ' ', '=', ' ', 'in', '.', 'readLine', '(', ')', ';', '\n', '<END>']"
master,f9de54846eae56749b4a622d510fde9b1e09ec06,MasterSecretCallback.java,onKeyDerivation,"    public static void onKeyDerivation(Object context, SecretKey key) {
        String secretName = TLS13_SECRET_NAMES.get(key.getAlgorithm());
        if (secretName == null) {
            return;
        }
        try {
            Object clientRandom = get(context, ""clientHelloRandom"");",https://www.github.com/neykov/extract-tls-secrets/commit/f9de54846eae56749b4a622d510fde9b1e09ec06,"    public static void onKeyDerivation(Object context, SecretKey key) {
        String secretName = TLS13_SECRET_NAMES.get(key.getAlgorithm());
        if (secretName == null) {
            return;
        }
        try {
            Object clientRandom = get(context, ""clientHelloRandom"");
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onKeyDerivation', '(', 'Object', ' ', 'context', ',', ' ', 'SecretKey', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secretName', ' ', '=', ' ', 'TLS13_SECRET_NAMES', '.', 'get', '(', 'key', '.', 'getAlgorithm', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'secretName', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Object', ' ', 'clientRandom', ' ', '=', ' ', 'get', '(', 'context', ',', ' ', '""', 'clientHelloRandom', '""', ')', ';', '\n', '<END>']"
master,f9de54846eae56749b4a622d510fde9b1e09ec06,MasterSecretCallback.java,bytesToHex,"    private static String bytesToHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for (int j = 0; j < bytes.length; j++) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/f9de54846eae56749b4a622d510fde9b1e09ec06,"    private static String bytesToHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for (int j = 0; j < bytes.length; j++) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'bytesToHex', '(', 'byte', '[', ']', ' ', 'bytes', ')', ' ', '{', '\n', '        ', 'char', '[', ']', ' ', 'hexChars', ' ', '=', ' ', 'new', ' ', 'char', '[', 'bytes', '.', 'length', ' ', '*', ' ', '2', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'j', ' ', '=', ' ', '0', ';', ' ', 'j', ' ', '<', ' ', 'bytes', '.', 'length', ';', ' ', 'j', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'v', ' ', '=', ' ', 'bytes', '[', 'j', ']', ' ', '&', ' ', '0xFF', ';', '\n', '            ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '>', '>', '>', ' ', '4', ']', ';', '\n', '            ', 'hexChars', '[', 'j', ' ', '*', ' ', '2', ' ', '+', ' ', '1', ']', ' ', '=', ' ', 'hexArray', '[', 'v', ' ', '&', ' ', '0x0F', ']', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'hexChars', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f9de54846eae56749b4a622d510fde9b1e09ec06,MasterSecretCallback.java,get,"    private static Object get(Object newObj, String field) throws IllegalAccessException, NoSuchFieldException {
        Class<?> type = newObj.getClass();
        while (type != null) {
            try {
                Field f = type.getDeclaredField(field);
                f.setAccessible(true);
                return f.get(newObj);
            } catch (NoSuchFieldException e) {
                type = type.getSuperclass();
            }
        }
        throw new NoSuchFieldException(field);
    }",https://www.github.com/neykov/extract-tls-secrets/commit/f9de54846eae56749b4a622d510fde9b1e09ec06,"    private static Object get(Object newObj, String field) throws IllegalAccessException, NoSuchFieldException {
        Class<?> type = newObj.getClass();
        while (type != null) {
            try {
                Field f = type.getDeclaredField(field);
                f.setAccessible(true);
                return f.get(newObj);
            } catch (NoSuchFieldException e) {
                type = type.getSuperclass();
            }
        }
        throw new NoSuchFieldException(field);
    }
","['    ', 'private', ' ', 'static', ' ', 'Object', ' ', 'get', '(', 'Object', ' ', 'newObj', ',', ' ', 'String', ' ', 'field', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'NoSuchFieldException', ' ', '{', '\n', '        ', 'Class', '<', '?', '>', ' ', 'type', ' ', '=', ' ', 'newObj', '.', 'getClass', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'type', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'Field', ' ', 'f', ' ', '=', ' ', 'type', '.', 'getDeclaredField', '(', 'field', ')', ';', '\n', '                ', 'f', '.', 'setAccessible', '(', 'true', ')', ';', '\n', '                ', 'return', ' ', 'f', '.', 'get', '(', 'newObj', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'NoSuchFieldException', ' ', 'e', ')', ' ', '{', '\n', '                ', 'type', ' ', '=', ' ', 'type', '.', 'getSuperclass', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'throw', ' ', 'new', ' ', 'NoSuchFieldException', '(', 'field', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f9de54846eae56749b4a622d510fde9b1e09ec06,Transformer.java,transform,"       public byte[] transform(String className, byte[] classfileBuffer, String jarFile) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendSystemPath();
                    // Needed for Java 9+
                    pool.insertClassPath(new ClassClassPath(Transformer.class));
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Failed instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }",https://www.github.com/neykov/extract-tls-secrets/commit/f9de54846eae56749b4a622d510fde9b1e09ec06,"       public byte[] transform(String className, byte[] classfileBuffer, String jarFile) {
            if (handles(className)) {
                try {
                    ClassPool pool = new ClassPool();
                    pool.appendSystemPath();
                    
                    pool.insertClassPath(new ClassClassPath(Transformer.class));
                    CtClass instrumentedClass = pool.makeClass(new ByteArrayInputStream(classfileBuffer));
                    instrumentClass(instrumentedClass);
                    return instrumentedClass.toBytecode();
                } catch (Throwable e) {
                    log.log(Level.WARNING, ""Failed instrumenting "" + className, e);
                    if (e instanceof InterruptedException) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
            return classfileBuffer;
        }
","['       ', 'public', ' ', 'byte', '[', ']', ' ', 'transform', '(', 'String', ' ', 'className', ',', ' ', 'byte', '[', ']', ' ', 'classfileBuffer', ',', ' ', 'String', ' ', 'jarFile', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handles', '(', 'className', ')', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'ClassPool', ' ', 'pool', ' ', '=', ' ', 'new', ' ', 'ClassPool', '(', ')', ';', '\n', '                    ', 'pool', '.', 'appendSystemPath', '(', ')', ';', '\n', '                    ', '\n', '                    ', 'pool', '.', 'insertClassPath', '(', 'new', ' ', 'ClassClassPath', '(', 'Transformer', '.', 'class', ')', ')', ';', '\n', '                    ', 'CtClass', ' ', 'instrumentedClass', ' ', '=', ' ', 'pool', '.', 'makeClass', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'classfileBuffer', ')', ')', ';', '\n', '                    ', 'instrumentClass', '(', 'instrumentedClass', ')', ';', '\n', '                    ', 'return', ' ', 'instrumentedClass', '.', 'toBytecode', '(', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Throwable', ' ', 'e', ')', ' ', '{', '\n', '                    ', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', ' ', '""', 'Failed instrumenting ', '""', ' ', '+', ' ', 'className', ',', ' ', 'e', ')', ';', '\n', '                    ', 'if', ' ', '(', 'e', ' ', 'instanceof', ' ', 'InterruptedException', ')', ' ', '{', '\n', '                        ', 'Thread', '.', 'currentThread', '(', ')', '.', 'interrupt', '(', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'classfileBuffer', ';', '\n', '        ', '}', '\n', '<END>']"
master,f9de54846eae56749b4a622d510fde9b1e09ec06,Transformer.java,instrumentClass,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""createKeyDerivation"");
            method.insertAfter(MasterSecretCallback.class.getName() + "".onKeyDerivation($1, $2);"");
        }",https://www.github.com/neykov/extract-tls-secrets/commit/f9de54846eae56749b4a622d510fde9b1e09ec06,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""createKeyDerivation"");
            method.insertAfter(MasterSecretCallback.class.getName() + "".onKeyDerivation($1, $2);"");
        }
","['        ', 'protected', ' ', 'void', ' ', 'instrumentClass', '(', 'CtClass', ' ', 'instrumentedClass', ')', ' ', 'throws', ' ', 'CannotCompileException', ',', ' ', 'NotFoundException', ' ', '{', '\n', '            ', 'CtMethod', ' ', 'method', ' ', '=', ' ', 'instrumentedClass', '.', 'getDeclaredMethod', '(', '""', 'createKeyDerivation', '""', ')', ';', '\n', '            ', 'method', '.', 'insertAfter', '(', 'MasterSecretCallback', '.', 'class', '.', 'getName', '(', ')', ' ', '+', ' ', '""', '.onKeyDerivation($1, $2);', '""', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,f9de54846eae56749b4a622d510fde9b1e09ec06,TestURLConnection.java,main,"    public static void main(String[] args) throws Exception {
        URL url = new URL(args[0]);
        HttpURLConnection connection = (HttpURLConnection)url.openConnection();
        connection.setRequestMethod(""GET"");
        connection.connect();
        int code = connection.getResponseCode();
        if (code != 200) {
            System.err.println(""Unexpected response code "" + code);",https://www.github.com/neykov/extract-tls-secrets/commit/f9de54846eae56749b4a622d510fde9b1e09ec06,"    public static void main(String[] args) throws Exception {
        URL url = new URL(args[0]);
        HttpURLConnection connection = (HttpURLConnection)url.openConnection();
        connection.setRequestMethod(""GET"");
        connection.connect();
        int code = connection.getResponseCode();
        if (code != 200) {
            System.err.println(""Unexpected response code "" + code);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', '[', ']', ' ', 'args', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'URL', ' ', 'url', ' ', '=', ' ', 'new', ' ', 'URL', '(', 'args', '[', '0', ']', ')', ';', '\n', '        ', 'HttpURLConnection', ' ', 'connection', ' ', '=', ' ', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', '\n', '        ', 'connection', '.', 'setRequestMethod', '(', '""', 'GET', '""', ')', ';', '\n', '        ', 'connection', '.', 'connect', '(', ')', ';', '\n', '        ', 'int', ' ', 'code', ' ', '=', ' ', 'connection', '.', 'getResponseCode', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'code', ' ', '!', '=', ' ', '200', ')', ' ', '{', '\n', '            ', 'System', '.', 'err', '.', 'println', '(', '""', 'Unexpected response code ', '""', ' ', '+', ' ', 'code', ')', ';', '\n', '<END>']"
master,5a7b78a59b879c0c3eda11b5fc7d9ae7698e2845,AgentAttach.java,attach,"    public static void attach(URL jarUrl, File jarFile, String pid, String logFile) throws Exception {
        if (isAttachApiAvailable()) {
            // Either Java 9 or tools.jar already on classpath",https://www.github.com/neykov/extract-tls-secrets/commit/5a7b78a59b879c0c3eda11b5fc7d9ae7698e2845,"    public static void attach(URL jarUrl, File jarFile, String pid, String logFile) throws Exception {
        if (isAttachApiAvailable()) {
            
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'attach', '(', 'URL', ' ', 'jarUrl', ',', ' ', 'File', ' ', 'jarFile', ',', ' ', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'logFile', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'if', ' ', '(', 'isAttachApiAvailable', '(', ')', ')', ' ', '{', '\n', '            ', '\n', '<END>']"
master,5a7b78a59b879c0c3eda11b5fc7d9ae7698e2845,AgentAttach.java,getToolsFile,"    private static File getToolsFile() throws MessageException {
        File javaHome = getJavaHome();

        // javaHome is a JDK
        File toolsFile = new File(javaHome, ""lib/tools.jar"");
        if (toolsFile.exists()) {
            return toolsFile;
        }

        // javaHome is the jre subfolder **inside** a JDK home
        File toolsFileAlt = new File(javaHome, ""../lib/tools.jar"");
        if (toolsFileAlt.exists()) {
            return toolsFileAlt;
        }

        // Apple packaged Java
        File classesFile = new File(javaHome, ""../Classes/classes.jar"");
        if (classesFile.exists()) {
            return classesFile;
        }

        // Someone decided to copy the tools.jar from a JDK inside working dir
        File localToolsFile = new File(""tools.jar"");
        if (localToolsFile.exists()) {
            return localToolsFile;
        }

        throw new MessageException(
            ""Invalid JAVA_HOME environment variable '"" + javaHome.getAbsolutePath() + ""'."",",https://www.github.com/neykov/extract-tls-secrets/commit/5a7b78a59b879c0c3eda11b5fc7d9ae7698e2845,"    private static File getToolsFile() throws MessageException {
        File javaHome = getJavaHome();

        
        File toolsFile = new File(javaHome, ""lib/tools.jar"");
        if (toolsFile.exists()) {
            return toolsFile;
        }

        
        File toolsFileAlt = new File(javaHome, ""../lib/tools.jar"");
        if (toolsFileAlt.exists()) {
            return toolsFileAlt;
        }

        
        File classesFile = new File(javaHome, ""../Classes/classes.jar"");
        if (classesFile.exists()) {
            return classesFile;
        }

        
        File localToolsFile = new File(""tools.jar"");
        if (localToolsFile.exists()) {
            return localToolsFile;
        }

        throw new MessageException(
            ""Invalid JAVA_HOME environment variable '"" + javaHome.getAbsolutePath() + ""'."",
","['    ', 'private', ' ', 'static', ' ', 'File', ' ', 'getToolsFile', '(', ')', ' ', 'throws', ' ', 'MessageException', ' ', '{', '\n', '        ', 'File', ' ', 'javaHome', ' ', '=', ' ', 'getJavaHome', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'File', ' ', 'toolsFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'javaHome', ',', ' ', '""', 'lib/tools.jar', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'toolsFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '            ', 'return', ' ', 'toolsFile', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'File', ' ', 'toolsFileAlt', ' ', '=', ' ', 'new', ' ', 'File', '(', 'javaHome', ',', ' ', '""', '../lib/tools.jar', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'toolsFileAlt', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '            ', 'return', ' ', 'toolsFileAlt', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'File', ' ', 'classesFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'javaHome', ',', ' ', '""', '../Classes/classes.jar', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'classesFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '            ', 'return', ' ', 'classesFile', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'File', ' ', 'localToolsFile', ' ', '=', ' ', 'new', ' ', 'File', '(', '""', 'tools.jar', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'localToolsFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '            ', 'return', ' ', 'localToolsFile', ';', '\n', '        ', '}', '\n', '\n', '        ', 'throw', ' ', 'new', ' ', 'MessageException', '(', '\n', '            ', '""', ""Invalid JAVA_HOME environment variable '"", '""', ' ', '+', ' ', 'javaHome', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', ""'."", '""', ',', '\n', '<END>']"
master,5a7b78a59b879c0c3eda11b5fc7d9ae7698e2845,AgentAttach.java,getJavaHome,"    private static File getJavaHome() throws MessageException {
        String javaHomeEnv = System.getenv(""JAVA_HOME"");
        if (javaHomeEnv != null) {
            return new File(javaHomeEnv);
        }

        throw new MessageException(""No JAVA_HOME environment variable found. Must point to a local JDK installation."");
    }",https://www.github.com/neykov/extract-tls-secrets/commit/5a7b78a59b879c0c3eda11b5fc7d9ae7698e2845,"    private static File getJavaHome() throws MessageException {
        String javaHomeEnv = System.getenv(""JAVA_HOME"");
        if (javaHomeEnv != null) {
            return new File(javaHomeEnv);
        }

        throw new MessageException(""No JAVA_HOME environment variable found. Must point to a local JDK installation."");
    }
","['    ', 'private', ' ', 'static', ' ', 'File', ' ', 'getJavaHome', '(', ')', ' ', 'throws', ' ', 'MessageException', ' ', '{', '\n', '        ', 'String', ' ', 'javaHomeEnv', ' ', '=', ' ', 'System', '.', 'getenv', '(', '""', 'JAVA_HOME', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'javaHomeEnv', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'File', '(', 'javaHomeEnv', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'throw', ' ', 'new', ' ', 'MessageException', '(', '""', 'No JAVA_HOME environment variable found. Must point to a local JDK installation.', '""', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,9c84ed3fe5a409253678601b89131d2f23ce2eff,AttachHelper.java,handle,"    public static void handle(String jarPath, String pid, String logFile) throws MessageException {
        if (pid.equals(""list"")) {
            System.out.print(AttachHelper.list());",https://www.github.com/neykov/extract-tls-secrets/commit/9c84ed3fe5a409253678601b89131d2f23ce2eff,"    public static void handle(String jarPath, String pid, String logFile) throws MessageException {
        if (pid.equals(""list"")) {
            System.out.print(AttachHelper.list());
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'handle', '(', 'String', ' ', 'jarPath', ',', ' ', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'logFile', ')', ' ', 'throws', ' ', 'MessageException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'pid', '.', 'equals', '(', '""', 'list', '""', ')', ')', ' ', '{', '\n', '            ', 'System', '.', 'out', '.', 'print', '(', 'AttachHelper', '.', 'list', '(', ')', ')', ';', '\n', '<END>']"
master,9c84ed3fe5a409253678601b89131d2f23ce2eff,AttachHelper.java,attach,"    private static void attach(String pid, String jarPath, String options) {
        try {
            VirtualMachine vm = VirtualMachine.attach(pid);",https://www.github.com/neykov/extract-tls-secrets/commit/9c84ed3fe5a409253678601b89131d2f23ce2eff,"    private static void attach(String pid, String jarPath, String options) {
        try {
            VirtualMachine vm = VirtualMachine.attach(pid);
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'attach', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'jarPath', ',', ' ', 'String', ' ', 'options', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'VirtualMachine', ' ', 'vm', ' ', '=', ' ', 'VirtualMachine', '.', 'attach', '(', 'pid', ')', ';', '\n', '<END>']"
master,9c84ed3fe5a409253678601b89131d2f23ce2eff,AttachHelper.java,list,"    private static String list() {
        StringBuilder msg = new StringBuilder();
        for (VirtualMachineDescriptor vm : VirtualMachine.list()) {
            msg.append(""  "").append(vm.id()).append("" "").append(vm.displayName()).append(""\n"");
        }
        return msg.toString();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/9c84ed3fe5a409253678601b89131d2f23ce2eff,"    private static String list() {
        StringBuilder msg = new StringBuilder();
        for (VirtualMachineDescriptor vm : VirtualMachine.list()) {
            msg.append(""  "").append(vm.id()).append("" "").append(vm.displayName()).append(""\n"");
        }
        return msg.toString();
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'list', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'msg', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'VirtualMachineDescriptor', ' ', 'vm', ' ', ':', ' ', 'VirtualMachine', '.', 'list', '(', ')', ')', ' ', '{', '\n', '            ', 'msg', '.', 'append', '(', '""', '  ', '""', ')', '.', 'append', '(', 'vm', '.', 'id', '(', ')', ')', '.', 'append', '(', '""', ' ', '""', ')', '.', 'append', '(', 'vm', '.', 'displayName', '(', ')', ')', '.', 'append', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'msg', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,9e7b95b907e0dd260ae95f349665a386397056c3,MasterSecretCallback.java,onMasterSecret,"    public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat(""dd/MM/yyyy HH:mm:ss"");",https://www.github.com/neykov/extract-tls-secrets/commit/9e7b95b907e0dd260ae95f349665a386397056c3,"    public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat(""dd/MM/yyyy HH:mm:ss"");
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onMasterSecret', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'SimpleDateFormat', ' ', 'formatoFecha', ' ', '=', ' ', 'new', ' ', 'SimpleDateFormat', '(', '""', 'dd/MM/yyyy HH:mm:ss', '""', ')', ';', '\n', '<END>']"
master,2aa5682384e07a3cacfda30b43856f75c75cfd58,MasterSecretCallback.java,onSetLocalPrivateKey,"    public static void onSetLocalPrivateKey(SSLSession sslSession, PrivateKey privateKey) {
        try {
            //String masterKey = bytesToHex(privateKey.getEncoded());",https://www.github.com/neykov/extract-tls-secrets/commit/2aa5682384e07a3cacfda30b43856f75c75cfd58,"    public static void onSetLocalPrivateKey(SSLSession sslSession, PrivateKey privateKey) {
        try {
            
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onSetLocalPrivateKey', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'PrivateKey', ' ', 'privateKey', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', '\n', '<END>']"
master,2aa5682384e07a3cacfda30b43856f75c75cfd58,MasterSecretCallback.java,onSetLocalCertificates,"    public static void onSetLocalCertificates(SSLSession sslSession, X509Certificate[] certs) {
        try {
            for(int i = 0; i<certs.length; i++) {",https://www.github.com/neykov/extract-tls-secrets/commit/2aa5682384e07a3cacfda30b43856f75c75cfd58,"    public static void onSetLocalCertificates(SSLSession sslSession, X509Certificate[] certs) {
        try {
            for(int i = 0; i<certs.length; i++) {
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onSetLocalCertificates', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'X509Certificate', '[', ']', ' ', 'certs', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', '<', 'certs', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '<END>']"
master,2aa5682384e07a3cacfda30b43856f75c75cfd58,MasterSecretCallback.java,writePrivateKey,"    private static synchronized void writePrivateKey(String privateKey) throws IOException {
        Writer out = new FileWriter(secretsFileName+"".key"", true);
        out.write(""-----BEGIN PRIVATE KEY-----\n"");
        out.write(privateKey);
        out.write(NL);
        out.write(""-----END PRIVATE KEY-----"");
        out.write(NL);
        out.close();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/2aa5682384e07a3cacfda30b43856f75c75cfd58,"    private static synchronized void writePrivateKey(String privateKey) throws IOException {
        Writer out = new FileWriter(secretsFileName+"".key"", true);
        out.write(""-----BEGIN PRIVATE KEY-----\n"");
        out.write(privateKey);
        out.write(NL);
        out.write(""-----END PRIVATE KEY-----"");
        out.write(NL);
        out.close();
    }
","['    ', 'private', ' ', 'static', ' ', 'synchronized', ' ', 'void', ' ', 'writePrivateKey', '(', 'String', ' ', 'privateKey', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'Writer', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'FileWriter', '(', 'secretsFileName', '+', '""', '.key', '""', ',', ' ', 'true', ')', ';', '\n', '        ', 'out', '.', 'write', '(', '""', '-----BEGIN PRIVATE KEY-----', '\\', 'n', '""', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'privateKey', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'NL', ')', ';', '\n', '        ', 'out', '.', 'write', '(', '""', '-----END PRIVATE KEY-----', '""', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'NL', ')', ';', '\n', '        ', 'out', '.', 'close', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2aa5682384e07a3cacfda30b43856f75c75cfd58,MasterSecretCallback.java,writeCert,"    private static synchronized void writeCert(String cert) throws IOException {
        Writer out = new FileWriter(secretsFileName+"".crt"", true);
        out.write(""-----BEGIN CERTIFICATE-----\n"");
        out.write(cert);
        out.write(NL);
        out.write(""-----END CERTIFICATE-----\n"");
        out.close();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/2aa5682384e07a3cacfda30b43856f75c75cfd58,"    private static synchronized void writeCert(String cert) throws IOException {
        Writer out = new FileWriter(secretsFileName+"".crt"", true);
        out.write(""-----BEGIN CERTIFICATE-----\n"");
        out.write(cert);
        out.write(NL);
        out.write(""-----END CERTIFICATE-----\n"");
        out.close();
    }
","['    ', 'private', ' ', 'static', ' ', 'synchronized', ' ', 'void', ' ', 'writeCert', '(', 'String', ' ', 'cert', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'Writer', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'FileWriter', '(', 'secretsFileName', '+', '""', '.crt', '""', ',', ' ', 'true', ')', ';', '\n', '        ', 'out', '.', 'write', '(', '""', '-----BEGIN CERTIFICATE-----', '\\', 'n', '""', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'cert', ')', ';', '\n', '        ', 'out', '.', 'write', '(', 'NL', ')', ';', '\n', '        ', 'out', '.', 'write', '(', '""', '-----END CERTIFICATE-----', '\\', 'n', '""', ')', ';', '\n', '        ', 'out', '.', 'close', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2aa5682384e07a3cacfda30b43856f75c75cfd58,Transformer.java,instrumentClass,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""setMasterSecret"");
            method.insertAfter(MasterSecretCallback.class.getName() + "".onMasterSecret(this, $1);"");
            
            CtMethod method2 = instrumentedClass.getDeclaredMethod(""setLocalPrivateKey"");
            method2.insertAfter(MasterSecretCallback.class.getName() + "".onSetLocalPrivateKey(this, $1);"");
            
            CtMethod method3 = instrumentedClass.getDeclaredMethod(""setLocalCertificates"");
            method3.insertAfter(MasterSecretCallback.class.getName() + "".onSetLocalCertificates(this, $1);"");
",https://www.github.com/neykov/extract-tls-secrets/commit/2aa5682384e07a3cacfda30b43856f75c75cfd58,"        protected void instrumentClass(CtClass instrumentedClass) throws CannotCompileException, NotFoundException {
            CtMethod method = instrumentedClass.getDeclaredMethod(""setMasterSecret"");
            method.insertAfter(MasterSecretCallback.class.getName() + "".onMasterSecret(this, $1);"");
            
            CtMethod method2 = instrumentedClass.getDeclaredMethod(""setLocalPrivateKey"");
            method2.insertAfter(MasterSecretCallback.class.getName() + "".onSetLocalPrivateKey(this, $1);"");
            
            CtMethod method3 = instrumentedClass.getDeclaredMethod(""setLocalCertificates"");
            method3.insertAfter(MasterSecretCallback.class.getName() + "".onSetLocalCertificates(this, $1);"");
","['        ', 'protected', ' ', 'void', ' ', 'instrumentClass', '(', 'CtClass', ' ', 'instrumentedClass', ')', ' ', 'throws', ' ', 'CannotCompileException', ',', ' ', 'NotFoundException', ' ', '{', '\n', '            ', 'CtMethod', ' ', 'method', ' ', '=', ' ', 'instrumentedClass', '.', 'getDeclaredMethod', '(', '""', 'setMasterSecret', '""', ')', ';', '\n', '            ', 'method', '.', 'insertAfter', '(', 'MasterSecretCallback', '.', 'class', '.', 'getName', '(', ')', ' ', '+', ' ', '""', '.onMasterSecret(this, $1);', '""', ')', ';', '\n', '            ', '\n', '            ', 'CtMethod', ' ', 'method2', ' ', '=', ' ', 'instrumentedClass', '.', 'getDeclaredMethod', '(', '""', 'setLocalPrivateKey', '""', ')', ';', '\n', '            ', 'method2', '.', 'insertAfter', '(', 'MasterSecretCallback', '.', 'class', '.', 'getName', '(', ')', ' ', '+', ' ', '""', '.onSetLocalPrivateKey(this, $1);', '""', ')', ';', '\n', '            ', '\n', '            ', 'CtMethod', ' ', 'method3', ' ', '=', ' ', 'instrumentedClass', '.', 'getDeclaredMethod', '(', '""', 'setLocalCertificates', '""', ')', ';', '\n', '            ', 'method3', '.', 'insertAfter', '(', 'MasterSecretCallback', '.', 'class', '.', 'getName', '(', ')', ' ', '+', ' ', '""', '.onSetLocalCertificates(this, $1);', '""', ')', ';', '\n', '<END>']"
master,955ebeffdbd617c128271eccb4f4200d2db818e7,MasterSecretCallback.java,onMasterSecret,"    public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
        try {
            String connectionDetails = getConnectionDetails(sslSession);",https://www.github.com/neykov/extract-tls-secrets/commit/955ebeffdbd617c128271eccb4f4200d2db818e7,"    public static void onMasterSecret(SSLSession sslSession, Key masterSecret) {
        try {
            String connectionDetails = getConnectionDetails(sslSession);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onMasterSecret', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'connectionDetails', ' ', '=', ' ', 'getConnectionDetails', '(', 'sslSession', ')', ';', '\n', '<END>']"
master,955ebeffdbd617c128271eccb4f4200d2db818e7,MasterSecretCallback.java,onCalculateKeys,"    public static void onCalculateKeys(SSLSession sslSession, Object randomCookie, Key masterSecret) {
        try {
            String connectionDetails = getConnectionDetails(sslSession);",https://www.github.com/neykov/extract-tls-secrets/commit/955ebeffdbd617c128271eccb4f4200d2db818e7,"    public static void onCalculateKeys(SSLSession sslSession, Object randomCookie, Key masterSecret) {
        try {
            String connectionDetails = getConnectionDetails(sslSession);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onCalculateKeys', '(', 'SSLSession', ' ', 'sslSession', ',', ' ', 'Object', ' ', 'randomCookie', ',', ' ', 'Key', ' ', 'masterSecret', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'connectionDetails', ' ', '=', ' ', 'getConnectionDetails', '(', 'sslSession', ')', ';', '\n', '<END>']"
master,955ebeffdbd617c128271eccb4f4200d2db818e7,MasterSecretCallback.java,onKeyDerivation,"    public static void onKeyDerivation(Object context, SecretKey key) {
        String secretName = TLS13_SECRET_NAMES.get(key.getAlgorithm());
        if (secretName == null) {
            return;
        }
        try {
            SSLSession sslSession = (SSLSession) get(context, ""handshakeSession"");",https://www.github.com/neykov/extract-tls-secrets/commit/955ebeffdbd617c128271eccb4f4200d2db818e7,"    public static void onKeyDerivation(Object context, SecretKey key) {
        String secretName = TLS13_SECRET_NAMES.get(key.getAlgorithm());
        if (secretName == null) {
            return;
        }
        try {
            SSLSession sslSession = (SSLSession) get(context, ""handshakeSession"");
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'onKeyDerivation', '(', 'Object', ' ', 'context', ',', ' ', 'SecretKey', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secretName', ' ', '=', ' ', 'TLS13_SECRET_NAMES', '.', 'get', '(', 'key', '.', 'getAlgorithm', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'secretName', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'SSLSession', ' ', 'sslSession', ' ', '=', ' ', '(', 'SSLSession', ')', ' ', 'get', '(', 'context', ',', ' ', '""', 'handshakeSession', '""', ')', ';', '\n', '<END>']"
master,955ebeffdbd617c128271eccb4f4200d2db818e7,MasterSecretCallback.java,write,"    private static synchronized void write(String... secrets) throws IOException {
        Writer out = new FileWriter(secretsFileName, true);
        for (String secret : secrets) {
            out.write(secret);
            out.write(NL);
        }
        out.close();
    }",https://www.github.com/neykov/extract-tls-secrets/commit/955ebeffdbd617c128271eccb4f4200d2db818e7,"    private static synchronized void write(String... secrets) throws IOException {
        Writer out = new FileWriter(secretsFileName, true);
        for (String secret : secrets) {
            out.write(secret);
            out.write(NL);
        }
        out.close();
    }
","['    ', 'private', ' ', 'static', ' ', 'synchronized', ' ', 'void', ' ', 'write', '(', 'String', '.', '.', '.', ' ', 'secrets', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'Writer', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'FileWriter', '(', 'secretsFileName', ',', ' ', 'true', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'secret', ' ', ':', ' ', 'secrets', ')', ' ', '{', '\n', '            ', 'out', '.', 'write', '(', 'secret', ')', ';', '\n', '            ', 'out', '.', 'write', '(', 'NL', ')', ';', '\n', '        ', '}', '\n', '        ', 'out', '.', 'close', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
