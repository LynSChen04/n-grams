Branch Name,Commit Hash,File Name,Method Name,Method Code,Commit Link,Method Code No Comments,Tokens
master,a16e6c6017262100d39ed3793eff199ab1e289bd,FinderApplication.java,main,"	public static void main(String[] args) {
		SpringApplication.run(FinderApplication.class, args);
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/a16e6c6017262100d39ed3793eff199ab1e289bd,"	public static void main(String[] args) {
		SpringApplication.run(FinderApplication.class, args);
	}
","['\t', 'public', ' ', 'static', ' ', 'void', ' ', 'main', '(', 'String', '[', ']', ' ', 'args', ')', ' ', '{', '\n', '\t\t', 'SpringApplication', '.', 'run', '(', 'FinderApplication', '.', 'class', ',', ' ', 'args', ')', ';', '\n', '\t', '}', '\n', '<END>']"
master,4b321431e056c11765c8aa080bf91d494d6c9f47,ComicController.java,download,"    public String download(@RequestParam(""homePage"") String homePage) {
        ComicEntity comicInfo = comicService.getComicInfo(homePage);
        comicService.downloadComic(comicInfo);
        return comicInfo.toString();
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4b321431e056c11765c8aa080bf91d494d6c9f47,"    public String download(@RequestParam(""homePage"") String homePage) {
        ComicEntity comicInfo = comicService.getComicInfo(homePage);
        comicService.downloadComic(comicInfo);
        return comicInfo.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'download', '(', '@RequestParam', '(', '""', 'homePage', '""', ')', ' ', 'String', ' ', 'homePage', ')', ' ', '{', '\n', '        ', 'ComicEntity', ' ', 'comicInfo', ' ', '=', ' ', 'comicService', '.', 'getComicInfo', '(', 'homePage', ')', ';', '\n', '        ', 'comicService', '.', 'downloadComic', '(', 'comicInfo', ')', ';', '\n', '        ', 'return', ' ', 'comicInfo', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4b321431e056c11765c8aa080bf91d494d6c9f47,ComicService.java,reverseImage,"    private BufferedImage reverseImage(BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subimage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subimage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4b321431e056c11765c8aa080bf91d494d6c9f47,"    private BufferedImage reverseImage(BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subimage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subimage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }
","['    ', 'private', ' ', 'BufferedImage', ' ', 'reverseImage', '(', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '10', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subimage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subimage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n', '<END>']"
master,4b321431e056c11765c8aa080bf91d494d6c9f47,ComicService.java,saveImage,"    private void saveImage(Map<String, BufferedImage> imageMap) {
        for(Map.Entry<String, BufferedImage> imageEntry : imageMap.entrySet()) {
            String image = imageEntry.getKey();",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4b321431e056c11765c8aa080bf91d494d6c9f47,"    private void saveImage(Map<String, BufferedImage> imageMap) {
        for(Map.Entry<String, BufferedImage> imageEntry : imageMap.entrySet()) {
            String image = imageEntry.getKey();
","['    ', 'private', ' ', 'void', ' ', 'saveImage', '(', 'Map', '<', 'String', ',', ' ', 'BufferedImage', '>', ' ', 'imageMap', ')', ' ', '{', '\n', '        ', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'BufferedImage', '>', ' ', 'imageEntry', ' ', ':', ' ', 'imageMap', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'image', ' ', '=', ' ', 'imageEntry', '.', 'getKey', '(', ')', ';', '\n', '<END>']"
master,fac1ec551f82a9e4676c89fad242f1b9fe345f28,AsyncTaskService.java,reverseImage,"    public Future<BufferedImage> reverseImage(BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subimage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subimage, null, 0, height - (i + 1) * preImgHeight);
        }
        return new AsyncResult<>(result);
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/fac1ec551f82a9e4676c89fad242f1b9fe345f28,"    public Future<BufferedImage> reverseImage(BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subimage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subimage, null, 0, height - (i + 1) * preImgHeight);
        }
        return new AsyncResult<>(result);
    }
","['    ', 'public', ' ', 'Future', '<', 'BufferedImage', '>', ' ', 'reverseImage', '(', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '10', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subimage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subimage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'AsyncResult', '<', '>', '(', 'result', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fac1ec551f82a9e4676c89fad242f1b9fe345f28,AsyncTaskService.java,saveImage,"    public void saveImage(String path, BufferedImage bufferedImage) {
        try {
            ImageIO.write(bufferedImage, ""jpg"", FileUtil.file(path));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/fac1ec551f82a9e4676c89fad242f1b9fe345f28,"    public void saveImage(String path, BufferedImage bufferedImage) {
        try {
            ImageIO.write(bufferedImage, ""jpg"", FileUtil.file(path));
","['    ', 'public', ' ', 'void', ' ', 'saveImage', '(', 'String', ' ', 'path', ',', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'ImageIO', '.', 'write', '(', 'bufferedImage', ',', ' ', '""', 'jpg', '""', ',', ' ', 'FileUtil', '.', 'file', '(', 'path', ')', ')', ';', '\n', '<END>']"
master,fac1ec551f82a9e4676c89fad242f1b9fe345f28,ComicService.java,getComicInfo,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = HttpUtil.createPost(comicHomePage).cookie(cookie).setHttpProxy(proxyHost, proxyPort).execute();
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/fac1ec551f82a9e4676c89fad242f1b9fe345f28,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = HttpUtil.createPost(comicHomePage).cookie(cookie).setHttpProxy(proxyHost, proxyPort).execute();
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }
","['    ', 'public', ' ', 'ComicEntity', ' ', 'getComicInfo', '(', 'String', ' ', 'comicHomePage', ')', ' ', 'throws', ' ', 'ExecutionException', ',', ' ', 'InterruptedException', ' ', '{', '\n', '        ', 'ComicEntity', ' ', 'comicEntity', ' ', '=', ' ', 'new', ' ', 'ComicEntity', '(', ')', ';', '\n', '        ', 'HttpResponse', ' ', 'httpResponse', ' ', '=', ' ', 'HttpUtil', '.', 'createPost', '(', 'comicHomePage', ')', '.', 'cookie', '(', 'cookie', ')', '.', 'setHttpProxy', '(', 'proxyHost', ',', ' ', 'proxyPort', ')', '.', 'execute', '(', ')', ';', '\n', '        ', 'String', ' ', 'body', ' ', '=', ' ', 'httpResponse', '.', 'body', '(', ')', ';', '\n', '        ', 'String', ' ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'subBetween', '(', 'body', ',', ' ', '""', '<div itemprop=', '\\""', 'name', '\\""', ' class=', '\\""', 'pull-left', '\\""', '>', '\\', 'n', '""', ',', ' ', '""', '\\', 'n</div>', '""', ')', ';', '\n', '        ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'replaceChars', '(', 'title', ',', ' ', 'new', ' ', 'char', '[', ']', '{', ""'/'"", ',', ' ', ""'\\\\'"", '}', ',', ' ', 'StrUtil', '.', 'DASHED', ')', ';', '\n', '        ', 'comicEntity', '.', 'setTitle', '(', 'title', ')', ';', '\n', '        ', 'List', '<', 'ChapterEntity', '>', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', '.', 'get', '(', ')', ';', '\n', '        ', 'for', '(', 'ChapterEntity', ' ', 'chapterEntity', ' ', ':', ' ', 'chapterEntities', ')', ' ', '{', '\n', '            ', 'chapterEntity', '.', 'setPhotos', '(', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', '.', 'get', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'comicEntity', '.', 'setChapters', '(', 'chapterEntities', ')', ';', '\n', '        ', 'log', '.', 'info', '(', 'comicEntity', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'comicEntity', ';', '\n', '    ', '}', '\n', '<END>']"
master,a6d34278654849d519b1c6044134d581b6b90237,AsyncTaskService.java,createPost,"    public HttpRequest createPost(String url) {
        HttpRequest post = HttpUtil.createPost(url);
        if((proxyHost != null && proxyPort == 0)) {
            post.setHttpProxy(proxyHost, proxyPort);
        }
        if(cookie != null) {
            post.cookie(cookie);
        }
        return post;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/a6d34278654849d519b1c6044134d581b6b90237,"    public HttpRequest createPost(String url) {
        HttpRequest post = HttpUtil.createPost(url);
        if((proxyHost != null && proxyPort == 0)) {
            post.setHttpProxy(proxyHost, proxyPort);
        }
        if(cookie != null) {
            post.cookie(cookie);
        }
        return post;
    }
","['    ', 'public', ' ', 'HttpRequest', ' ', 'createPost', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'HttpRequest', ' ', 'post', ' ', '=', ' ', 'HttpUtil', '.', 'createPost', '(', 'url', ')', ';', '\n', '        ', 'if', '(', '(', 'proxyHost', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'proxyPort', ' ', '=', '=', ' ', '0', ')', ')', ' ', '{', '\n', '            ', 'post', '.', 'setHttpProxy', '(', 'proxyHost', ',', ' ', 'proxyPort', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', '(', 'cookie', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'post', '.', 'cookie', '(', 'cookie', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'post', ';', '\n', '    ', '}', '\n', '<END>']"
master,a6d34278654849d519b1c6044134d581b6b90237,ComicService.java,getComicInfo,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = taskService.createPost(comicHomePage).execute();
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/a6d34278654849d519b1c6044134d581b6b90237,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = taskService.createPost(comicHomePage).execute();
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }
","['    ', 'public', ' ', 'ComicEntity', ' ', 'getComicInfo', '(', 'String', ' ', 'comicHomePage', ')', ' ', 'throws', ' ', 'ExecutionException', ',', ' ', 'InterruptedException', ' ', '{', '\n', '        ', 'ComicEntity', ' ', 'comicEntity', ' ', '=', ' ', 'new', ' ', 'ComicEntity', '(', ')', ';', '\n', '        ', 'HttpResponse', ' ', 'httpResponse', ' ', '=', ' ', 'taskService', '.', 'createPost', '(', 'comicHomePage', ')', '.', 'execute', '(', ')', ';', '\n', '        ', 'String', ' ', 'body', ' ', '=', ' ', 'httpResponse', '.', 'body', '(', ')', ';', '\n', '        ', 'String', ' ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'subBetween', '(', 'body', ',', ' ', '""', '<div itemprop=', '\\""', 'name', '\\""', ' class=', '\\""', 'pull-left', '\\""', '>', '\\', 'n', '""', ',', ' ', '""', '\\', 'n</div>', '""', ')', ';', '\n', '        ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'replaceChars', '(', 'title', ',', ' ', 'new', ' ', 'char', '[', ']', '{', ""'/'"", ',', ' ', ""'\\\\'"", '}', ',', ' ', 'StrUtil', '.', 'DASHED', ')', ';', '\n', '        ', 'comicEntity', '.', 'setTitle', '(', 'title', ')', ';', '\n', '        ', 'List', '<', 'ChapterEntity', '>', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', '.', 'get', '(', ')', ';', '\n', '        ', 'for', '(', 'ChapterEntity', ' ', 'chapterEntity', ' ', ':', ' ', 'chapterEntities', ')', ' ', '{', '\n', '            ', 'chapterEntity', '.', 'setPhotos', '(', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', '.', 'get', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'comicEntity', '.', 'setChapters', '(', 'chapterEntities', ')', ';', '\n', '        ', 'log', '.', 'info', '(', 'comicEntity', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'comicEntity', ';', '\n', '    ', '}', '\n', '<END>']"
master,95de6be85b76e1ca3c3a9ed79d3d06da49b51ab1,AsyncTaskService.java,createPost,"    public HttpRequest createPost(String url) {
        HttpRequest post = HttpUtil.createPost(url);
        if((proxyHost != null && proxyPort != 0)) {
            post.setHttpProxy(proxyHost, proxyPort);
        }
        if(cookie != null) {
            post.cookie(cookie);
        }
        return post;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/95de6be85b76e1ca3c3a9ed79d3d06da49b51ab1,"    public HttpRequest createPost(String url) {
        HttpRequest post = HttpUtil.createPost(url);
        if((proxyHost != null && proxyPort != 0)) {
            post.setHttpProxy(proxyHost, proxyPort);
        }
        if(cookie != null) {
            post.cookie(cookie);
        }
        return post;
    }
","['    ', 'public', ' ', 'HttpRequest', ' ', 'createPost', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'HttpRequest', ' ', 'post', ' ', '=', ' ', 'HttpUtil', '.', 'createPost', '(', 'url', ')', ';', '\n', '        ', 'if', '(', '(', 'proxyHost', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'proxyPort', ' ', '!', '=', ' ', '0', ')', ')', ' ', '{', '\n', '            ', 'post', '.', 'setHttpProxy', '(', 'proxyHost', ',', ' ', 'proxyPort', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', '(', 'cookie', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'post', '.', 'cookie', '(', 'cookie', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'post', ';', '\n', '    ', '}', '\n', '<END>']"
master,95de6be85b76e1ca3c3a9ed79d3d06da49b51ab1,ComicService.java,getComicInfo,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = null ;
        if(StrUtil.contains(comicHomePage,""photo"")) {
            httpResponse = taskService.createPost(StrUtil.replace(comicHomePage,""photo"",""album"")).setFollowRedirects(true).execute();
        }else {
            httpResponse = taskService.createPost(comicHomePage).execute();
        }
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/95de6be85b76e1ca3c3a9ed79d3d06da49b51ab1,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = null ;
        if(StrUtil.contains(comicHomePage,""photo"")) {
            httpResponse = taskService.createPost(StrUtil.replace(comicHomePage,""photo"",""album"")).setFollowRedirects(true).execute();
        }else {
            httpResponse = taskService.createPost(comicHomePage).execute();
        }
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }
","['    ', 'public', ' ', 'ComicEntity', ' ', 'getComicInfo', '(', 'String', ' ', 'comicHomePage', ')', ' ', 'throws', ' ', 'ExecutionException', ',', ' ', 'InterruptedException', ' ', '{', '\n', '        ', 'ComicEntity', ' ', 'comicEntity', ' ', '=', ' ', 'new', ' ', 'ComicEntity', '(', ')', ';', '\n', '        ', 'HttpResponse', ' ', 'httpResponse', ' ', '=', ' ', 'null', ' ', ';', '\n', '        ', 'if', '(', 'StrUtil', '.', 'contains', '(', 'comicHomePage', ',', '""', 'photo', '""', ')', ')', ' ', '{', '\n', '            ', 'httpResponse', ' ', '=', ' ', 'taskService', '.', 'createPost', '(', 'StrUtil', '.', 'replace', '(', 'comicHomePage', ',', '""', 'photo', '""', ',', '""', 'album', '""', ')', ')', '.', 'setFollowRedirects', '(', 'true', ')', '.', 'execute', '(', ')', ';', '\n', '        ', '}', 'else', ' ', '{', '\n', '            ', 'httpResponse', ' ', '=', ' ', 'taskService', '.', 'createPost', '(', 'comicHomePage', ')', '.', 'execute', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'String', ' ', 'body', ' ', '=', ' ', 'httpResponse', '.', 'body', '(', ')', ';', '\n', '        ', 'String', ' ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'subBetween', '(', 'body', ',', ' ', '""', '<div itemprop=', '\\""', 'name', '\\""', ' class=', '\\""', 'pull-left', '\\""', '>', '\\', 'n', '""', ',', ' ', '""', '\\', 'n</div>', '""', ')', ';', '\n', '        ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'replaceChars', '(', 'title', ',', ' ', 'new', ' ', 'char', '[', ']', '{', ""'/'"", ',', ' ', ""'\\\\'"", '}', ',', ' ', 'StrUtil', '.', 'DASHED', ')', ';', '\n', '        ', 'comicEntity', '.', 'setTitle', '(', 'title', ')', ';', '\n', '        ', 'List', '<', 'ChapterEntity', '>', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', '.', 'get', '(', ')', ';', '\n', '        ', 'for', '(', 'ChapterEntity', ' ', 'chapterEntity', ' ', ':', ' ', 'chapterEntities', ')', ' ', '{', '\n', '            ', 'chapterEntity', '.', 'setPhotos', '(', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', '.', 'get', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'comicEntity', '.', 'setChapters', '(', 'chapterEntities', ')', ';', '\n', '        ', 'log', '.', 'info', '(', 'comicEntity', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'comicEntity', ';', '\n', '    ', '}', '\n', '<END>']"
master,ea298bc2e88dd89141edf8a2cc319db1d88d536e,ComicService.java,getComicInfo,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = null;
        if(StrUtil.contains(comicHomePage, ""photo"")) {
            httpResponse = taskService.createPost(StrUtil.replace(comicHomePage, ""photo"", ""album"")).setFollowRedirects(true).execute();
        } else {
            httpResponse = taskService.createPost(comicHomePage).execute();
        }
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/ea298bc2e88dd89141edf8a2cc319db1d88d536e,"    public ComicEntity getComicInfo(String comicHomePage) throws ExecutionException, InterruptedException {
        ComicEntity comicEntity = new ComicEntity();
        HttpResponse httpResponse = null;
        if(StrUtil.contains(comicHomePage, ""photo"")) {
            httpResponse = taskService.createPost(StrUtil.replace(comicHomePage, ""photo"", ""album"")).setFollowRedirects(true).execute();
        } else {
            httpResponse = taskService.createPost(comicHomePage).execute();
        }
        String body = httpResponse.body();
        String title = StrUtil.subBetween(body, ""<div itemprop=\""name\"" class=\""pull-left\"">\n"", ""\n</div>"");
        title = StrUtil.replaceChars(title, new char[]{'/', '\\'}, StrUtil.DASHED);
        comicEntity.setTitle(title);
        List<ChapterEntity> chapterEntities = taskService.getChapterInfo(body, comicHomePage).get();
        for(ChapterEntity chapterEntity : chapterEntities) {
            chapterEntity.setPhotos(taskService.getPhotoInfo(chapterEntity).get());
        }
        comicEntity.setChapters(chapterEntities);
        log.info(comicEntity.toString());
        return comicEntity;
    }
","['    ', 'public', ' ', 'ComicEntity', ' ', 'getComicInfo', '(', 'String', ' ', 'comicHomePage', ')', ' ', 'throws', ' ', 'ExecutionException', ',', ' ', 'InterruptedException', ' ', '{', '\n', '        ', 'ComicEntity', ' ', 'comicEntity', ' ', '=', ' ', 'new', ' ', 'ComicEntity', '(', ')', ';', '\n', '        ', 'HttpResponse', ' ', 'httpResponse', ' ', '=', ' ', 'null', ';', '\n', '        ', 'if', '(', 'StrUtil', '.', 'contains', '(', 'comicHomePage', ',', ' ', '""', 'photo', '""', ')', ')', ' ', '{', '\n', '            ', 'httpResponse', ' ', '=', ' ', 'taskService', '.', 'createPost', '(', 'StrUtil', '.', 'replace', '(', 'comicHomePage', ',', ' ', '""', 'photo', '""', ',', ' ', '""', 'album', '""', ')', ')', '.', 'setFollowRedirects', '(', 'true', ')', '.', 'execute', '(', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'httpResponse', ' ', '=', ' ', 'taskService', '.', 'createPost', '(', 'comicHomePage', ')', '.', 'execute', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'String', ' ', 'body', ' ', '=', ' ', 'httpResponse', '.', 'body', '(', ')', ';', '\n', '        ', 'String', ' ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'subBetween', '(', 'body', ',', ' ', '""', '<div itemprop=', '\\""', 'name', '\\""', ' class=', '\\""', 'pull-left', '\\""', '>', '\\', 'n', '""', ',', ' ', '""', '\\', 'n</div>', '""', ')', ';', '\n', '        ', 'title', ' ', '=', ' ', 'StrUtil', '.', 'replaceChars', '(', 'title', ',', ' ', 'new', ' ', 'char', '[', ']', '{', ""'/'"", ',', ' ', ""'\\\\'"", '}', ',', ' ', 'StrUtil', '.', 'DASHED', ')', ';', '\n', '        ', 'comicEntity', '.', 'setTitle', '(', 'title', ')', ';', '\n', '        ', 'List', '<', 'ChapterEntity', '>', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', '.', 'get', '(', ')', ';', '\n', '        ', 'for', '(', 'ChapterEntity', ' ', 'chapterEntity', ' ', ':', ' ', 'chapterEntities', ')', ' ', '{', '\n', '            ', 'chapterEntity', '.', 'setPhotos', '(', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', '.', 'get', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'comicEntity', '.', 'setChapters', '(', 'chapterEntities', ')', ';', '\n', '        ', 'log', '.', 'info', '(', 'comicEntity', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'comicEntity', ';', '\n', '    ', '}', '\n', '<END>']"
master,fff769e0b6ab8f851aa9e43d2daa025996285dfd,AsyncTaskService.java,saveImage,"    public void saveImage(String url, File photoFile) {
        HttpResponse httpResponse = null;
        while(httpResponse == null) {
            try {",https://www.github.com/jiayaoo3o/18-comic-finder/commit/fff769e0b6ab8f851aa9e43d2daa025996285dfd,"    public void saveImage(String url, File photoFile) {
        HttpResponse httpResponse = null;
        while(httpResponse == null) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'saveImage', '(', 'String', ' ', 'url', ',', ' ', 'File', ' ', 'photoFile', ')', ' ', '{', '\n', '        ', 'HttpResponse', ' ', 'httpResponse', ' ', '=', ' ', 'null', ';', '\n', '        ', 'while', '(', 'httpResponse', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,4c7b9913b0f75dcb5db1b7af6a1063af76f9d503,AsyncTaskService.java,saveImage,"    public void saveImage(File photoFile, BufferedImage bufferedImage) {
        try {
            ImageIO.write(bufferedImage, ""jpg"", photoFile);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4c7b9913b0f75dcb5db1b7af6a1063af76f9d503,"    public void saveImage(File photoFile, BufferedImage bufferedImage) {
        try {
            ImageIO.write(bufferedImage, ""jpg"", photoFile);
","['    ', 'public', ' ', 'void', ' ', 'saveImage', '(', 'File', ' ', 'photoFile', ',', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'ImageIO', '.', 'write', '(', 'bufferedImage', ',', ' ', '""', 'jpg', '""', ',', ' ', 'photoFile', ')', ';', '\n', '<END>']"
master,971c240de85ba2e83e504dc94f6142a289370e18,AsyncTaskService.java,createPost,"    public HttpRequest createPost(String url) {
        HttpRequest post = HttpUtil.createPost(url);
        if((proxyHost != null && proxyPort != null)) {
            post.setHttpProxy(proxyHost, proxyPort);
        }
        if(cookie != null) {
            post.cookie(cookie);
        }
        return post;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/971c240de85ba2e83e504dc94f6142a289370e18,"    public HttpRequest createPost(String url) {
        HttpRequest post = HttpUtil.createPost(url);
        if((proxyHost != null && proxyPort != null)) {
            post.setHttpProxy(proxyHost, proxyPort);
        }
        if(cookie != null) {
            post.cookie(cookie);
        }
        return post;
    }
","['    ', 'public', ' ', 'HttpRequest', ' ', 'createPost', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'HttpRequest', ' ', 'post', ' ', '=', ' ', 'HttpUtil', '.', 'createPost', '(', 'url', ')', ';', '\n', '        ', 'if', '(', '(', 'proxyHost', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'proxyPort', ' ', '!', '=', ' ', 'null', ')', ')', ' ', '{', '\n', '            ', 'post', '.', 'setHttpProxy', '(', 'proxyHost', ',', ' ', 'proxyPort', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', '(', 'cookie', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'post', '.', 'cookie', '(', 'cookie', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'post', ';', '\n', '    ', '}', '\n', '<END>']"
master,313ce987599d034f322c5512feb702cd089eb7d8,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(256);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/313ce987599d034f322c5512feb702cd089eb7d8,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(256);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '4', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '8', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '256', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,b7b47486b7e7230cd854bda0bf1541dc5116e39a,AsyncTaskService.java,saveImage,"    public void saveImage(File photoFile, BufferedImage bufferedImage) {
        boolean isWrite = false;
        while(!isWrite) {
            try {",https://www.github.com/jiayaoo3o/18-comic-finder/commit/b7b47486b7e7230cd854bda0bf1541dc5116e39a,"    public void saveImage(File photoFile, BufferedImage bufferedImage) {
        boolean isWrite = false;
        while(!isWrite) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'saveImage', '(', 'File', ' ', 'photoFile', ',', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'isWrite', ' ', '=', ' ', 'false', ';', '\n', '        ', 'while', '(', '!', 'isWrite', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,6680b783c762867cffe1f95321bafe16a250d3b6,AsyncTaskService.java,reverseImage,"    public CompletableFuture<BufferedImage> reverseImage(BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subimage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subimage, null, 0, height - (i + 1) * preImgHeight);
        }
        return CompletableFuture.completedFuture(result);
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/6680b783c762867cffe1f95321bafe16a250d3b6,"    public CompletableFuture<BufferedImage> reverseImage(BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subimage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subimage, null, 0, height - (i + 1) * preImgHeight);
        }
        return CompletableFuture.completedFuture(result);
    }
","['    ', 'public', ' ', 'CompletableFuture', '<', 'BufferedImage', '>', ' ', 'reverseImage', '(', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '10', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subimage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subimage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'CompletableFuture', '.', 'completedFuture', '(', 'result', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,c72e61d9eee7d45d848919726ca9c526b1e6460c,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(8);
		taskExecutor.setMaxPoolSize(16);
		taskExecutor.setQueueCapacity(256);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c72e61d9eee7d45d848919726ca9c526b1e6460c,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(8);
		taskExecutor.setMaxPoolSize(16);
		taskExecutor.setQueueCapacity(256);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '8', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '16', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '256', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,f49ad855f26e81c0ab45d331cb5c49712a60014f,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(2);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(512);
		taskExecutor.setKeepAliveSeconds(120);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f49ad855f26e81c0ab45d331cb5c49712a60014f,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(2);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(512);
		taskExecutor.setKeepAliveSeconds(120);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '2', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '8', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '512', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '120', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,c8dd9dbb75526dafd45ee71b1de18a5d3e37e160,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(8);
		taskExecutor.setMaxPoolSize(16);
		taskExecutor.setQueueCapacity(512);
		taskExecutor.setKeepAliveSeconds(120);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c8dd9dbb75526dafd45ee71b1de18a5d3e37e160,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(8);
		taskExecutor.setMaxPoolSize(16);
		taskExecutor.setQueueCapacity(512);
		taskExecutor.setKeepAliveSeconds(120);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '8', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '16', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '512', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '120', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,2cf404d85e73752d679720e779ffc6fdb13582ba,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(2);
		taskExecutor.setMaxPoolSize(4);
		taskExecutor.setQueueCapacity(256);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/2cf404d85e73752d679720e779ffc6fdb13582ba,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(2);
		taskExecutor.setMaxPoolSize(4);
		taskExecutor.setQueueCapacity(256);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '2', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '4', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '256', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,0315c7a84983b343f4b42ce41d49debebda5c671,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(2);
		taskExecutor.setMaxPoolSize(4);
		taskExecutor.setQueueCapacity(64);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/0315c7a84983b343f4b42ce41d49debebda5c671,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(2);
		taskExecutor.setMaxPoolSize(4);
		taskExecutor.setQueueCapacity(64);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '2', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '4', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '64', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,ddd9c79d7e671a6b95aa8caf023aa9dbba67ea51,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(64);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/ddd9c79d7e671a6b95aa8caf023aa9dbba67ea51,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(64);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '4', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '8', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '64', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,7afd490a70c573ec00370a01ccf34e7a5cbc3828,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(128);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/7afd490a70c573ec00370a01ccf34e7a5cbc3828,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(8);
		taskExecutor.setQueueCapacity(128);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '4', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '8', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '128', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,2749de1feb81c8dedb150b5139a841aca021a87b,FinderApplication.java,taskExecutor,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(16);
		taskExecutor.setQueueCapacity(128);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}",https://www.github.com/jiayaoo3o/18-comic-finder/commit/2749de1feb81c8dedb150b5139a841aca021a87b,"	public Executor taskExecutor() {
		ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();
		taskExecutor.setCorePoolSize(4);
		taskExecutor.setMaxPoolSize(16);
		taskExecutor.setQueueCapacity(128);
		taskExecutor.setKeepAliveSeconds(60);
		taskExecutor.setThreadNamePrefix(""async-task-"");
		taskExecutor.setWaitForTasksToCompleteOnShutdown(true);
		taskExecutor.setAllowCoreThreadTimeOut(true);
		taskExecutor.setAwaitTerminationSeconds(60);
		taskExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
		taskExecutor.initialize();
		return taskExecutor;
	}
","['\t', 'public', ' ', 'Executor', ' ', 'taskExecutor', '(', ')', ' ', '{', '\n', '\t\t', 'ThreadPoolTaskExecutor', ' ', 'taskExecutor', ' ', '=', ' ', 'new', ' ', 'ThreadPoolTaskExecutor', '(', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setCorePoolSize', '(', '4', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setMaxPoolSize', '(', '16', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setQueueCapacity', '(', '128', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setKeepAliveSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setThreadNamePrefix', '(', '""', 'async-task-', '""', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setWaitForTasksToCompleteOnShutdown', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAllowCoreThreadTimeOut', '(', 'true', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setAwaitTerminationSeconds', '(', '60', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'setRejectedExecutionHandler', '(', 'new', ' ', 'ThreadPoolExecutor', '.', 'CallerRunsPolicy', '(', ')', ')', ';', '\n', '\t\t', 'taskExecutor', '.', 'initialize', '(', ')', ';', '\n', '\t\t', 'return', ' ', 'taskExecutor', ';', '\n', '\t', '}', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,ChapterEntity.java,toString,"    public String toString() {
        return ""ChapterEntity{"" + ""name='"" + name + '\'' + "", url='"" + url + '\'' + "", photos="" + photos + "", updatedAt="" + updatedAt + '}';
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public String toString() {
        return ""ChapterEntity{"" + ""name='"" + name + '\'' + "", url='"" + url + '\'' + "", photos="" + photos + "", updatedAt="" + updatedAt + '}';
    }
","['    ', 'public', ' ', 'String', ' ', 'toString', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', 'ChapterEntity{', '""', ' ', '+', ' ', '""', ""name='"", '""', ' ', '+', ' ', 'name', ' ', '+', ' ', ""'\\''"", ' ', '+', ' ', '""', "", url='"", '""', ' ', '+', ' ', 'url', ' ', '+', ' ', ""'\\''"", ' ', '+', ' ', '""', ', photos=', '""', ' ', '+', ' ', 'photos', ' ', '+', ' ', '""', ', updatedAt=', '""', ' ', '+', ' ', 'updatedAt', ' ', '+', ' ', ""'}'"", ';', '\n', '    ', '}', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,ComicEntity.java,toString,"    public String toString() {
        return ""ComicEntity{"" + ""title='"" + title + '\'' + "", chapters="" + chapters + '}';
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public String toString() {
        return ""ComicEntity{"" + ""title='"" + title + '\'' + "", chapters="" + chapters + '}';
    }
","['    ', 'public', ' ', 'String', ' ', 'toString', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', 'ComicEntity{', '""', ' ', '+', ' ', '""', ""title='"", '""', ' ', '+', ' ', 'title', ' ', '+', ' ', ""'\\''"", ' ', '+', ' ', '""', ', chapters=', '""', ' ', '+', ' ', 'chapters', ' ', '+', ' ', ""'}'"", ';', '\n', '    ', '}', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,PhotoEntity.java,toString,"    public String toString() {
        return ""PhotoEntity{"" + ""name='"" + name + '\'' + "", url='"" + url + '\'' + '}';
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public String toString() {
        return ""PhotoEntity{"" + ""name='"" + name + '\'' + "", url='"" + url + '\'' + '}';
    }
","['    ', 'public', ' ', 'String', ' ', 'toString', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', 'PhotoEntity{', '""', ' ', '+', ' ', '""', ""name='"", '""', ' ', '+', ' ', 'name', ' ', '+', ' ', ""'\\''"", ' ', '+', ' ', '""', "", url='"", '""', ' ', '+', ' ', 'url', ' ', '+', ' ', ""'\\''"", ' ', '+', ' ', ""'}'"", ';', '\n', '    ', '}', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,ComicService.java,consume,"    public void consume(String comicHomePage, String body) {
        String title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe().with(chapterEntity -> {
            var photoEntities = taskService.getPhotoInfo(chapterEntity);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public void consume(String comicHomePage, String body) {
        String title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe().with(chapterEntity -> {
            var photoEntities = taskService.getPhotoInfo(chapterEntity);
","['    ', 'public', ' ', 'void', ' ', 'consume', '(', 'String', ' ', 'comicHomePage', ',', ' ', 'String', ' ', 'body', ')', ' ', '{', '\n', '        ', 'String', ' ', 'title', ' ', '=', ' ', 'taskService', '.', 'getTitle', '(', 'body', ')', ';', '\n', '        ', 'var', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', ';', '\n', '        ', 'chapterEntities', '.', 'subscribe', '(', ')', '.', 'with', '(', 'chapterEntity', ' ', '-', '>', ' ', '{', '\n', '            ', 'var', ' ', 'photoEntities', ' ', '=', ' ', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', ';', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,TaskService.java,process,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofMillis(50L)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofMillis(50L)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'String', '>', ' ', 'tempFile', ')', ' ', '{', '\n', '        ', 'tempFile', '.', 'onItem', '(', ')', '.', 'delayIt', '(', ')', '.', 'by', '(', 'Duration', '.', 'ofMillis', '(', '50L', ')', ')', '.', 'subscribe', '(', ')', '.', 'with', '(', 'tempFilePath', ' ', '-', '>', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'bufferedImage', ' ', '=', ' ', 'null', ';', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,TaskService.java,reverseImage,"    public BufferedImage reverseImage(@NotNull BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public BufferedImage reverseImage(@NotNull BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 10;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 10; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }
","['    ', 'public', ' ', 'BufferedImage', ' ', 'reverseImage', '(', '@NotNull', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '10', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subImage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subImage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n', '<END>']"
master,9d12ee40d171c3abfca98de725a3ee8a4453e0b7,TaskService.java,write,"    public void write(String path, BufferedImage bufferedImage) {
        try(var outputStream = Files.newOutputStream(Path.of(path))) {
            ImageIO.write(bufferedImage, ""jpg"", outputStream);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9d12ee40d171c3abfca98de725a3ee8a4453e0b7,"    public void write(String path, BufferedImage bufferedImage) {
        try(var outputStream = Files.newOutputStream(Path.of(path))) {
            ImageIO.write(bufferedImage, ""jpg"", outputStream);
","['    ', 'public', ' ', 'void', ' ', 'write', '(', 'String', ' ', 'path', ',', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'try', '(', 'var', ' ', 'outputStream', ' ', '=', ' ', 'Files', '.', 'newOutputStream', '(', 'Path', '.', 'of', '(', 'path', ')', ')', ')', ' ', '{', '\n', '            ', 'ImageIO', '.', 'write', '(', 'bufferedImage', ',', ' ', '""', 'jpg', '""', ',', ' ', 'outputStream', ')', ';', '\n', '<END>']"
master,094b4012ef89a79874610f4ef0ec16ac1bb9fe39,TaskService.java,process,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofMillis(500L)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;",https://www.github.com/jiayaoo3o/18-comic-finder/commit/094b4012ef89a79874610f4ef0ec16ac1bb9fe39,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofMillis(500L)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'String', '>', ' ', 'tempFile', ')', ' ', '{', '\n', '        ', 'tempFile', '.', 'onItem', '(', ')', '.', 'delayIt', '(', ')', '.', 'by', '(', 'Duration', '.', 'ofMillis', '(', '500L', ')', ')', '.', 'subscribe', '(', ')', '.', 'with', '(', 'tempFilePath', ' ', '-', '>', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'bufferedImage', ' ', '=', ' ', 'null', ';', '\n', '<END>']"
master,36fab3ee2228e1a23611eb72bec6eccf4769068f,TaskService.java,process,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofSeconds(1)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;",https://www.github.com/jiayaoo3o/18-comic-finder/commit/36fab3ee2228e1a23611eb72bec6eccf4769068f,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofSeconds(1)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'String', '>', ' ', 'tempFile', ')', ' ', '{', '\n', '        ', 'tempFile', '.', 'onItem', '(', ')', '.', 'delayIt', '(', ')', '.', 'by', '(', 'Duration', '.', 'ofSeconds', '(', '1', ')', ')', '.', 'subscribe', '(', ')', '.', 'with', '(', 'tempFilePath', ' ', '-', '>', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'bufferedImage', ' ', '=', ' ', 'null', ';', '\n', '<END>']"
master,a8f012715b0f6fcafcb2a48f0f5bc43a8a04d168,TaskService.java,process,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofMillis(100)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;",https://www.github.com/jiayaoo3o/18-comic-finder/commit/a8f012715b0f6fcafcb2a48f0f5bc43a8a04d168,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.onItem().delayIt().by(Duration.ofMillis(100)).subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'String', '>', ' ', 'tempFile', ')', ' ', '{', '\n', '        ', 'tempFile', '.', 'onItem', '(', ')', '.', 'delayIt', '(', ')', '.', 'by', '(', 'Duration', '.', 'ofMillis', '(', '100', ')', ')', '.', 'subscribe', '(', ')', '.', 'with', '(', 'tempFilePath', ' ', '-', '>', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'bufferedImage', ' ', '=', ' ', 'null', ';', '\n', '<END>']"
master,be792053a63e0b8cab21da27a5b59939eec7b63a,TaskService.java,process,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;",https://www.github.com/jiayaoo3o/18-comic-finder/commit/be792053a63e0b8cab21da27a5b59939eec7b63a,"    public void process(String photoPath, Uni<String> tempFile) {
        tempFile.subscribe().with(tempFilePath -> {
            BufferedImage bufferedImage = null;
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'String', '>', ' ', 'tempFile', ')', ' ', '{', '\n', '        ', 'tempFile', '.', 'subscribe', '(', ')', '.', 'with', '(', 'tempFilePath', ' ', '-', '>', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'bufferedImage', ' ', '=', ' ', 'null', ';', '\n', '<END>']"
master,c86152e54dea4d2f8b0a0093c7962a2a63859208,ComicService.java,consume,"    public void consume(String comicHomePage, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe().with(chapterEntity -> {
            var photoEntities = taskService.getPhotoInfo(chapterEntity);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c86152e54dea4d2f8b0a0093c7962a2a63859208,"    public void consume(String comicHomePage, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe().with(chapterEntity -> {
            var photoEntities = taskService.getPhotoInfo(chapterEntity);
","['    ', 'public', ' ', 'void', ' ', 'consume', '(', 'String', ' ', 'comicHomePage', ',', ' ', 'String', ' ', 'body', ')', ' ', '{', '\n', '        ', 'var', ' ', 'title', ' ', '=', ' ', 'taskService', '.', 'getTitle', '(', 'body', ')', ';', '\n', '        ', 'var', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', ';', '\n', '        ', 'chapterEntities', '.', 'subscribe', '(', ')', '.', 'with', '(', 'chapterEntity', ' ', '-', '>', ' ', '{', '\n', '            ', 'var', ' ', 'photoEntities', ' ', '=', ' ', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', ';', '\n', '<END>']"
master,10a850b0996647b2b7e5b9220fb69083ac207d3b,TaskService.java,removeIllegalCharacter,"    private String removeIllegalCharacter(String name) {
        name = StrUtil.replaceChars(name, new char[] { '/', '\\', ':', '*', '?', '""', '<', '>', '|' }, StrUtil.DASHED);
        name = StrUtil.trim(name);
        return name;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/10a850b0996647b2b7e5b9220fb69083ac207d3b,"    private String removeIllegalCharacter(String name) {
        name = StrUtil.replaceChars(name, new char[] { '/', '\\', ':', '*', '?', '""', '<', '>', '|' }, StrUtil.DASHED);
        name = StrUtil.trim(name);
        return name;
    }
","['    ', 'private', ' ', 'String', ' ', 'removeIllegalCharacter', '(', 'String', ' ', 'name', ')', ' ', '{', '\n', '        ', 'name', ' ', '=', ' ', 'StrUtil', '.', 'replaceChars', '(', 'name', ',', ' ', 'new', ' ', 'char', '[', ']', ' ', '{', ' ', ""'/'"", ',', ' ', ""'\\\\'"", ',', ' ', ""':'"", ',', ' ', ""'*'"", ',', ' ', ""'?'"", ',', ' ', '\'""\'', ',', ' ', ""'<'"", ',', ' ', ""'>'"", ',', ' ', ""'|'"", ' ', '}', ',', ' ', 'StrUtil', '.', 'DASHED', ')', ';', '\n', '        ', 'name', ' ', '=', ' ', 'StrUtil', '.', 'trim', '(', 'name', ')', ';', '\n', '        ', 'return', ' ', 'name', ';', '\n', '    ', '}', '\n', '<END>']"
master,2fe64090a5d22e2f901d78d5dfda9390cc1e86b8,TaskService.java,removeIllegalCharacter,"    private String removeIllegalCharacter(String name) {
        name = StrUtil.replaceChars(name, new char[]{'/', '\\', ':', '*', '?', '""', '<', '>', '|'}, StrUtil.DASHED);
        name = StrUtil.trim(name);
        return name;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/2fe64090a5d22e2f901d78d5dfda9390cc1e86b8,"    private String removeIllegalCharacter(String name) {
        name = StrUtil.replaceChars(name, new char[]{'/', '\\', ':', '*', '?', '""', '<', '>', '|'}, StrUtil.DASHED);
        name = StrUtil.trim(name);
        return name;
    }
","['    ', 'private', ' ', 'String', ' ', 'removeIllegalCharacter', '(', 'String', ' ', 'name', ')', ' ', '{', '\n', '        ', 'name', ' ', '=', ' ', 'StrUtil', '.', 'replaceChars', '(', 'name', ',', ' ', 'new', ' ', 'char', '[', ']', '{', ""'/'"", ',', ' ', ""'\\\\'"", ',', ' ', ""':'"", ',', ' ', ""'*'"", ',', ' ', ""'?'"", ',', ' ', '\'""\'', ',', ' ', ""'<'"", ',', ' ', ""'>'"", ',', ' ', ""'|'"", '}', ',', ' ', 'StrUtil', '.', 'DASHED', ')', ';', '\n', '        ', 'name', ' ', '=', ' ', 'StrUtil', '.', 'trim', '(', 'name', ')', ';', '\n', '        ', 'return', ' ', 'name', ';', '\n', '    ', '}', '\n', '<END>']"
master,4aeacded77450bd33261438ed967206a4b7f85ae,ComicService.java,consume,"    public void consume(String comicHomePage, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe()
                .with(chapterEntity -> {",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4aeacded77450bd33261438ed967206a4b7f85ae,"    public void consume(String comicHomePage, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe()
                .with(chapterEntity -> {
","['    ', 'public', ' ', 'void', ' ', 'consume', '(', 'String', ' ', 'comicHomePage', ',', ' ', 'String', ' ', 'body', ')', ' ', '{', '\n', '        ', 'var', ' ', 'title', ' ', '=', ' ', 'taskService', '.', 'getTitle', '(', 'body', ')', ';', '\n', '        ', 'var', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', ';', '\n', '        ', 'chapterEntities', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'chapterEntity', ' ', '-', '>', ' ', '{', '\n', '<END>']"
master,4aeacded77450bd33261438ed967206a4b7f85ae,TaskService.java,process,"    public void process(String photoPath, Uni<Tuple2<String, Buffer>> tempFileTuple) {
        tempFileTuple.subscribe()
                .with(tuple2 -> this.write(tuple2.getItem1(), tuple2.getItem2())",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4aeacded77450bd33261438ed967206a4b7f85ae,"    public void process(String photoPath, Uni<Tuple2<String, Buffer>> tempFileTuple) {
        tempFileTuple.subscribe()
                .with(tuple2 -> this.write(tuple2.getItem1(), tuple2.getItem2())
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'Tuple2', '<', 'String', ',', ' ', 'Buffer', '>', '>', ' ', 'tempFileTuple', ')', ' ', '{', '\n', '        ', 'tempFileTuple', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'tuple2', ' ', '-', '>', ' ', 'this', '.', 'write', '(', 'tuple2', '.', 'getItem1', '(', ')', ',', ' ', 'tuple2', '.', 'getItem2', '(', ')', ')', '\n', '<END>']"
master,4aeacded77450bd33261438ed967206a4b7f85ae,TaskService.java,post,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .followRedirects(true);
        cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .onItem()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4aeacded77450bd33261438ed967206a4b7f85ae,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .followRedirects(true);
        cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .onItem()
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'post', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'var', ' ', 'request', ' ', '=', ' ', 'webClient', '.', 'getAbs', '(', 'url', ')', '\n', '                ', '.', 'port', '(', '443', ')', '\n', '                ', '.', 'followRedirects', '(', 'true', ')', ';', '\n', '        ', 'cookie', '.', 'ifPresent', '(', 'cook', ' ', '-', '>', ' ', 'request', '.', 'putHeader', '(', '""', 'cookie', '""', ',', ' ', 'cook', ')', ')', ';', '\n', '        ', 'return', ' ', 'request', '.', 'send', '(', ')', '\n', '                ', '.', 'onItem', '(', ')', '\n', '<END>']"
master,4aeacded77450bd33261438ed967206a4b7f85ae,TaskService.java,write,"    public Uni<Void> write(String path, Buffer buffer) {
        return vertx.fileSystem()
                .writeFile(path, buffer)",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4aeacded77450bd33261438ed967206a4b7f85ae,"    public Uni<Void> write(String path, Buffer buffer) {
        return vertx.fileSystem()
                .writeFile(path, buffer)
","['    ', 'public', ' ', 'Uni', '<', 'Void', '>', ' ', 'write', '(', 'String', ' ', 'path', ',', ' ', 'Buffer', ' ', 'buffer', ')', ' ', '{', '\n', '        ', 'return', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'writeFile', '(', 'path', ',', ' ', 'buffer', ')', '\n', '<END>']"
master,4aeacded77450bd33261438ed967206a4b7f85ae,TaskService.java,delete,"    public void delete(String path) {
        vertx.fileSystem()
                .delete(path)",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4aeacded77450bd33261438ed967206a4b7f85ae,"    public void delete(String path) {
        vertx.fileSystem()
                .delete(path)
","['    ', 'public', ' ', 'void', ' ', 'delete', '(', 'String', ' ', 'path', ')', ' ', '{', '\n', '        ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'delete', '(', 'path', ')', '\n', '<END>']"
master,4aeacded77450bd33261438ed967206a4b7f85ae,TaskService.java,createTempFile,"    public Uni<String> createTempFile() {
        return vertx.fileSystem()
                .createTempFile(String.valueOf(System.nanoTime()), "".tmp"")",https://www.github.com/jiayaoo3o/18-comic-finder/commit/4aeacded77450bd33261438ed967206a4b7f85ae,"    public Uni<String> createTempFile() {
        return vertx.fileSystem()
                .createTempFile(String.valueOf(System.nanoTime()), "".tmp"")
","['    ', 'public', ' ', 'Uni', '<', 'String', '>', ' ', 'createTempFile', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'createTempFile', '(', 'String', '.', 'valueOf', '(', 'System', '.', 'nanoTime', '(', ')', ')', ',', ' ', '""', '.tmp', '""', ')', '\n', '<END>']"
master,2911e9376d982f95bc0031fa6386ae1f33915d13,TaskService.java,clickPhotoCounter,"    public String clickPhotoCounter(boolean produce) {
        if(produce) {
            this.pendingPhotoCount.increment();",https://www.github.com/jiayaoo3o/18-comic-finder/commit/2911e9376d982f95bc0031fa6386ae1f33915d13,"    public String clickPhotoCounter(boolean produce) {
        if(produce) {
            this.pendingPhotoCount.increment();
","['    ', 'public', ' ', 'String', ' ', 'clickPhotoCounter', '(', 'boolean', ' ', 'produce', ')', ' ', '{', '\n', '        ', 'if', '(', 'produce', ')', ' ', '{', '\n', '            ', 'this', '.', 'pendingPhotoCount', '.', 'increment', '(', ')', ';', '\n', '<END>']"
master,155af116054287bc97c53ee8b79c82a387deef0d,TaskService.java,reverseImage,"    public BufferedImage reverseImage(@NotNull BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 20;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 20; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/155af116054287bc97c53ee8b79c82a387deef0d,"    public BufferedImage reverseImage(@NotNull BufferedImage bufferedImage) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / 20;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < 20; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }
","['    ', 'public', ' ', 'BufferedImage', ' ', 'reverseImage', '(', '@NotNull', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '20', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '20', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subImage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subImage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,ComicService.java,consume,"    public void consume(String comicHomePage, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe()
                .with(chapterEntity -> consumeChapter(title, chapterEntity));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    public void consume(String comicHomePage, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, comicHomePage);
        chapterEntities.subscribe()
                .with(chapterEntity -> consumeChapter(title, chapterEntity));
","['    ', 'public', ' ', 'void', ' ', 'consume', '(', 'String', ' ', 'comicHomePage', ',', ' ', 'String', ' ', 'body', ')', ' ', '{', '\n', '        ', 'var', ' ', 'title', ' ', '=', ' ', 'taskService', '.', 'getTitle', '(', 'body', ')', ';', '\n', '        ', 'var', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'comicHomePage', ')', ';', '\n', '        ', 'chapterEntities', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'chapterEntity', ' ', '-', '>', ' ', 'consumeChapter', '(', 'title', ',', ' ', 'chapterEntity', ')', ')', ';', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,ComicService.java,consumeChapter,"    private void consumeChapter(String title, ChapterEntity chapterEntity) {
        var photoEntities = taskService.getPhotoInfo(chapterEntity);
        photoEntities.subscribe()
                .with(photoEntity -> checkPhoto(title,chapterEntity.id(), chapterEntity.updatedAt(), chapterEntity.name(), photoEntity));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    private void consumeChapter(String title, ChapterEntity chapterEntity) {
        var photoEntities = taskService.getPhotoInfo(chapterEntity);
        photoEntities.subscribe()
                .with(photoEntity -> checkPhoto(title,chapterEntity.id(), chapterEntity.updatedAt(), chapterEntity.name(), photoEntity));
","['    ', 'private', ' ', 'void', ' ', 'consumeChapter', '(', 'String', ' ', 'title', ',', ' ', 'ChapterEntity', ' ', 'chapterEntity', ')', ' ', '{', '\n', '        ', 'var', ' ', 'photoEntities', ' ', '=', ' ', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', ';', '\n', '        ', 'photoEntities', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'photoEntity', ' ', '-', '>', ' ', 'checkPhoto', '(', 'title', ',', 'chapterEntity', '.', 'id', '(', ')', ',', ' ', 'chapterEntity', '.', 'updatedAt', '(', ')', ',', ' ', 'chapterEntity', '.', 'name', '(', ')', ',', ' ', 'photoEntity', ')', ')', ';', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,ComicService.java,checkPhoto,"    private void checkPhoto(String title,int chapterId, Date chapterUpdatedAt, String chapterName, PhotoEntity photoEntity) {
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var photoPath = dirPath + File.separatorChar + photoEntity.name();
        vertx.fileSystem()
                .exists(photoPath)",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    private void checkPhoto(String title,int chapterId, Date chapterUpdatedAt, String chapterName, PhotoEntity photoEntity) {
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var photoPath = dirPath + File.separatorChar + photoEntity.name();
        vertx.fileSystem()
                .exists(photoPath)
","['    ', 'private', ' ', 'void', ' ', 'checkPhoto', '(', 'String', ' ', 'title', ',', 'int', ' ', 'chapterId', ',', ' ', 'Date', ' ', 'chapterUpdatedAt', ',', ' ', 'String', ' ', 'chapterName', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ')', ' ', '{', '\n', '        ', 'var', ' ', 'dirPath', ' ', '=', ' ', 'downloadPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'title', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'chapterName', ';', '\n', '        ', 'var', ' ', 'photoPath', ' ', '=', ' ', 'dirPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'photoEntity', '.', 'name', '(', ')', ';', '\n', '        ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'exists', '(', 'photoPath', ')', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,ComicService.java,createDir,"    private void createDir(int chapterId, Date chapterUpdatedAt, String chapterName, PhotoEntity photoEntity, String dirPath, String photoPath) {
        vertx.fileSystem()
                .mkdirs(dirPath)",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    private void createDir(int chapterId, Date chapterUpdatedAt, String chapterName, PhotoEntity photoEntity, String dirPath, String photoPath) {
        vertx.fileSystem()
                .mkdirs(dirPath)
","['    ', 'private', ' ', 'void', ' ', 'createDir', '(', 'int', ' ', 'chapterId', ',', ' ', 'Date', ' ', 'chapterUpdatedAt', ',', ' ', 'String', ' ', 'chapterName', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ',', ' ', 'String', ' ', 'dirPath', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'mkdirs', '(', 'dirPath', ')', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,TaskService.java,process,"    public void process(int chapterId, String photoPath, Uni<Tuple2<String, Buffer>> tempFileTuple) {
        tempFileTuple.subscribe()
                .with(tuple2 -> this.write(tuple2.getItem1(), tuple2.getItem2())",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    public void process(int chapterId, String photoPath, Uni<Tuple2<String, Buffer>> tempFileTuple) {
        tempFileTuple.subscribe()
                .with(tuple2 -> this.write(tuple2.getItem1(), tuple2.getItem2())
","['    ', 'public', ' ', 'void', ' ', 'process', '(', 'int', ' ', 'chapterId', ',', ' ', 'String', ' ', 'photoPath', ',', ' ', 'Uni', '<', 'Tuple2', '<', 'String', ',', ' ', 'Buffer', '>', '>', ' ', 'tempFileTuple', ')', ' ', '{', '\n', '        ', 'tempFileTuple', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'tuple2', ' ', '-', '>', ' ', 'this', '.', 'write', '(', 'tuple2', '.', 'getItem1', '(', ')', ',', ' ', 'tuple2', '.', 'getItem2', '(', ')', ')', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,TaskService.java,reverse,"    public BufferedImage reverse(@NotNull BufferedImage bufferedImage, int chapterId, String photoPath) {
        String photoId = StrUtil.subBetween(photoPath, ""photo_"", "".jpg"");
        int piece = 10;
        String md5;
        if(chapterId >= 268850) {
            md5 = MD5.digestHex(chapterId + photoId);
            char c = md5.charAt(md5.length() - 1);
            piece = rule[ c % 10 ];
        }
        return this.reverseImage(bufferedImage, piece);
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    public BufferedImage reverse(@NotNull BufferedImage bufferedImage, int chapterId, String photoPath) {
        String photoId = StrUtil.subBetween(photoPath, ""photo_"", "".jpg"");
        int piece = 10;
        String md5;
        if(chapterId >= 268850) {
            md5 = MD5.digestHex(chapterId + photoId);
            char c = md5.charAt(md5.length() - 1);
            piece = rule[ c % 10 ];
        }
        return this.reverseImage(bufferedImage, piece);
    }
","['    ', 'public', ' ', 'BufferedImage', ' ', 'reverse', '(', '@NotNull', ' ', 'BufferedImage', ' ', 'bufferedImage', ',', ' ', 'int', ' ', 'chapterId', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'String', ' ', 'photoId', ' ', '=', ' ', 'StrUtil', '.', 'subBetween', '(', 'photoPath', ',', ' ', '""', 'photo_', '""', ',', ' ', '""', '.jpg', '""', ')', ';', '\n', '        ', 'int', ' ', 'piece', ' ', '=', ' ', '10', ';', '\n', '        ', 'String', ' ', 'md5', ';', '\n', '        ', 'if', '(', 'chapterId', ' ', '>', '=', ' ', '268850', ')', ' ', '{', '\n', '            ', 'md5', ' ', '=', ' ', 'MD5', '.', 'digestHex', '(', 'chapterId', ' ', '+', ' ', 'photoId', ')', ';', '\n', '            ', 'char', ' ', 'c', ' ', '=', ' ', 'md5', '.', 'charAt', '(', 'md5', '.', 'length', '(', ')', ' ', '-', ' ', '1', ')', ';', '\n', '            ', 'piece', ' ', '=', ' ', 'rule', '[', ' ', 'c', ' ', '%', ' ', '10', ' ', ']', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'this', '.', 'reverseImage', '(', 'bufferedImage', ',', ' ', 'piece', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f8740e648f2105a115d5e0bc4240e1ddef26dc60,TaskService.java,reverseImage,"    public BufferedImage reverseImage(BufferedImage bufferedImage, int piece){
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / piece;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < piece; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/f8740e648f2105a115d5e0bc4240e1ddef26dc60,"    public BufferedImage reverseImage(BufferedImage bufferedImage, int piece){
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / piece;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < piece; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }
","['    ', 'public', ' ', 'BufferedImage', ' ', 'reverseImage', '(', 'BufferedImage', ' ', 'bufferedImage', ',', ' ', 'int', ' ', 'piece', ')', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', 'piece', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'piece', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subImage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subImage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n', '<END>']"
master,8f7b4426abd08f5f5a632071c474c5dc6f412f0e,TaskService.java,reverseImage,"    public BufferedImage reverseImage(BufferedImage bufferedImage, int piece) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / piece;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < piece; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/8f7b4426abd08f5f5a632071c474c5dc6f412f0e,"    public BufferedImage reverseImage(BufferedImage bufferedImage, int piece) {
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();
        int preImgHeight = height / piece;
        BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = result.createGraphics();
        for(int i = 0; i < piece; i++) {
            BufferedImage subImage = bufferedImage.getSubimage(0, i * preImgHeight, width, preImgHeight);
            graphics.drawImage(subImage, null, 0, height - (i + 1) * preImgHeight);
        }
        return result;
    }
","['    ', 'public', ' ', 'BufferedImage', ' ', 'reverseImage', '(', 'BufferedImage', ' ', 'bufferedImage', ',', ' ', 'int', ' ', 'piece', ')', ' ', '{', '\n', '        ', 'int', ' ', 'height', ' ', '=', ' ', 'bufferedImage', '.', 'getHeight', '(', ')', ';', '\n', '        ', 'int', ' ', 'width', ' ', '=', ' ', 'bufferedImage', '.', 'getWidth', '(', ')', ';', '\n', '        ', 'int', ' ', 'preImgHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', 'piece', ';', '\n', '        ', 'BufferedImage', ' ', 'result', ' ', '=', ' ', 'new', ' ', 'BufferedImage', '(', 'width', ',', ' ', 'height', ',', ' ', 'BufferedImage', '.', 'TYPE_INT_RGB', ')', ';', '\n', '        ', 'Graphics2D', ' ', 'graphics', ' ', '=', ' ', 'result', '.', 'createGraphics', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'piece', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'BufferedImage', ' ', 'subImage', ' ', '=', ' ', 'bufferedImage', '.', 'getSubimage', '(', '0', ',', ' ', 'i', ' ', '*', ' ', 'preImgHeight', ',', ' ', 'width', ',', ' ', 'preImgHeight', ')', ';', '\n', '            ', 'graphics', '.', 'drawImage', '(', 'subImage', ',', ' ', 'null', ',', ' ', '0', ',', ' ', 'height', ' ', '-', ' ', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'preImgHeight', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n', '<END>']"
master,9b18997031954474f3a4d2880f5526928dae78d1,ComicService.java,consumeComic,"    public void consumeComic(String url, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, url);
        chapterEntities.subscribe()
                .with(chapterEntity -> consumeChapter(title, chapterEntity));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9b18997031954474f3a4d2880f5526928dae78d1,"    public void consumeComic(String url, String body) {
        var title = taskService.getTitle(body);
        var chapterEntities = taskService.getChapterInfo(body, url);
        chapterEntities.subscribe()
                .with(chapterEntity -> consumeChapter(title, chapterEntity));
","['    ', 'public', ' ', 'void', ' ', 'consumeComic', '(', 'String', ' ', 'url', ',', ' ', 'String', ' ', 'body', ')', ' ', '{', '\n', '        ', 'var', ' ', 'title', ' ', '=', ' ', 'taskService', '.', 'getTitle', '(', 'body', ')', ';', '\n', '        ', 'var', ' ', 'chapterEntities', ' ', '=', ' ', 'taskService', '.', 'getChapterInfo', '(', 'body', ',', ' ', 'url', ')', ';', '\n', '        ', 'chapterEntities', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'chapterEntity', ' ', '-', '>', ' ', 'consumeChapter', '(', 'title', ',', ' ', 'chapterEntity', ')', ')', ';', '\n', '<END>']"
master,9b18997031954474f3a4d2880f5526928dae78d1,ComicService.java,consumeChapter,"    private void consumeChapter(String title, ChapterEntity chapterEntity) {
        var photoEntities = taskService.getPhotoInfo(chapterEntity);
        photoEntities.subscribe()
                .with(photoEntity -> this.checkPhotoExists(title, chapterEntity.name(), photoEntity.name())",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9b18997031954474f3a4d2880f5526928dae78d1,"    private void consumeChapter(String title, ChapterEntity chapterEntity) {
        var photoEntities = taskService.getPhotoInfo(chapterEntity);
        photoEntities.subscribe()
                .with(photoEntity -> this.checkPhotoExists(title, chapterEntity.name(), photoEntity.name())
","['    ', 'private', ' ', 'void', ' ', 'consumeChapter', '(', 'String', ' ', 'title', ',', ' ', 'ChapterEntity', ' ', 'chapterEntity', ')', ' ', '{', '\n', '        ', 'var', ' ', 'photoEntities', ' ', '=', ' ', 'taskService', '.', 'getPhotoInfo', '(', 'chapterEntity', ')', ';', '\n', '        ', 'photoEntities', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'photoEntity', ' ', '-', '>', ' ', 'this', '.', 'checkPhotoExists', '(', 'title', ',', ' ', 'chapterEntity', '.', 'name', '(', ')', ',', ' ', 'photoEntity', '.', 'name', '(', ')', ')', '\n', '<END>']"
master,9b18997031954474f3a4d2880f5526928dae78d1,ComicService.java,checkPhotoExists,"    private Uni<Boolean> checkPhotoExists(String title, String chapterName, String photoName) {
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var photoPath = dirPath + File.separatorChar + photoName;
        return vertx.fileSystem()
                .exists(photoPath);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9b18997031954474f3a4d2880f5526928dae78d1,"    private Uni<Boolean> checkPhotoExists(String title, String chapterName, String photoName) {
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var photoPath = dirPath + File.separatorChar + photoName;
        return vertx.fileSystem()
                .exists(photoPath);
","['    ', 'private', ' ', 'Uni', '<', 'Boolean', '>', ' ', 'checkPhotoExists', '(', 'String', ' ', 'title', ',', ' ', 'String', ' ', 'chapterName', ',', ' ', 'String', ' ', 'photoName', ')', ' ', '{', '\n', '        ', 'var', ' ', 'dirPath', ' ', '=', ' ', 'downloadPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'title', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'chapterName', ';', '\n', '        ', 'var', ' ', 'photoPath', ' ', '=', ' ', 'dirPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'photoName', ';', '\n', '        ', 'return', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'exists', '(', 'photoPath', ')', ';', '\n', '<END>']"
master,9b18997031954474f3a4d2880f5526928dae78d1,TaskService.java,writeTempFile,"    public Uni<Tuple2<String, Buffer>> writeTempFile(Tuple2<String, Buffer> tempFileTuple) {
        return this.write(tempFileTuple.getItem1(), tempFileTuple.getItem2())
                .chain(result -> Uni.createFrom()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9b18997031954474f3a4d2880f5526928dae78d1,"    public Uni<Tuple2<String, Buffer>> writeTempFile(Tuple2<String, Buffer> tempFileTuple) {
        return this.write(tempFileTuple.getItem1(), tempFileTuple.getItem2())
                .chain(result -> Uni.createFrom()
","['    ', 'public', ' ', 'Uni', '<', 'Tuple2', '<', 'String', ',', ' ', 'Buffer', '>', '>', ' ', 'writeTempFile', '(', 'Tuple2', '<', 'String', ',', ' ', 'Buffer', '>', ' ', 'tempFileTuple', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'write', '(', 'tempFileTuple', '.', 'getItem1', '(', ')', ',', ' ', 'tempFileTuple', '.', 'getItem2', '(', ')', ')', '\n', '                ', '.', 'chain', '(', 'result', ' ', '-', '>', ' ', 'Uni', '.', 'createFrom', '(', ')', '\n', '<END>']"
master,9b18997031954474f3a4d2880f5526928dae78d1,TaskService.java,post,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .followRedirects(true);
        cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response))",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9b18997031954474f3a4d2880f5526928dae78d1,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .followRedirects(true);
        cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response))
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'post', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'var', ' ', 'request', ' ', '=', ' ', 'webClient', '.', 'getAbs', '(', 'url', ')', '\n', '                ', '.', 'port', '(', '443', ')', '\n', '                ', '.', 'followRedirects', '(', 'true', ')', ';', '\n', '        ', 'cookie', '.', 'ifPresent', '(', 'cook', ' ', '-', '>', ' ', 'request', '.', 'putHeader', '(', '""', 'cookie', '""', ',', ' ', 'cook', ')', ')', ';', '\n', '        ', 'return', ' ', 'request', '.', 'send', '(', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'this', '.', 'checkResponseStatus', '(', 'url', ',', ' ', 'response', ')', ')', '\n', '<END>']"
master,9b18997031954474f3a4d2880f5526928dae78d1,TaskService.java,createTempFile,"    public Uni<String> createTempFile() {
        return vertx.fileSystem()
                .createTempFile(String.valueOf(System.nanoTime()), "".tmp"");",https://www.github.com/jiayaoo3o/18-comic-finder/commit/9b18997031954474f3a4d2880f5526928dae78d1,"    public Uni<String> createTempFile() {
        return vertx.fileSystem()
                .createTempFile(String.valueOf(System.nanoTime()), "".tmp"");
","['    ', 'public', ' ', 'Uni', '<', 'String', '>', ' ', 'createTempFile', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'createTempFile', '(', 'String', '.', 'valueOf', '(', 'System', '.', 'nanoTime', '(', ')', ')', ',', ' ', '""', '.tmp', '""', ')', ';', '\n', '<END>']"
master,ec204d111e8288b6bcdcb40226d495d0fe7ff417,TaskService.java,post,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        //cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response))",https://www.github.com/jiayaoo3o/18-comic-finder/commit/ec204d111e8288b6bcdcb40226d495d0fe7ff417,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response))
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'post', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'var', ' ', 'request', ' ', '=', ' ', 'webClient', '.', 'getAbs', '(', 'url', ')', '\n', '                ', '.', 'port', '(', '443', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept', '""', ',', ' ', '""', 'text/html,application/xhtml+xml,application/xml', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Encoding', '""', ',', ' ', '""', 'deflate', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Language', '""', ',', ' ', '""', 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Refer', '""', ',', ' ', 'url', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'cache-control', '""', ',', ' ', '""', 'no-cache', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'dnt', '""', ',', ' ', '""', '1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'upgrade-insecure-requests', '""', ',', ' ', '""', ' 1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'pragma', '""', ',', ' ', '""', ' no-cache', '""', ')', ';', '\n', '        ', '\n', '        ', 'return', ' ', 'request', '.', 'send', '(', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'this', '.', 'checkResponseStatus', '(', 'url', ',', ' ', 'response', ')', ')', '\n', '<END>']"
master,b95044f7f0c4409fcade0db0cdda37dbaa6c5a6c,ComicService.java,consumePhoto,"    private void consumePhoto(int chapterId, String title, String chapterName, String photoName, String photoUrl) {
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var photoPath = dirPath + File.separatorChar + photoName;
        taskService.post(photoUrl)
                .chain(response -> Uni.createFrom()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/b95044f7f0c4409fcade0db0cdda37dbaa6c5a6c,"    private void consumePhoto(int chapterId, String title, String chapterName, String photoName, String photoUrl) {
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var photoPath = dirPath + File.separatorChar + photoName;
        taskService.post(photoUrl)
                .chain(response -> Uni.createFrom()
","['    ', 'private', ' ', 'void', ' ', 'consumePhoto', '(', 'int', ' ', 'chapterId', ',', ' ', 'String', ' ', 'title', ',', ' ', 'String', ' ', 'chapterName', ',', ' ', 'String', ' ', 'photoName', ',', ' ', 'String', ' ', 'photoUrl', ')', ' ', '{', '\n', '        ', 'var', ' ', 'dirPath', ' ', '=', ' ', 'downloadPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'title', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'chapterName', ';', '\n', '        ', 'var', ' ', 'photoPath', ' ', '=', ' ', 'dirPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'photoName', ';', '\n', '        ', 'taskService', '.', 'post', '(', 'photoUrl', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'Uni', '.', 'createFrom', '(', ')', '\n', '<END>']"
master,b95044f7f0c4409fcade0db0cdda37dbaa6c5a6c,TaskService.java,gray,"    private int gray(int rgb) {
        int a = rgb & 0xff000000;
        int r = (rgb >> 16) & 0xff;
        int g = (rgb >> 8) & 0xff;
        int b = rgb & 0xff;
        rgb = (r * 77 + g * 151 + b * 28) >> 8;
        return a | (rgb << 16) | (rgb << 8) | rgb;
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/b95044f7f0c4409fcade0db0cdda37dbaa6c5a6c,"    private int gray(int rgb) {
        int a = rgb & 0xff000000;
        int r = (rgb >> 16) & 0xff;
        int g = (rgb >> 8) & 0xff;
        int b = rgb & 0xff;
        rgb = (r * 77 + g * 151 + b * 28) >> 8;
        return a | (rgb << 16) | (rgb << 8) | rgb;
    }
","['    ', 'private', ' ', 'int', ' ', 'gray', '(', 'int', ' ', 'rgb', ')', ' ', '{', '\n', '        ', 'int', ' ', 'a', ' ', '=', ' ', 'rgb', ' ', '&', ' ', '0xff000000', ';', '\n', '        ', 'int', ' ', 'r', ' ', '=', ' ', '(', 'rgb', ' ', '>', '>', ' ', '16', ')', ' ', '&', ' ', '0xff', ';', '\n', '        ', 'int', ' ', 'g', ' ', '=', ' ', '(', 'rgb', ' ', '>', '>', ' ', '8', ')', ' ', '&', ' ', '0xff', ';', '\n', '        ', 'int', ' ', 'b', ' ', '=', ' ', 'rgb', ' ', '&', ' ', '0xff', ';', '\n', '        ', 'rgb', ' ', '=', ' ', '(', 'r', ' ', '*', ' ', '77', ' ', '+', ' ', 'g', ' ', '*', ' ', '151', ' ', '+', ' ', 'b', ' ', '*', ' ', '28', ')', ' ', '>', '>', ' ', '8', ';', '\n', '        ', 'return', ' ', 'a', ' ', '|', ' ', '(', 'rgb', ' ', '<', '<', ' ', '16', ')', ' ', '|', ' ', '(', 'rgb', ' ', '<', '<', ' ', '8', ')', ' ', '|', ' ', 'rgb', ';', '\n', '    ', '}', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,homePageConsumer,"    private Consumer<HttpResponse<Buffer>> homePageConsumer(String url) {
        return response -> {
            var body = response.bodyAsString();",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<HttpResponse<Buffer>> homePageConsumer(String url) {
        return response -> {
            var body = response.bodyAsString();
","['    ', 'private', ' ', 'Consumer', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'homePageConsumer', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'return', ' ', 'response', ' ', '-', '>', ' ', '{', '\n', '            ', 'var', ' ', 'body', ' ', '=', ' ', 'response', '.', 'bodyAsString', '(', ')', ';', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,photoEntitiesConsumer,"    private Consumer<List<ChapterEntity>> photoEntitiesConsumer(String title) {
        return chapterEntities -> {
            var chapterEntityUniMap = taskService.processPhotoInfo(chapterEntities);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<List<ChapterEntity>> photoEntitiesConsumer(String title) {
        return chapterEntities -> {
            var chapterEntityUniMap = taskService.processPhotoInfo(chapterEntities);
","['    ', 'private', ' ', 'Consumer', '<', 'List', '<', 'ChapterEntity', '>', '>', ' ', 'photoEntitiesConsumer', '(', 'String', ' ', 'title', ')', ' ', '{', '\n', '        ', 'return', ' ', 'chapterEntities', ' ', '-', '>', ' ', '{', '\n', '            ', 'var', ' ', 'chapterEntityUniMap', ' ', '=', ' ', 'taskService', '.', 'processPhotoInfo', '(', 'chapterEntities', ')', ';', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,chapterDirConsumer,"    private Consumer<String> chapterDirConsumer(ChapterEntity chapterEntity, Uni<List<PhotoEntity>> photoEntitiesUni) {
        return chapterDir -> photoEntitiesUni.subscribe()
                .with(this.photoEntitiesConsumer(chapterEntity, chapterDir));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<String> chapterDirConsumer(ChapterEntity chapterEntity, Uni<List<PhotoEntity>> photoEntitiesUni) {
        return chapterDir -> photoEntitiesUni.subscribe()
                .with(this.photoEntitiesConsumer(chapterEntity, chapterDir));
","['    ', 'private', ' ', 'Consumer', '<', 'String', '>', ' ', 'chapterDirConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'Uni', '<', 'List', '<', 'PhotoEntity', '>', '>', ' ', 'photoEntitiesUni', ')', ' ', '{', '\n', '        ', 'return', ' ', 'chapterDir', ' ', '-', '>', ' ', 'photoEntitiesUni', '.', 'subscribe', '(', ')', '\n', '                ', '.', 'with', '(', 'this', '.', 'photoEntitiesConsumer', '(', 'chapterEntity', ',', ' ', 'chapterDir', ')', ')', ';', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,photoEntitiesConsumer,"    private Consumer<List<PhotoEntity>> photoEntitiesConsumer(ChapterEntity chapterEntity, String chapterDir) {
        return photoEntities -> {
            for(PhotoEntity photoEntity : photoEntities) {",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<List<PhotoEntity>> photoEntitiesConsumer(ChapterEntity chapterEntity, String chapterDir) {
        return photoEntities -> {
            for(PhotoEntity photoEntity : photoEntities) {
","['    ', 'private', ' ', 'Consumer', '<', 'List', '<', 'PhotoEntity', '>', '>', ' ', 'photoEntitiesConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'String', ' ', 'chapterDir', ')', ' ', '{', '\n', '        ', 'return', ' ', 'photoEntities', ' ', '-', '>', ' ', '{', '\n', '            ', 'for', '(', 'PhotoEntity', ' ', 'photoEntity', ' ', ':', ' ', 'photoEntities', ')', ' ', '{', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,photoExistsConsumer,"    private Consumer<Boolean> photoExistsConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return exists -> {
            if(exists) {",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<Boolean> photoExistsConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return exists -> {
            if(exists) {
","['    ', 'private', ' ', 'Consumer', '<', 'Boolean', '>', ' ', 'photoExistsConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'exists', ' ', '-', '>', ' ', '{', '\n', '            ', 'if', '(', 'exists', ')', ' ', '{', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,photoBufferConsumer,"    private Consumer<Buffer> photoBufferConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return buffer -> taskService.processPhotoTempFile(buffer)
                .subscribe()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<Buffer> photoBufferConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return buffer -> taskService.processPhotoTempFile(buffer)
                .subscribe()
","['    ', 'private', ' ', 'Consumer', '<', 'Buffer', '>', ' ', 'photoBufferConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'buffer', ' ', '-', '>', ' ', 'taskService', '.', 'processPhotoTempFile', '(', 'buffer', ')', '\n', '                ', '.', 'subscribe', '(', ')', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,tempFileConsumer,"    private Consumer<String> tempFileConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return path -> {
            var bufferedImageUni = taskService.processPhotoReverse(path, chapterEntity, photoEntity);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<String> tempFileConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return path -> {
            var bufferedImageUni = taskService.processPhotoReverse(path, chapterEntity, photoEntity);
","['    ', 'private', ' ', 'Consumer', '<', 'String', '>', ' ', 'tempFileConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'path', ' ', '-', '>', ' ', '{', '\n', '            ', 'var', ' ', 'bufferedImageUni', ' ', '=', ' ', 'taskService', '.', 'processPhotoReverse', '(', 'path', ',', ' ', 'chapterEntity', ',', ' ', 'photoEntity', ')', ';', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,ComicService.java,finalImageConsumer,"    private Consumer<BufferedImage> finalImageConsumer(String photoPath) {
        return bufferedImage -> taskService.write(photoPath, bufferedImage);
    }",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    private Consumer<BufferedImage> finalImageConsumer(String photoPath) {
        return bufferedImage -> taskService.write(photoPath, bufferedImage);
    }
","['    ', 'private', ' ', 'Consumer', '<', 'BufferedImage', '>', ' ', 'finalImageConsumer', '(', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'bufferedImage', ' ', '-', '>', ' ', 'taskService', '.', 'write', '(', 'photoPath', ',', ' ', 'bufferedImage', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,TaskService.java,processChapterDir,"    public Uni<String> processChapterDir(String title, ChapterEntity chapterEntity) {
        var chapterName = chapterEntity.name();
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var voidUni = vertx.fileSystem()
                .mkdirs(dirPath);
        return voidUni.chain(v -> Uni.createFrom()
                .item(dirPath));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    public Uni<String> processChapterDir(String title, ChapterEntity chapterEntity) {
        var chapterName = chapterEntity.name();
        var dirPath = downloadPath + File.separatorChar + title + File.separatorChar + chapterName;
        var voidUni = vertx.fileSystem()
                .mkdirs(dirPath);
        return voidUni.chain(v -> Uni.createFrom()
                .item(dirPath));
","['    ', 'public', ' ', 'Uni', '<', 'String', '>', ' ', 'processChapterDir', '(', 'String', ' ', 'title', ',', ' ', 'ChapterEntity', ' ', 'chapterEntity', ')', ' ', '{', '\n', '        ', 'var', ' ', 'chapterName', ' ', '=', ' ', 'chapterEntity', '.', 'name', '(', ')', ';', '\n', '        ', 'var', ' ', 'dirPath', ' ', '=', ' ', 'downloadPath', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'title', ' ', '+', ' ', 'File', '.', 'separatorChar', ' ', '+', ' ', 'chapterName', ';', '\n', '        ', 'var', ' ', 'voidUni', ' ', '=', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'mkdirs', '(', 'dirPath', ')', ';', '\n', '        ', 'return', ' ', 'voidUni', '.', 'chain', '(', 'v', ' ', '-', '>', ' ', 'Uni', '.', 'createFrom', '(', ')', '\n', '                ', '.', 'item', '(', 'dirPath', ')', ')', ';', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,TaskService.java,processPhotoExists,"    public Uni<Boolean> processPhotoExists(String photoPath){
       return vertx.fileSystem()
                .exists(photoPath);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    public Uni<Boolean> processPhotoExists(String photoPath){
       return vertx.fileSystem()
                .exists(photoPath);
","['    ', 'public', ' ', 'Uni', '<', 'Boolean', '>', ' ', 'processPhotoExists', '(', 'String', ' ', 'photoPath', ')', '{', '\n', '       ', 'return', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'exists', '(', 'photoPath', ')', ';', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,TaskService.java,processPhotoBuffer,"    public Uni<Buffer> processPhotoBuffer(PhotoEntity photoEntity) {
        var photoUrl = photoEntity.url();
        return this.post(photoUrl)
                .chain(response -> Uni.createFrom()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    public Uni<Buffer> processPhotoBuffer(PhotoEntity photoEntity) {
        var photoUrl = photoEntity.url();
        return this.post(photoUrl)
                .chain(response -> Uni.createFrom()
","['    ', 'public', ' ', 'Uni', '<', 'Buffer', '>', ' ', 'processPhotoBuffer', '(', 'PhotoEntity', ' ', 'photoEntity', ')', ' ', '{', '\n', '        ', 'var', ' ', 'photoUrl', ' ', '=', ' ', 'photoEntity', '.', 'url', '(', ')', ';', '\n', '        ', 'return', ' ', 'this', '.', 'post', '(', 'photoUrl', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'Uni', '.', 'createFrom', '(', ')', '\n', '<END>']"
master,db953203c365757acb90f98df7519f7b5981a265,TaskService.java,write,"    public void write(String path, BufferedImage bufferedImage) {
        if(bufferedImage == null) {
            return;
        }
        try(var outputStream = Files.newOutputStream(Path.of(path))) {
            ImageIO.write(bufferedImage, ""jpg"", outputStream);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/db953203c365757acb90f98df7519f7b5981a265,"    public void write(String path, BufferedImage bufferedImage) {
        if(bufferedImage == null) {
            return;
        }
        try(var outputStream = Files.newOutputStream(Path.of(path))) {
            ImageIO.write(bufferedImage, ""jpg"", outputStream);
","['    ', 'public', ' ', 'void', ' ', 'write', '(', 'String', ' ', 'path', ',', ' ', 'BufferedImage', ' ', 'bufferedImage', ')', ' ', '{', '\n', '        ', 'if', '(', 'bufferedImage', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '        ', 'try', '(', 'var', ' ', 'outputStream', ' ', '=', ' ', 'Files', '.', 'newOutputStream', '(', 'Path', '.', 'of', '(', 'path', ')', ')', ')', ' ', '{', '\n', '            ', 'ImageIO', '.', 'write', '(', 'bufferedImage', ',', ' ', '""', 'jpg', '""', ',', ' ', 'outputStream', ')', ';', '\n', '<END>']"
master,c246f0bc509b0ac08a839709d51d7c009c364009,ComicService.java,photoBufferConsumer,"    private Consumer<Buffer> photoBufferConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return buffer -> taskService.processPhotoTempFile(buffer, photoEntity)
                .subscribe()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c246f0bc509b0ac08a839709d51d7c009c364009,"    private Consumer<Buffer> photoBufferConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return buffer -> taskService.processPhotoTempFile(buffer, photoEntity)
                .subscribe()
","['    ', 'private', ' ', 'Consumer', '<', 'Buffer', '>', ' ', 'photoBufferConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'buffer', ' ', '-', '>', ' ', 'taskService', '.', 'processPhotoTempFile', '(', 'buffer', ',', ' ', 'photoEntity', ')', '\n', '                ', '.', 'subscribe', '(', ')', '\n', '<END>']"
master,c246f0bc509b0ac08a839709d51d7c009c364009,ComicService.java,tempFileConsumer,"    private Consumer<String> tempFileConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return path -> {
            if(StrUtil.isNotEmpty(path)) {",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c246f0bc509b0ac08a839709d51d7c009c364009,"    private Consumer<String> tempFileConsumer(ChapterEntity chapterEntity, PhotoEntity photoEntity, String photoPath) {
        return path -> {
            if(StrUtil.isNotEmpty(path)) {
","['    ', 'private', ' ', 'Consumer', '<', 'String', '>', ' ', 'tempFileConsumer', '(', 'ChapterEntity', ' ', 'chapterEntity', ',', ' ', 'PhotoEntity', ' ', 'photoEntity', ',', ' ', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'path', ' ', '-', '>', ' ', '{', '\n', '            ', 'if', '(', 'StrUtil', '.', 'isNotEmpty', '(', 'path', ')', ')', ' ', '{', '\n', '<END>']"
master,c246f0bc509b0ac08a839709d51d7c009c364009,TaskService.java,processPhotoExists,"    public Uni<Boolean> processPhotoExists(String photoPath) {
        return vertx.fileSystem()
                .exists(photoPath);",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c246f0bc509b0ac08a839709d51d7c009c364009,"    public Uni<Boolean> processPhotoExists(String photoPath) {
        return vertx.fileSystem()
                .exists(photoPath);
","['    ', 'public', ' ', 'Uni', '<', 'Boolean', '>', ' ', 'processPhotoExists', '(', 'String', ' ', 'photoPath', ')', ' ', '{', '\n', '        ', 'return', ' ', 'vertx', '.', 'fileSystem', '(', ')', '\n', '                ', '.', 'exists', '(', 'photoPath', ')', ';', '\n', '<END>']"
master,c5770f23a3ae92d837b3d01307439943060794b4,TaskService.java,post,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        //cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send().log()
                .chain(response -> this.checkResponseStatus(url, response))",https://www.github.com/jiayaoo3o/18-comic-finder/commit/c5770f23a3ae92d837b3d01307439943060794b4,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        
        return request.send().log()
                .chain(response -> this.checkResponseStatus(url, response))
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'post', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'var', ' ', 'request', ' ', '=', ' ', 'webClient', '.', 'getAbs', '(', 'url', ')', '\n', '                ', '.', 'port', '(', '443', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept', '""', ',', ' ', '""', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Encoding', '""', ',', ' ', '""', 'deflate', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Language', '""', ',', ' ', '""', 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Refer', '""', ',', ' ', 'url', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'cache-control', '""', ',', ' ', '""', 'no-cache', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'dnt', '""', ',', ' ', '""', '1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'upgrade-insecure-requests', '""', ',', ' ', '""', ' 1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'pragma', '""', ',', ' ', '""', ' no-cache', '""', ')', ';', '\n', '        ', '\n', '        ', 'return', ' ', 'request', '.', 'send', '(', ')', '.', 'log', '(', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'this', '.', 'checkResponseStatus', '(', 'url', ',', ' ', 'response', ')', ')', '\n', '<END>']"
master,ba7fa150aeae0066c4e96ec37eaa182465caec4c,TaskService.java,post,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        //cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response))",https://www.github.com/jiayaoo3o/18-comic-finder/commit/ba7fa150aeae0066c4e96ec37eaa182465caec4c,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response))
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'post', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'var', ' ', 'request', ' ', '=', ' ', 'webClient', '.', 'getAbs', '(', 'url', ')', '\n', '                ', '.', 'port', '(', '443', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept', '""', ',', ' ', '""', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Encoding', '""', ',', ' ', '""', 'deflate', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Language', '""', ',', ' ', '""', 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Refer', '""', ',', ' ', 'url', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'cache-control', '""', ',', ' ', '""', 'no-cache', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'dnt', '""', ',', ' ', '""', '1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'upgrade-insecure-requests', '""', ',', ' ', '""', ' 1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'pragma', '""', ',', ' ', '""', ' no-cache', '""', ')', ';', '\n', '        ', '\n', '        ', 'return', ' ', 'request', '.', 'send', '(', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'this', '.', 'checkResponseStatus', '(', 'url', ',', ' ', 'response', ')', ')', '\n', '<END>']"
master,643049e0693be84fb99d40dff4aac0682de319e9,TaskService.java,post,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        //cookie.ifPresent(cook -> request.putHeader(""cookie"", cook));
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response));",https://www.github.com/jiayaoo3o/18-comic-finder/commit/643049e0693be84fb99d40dff4aac0682de319e9,"    public Uni<HttpResponse<Buffer>> post(String url) {
        var request = webClient.getAbs(url)
                .port(443)
                .putHeader(""Accept"", ""text/html,application/xhtml+xml,application/xml"")
                .putHeader(""Accept-Encoding"", ""deflate"")
                .putHeader(""Accept-Language"", ""zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"")
                .putHeader(""Refer"", url)
                .putHeader(""cache-control"", ""no-cache"")
                .putHeader(""dnt"", ""1"")
                .putHeader(""upgrade-insecure-requests"", "" 1"")
                .putHeader(""pragma"", "" no-cache"");
        
        return request.send()
                .chain(response -> this.checkResponseStatus(url, response));
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'post', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'var', ' ', 'request', ' ', '=', ' ', 'webClient', '.', 'getAbs', '(', 'url', ')', '\n', '                ', '.', 'port', '(', '443', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept', '""', ',', ' ', '""', 'text/html,application/xhtml+xml,application/xml', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Encoding', '""', ',', ' ', '""', 'deflate', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Accept-Language', '""', ',', ' ', '""', 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'Refer', '""', ',', ' ', 'url', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'cache-control', '""', ',', ' ', '""', 'no-cache', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'dnt', '""', ',', ' ', '""', '1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'upgrade-insecure-requests', '""', ',', ' ', '""', ' 1', '""', ')', '\n', '                ', '.', 'putHeader', '(', '""', 'pragma', '""', ',', ' ', '""', ' no-cache', '""', ')', ';', '\n', '        ', '\n', '        ', 'return', ' ', 'request', '.', 'send', '(', ')', '\n', '                ', '.', 'chain', '(', 'response', ' ', '-', '>', ' ', 'this', '.', 'checkResponseStatus', '(', 'url', ',', ' ', 'response', ')', ')', ';', '\n', '<END>']"
master,643049e0693be84fb99d40dff4aac0682de319e9,TaskService.java,postRetry,"    public Uni<HttpResponse<Buffer>> postRetry(String url) {
        return this.post(url)
                .onFailure()",https://www.github.com/jiayaoo3o/18-comic-finder/commit/643049e0693be84fb99d40dff4aac0682de319e9,"    public Uni<HttpResponse<Buffer>> postRetry(String url) {
        return this.post(url)
                .onFailure()
","['    ', 'public', ' ', 'Uni', '<', 'HttpResponse', '<', 'Buffer', '>', '>', ' ', 'postRetry', '(', 'String', ' ', 'url', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'post', '(', 'url', ')', '\n', '                ', '.', 'onFailure', '(', ')', '\n', '<END>']"
