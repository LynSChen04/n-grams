Branch Name,Commit Hash,File Name,Method Name,Method Code,Commit Link,Method Code No Comments,Tokens
master,3484cad632a9a39bff70ba7d43f20456ba706369,DemoActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        findViewById(R.id.ripple_layout_1).setOnClickListener(this);
        findViewById(R.id.ripple_layout_2).setOnClickListener(this);
        findViewById(R.id.ripple_layout_3).setOnClickListener(this);
    }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        findViewById(R.id.ripple_layout_1).setOnClickListener(this);
        findViewById(R.id.ripple_layout_2).setOnClickListener(this);
        findViewById(R.id.ripple_layout_3).setOnClickListener(this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_1', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_2', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_3', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,onTouchEvent,"    public boolean onTouchEvent(MotionEvent event) {
        eventX = event.getX();
        eventY = event.getY();

        boolean actionUpDetected = event.getActionMasked() == MotionEvent.ACTION_UP;
        boolean actionCancelDetected = event.getActionMasked() == MotionEvent.ACTION_CANCEL;
        boolean actionDownDetected = event.getActionMasked() == MotionEvent.ACTION_DOWN;
        boolean actionMoveDetected = event.getActionMasked() == MotionEvent.ACTION_MOVE;
        boolean isEventInBounds = bounds.contains((int) eventX, (int) eventY);

        if (gestureDetector.onTouchEvent(event)) {
            startRipple();
        } else if (actionUpDetected) {
            if (isEventInBounds) {
                startRipple();
            } else {
                setRadius(0);
            }
        } else if (actionCancelDetected) {
            setRadius(0);
        } else if (rippleHover) {
            if (actionDownDetected) {
                startHover();
            } else if (actionMoveDetected) {
                setRadius(isEventInBounds ? rippleDiameter : 0);
            }
        }
        return true;
    }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    public boolean onTouchEvent(MotionEvent event) {
        eventX = event.getX();
        eventY = event.getY();

        boolean actionUpDetected = event.getActionMasked() == MotionEvent.ACTION_UP;
        boolean actionCancelDetected = event.getActionMasked() == MotionEvent.ACTION_CANCEL;
        boolean actionDownDetected = event.getActionMasked() == MotionEvent.ACTION_DOWN;
        boolean actionMoveDetected = event.getActionMasked() == MotionEvent.ACTION_MOVE;
        boolean isEventInBounds = bounds.contains((int) eventX, (int) eventY);

        if (gestureDetector.onTouchEvent(event)) {
            startRipple();
        } else if (actionUpDetected) {
            if (isEventInBounds) {
                startRipple();
            } else {
                setRadius(0);
            }
        } else if (actionCancelDetected) {
            setRadius(0);
        } else if (rippleHover) {
            if (actionDownDetected) {
                startHover();
            } else if (actionMoveDetected) {
                setRadius(isEventInBounds ? rippleDiameter : 0);
            }
        }
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'eventX', ' ', '=', ' ', 'event', '.', 'getX', '(', ')', ';', '\n', '        ', 'eventY', ' ', '=', ' ', 'event', '.', 'getY', '(', ')', ';', '\n', '\n', '        ', 'boolean', ' ', 'actionUpDetected', ' ', '=', ' ', 'event', '.', 'getActionMasked', '(', ')', ' ', '=', '=', ' ', 'MotionEvent', '.', 'ACTION_UP', ';', '\n', '        ', 'boolean', ' ', 'actionCancelDetected', ' ', '=', ' ', 'event', '.', 'getActionMasked', '(', ')', ' ', '=', '=', ' ', 'MotionEvent', '.', 'ACTION_CANCEL', ';', '\n', '        ', 'boolean', ' ', 'actionDownDetected', ' ', '=', ' ', 'event', '.', 'getActionMasked', '(', ')', ' ', '=', '=', ' ', 'MotionEvent', '.', 'ACTION_DOWN', ';', '\n', '        ', 'boolean', ' ', 'actionMoveDetected', ' ', '=', ' ', 'event', '.', 'getActionMasked', '(', ')', ' ', '=', '=', ' ', 'MotionEvent', '.', 'ACTION_MOVE', ';', '\n', '        ', 'boolean', ' ', 'isEventInBounds', ' ', '=', ' ', 'bounds', '.', 'contains', '(', '(', 'int', ')', ' ', 'eventX', ',', ' ', '(', 'int', ')', ' ', 'eventY', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'gestureDetector', '.', 'onTouchEvent', '(', 'event', ')', ')', ' ', '{', '\n', '            ', 'startRipple', '(', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'actionUpDetected', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'isEventInBounds', ')', ' ', '{', '\n', '                ', 'startRipple', '(', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'actionCancelDetected', ')', ' ', '{', '\n', '            ', 'setRadius', '(', '0', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'rippleHover', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'actionDownDetected', ')', ' ', '{', '\n', '                ', 'startHover', '(', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'actionMoveDetected', ')', ' ', '{', '\n', '                ', 'setRadius', '(', 'isEventInBounds', ' ', '?', ' ', 'rippleDiameter', ' ', ':', ' ', '0', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,startHover,"    private void startHover() {
        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, 0, rippleDiameter)
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new AccelerateInterpolator());
        hoverAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    private void startHover() {
        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, 0, rippleDiameter)
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new AccelerateInterpolator());
        hoverAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startHover', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'hoverAnimator', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', '0', ',', ' ', 'rippleDiameter', ')', '\n', '            ', '.', 'setDuration', '(', 'HOVER_DURATION', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'setInterpolator', '(', 'new', ' ', 'AccelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,startRipple,"    private void startRipple() {
        if (childView != null && childClickListener != null) {
            childClickListener.onClick(childView);
        }

        final int width = getWidth();
        final int height = getHeight();

        final int halfWidth = width / 2;
        final int halfHeight = height / 2;

        final float radiusX = halfWidth > eventX ? width - eventX : eventX;
        final float radiusY = halfHeight > eventY ? height - eventY : eventY;

        float endRadius = (float) Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2)) * 1.2f;

        if (rippleAnimator != null) {
            rippleAnimator.cancel();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }

        rippleAnimator = new AnimatorSet();
        rippleAnimator.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
            }
        });

        ObjectAnimator ripple = ObjectAnimator.ofFloat(this, radiusProperty, radius, endRadius);
        ripple.setDuration(rippleDuration);
        ripple.setInterpolator(new DecelerateInterpolator());
        ObjectAnimator fade = ObjectAnimator.ofInt(this, circleAlphaProperty, rippleAlpha, 0);
        fade.setDuration(FADE_DURATION);
        fade.setInterpolator(new AccelerateInterpolator());
        fade.setStartDelay(rippleDuration - FADE_DURATION - FADE_EXTRA_DELAY);

        rippleAnimator.playTogether(ripple, fade);
        rippleAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    private void startRipple() {
        if (childView != null && childClickListener != null) {
            childClickListener.onClick(childView);
        }

        final int width = getWidth();
        final int height = getHeight();

        final int halfWidth = width / 2;
        final int halfHeight = height / 2;

        final float radiusX = halfWidth > eventX ? width - eventX : eventX;
        final float radiusY = halfHeight > eventY ? height - eventY : eventY;

        float endRadius = (float) Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2)) * 1.2f;

        if (rippleAnimator != null) {
            rippleAnimator.cancel();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }

        rippleAnimator = new AnimatorSet();
        rippleAnimator.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
            }
        });

        ObjectAnimator ripple = ObjectAnimator.ofFloat(this, radiusProperty, radius, endRadius);
        ripple.setDuration(rippleDuration);
        ripple.setInterpolator(new DecelerateInterpolator());
        ObjectAnimator fade = ObjectAnimator.ofInt(this, circleAlphaProperty, rippleAlpha, 0);
        fade.setDuration(FADE_DURATION);
        fade.setInterpolator(new AccelerateInterpolator());
        fade.setStartDelay(rippleDuration - FADE_DURATION - FADE_EXTRA_DELAY);

        rippleAnimator.playTogether(ripple, fade);
        rippleAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startRipple', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'childView', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'childClickListener', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'childClickListener', '.', 'onClick', '(', 'childView', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'width', ' ', '=', ' ', 'getWidth', '(', ')', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'height', ' ', '=', ' ', 'getHeight', '(', ')', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'halfWidth', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'halfHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'radiusX', ' ', '=', ' ', 'halfWidth', ' ', '>', ' ', 'eventX', ' ', '?', ' ', 'width', ' ', '-', ' ', 'eventX', ' ', ':', ' ', 'eventX', ';', '\n', '        ', 'final', ' ', 'float', ' ', 'radiusY', ' ', '=', ' ', 'halfHeight', ' ', '>', ' ', 'eventY', ' ', '?', ' ', 'height', ' ', '-', ' ', 'eventY', ' ', ':', ' ', 'eventY', ';', '\n', '\n', '        ', 'float', ' ', 'endRadius', ' ', '=', ' ', '(', 'float', ')', ' ', 'Math', '.', 'sqrt', '(', 'Math', '.', 'pow', '(', 'radiusX', ',', ' ', '2', ')', ' ', '+', ' ', 'Math', '.', 'pow', '(', 'radiusY', ',', ' ', '2', ')', ')', ' ', '*', ' ', '1.2f', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rippleAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'rippleAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'rippleAnimator', ' ', '=', ' ', 'new', ' ', 'AnimatorSet', '(', ')', ';', '\n', '        ', 'rippleAnimator', '.', 'addListener', '(', 'new', ' ', 'AnimatorListenerAdapter', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '                ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'ObjectAnimator', ' ', 'ripple', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', 'radius', ',', ' ', 'endRadius', ')', ';', '\n', '        ', 'ripple', '.', 'setDuration', '(', 'rippleDuration', ')', ';', '\n', '        ', 'ripple', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'ObjectAnimator', ' ', 'fade', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofInt', '(', 'this', ',', ' ', 'circleAlphaProperty', ',', ' ', 'rippleAlpha', ',', ' ', '0', ')', ';', '\n', '        ', 'fade', '.', 'setDuration', '(', 'FADE_DURATION', ')', ';', '\n', '        ', 'fade', '.', 'setInterpolator', '(', 'new', ' ', 'AccelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'fade', '.', 'setStartDelay', '(', 'rippleDuration', ' ', '-', ' ', 'FADE_DURATION', ' ', '-', ' ', 'FADE_EXTRA_DELAY', ')', ';', '\n', '\n', '        ', 'rippleAnimator', '.', 'playTogether', '(', 'ripple', ',', ' ', 'fade', ')', ';', '\n', '        ', 'rippleAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
            }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '                ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '            ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,onSizeChanged,"    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        bounds.set(0, 0, w, h);
        rippleBackground.setBounds(bounds);
    }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        bounds.set(0, 0, w, h);
        rippleBackground.setBounds(bounds);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onSizeChanged', '(', 'int', ' ', 'w', ',', ' ', 'int', ' ', 'h', ',', ' ', 'int', ' ', 'oldw', ',', ' ', 'int', ' ', 'oldh', ')', ' ', '{', '\n', '        ', 'super', '.', 'onSizeChanged', '(', 'w', ',', ' ', 'h', ',', ' ', 'oldw', ',', ' ', 'oldh', ')', ';', '\n', '        ', 'bounds', '.', 'set', '(', '0', ',', ' ', '0', ',', ' ', 'w', ',', ' ', 'h', ')', ';', '\n', '        ', 'rippleBackground', '.', 'setBounds', '(', 'bounds', ')', ';', '\n', '    ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,draw,"    public void draw(Canvas canvas) {
        if (rippleOverlay) {
            rippleBackground.draw(canvas);",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    public void draw(Canvas canvas) {
        if (rippleOverlay) {
            rippleBackground.draw(canvas);
","['    ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'rippleOverlay', ')', ' ', '{', '\n', '            ', 'rippleBackground', '.', 'draw', '(', 'canvas', ')', ';', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,get,"        public Float get(MaterialRippleLayout object) {
            return object.getRadius();
        }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"        public Float get(MaterialRippleLayout object) {
            return object.getRadius();
        }
","['        ', 'public', ' ', 'Float', ' ', 'get', '(', 'MaterialRippleLayout', ' ', 'object', ')', ' ', '{', '\n', '            ', 'return', ' ', 'object', '.', 'getRadius', '(', ')', ';', '\n', '        ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,set,"        public void set(MaterialRippleLayout object, Float value) {
            object.setRadius(value);
        }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"        public void set(MaterialRippleLayout object, Float value) {
            object.setRadius(value);
        }
","['        ', 'public', ' ', 'void', ' ', 'set', '(', 'MaterialRippleLayout', ' ', 'object', ',', ' ', 'Float', ' ', 'value', ')', ' ', '{', '\n', '            ', 'object', '.', 'setRadius', '(', 'value', ')', ';', '\n', '        ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,get,"        public Integer get(MaterialRippleLayout object) {
            return object.getRippleAlpha();
        }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"        public Integer get(MaterialRippleLayout object) {
            return object.getRippleAlpha();
        }
","['        ', 'public', ' ', 'Integer', ' ', 'get', '(', 'MaterialRippleLayout', ' ', 'object', ')', ' ', '{', '\n', '            ', 'return', ' ', 'object', '.', 'getRippleAlpha', '(', ')', ';', '\n', '        ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,set,"        public void set(MaterialRippleLayout object, Integer value) {
            object.setRippleAlpha(value);
        }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"        public void set(MaterialRippleLayout object, Integer value) {
            object.setRippleAlpha(value);
        }
","['        ', 'public', ' ', 'void', ' ', 'set', '(', 'MaterialRippleLayout', ' ', 'object', ',', ' ', 'Integer', ' ', 'value', ')', ' ', '{', '\n', '            ', 'object', '.', 'setRippleAlpha', '(', 'value', ')', ';', '\n', '        ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,onSingleTapConfirmed,"        public boolean onSingleTapConfirmed(MotionEvent event) {
            return true;
        }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"        public boolean onSingleTapConfirmed(MotionEvent event) {
            return true;
        }
","['        ', 'public', ' ', 'boolean', ' ', 'onSingleTapConfirmed', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n']"
master,3484cad632a9a39bff70ba7d43f20456ba706369,MaterialRippleLayout.java,dpToPx,"    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }",https://www.github.com/balysv/material-ripple/commit/3484cad632a9a39bff70ba7d43f20456ba706369,"    static float dpToPx(Resources resources, float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
    }
","['    ', 'static', ' ', 'float', ' ', 'dpToPx', '(', 'Resources', ' ', 'resources', ',', ' ', 'float', ' ', 'dp', ')', ' ', '{', '\n', '        ', 'return', ' ', 'TypedValue', '.', 'applyDimension', '(', 'TypedValue', '.', 'COMPLEX_UNIT_DIP', ',', ' ', 'dp', ',', ' ', 'resources', '.', 'getDisplayMetrics', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cc25da43603fbde3246354937be162a65cb2fa4c,MaterialRippleLayout.java,startHover,"    private void startHover() {
        if (eventCancelled) return;

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, 0, rippleDiameter)
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new DecelerateInterpolator(3));
        hoverAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/cc25da43603fbde3246354937be162a65cb2fa4c,"    private void startHover() {
        if (eventCancelled) return;

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, 0, rippleDiameter)
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new DecelerateInterpolator(3));
        hoverAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startHover', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'eventCancelled', ')', ' ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'hoverAnimator', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', '0', ',', ' ', 'rippleDiameter', ')', '\n', '            ', '.', 'setDuration', '(', 'HOVER_DURATION', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', '3', ')', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,cc25da43603fbde3246354937be162a65cb2fa4c,MaterialRippleLayout.java,startRipple,"    private void startRipple() {
        if (eventCancelled) return;

        final int width = getWidth();
        final int height = getHeight();

        final int halfWidth = width / 2;
        final int halfHeight = height / 2;

        final float radiusX = halfWidth > eventX ? width - eventX : eventX;
        final float radiusY = halfHeight > eventY ? height - eventY : eventY;

        float endRadius = (float) Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2)) * 1.2f;

        if (rippleAnimator != null) {
            rippleAnimator.cancel();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }

        rippleAnimator = new AnimatorSet();
        rippleAnimator.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
            }
        });

        ObjectAnimator ripple = ObjectAnimator.ofFloat(this, radiusProperty, radius, endRadius);
        ripple.setDuration(rippleDuration);
        ripple.setInterpolator(new DecelerateInterpolator());
        ObjectAnimator fade = ObjectAnimator.ofInt(this, circleAlphaProperty, rippleAlpha, 0);
        fade.setDuration(FADE_DURATION);
        fade.setInterpolator(new AccelerateInterpolator());
        fade.setStartDelay(rippleDuration - FADE_DURATION - FADE_EXTRA_DELAY);

        rippleAnimator.playTogether(ripple, fade);
        rippleAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/cc25da43603fbde3246354937be162a65cb2fa4c,"    private void startRipple() {
        if (eventCancelled) return;

        final int width = getWidth();
        final int height = getHeight();

        final int halfWidth = width / 2;
        final int halfHeight = height / 2;

        final float radiusX = halfWidth > eventX ? width - eventX : eventX;
        final float radiusY = halfHeight > eventY ? height - eventY : eventY;

        float endRadius = (float) Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2)) * 1.2f;

        if (rippleAnimator != null) {
            rippleAnimator.cancel();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }

        rippleAnimator = new AnimatorSet();
        rippleAnimator.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
            }
        });

        ObjectAnimator ripple = ObjectAnimator.ofFloat(this, radiusProperty, radius, endRadius);
        ripple.setDuration(rippleDuration);
        ripple.setInterpolator(new DecelerateInterpolator());
        ObjectAnimator fade = ObjectAnimator.ofInt(this, circleAlphaProperty, rippleAlpha, 0);
        fade.setDuration(FADE_DURATION);
        fade.setInterpolator(new AccelerateInterpolator());
        fade.setStartDelay(rippleDuration - FADE_DURATION - FADE_EXTRA_DELAY);

        rippleAnimator.playTogether(ripple, fade);
        rippleAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startRipple', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'eventCancelled', ')', ' ', 'return', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'width', ' ', '=', ' ', 'getWidth', '(', ')', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'height', ' ', '=', ' ', 'getHeight', '(', ')', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'halfWidth', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'halfHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'radiusX', ' ', '=', ' ', 'halfWidth', ' ', '>', ' ', 'eventX', ' ', '?', ' ', 'width', ' ', '-', ' ', 'eventX', ' ', ':', ' ', 'eventX', ';', '\n', '        ', 'final', ' ', 'float', ' ', 'radiusY', ' ', '=', ' ', 'halfHeight', ' ', '>', ' ', 'eventY', ' ', '?', ' ', 'height', ' ', '-', ' ', 'eventY', ' ', ':', ' ', 'eventY', ';', '\n', '\n', '        ', 'float', ' ', 'endRadius', ' ', '=', ' ', '(', 'float', ')', ' ', 'Math', '.', 'sqrt', '(', 'Math', '.', 'pow', '(', 'radiusX', ',', ' ', '2', ')', ' ', '+', ' ', 'Math', '.', 'pow', '(', 'radiusY', ',', ' ', '2', ')', ')', ' ', '*', ' ', '1.2f', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rippleAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'rippleAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'rippleAnimator', ' ', '=', ' ', 'new', ' ', 'AnimatorSet', '(', ')', ';', '\n', '        ', 'rippleAnimator', '.', 'addListener', '(', 'new', ' ', 'AnimatorListenerAdapter', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '                ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'ObjectAnimator', ' ', 'ripple', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', 'radius', ',', ' ', 'endRadius', ')', ';', '\n', '        ', 'ripple', '.', 'setDuration', '(', 'rippleDuration', ')', ';', '\n', '        ', 'ripple', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'ObjectAnimator', ' ', 'fade', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofInt', '(', 'this', ',', ' ', 'circleAlphaProperty', ',', ' ', 'rippleAlpha', ',', ' ', '0', ')', ';', '\n', '        ', 'fade', '.', 'setDuration', '(', 'FADE_DURATION', ')', ';', '\n', '        ', 'fade', '.', 'setInterpolator', '(', 'new', ' ', 'AccelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'fade', '.', 'setStartDelay', '(', 'rippleDuration', ' ', '-', ' ', 'FADE_DURATION', ' ', '-', ' ', 'FADE_EXTRA_DELAY', ')', ';', '\n', '\n', '        ', 'rippleAnimator', '.', 'playTogether', '(', 'ripple', ',', ' ', 'fade', ')', ';', '\n', '        ', 'rippleAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoActivity.java,onClick,"    @Override public void onClick(View v) {
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_list, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    @Override public void onClick(View v) {
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_list, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'menu_list', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_list', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoListActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_list, menu);
        return true;
    }",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_list, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'menu_list', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_list', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoListActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoListActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo_list);
        ListView listView = (ListView) findViewById(R.id.list);
        listView.setAdapter(new ArrayAdapter<>(this, R.layout.demo_list_item, android.R.id.text1, data));
        listView.setOnItemClickListener(this);
    }",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo_list);
        ListView listView = (ListView) findViewById(R.id.list);
        listView.setAdapter(new ArrayAdapter<>(this, R.layout.demo_list_item, android.R.id.text1, data));
        listView.setOnItemClickListener(this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo_list', ')', ';', '\n', '        ', 'ListView', ' ', 'listView', ' ', '=', ' ', '(', 'ListView', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'list', ')', ';', '\n', '        ', 'listView', '.', 'setAdapter', '(', 'new', ' ', 'ArrayAdapter', '<', '>', '(', 'this', ',', ' ', 'R', '.', 'layout', '.', 'demo_list_item', ',', ' ', 'android', '.', 'R', '.', 'id', '.', 'text1', ',', ' ', 'data', ')', ')', ';', '\n', '        ', 'listView', '.', 'setOnItemClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoListActivity.java,onItemClick,"    @Override public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        Toast.makeText(this, ""Rippled item: "" + position, Toast.LENGTH_SHORT).show();
    }",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    @Override public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        Toast.makeText(this, ""Rippled item: "" + position, Toast.LENGTH_SHORT).show();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onItemClick', '(', 'AdapterView', '<', '?', '>', ' ', 'parent', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'position', ',', ' ', 'long', ' ', 'id', ')', ' ', '{', '\n', '        ', 'Toast', '.', 'makeText', '(', 'this', ',', ' ', '""', 'Rippled item: ', '""', ' ', '+', ' ', 'position', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '    ', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoListActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_button, menu);
        return true;
    }",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_button, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'menu_button', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,4732db2b682472b1db21114d773845e838e7cb98,DemoListActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_button) {
            startActivity(new Intent(this, DemoActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-ripple/commit/4732db2b682472b1db21114d773845e838e7cb98,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_button) {
            startActivity(new Intent(this, DemoActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_button', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,ccb7b843d6701228a09754f8599f0d94457221df,MaterialRippleLayout.java,startRipple,"    private void startRipple(final Runnable animationEndRunnable) {
        if (eventCancelled) return;

        final int width = getWidth();
        final int height = getHeight();

        final int halfWidth = width / 2;
        final int halfHeight = height / 2;

        final float radiusX = halfWidth > eventX ? width - eventX : eventX;
        final float radiusY = halfHeight > eventY ? height - eventY : eventY;

        float endRadius = (float) Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2)) * 1.2f;

        if (rippleAnimator != null) {
            rippleAnimator.cancel();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }

        rippleAnimator = new AnimatorSet();
        rippleAnimator.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
                if (animationEndRunnable != null) {
                    animationEndRunnable.run();
                }
            }
        });

        ObjectAnimator ripple = ObjectAnimator.ofFloat(this, radiusProperty, radius, endRadius);
        ripple.setDuration(rippleDuration);
        ripple.setInterpolator(new DecelerateInterpolator());
        ObjectAnimator fade = ObjectAnimator.ofInt(this, circleAlphaProperty, rippleAlpha, 0);
        fade.setDuration(rippleFadeDuration);
        fade.setInterpolator(new AccelerateInterpolator());
        fade.setStartDelay(rippleDuration - rippleFadeDuration - FADE_EXTRA_DELAY);

        rippleAnimator.playTogether(ripple, fade);
        rippleAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/ccb7b843d6701228a09754f8599f0d94457221df,"    private void startRipple(final Runnable animationEndRunnable) {
        if (eventCancelled) return;

        final int width = getWidth();
        final int height = getHeight();

        final int halfWidth = width / 2;
        final int halfHeight = height / 2;

        final float radiusX = halfWidth > eventX ? width - eventX : eventX;
        final float radiusY = halfHeight > eventY ? height - eventY : eventY;

        float endRadius = (float) Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2)) * 1.2f;

        if (rippleAnimator != null) {
            rippleAnimator.cancel();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }

        rippleAnimator = new AnimatorSet();
        rippleAnimator.addListener(new AnimatorListenerAdapter() {
            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
                if (animationEndRunnable != null) {
                    animationEndRunnable.run();
                }
            }
        });

        ObjectAnimator ripple = ObjectAnimator.ofFloat(this, radiusProperty, radius, endRadius);
        ripple.setDuration(rippleDuration);
        ripple.setInterpolator(new DecelerateInterpolator());
        ObjectAnimator fade = ObjectAnimator.ofInt(this, circleAlphaProperty, rippleAlpha, 0);
        fade.setDuration(rippleFadeDuration);
        fade.setInterpolator(new AccelerateInterpolator());
        fade.setStartDelay(rippleDuration - rippleFadeDuration - FADE_EXTRA_DELAY);

        rippleAnimator.playTogether(ripple, fade);
        rippleAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startRipple', '(', 'final', ' ', 'Runnable', ' ', 'animationEndRunnable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'eventCancelled', ')', ' ', 'return', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'width', ' ', '=', ' ', 'getWidth', '(', ')', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'height', ' ', '=', ' ', 'getHeight', '(', ')', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'halfWidth', ' ', '=', ' ', 'width', ' ', '/', ' ', '2', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'halfHeight', ' ', '=', ' ', 'height', ' ', '/', ' ', '2', ';', '\n', '\n', '        ', 'final', ' ', 'float', ' ', 'radiusX', ' ', '=', ' ', 'halfWidth', ' ', '>', ' ', 'eventX', ' ', '?', ' ', 'width', ' ', '-', ' ', 'eventX', ' ', ':', ' ', 'eventX', ';', '\n', '        ', 'final', ' ', 'float', ' ', 'radiusY', ' ', '=', ' ', 'halfHeight', ' ', '>', ' ', 'eventY', ' ', '?', ' ', 'height', ' ', '-', ' ', 'eventY', ' ', ':', ' ', 'eventY', ';', '\n', '\n', '        ', 'float', ' ', 'endRadius', ' ', '=', ' ', '(', 'float', ')', ' ', 'Math', '.', 'sqrt', '(', 'Math', '.', 'pow', '(', 'radiusX', ',', ' ', '2', ')', ' ', '+', ' ', 'Math', '.', 'pow', '(', 'radiusY', ',', ' ', '2', ')', ')', ' ', '*', ' ', '1.2f', ';', '\n', '\n', '        ', 'if', ' ', '(', 'rippleAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'rippleAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'rippleAnimator', ' ', '=', ' ', 'new', ' ', 'AnimatorSet', '(', ')', ';', '\n', '        ', 'rippleAnimator', '.', 'addListener', '(', 'new', ' ', 'AnimatorListenerAdapter', '(', ')', ' ', '{', '\n', '            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '                ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '                ', 'if', ' ', '(', 'animationEndRunnable', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'animationEndRunnable', '.', 'run', '(', ')', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'ObjectAnimator', ' ', 'ripple', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', 'radius', ',', ' ', 'endRadius', ')', ';', '\n', '        ', 'ripple', '.', 'setDuration', '(', 'rippleDuration', ')', ';', '\n', '        ', 'ripple', '.', 'setInterpolator', '(', 'new', ' ', 'DecelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'ObjectAnimator', ' ', 'fade', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofInt', '(', 'this', ',', ' ', 'circleAlphaProperty', ',', ' ', 'rippleAlpha', ',', ' ', '0', ')', ';', '\n', '        ', 'fade', '.', 'setDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '        ', 'fade', '.', 'setInterpolator', '(', 'new', ' ', 'AccelerateInterpolator', '(', ')', ')', ';', '\n', '        ', 'fade', '.', 'setStartDelay', '(', 'rippleDuration', ' ', '-', ' ', 'rippleFadeDuration', ' ', '-', ' ', 'FADE_EXTRA_DELAY', ')', ';', '\n', '\n', '        ', 'rippleAnimator', '.', 'playTogether', '(', 'ripple', ',', ' ', 'fade', ')', ';', '\n', '        ', 'rippleAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,ccb7b843d6701228a09754f8599f0d94457221df,MaterialRippleLayout.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
                if (animationEndRunnable != null) {
                    animationEndRunnable.run();",https://www.github.com/balysv/material-ripple/commit/ccb7b843d6701228a09754f8599f0d94457221df,"            @Override public void onAnimationEnd(Animator animation) {
                setRadius(0);
                setRippleAlpha(rippleAlpha);
                if (animationEndRunnable != null) {
                    animationEndRunnable.run();
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '                ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '                ', 'if', ' ', '(', 'animationEndRunnable', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'animationEndRunnable', '.', 'run', '(', ')', ';', '\n']"
master,47e1efcc46c72a6b7e17f21117701f98122c87a4,MaterialRippleLayout.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                if (!ripplePersistent) {
                    setRadius(0);
                    setRippleAlpha(rippleAlpha);
                }
                if (animationEndRunnable != null) {
                    animationEndRunnable.run();",https://www.github.com/balysv/material-ripple/commit/47e1efcc46c72a6b7e17f21117701f98122c87a4,"            @Override public void onAnimationEnd(Animator animation) {
                if (!ripplePersistent) {
                    setRadius(0);
                    setRippleAlpha(rippleAlpha);
                }
                if (animationEndRunnable != null) {
                    animationEndRunnable.run();
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'ripplePersistent', ')', ' ', '{', '\n', '                    ', 'setRadius', '(', '0', ')', ';', '\n', '                    ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '                ', '}', '\n', '                ', 'if', ' ', '(', 'animationEndRunnable', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'animationEndRunnable', '.', 'run', '(', ')', ';', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,DemoActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        findViewById(R.id.ripple_layout_1).setOnClickListener(this);
        findViewById(R.id.ripple_layout_3).setOnClickListener(this);

        // static initialization
        View view = findViewById(R.id.ripple_layout_2);
        MaterialRippleLayout.on(view)
            .rippleColor(0xAA0044)
            .rippleAlpha(0.9f)
            .rippleHover(false)
            .create();

        view.setOnClickListener(this);
    }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);
        findViewById(R.id.ripple_layout_1).setOnClickListener(this);
        findViewById(R.id.ripple_layout_3).setOnClickListener(this);

        
        View view = findViewById(R.id.ripple_layout_2);
        MaterialRippleLayout.on(view)
            .rippleColor(0xAA0044)
            .rippleAlpha(0.9f)
            .rippleHover(false)
            .create();

        view.setOnClickListener(this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_1', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_3', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '\n', '        ', '\n', '        ', 'View', ' ', 'view', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_2', ')', ';', '\n', '        ', 'MaterialRippleLayout', '.', 'on', '(', 'view', ')', '\n', '            ', '.', 'rippleColor', '(', '0xAA0044', ')', '\n', '            ', '.', 'rippleAlpha', '(', '0.9f', ')', '\n', '            ', '.', 'rippleHover', '(', 'false', ')', '\n', '            ', '.', 'create', '(', ')', ';', '\n', '\n', '        ', 'view', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,on,"    public static RippleBuilder on(View view) {
        return new RippleBuilder(view);
    }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"    public static RippleBuilder on(View view) {
        return new RippleBuilder(view);
    }
","['    ', 'public', ' ', 'static', ' ', 'RippleBuilder', ' ', 'on', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'RippleBuilder', '(', 'view', ')', ';', '\n', '    ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleColor,"        public RippleBuilder rippleColor(int color) {
            this.rippleColor = color;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleColor(int color) {
            this.rippleColor = color;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleColor', '(', 'int', ' ', 'color', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleColor', ' ', '=', ' ', 'color', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleOverlay,"        public RippleBuilder rippleOverlay(boolean overlay) {
            this.rippleOverlay = overlay;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleOverlay(boolean overlay) {
            this.rippleOverlay = overlay;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleOverlay', '(', 'boolean', ' ', 'overlay', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleOverlay', ' ', '=', ' ', 'overlay', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleHover,"        public RippleBuilder rippleHover(boolean hover) {
            this.rippleHover = hover;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleHover(boolean hover) {
            this.rippleHover = hover;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleHover', '(', 'boolean', ' ', 'hover', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleHover', ' ', '=', ' ', 'hover', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleDiameterDp,"        public RippleBuilder rippleDiameterDp(int diameterDp) {
            this.rippleDiameter = diameterDp;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleDiameterDp(int diameterDp) {
            this.rippleDiameter = diameterDp;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleDiameterDp', '(', 'int', ' ', 'diameterDp', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleDiameter', ' ', '=', ' ', 'diameterDp', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleDuration,"        public RippleBuilder rippleDuration(int duration) {
            this.rippleDuration = duration;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleDuration(int duration) {
            this.rippleDuration = duration;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleDuration', '(', 'int', ' ', 'duration', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleDuration', ' ', '=', ' ', 'duration', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleAlpha,"        public RippleBuilder rippleAlpha(float alpha) {
            this.rippleAlpha = 255 * alpha;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleAlpha(float alpha) {
            this.rippleAlpha = 255 * alpha;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleAlpha', '(', 'float', ' ', 'alpha', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleAlpha', ' ', '=', ' ', '255', ' ', '*', ' ', 'alpha', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleDelayClick,"        public RippleBuilder rippleDelayClick(boolean delayClick) {
            this.rippleDelayClick = delayClick;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleDelayClick(boolean delayClick) {
            this.rippleDelayClick = delayClick;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleDelayClick', '(', 'boolean', ' ', 'delayClick', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleDelayClick', ' ', '=', ' ', 'delayClick', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleFadeDuration,"        public RippleBuilder rippleFadeDuration(int fadeDuration) {
            this.rippleFadeDuration = fadeDuration;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleFadeDuration(int fadeDuration) {
            this.rippleFadeDuration = fadeDuration;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleFadeDuration', '(', 'int', ' ', 'fadeDuration', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleFadeDuration', ' ', '=', ' ', 'fadeDuration', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,ripplePersistent,"        public RippleBuilder ripplePersistent(boolean persistent) {
            this.ripplePersistent = persistent;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder ripplePersistent(boolean persistent) {
            this.ripplePersistent = persistent;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'ripplePersistent', '(', 'boolean', ' ', 'persistent', ')', ' ', '{', '\n', '            ', 'this', '.', 'ripplePersistent', ' ', '=', ' ', 'persistent', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,rippleBackground,"        public RippleBuilder rippleBackground(int color) {
            this.rippleBackground = color;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public RippleBuilder rippleBackground(int color) {
            this.rippleBackground = color;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleBackground', '(', 'int', ' ', 'color', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleBackground', ' ', '=', ' ', 'color', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,72d77ab154293e7d9549c91ba85f7e253559fc7b,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setRippleAlpha((int) (255 * rippleAlpha));
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/72d77ab154293e7d9549c91ba85f7e253559fc7b,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setRippleAlpha((int) (255 * rippleAlpha));
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setRippleAlpha', '(', '(', 'int', ')', ' ', '(', '255', ' ', '*', ' ', 'rippleAlpha', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
master,4c06cb8d4834cd9a3d9afda1175404bc0836f138,MaterialRippleLayout.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                if (!ripplePersistent) {
                    setRadius(0);
                    setRippleAlpha(rippleAlpha);
                }
                if (animationEndRunnable != null && rippleDelayClick) {
                    animationEndRunnable.run();",https://www.github.com/balysv/material-ripple/commit/4c06cb8d4834cd9a3d9afda1175404bc0836f138,"            @Override public void onAnimationEnd(Animator animation) {
                if (!ripplePersistent) {
                    setRadius(0);
                    setRippleAlpha(rippleAlpha);
                }
                if (animationEndRunnable != null && rippleDelayClick) {
                    animationEndRunnable.run();
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'ripplePersistent', ')', ' ', '{', '\n', '                    ', 'setRadius', '(', '0', ')', ';', '\n', '                    ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '                ', '}', '\n', '                ', 'if', ' ', '(', 'animationEndRunnable', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'rippleDelayClick', ')', ' ', '{', '\n', '                    ', 'animationEndRunnable', '.', 'run', '(', ')', ';', '\n']"
master,113301b6a7edca36b72a21427cbbf610e0ea2aec,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setRippleAlpha((int) (255 * rippleAlpha));
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/113301b6a7edca36b72a21427cbbf610e0ea2aec,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setRippleAlpha((int) (255 * rippleAlpha));
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setRippleAlpha', '(', '(', 'int', ')', ' ', '(', '255', ' ', '*', ' ', 'rippleAlpha', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'parent', ' ', 'instanceof', ' ', 'MaterialRippleLayout', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout', '""', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
master,7485de9b2fd1c45634017d0ca6e73f61ae09e389,MaterialRippleLayout.java,onTouchEvent,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        eventX = event.getX();
        eventY = event.getY();

        boolean isEventInBounds = bounds.contains((int) eventX, (int) eventY);

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult) {
            return true;",https://www.github.com/balysv/material-ripple/commit/7485de9b2fd1c45634017d0ca6e73f61ae09e389,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        eventX = event.getX();
        eventY = event.getY();

        boolean isEventInBounds = bounds.contains((int) eventX, (int) eventY);

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult) {
            return true;
","['    ', 'public', ' ', 'boolean', ' ', 'onTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'superOnTouchEvent', ' ', '=', ' ', 'super', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'isEnabled', '(', ')', ' ', '|', '|', ' ', '!', 'childView', '.', 'isEnabled', '(', ')', ')', ' ', 'return', ' ', 'superOnTouchEvent', ';', '\n', '\n', '        ', 'eventX', ' ', '=', ' ', 'event', '.', 'getX', '(', ')', ';', '\n', '        ', 'eventY', ' ', '=', ' ', 'event', '.', 'getY', '(', ')', ';', '\n', '\n', '        ', 'boolean', ' ', 'isEventInBounds', ' ', '=', ' ', 'bounds', '.', 'contains', '(', '(', 'int', ')', ' ', 'eventX', ',', ' ', '(', 'int', ')', ' ', 'eventY', ')', ';', '\n', '\n', '        ', 'boolean', ' ', 'gestureResult', ' ', '=', ' ', 'gestureDetector', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '        ', 'if', ' ', '(', 'gestureResult', ')', ' ', '{', '\n', '            ', 'return', ' ', 'true', ';', '\n']"
master,7485de9b2fd1c45634017d0ca6e73f61ae09e389,MaterialRippleLayout.java,onLongPress,"        public void onLongPress(MotionEvent e) {
            childView.performLongClick();
        }",https://www.github.com/balysv/material-ripple/commit/7485de9b2fd1c45634017d0ca6e73f61ae09e389,"        public void onLongPress(MotionEvent e) {
            childView.performLongClick();
        }
","['        ', 'public', ' ', 'void', ' ', 'onLongPress', '(', 'MotionEvent', ' ', 'e', ')', ' ', '{', '\n', '            ', 'childView', '.', 'performLongClick', '(', ')', ';', '\n', '        ', '}', '\n']"
master,0e80cdbb0b050864c0fa5f9fe85d97e8625f2af1,DemoActivity.java,onLongClick,"            @Override public boolean onLongClick(View v) {
                Toast.makeText(DemoActivity.this, ""LONG"", Toast.LENGTH_SHORT).show();
                return false;
            }",https://www.github.com/balysv/material-ripple/commit/0e80cdbb0b050864c0fa5f9fe85d97e8625f2af1,"            @Override public boolean onLongClick(View v) {
                Toast.makeText(DemoActivity.this, ""LONG"", Toast.LENGTH_SHORT).show();
                return false;
            }
","['            ', '@Override', ' ', 'public', ' ', 'boolean', ' ', 'onLongClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'DemoActivity', '.', 'this', ',', ' ', '""', 'LONG', '""', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '                ', 'return', ' ', 'false', ';', '\n', '            ', '}', '\n']"
master,0e80cdbb0b050864c0fa5f9fe85d97e8625f2af1,DemoActivity.java,onClick,"    @Override public void onClick(View v) {
        Toast.makeText(DemoActivity.this, ""SHORT"", Toast.LENGTH_SHORT).show();
    }",https://www.github.com/balysv/material-ripple/commit/0e80cdbb0b050864c0fa5f9fe85d97e8625f2af1,"    @Override public void onClick(View v) {
        Toast.makeText(DemoActivity.this, ""SHORT"", Toast.LENGTH_SHORT).show();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '        ', 'Toast', '.', 'makeText', '(', 'DemoActivity', '.', 'this', ',', ' ', '""', 'SHORT', '""', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '    ', '}', '\n']"
master,0e80cdbb0b050864c0fa5f9fe85d97e8625f2af1,DemoListActivity.java,onItemLongClick,"            @Override public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
                Toast.makeText(DemoListActivity.this, ""Rippled  long item: "" + position, Toast.LENGTH_SHORT).show();
                return false;
            }",https://www.github.com/balysv/material-ripple/commit/0e80cdbb0b050864c0fa5f9fe85d97e8625f2af1,"            @Override public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
                Toast.makeText(DemoListActivity.this, ""Rippled  long item: "" + position, Toast.LENGTH_SHORT).show();
                return false;
            }
","['            ', '@Override', ' ', 'public', ' ', 'boolean', ' ', 'onItemLongClick', '(', 'AdapterView', '<', '?', '>', ' ', 'parent', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'position', ',', ' ', 'long', ' ', 'id', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'DemoListActivity', '.', 'this', ',', ' ', '""', 'Rippled  long item: ', '""', ' ', '+', ' ', 'position', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '                ', 'return', ' ', 'false', ';', '\n', '            ', '}', '\n']"
master,b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,MaterialRippleLayout.java,onTouchEvent,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            eventX = event.getX();
            eventY = event.getY();
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult) {
            return true;",https://www.github.com/balysv/material-ripple/commit/b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            eventX = event.getX();
            eventY = event.getY();
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult) {
            return true;
","['    ', 'public', ' ', 'boolean', ' ', 'onTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'superOnTouchEvent', ' ', '=', ' ', 'super', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'isEnabled', '(', ')', ' ', '|', '|', ' ', '!', 'childView', '.', 'isEnabled', '(', ')', ')', ' ', 'return', ' ', 'superOnTouchEvent', ';', '\n', '\n', '        ', 'boolean', ' ', 'isEventInBounds', ' ', '=', ' ', 'bounds', '.', 'contains', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'isEventInBounds', ')', ' ', '{', '\n', '            ', 'eventX', ' ', '=', ' ', 'event', '.', 'getX', '(', ')', ';', '\n', '            ', 'eventY', ' ', '=', ' ', 'event', '.', 'getY', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'boolean', ' ', 'gestureResult', ' ', '=', ' ', 'gestureDetector', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '        ', 'if', ' ', '(', 'gestureResult', ')', ' ', '{', '\n', '            ', 'return', ' ', 'true', ';', '\n']"
master,b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,MaterialRippleLayout.java,startHover,"    private void startHover() {
        if (eventCancelled) return;

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, rippleDiameter, getWidth())
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new LinearInterpolator());
        hoverAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,"    private void startHover() {
        if (eventCancelled) return;

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, rippleDiameter, getWidth())
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new LinearInterpolator());
        hoverAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startHover', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'eventCancelled', ')', ' ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'hoverAnimator', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', 'rippleDiameter', ',', ' ', 'getWidth', '(', ')', ')', '\n', '            ', '.', 'setDuration', '(', 'HOVER_DURATION', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'setInterpolator', '(', 'new', ' ', 'LinearInterpolator', '(', ')', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,MaterialRippleLayout.java,onAnimationEnd,"            @Override public void onAnimationEnd(Animator animation) {
                if (!ripplePersistent) {
                    setRadius(0);
                    setRippleAlpha(rippleAlpha);
                }
                if (animationEndRunnable != null && rippleDelayClick) {
                    animationEndRunnable.run();
                }
                childView.setPressed(false);
            }",https://www.github.com/balysv/material-ripple/commit/b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,"            @Override public void onAnimationEnd(Animator animation) {
                if (!ripplePersistent) {
                    setRadius(0);
                    setRippleAlpha(rippleAlpha);
                }
                if (animationEndRunnable != null && rippleDelayClick) {
                    animationEndRunnable.run();
                }
                childView.setPressed(false);
            }
","['            ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onAnimationEnd', '(', 'Animator', ' ', 'animation', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'ripplePersistent', ')', ' ', '{', '\n', '                    ', 'setRadius', '(', '0', ')', ';', '\n', '                    ', 'setRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '                ', '}', '\n', '                ', 'if', ' ', '(', 'animationEndRunnable', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'rippleDelayClick', ')', ' ', '{', '\n', '                    ', 'animationEndRunnable', '.', 'run', '(', ')', ';', '\n', '                ', '}', '\n', '                ', 'childView', '.', 'setPressed', '(', 'false', ')', ';', '\n', '            ', '}', '\n']"
master,b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,MaterialRippleLayout.java,run,"        @Override public void run() {
            // pass event to child to refresh its drawable state
            childView.onTouchEvent(event);
        }",https://www.github.com/balysv/material-ripple/commit/b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,"        @Override public void run() {
            
            childView.onTouchEvent(event);
        }
","['        ', '@Override', ' ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', '\n', '            ', 'childView', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '        ', '}', '\n']"
master,b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/b36fcf7d14550fc33e6a2d4e7827d128ec04bf8c,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setDefaultRippleAlpha', '(', '(', 'int', ')', ' ', 'rippleAlpha', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'parent', ' ', 'instanceof', ' ', 'MaterialRippleLayout', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout', '""', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
master,9e1fb0bb87e461b1366fcba677cbbabc7b18be89,DemoActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);

        // xml initialization
        findViewById(R.id.ripple_layout_1).setOnClickListener(this);
        findViewById(R.id.ripple_layout_1).setOnLongClickListener(this);

        // static initialization
        View view = findViewById(R.id.ripple_layout_2);
        MaterialRippleLayout.on(view)
            .rippleColor(Color.parseColor(""#FF0000""))
            .rippleAlpha(0.2f)
            .rippleHover(true)
            .create();

        view.setOnLongClickListener(this);
        view.setOnClickListener(this);
    }",https://www.github.com/balysv/material-ripple/commit/9e1fb0bb87e461b1366fcba677cbbabc7b18be89,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo);

        
        findViewById(R.id.ripple_layout_1).setOnClickListener(this);
        findViewById(R.id.ripple_layout_1).setOnLongClickListener(this);

        
        View view = findViewById(R.id.ripple_layout_2);
        MaterialRippleLayout.on(view)
            .rippleColor(Color.parseColor(""#FF0000""))
            .rippleAlpha(0.2f)
            .rippleHover(true)
            .create();

        view.setOnLongClickListener(this);
        view.setOnClickListener(this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo', ')', ';', '\n', '\n', '        ', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_1', ')', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '        ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_1', ')', '.', 'setOnLongClickListener', '(', 'this', ')', ';', '\n', '\n', '        ', '\n', '        ', 'View', ' ', 'view', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'ripple_layout_2', ')', ';', '\n', '        ', 'MaterialRippleLayout', '.', 'on', '(', 'view', ')', '\n', '            ', '.', 'rippleColor', '(', 'Color', '.', 'parseColor', '(', '""', '#FF0000', '""', ')', ')', '\n', '            ', '.', 'rippleAlpha', '(', '0.2f', ')', '\n', '            ', '.', 'rippleHover', '(', 'true', ')', '\n', '            ', '.', 'create', '(', ')', ';', '\n', '\n', '        ', 'view', '.', 'setOnLongClickListener', '(', 'this', ')', ';', '\n', '        ', 'view', '.', 'setOnClickListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,9e1fb0bb87e461b1366fcba677cbbabc7b18be89,DemoActivity.java,onClick,"    @Override public void onClick(View v) {
        Toast.makeText(this, ""Short click"", Toast.LENGTH_SHORT).show();
    }",https://www.github.com/balysv/material-ripple/commit/9e1fb0bb87e461b1366fcba677cbbabc7b18be89,"    @Override public void onClick(View v) {
        Toast.makeText(this, ""Short click"", Toast.LENGTH_SHORT).show();
    }
","['    ', '@Override', ' ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '        ', 'Toast', '.', 'makeText', '(', 'this', ',', ' ', '""', 'Short click', '""', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '    ', '}', '\n']"
master,9e1fb0bb87e461b1366fcba677cbbabc7b18be89,DemoActivity.java,onLongClick,"    @Override public boolean onLongClick(View v) {
        Toast.makeText(this, ""Long click"", Toast.LENGTH_SHORT).show();
        return false;
    }",https://www.github.com/balysv/material-ripple/commit/9e1fb0bb87e461b1366fcba677cbbabc7b18be89,"    @Override public boolean onLongClick(View v) {
        Toast.makeText(this, ""Long click"", Toast.LENGTH_SHORT).show();
        return false;
    }
","['    ', '@Override', ' ', 'public', ' ', 'boolean', ' ', 'onLongClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '        ', 'Toast', '.', 'makeText', '(', 'this', ',', ' ', '""', 'Long click', '""', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,run,"                                @Override public void run() {
                                    childView.setPressed(false);
                                }",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"                                @Override public void run() {
                                    childView.setPressed(false);
                                }
","['                                ', '@Override', ' ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                                    ', 'childView', '.', 'setPressed', '(', 'false', ')', ';', '\n', '                                ', '}', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,cancelPressedEvent,"    private void cancelPressedEvent() {
        if (pendingPressEvent != null) {
            removeCallbacks(pendingPressEvent);",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"    private void cancelPressedEvent() {
        if (pendingPressEvent != null) {
            removeCallbacks(pendingPressEvent);
","['    ', 'private', ' ', 'void', ' ', 'cancelPressedEvent', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'pendingPressEvent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'removeCallbacks', '(', 'pendingPressEvent', ')', ';', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,isInScrollingContainer,"    private boolean isInScrollingContainer() {
        ViewParent p = getParent();
        while (p != null && p instanceof ViewGroup) {
            if (((ViewGroup) p).shouldDelayChildPressedState()) {
                return true;
            }
            p = p.getParent();
        }
        return false;
    }",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"    private boolean isInScrollingContainer() {
        ViewParent p = getParent();
        while (p != null && p instanceof ViewGroup) {
            if (((ViewGroup) p).shouldDelayChildPressedState()) {
                return true;
            }
            p = p.getParent();
        }
        return false;
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isInScrollingContainer', '(', ')', ' ', '{', '\n', '        ', 'ViewParent', ' ', 'p', ' ', '=', ' ', 'getParent', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'p', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'p', ' ', 'instanceof', ' ', 'ViewGroup', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', '(', '(', 'ViewGroup', ')', ' ', 'p', ')', '.', 'shouldDelayChildPressedState', '(', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '            ', 'p', ' ', '=', ' ', 'p', '.', 'getParent', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,clickAdapterView,"        private void clickAdapterView(AdapterView parent) {
            final int position = parent.getPositionForView(MaterialRippleLayout.this);
            final long itemId = parent.getAdapter() != null
                ? parent.getAdapter().getItemId(position)
                : 0;
            if (position != AdapterView.INVALID_POSITION) {
                parent.performItemClick(MaterialRippleLayout.this, position, itemId);",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"        private void clickAdapterView(AdapterView parent) {
            final int position = parent.getPositionForView(MaterialRippleLayout.this);
            final long itemId = parent.getAdapter() != null
                ? parent.getAdapter().getItemId(position)
                : 0;
            if (position != AdapterView.INVALID_POSITION) {
                parent.performItemClick(MaterialRippleLayout.this, position, itemId);
","['        ', 'private', ' ', 'void', ' ', 'clickAdapterView', '(', 'AdapterView', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'final', ' ', 'int', ' ', 'position', ' ', '=', ' ', 'parent', '.', 'getPositionForView', '(', 'MaterialRippleLayout', '.', 'this', ')', ';', '\n', '            ', 'final', ' ', 'long', ' ', 'itemId', ' ', '=', ' ', 'parent', '.', 'getAdapter', '(', ')', ' ', '!', '=', ' ', 'null', '\n', '                ', '?', ' ', 'parent', '.', 'getAdapter', '(', ')', '.', 'getItemId', '(', 'position', ')', '\n', '                ', ':', ' ', '0', ';', '\n', '            ', 'if', ' ', '(', 'position', ' ', '!', '=', ' ', 'AdapterView', '.', 'INVALID_POSITION', ')', ' ', '{', '\n', '                ', 'parent', '.', 'performItemClick', '(', 'MaterialRippleLayout', '.', 'this', ',', ' ', 'position', ',', ' ', 'itemId', ')', ';', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,run,"        public void run() {
            prepressed = false;
            childView.onTouchEvent(event);
            childView.setPressed(true);
            if (rippleHover) {
                startHover();",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"        public void run() {
            prepressed = false;
            childView.onTouchEvent(event);
            childView.setPressed(true);
            if (rippleHover) {
                startHover();
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'prepressed', ' ', '=', ' ', 'false', ';', '\n', '            ', 'childView', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '            ', 'childView', '.', 'setPressed', '(', 'true', ')', ';', '\n', '            ', 'if', ' ', '(', 'rippleHover', ')', ' ', '{', '\n', '                ', 'startHover', '(', ')', ';', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,rippleSearchAdapter,"        public RippleBuilder rippleSearchAdapter(boolean searchAdapter) {
            this.rippleSearchAdapter(searchAdapter);
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"        public RippleBuilder rippleSearchAdapter(boolean searchAdapter) {
            this.rippleSearchAdapter(searchAdapter);
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleSearchAdapter', '(', 'boolean', ' ', 'searchAdapter', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleSearchAdapter', '(', 'searchAdapter', ')', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,8e7ca56f224d426676aff1fa860a54d6b7c5af1d,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleSearchAdapter(rippleSearchAdapter);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/8e7ca56f224d426676aff1fa860a54d6b7c5af1d,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleSearchAdapter(rippleSearchAdapter);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setDefaultRippleAlpha', '(', '(', 'int', ')', ' ', 'rippleAlpha', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '            ', 'layout', '.', 'setRippleSearchAdapter', '(', 'rippleSearchAdapter', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'parent', ' ', 'instanceof', ' ', 'MaterialRippleLayout', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout', '""', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,onTouchEvent,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            previousCoords.set(currentCoords.x, currentCoords.y);
            currentCoords.set((int) event.getX(), (int) event.getY());
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult) {
            return true;",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            previousCoords.set(currentCoords.x, currentCoords.y);
            currentCoords.set((int) event.getX(), (int) event.getY());
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult) {
            return true;
","['    ', 'public', ' ', 'boolean', ' ', 'onTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'superOnTouchEvent', ' ', '=', ' ', 'super', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'isEnabled', '(', ')', ' ', '|', '|', ' ', '!', 'childView', '.', 'isEnabled', '(', ')', ')', ' ', 'return', ' ', 'superOnTouchEvent', ';', '\n', '\n', '        ', 'boolean', ' ', 'isEventInBounds', ' ', '=', ' ', 'bounds', '.', 'contains', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'isEventInBounds', ')', ' ', '{', '\n', '            ', 'previousCoords', '.', 'set', '(', 'currentCoords', '.', 'x', ',', ' ', 'currentCoords', '.', 'y', ')', ';', '\n', '            ', 'currentCoords', '.', 'set', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'boolean', ' ', 'gestureResult', ' ', '=', ' ', 'gestureDetector', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '        ', 'if', ' ', '(', 'gestureResult', ')', ' ', '{', '\n', '            ', 'return', ' ', 'true', ';', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,startHover,"    private void startHover() {
        if (eventCancelled) return;

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        final float radius = (float) (Math.sqrt(Math.pow(getWidth(), 2) + Math.pow(getHeight(), 2)) * 1.2f);
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, rippleDiameter, radius)
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new LinearInterpolator());
        hoverAnimator.start();
    }",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"    private void startHover() {
        if (eventCancelled) return;

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
        }
        final float radius = (float) (Math.sqrt(Math.pow(getWidth(), 2) + Math.pow(getHeight(), 2)) * 1.2f);
        hoverAnimator = ObjectAnimator.ofFloat(this, radiusProperty, rippleDiameter, radius)
            .setDuration(HOVER_DURATION);
        hoverAnimator.setInterpolator(new LinearInterpolator());
        hoverAnimator.start();
    }
","['    ', 'private', ' ', 'void', ' ', 'startHover', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'eventCancelled', ')', ' ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'float', ' ', 'radius', ' ', '=', ' ', '(', 'float', ')', ' ', '(', 'Math', '.', 'sqrt', '(', 'Math', '.', 'pow', '(', 'getWidth', '(', ')', ',', ' ', '2', ')', ' ', '+', ' ', 'Math', '.', 'pow', '(', 'getHeight', '(', ')', ',', ' ', '2', ')', ')', ' ', '*', ' ', '1.2f', ')', ';', '\n', '        ', 'hoverAnimator', ' ', '=', ' ', 'ObjectAnimator', '.', 'ofFloat', '(', 'this', ',', ' ', 'radiusProperty', ',', ' ', 'rippleDiameter', ',', ' ', 'radius', ')', '\n', '            ', '.', 'setDuration', '(', 'HOVER_DURATION', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'setInterpolator', '(', 'new', ' ', 'LinearInterpolator', '(', ')', ')', ';', '\n', '        ', 'hoverAnimator', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,cancelAnimations,"    private void cancelAnimations() {
        if (rippleAnimator != null) {
            rippleAnimator.cancel();
            rippleAnimator.removeAllListeners();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"    private void cancelAnimations() {
        if (rippleAnimator != null) {
            rippleAnimator.cancel();
            rippleAnimator.removeAllListeners();
        }

        if (hoverAnimator != null) {
            hoverAnimator.cancel();
","['    ', 'private', ' ', 'void', ' ', 'cancelAnimations', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'rippleAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'rippleAnimator', '.', 'cancel', '(', ')', ';', '\n', '            ', 'rippleAnimator', '.', 'removeAllListeners', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'hoverAnimator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'hoverAnimator', '.', 'cancel', '(', ')', ';', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,findParentAdapterView,"    private AdapterView findParentAdapterView() {
        if (parentAdapter != null) {
            return parentAdapter;
        }
        ViewParent current = getParent();
        while (true) {
            if (current instanceof AdapterView) {",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"    private AdapterView findParentAdapterView() {
        if (parentAdapter != null) {
            return parentAdapter;
        }
        ViewParent current = getParent();
        while (true) {
            if (current instanceof AdapterView) {
","['    ', 'private', ' ', 'AdapterView', ' ', 'findParentAdapterView', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'parentAdapter', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'parentAdapter', ';', '\n', '        ', '}', '\n', '        ', 'ViewParent', ' ', 'current', ' ', '=', ' ', 'getParent', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'true', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'current', ' ', 'instanceof', ' ', 'AdapterView', ')', ' ', '{', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,adapterPositionChanged,"    private boolean adapterPositionChanged() {
        if (rippleInAdapter) {
            int newPosition = findParentAdapterView().getPositionForView(MaterialRippleLayout.this);
            final boolean changed = newPosition != positionInAdapter;
            positionInAdapter = newPosition;
            if (changed) {
                cancelPressedEvent();
                cancelAnimations();
                childView.setPressed(false);
                setRadius(0);
            }
            return changed;
        }
        return false;
    }",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"    private boolean adapterPositionChanged() {
        if (rippleInAdapter) {
            int newPosition = findParentAdapterView().getPositionForView(MaterialRippleLayout.this);
            final boolean changed = newPosition != positionInAdapter;
            positionInAdapter = newPosition;
            if (changed) {
                cancelPressedEvent();
                cancelAnimations();
                childView.setPressed(false);
                setRadius(0);
            }
            return changed;
        }
        return false;
    }
","['    ', 'private', ' ', 'boolean', ' ', 'adapterPositionChanged', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'rippleInAdapter', ')', ' ', '{', '\n', '            ', 'int', ' ', 'newPosition', ' ', '=', ' ', 'findParentAdapterView', '(', ')', '.', 'getPositionForView', '(', 'MaterialRippleLayout', '.', 'this', ')', ';', '\n', '            ', 'final', ' ', 'boolean', ' ', 'changed', ' ', '=', ' ', 'newPosition', ' ', '!', '=', ' ', 'positionInAdapter', ';', '\n', '            ', 'positionInAdapter', ' ', '=', ' ', 'newPosition', ';', '\n', '            ', 'if', ' ', '(', 'changed', ')', ' ', '{', '\n', '                ', 'cancelPressedEvent', '(', ')', ';', '\n', '                ', 'cancelAnimations', '(', ')', ';', '\n', '                ', 'childView', '.', 'setPressed', '(', 'false', ')', ';', '\n', '                ', 'setRadius', '(', '0', ')', ';', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'changed', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,draw,"    public void draw(Canvas canvas) {
        final boolean positionChanged = adapterPositionChanged();
        if (rippleOverlay) {
            if (!positionChanged) {",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"    public void draw(Canvas canvas) {
        final boolean positionChanged = adapterPositionChanged();
        if (rippleOverlay) {
            if (!positionChanged) {
","['    ', 'public', ' ', 'void', ' ', 'draw', '(', 'Canvas', ' ', 'canvas', ')', ' ', '{', '\n', '        ', 'final', ' ', 'boolean', ' ', 'positionChanged', ' ', '=', ' ', 'adapterPositionChanged', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'rippleOverlay', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', '!', 'positionChanged', ')', ' ', '{', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,rippleInAdapter,"        public RippleBuilder rippleInAdapter(boolean inAdapter) {
            this.rippleInAdapter(inAdapter);
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"        public RippleBuilder rippleInAdapter(boolean inAdapter) {
            this.rippleInAdapter(inAdapter);
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleInAdapter', '(', 'boolean', ' ', 'inAdapter', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleInAdapter', '(', 'inAdapter', ')', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,1334cc60db42e55adee154c34b1cf6eb9a201506,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleInAdapter(rippleSearchAdapter);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/1334cc60db42e55adee154c34b1cf6eb9a201506,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleInAdapter(rippleSearchAdapter);

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setDefaultRippleAlpha', '(', '(', 'int', ')', ' ', 'rippleAlpha', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '            ', 'layout', '.', 'setRippleInAdapter', '(', 'rippleSearchAdapter', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'parent', ' ', 'instanceof', ' ', 'MaterialRippleLayout', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout', '""', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
master,c57915d3c06a84c48468204b0524aa3cdd366a41,DemoListActivity.java,onItemLongClick,"            @Override public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
                if(position%2==0){
                    Toast.makeText(DemoListActivity.this, ""long item: "" + position +"" and not consumed"", Toast.LENGTH_SHORT).show();
                    return false;
                }
                Toast.makeText(DemoListActivity.this, ""long item: "" + position +"" and consumed"", Toast.LENGTH_SHORT).show();
                return true;
            }",https://www.github.com/balysv/material-ripple/commit/c57915d3c06a84c48468204b0524aa3cdd366a41,"            @Override public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
                if(position%2==0){
                    Toast.makeText(DemoListActivity.this, ""long item: "" + position +"" and not consumed"", Toast.LENGTH_SHORT).show();
                    return false;
                }
                Toast.makeText(DemoListActivity.this, ""long item: "" + position +"" and consumed"", Toast.LENGTH_SHORT).show();
                return true;
            }
","['            ', '@Override', ' ', 'public', ' ', 'boolean', ' ', 'onItemLongClick', '(', 'AdapterView', '<', '?', '>', ' ', 'parent', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'position', ',', ' ', 'long', ' ', 'id', ')', ' ', '{', '\n', '                ', 'if', '(', 'position', '%', '2', '=', '=', '0', ')', '{', '\n', '                    ', 'Toast', '.', 'makeText', '(', 'DemoListActivity', '.', 'this', ',', ' ', '""', 'long item: ', '""', ' ', '+', ' ', 'position', ' ', '+', '""', ' and not consumed', '""', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '                    ', 'return', ' ', 'false', ';', '\n', '                ', '}', '\n', '                ', 'Toast', '.', 'makeText', '(', 'DemoListActivity', '.', 'this', ',', ' ', '""', 'long item: ', '""', ' ', '+', ' ', 'position', ' ', '+', '""', ' and consumed', '""', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n']"
master,c57915d3c06a84c48468204b0524aa3cdd366a41,MaterialRippleLayout.java,onTouchEvent,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            previousCoords.set(currentCoords.x, currentCoords.y);
            currentCoords.set((int) event.getX(), (int) event.getY());
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult || mHasPerformedLongPress) {
            return true;",https://www.github.com/balysv/material-ripple/commit/c57915d3c06a84c48468204b0524aa3cdd366a41,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            previousCoords.set(currentCoords.x, currentCoords.y);
            currentCoords.set((int) event.getX(), (int) event.getY());
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult || mHasPerformedLongPress) {
            return true;
","['    ', 'public', ' ', 'boolean', ' ', 'onTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'superOnTouchEvent', ' ', '=', ' ', 'super', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'isEnabled', '(', ')', ' ', '|', '|', ' ', '!', 'childView', '.', 'isEnabled', '(', ')', ')', ' ', 'return', ' ', 'superOnTouchEvent', ';', '\n', '\n', '        ', 'boolean', ' ', 'isEventInBounds', ' ', '=', ' ', 'bounds', '.', 'contains', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'isEventInBounds', ')', ' ', '{', '\n', '            ', 'previousCoords', '.', 'set', '(', 'currentCoords', '.', 'x', ',', ' ', 'currentCoords', '.', 'y', ')', ';', '\n', '            ', 'currentCoords', '.', 'set', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'boolean', ' ', 'gestureResult', ' ', '=', ' ', 'gestureDetector', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '        ', 'if', ' ', '(', 'gestureResult', ' ', '|', '|', ' ', 'mHasPerformedLongPress', ')', ' ', '{', '\n', '            ', 'return', ' ', 'true', ';', '\n']"
master,c57915d3c06a84c48468204b0524aa3cdd366a41,MaterialRippleLayout.java,onLongPress,"        public void onLongPress(MotionEvent e) {
            mHasPerformedLongPress = childView.performLongClick();
            if(mHasPerformedLongPress){
                if (rippleHover) {",https://www.github.com/balysv/material-ripple/commit/c57915d3c06a84c48468204b0524aa3cdd366a41,"        public void onLongPress(MotionEvent e) {
            mHasPerformedLongPress = childView.performLongClick();
            if(mHasPerformedLongPress){
                if (rippleHover) {
","['        ', 'public', ' ', 'void', ' ', 'onLongPress', '(', 'MotionEvent', ' ', 'e', ')', ' ', '{', '\n', '            ', 'mHasPerformedLongPress', ' ', '=', ' ', 'childView', '.', 'performLongClick', '(', ')', ';', '\n', '            ', 'if', '(', 'mHasPerformedLongPress', ')', '{', '\n', '                ', 'if', ' ', '(', 'rippleHover', ')', ' ', '{', '\n']"
master,c57915d3c06a84c48468204b0524aa3cdd366a41,MaterialRippleLayout.java,onDown,"        public boolean onDown(MotionEvent e) {
            mHasPerformedLongPress = false;
            return super.onDown(e);
        }",https://www.github.com/balysv/material-ripple/commit/c57915d3c06a84c48468204b0524aa3cdd366a41,"        public boolean onDown(MotionEvent e) {
            mHasPerformedLongPress = false;
            return super.onDown(e);
        }
","['        ', 'public', ' ', 'boolean', ' ', 'onDown', '(', 'MotionEvent', ' ', 'e', ')', ' ', '{', '\n', '            ', 'mHasPerformedLongPress', ' ', '=', ' ', 'false', ';', '\n', '            ', 'return', ' ', 'super', '.', 'onDown', '(', 'e', ')', ';', '\n', '        ', '}', '\n']"
master,c57915d3c06a84c48468204b0524aa3cdd366a41,MaterialRippleLayout.java,run,"        public void run() {
            prepressed = false;
            childView.setLongClickable(false);//prevent the child's long click,let's the ripple layout call it's performLongClick
            childView.onTouchEvent(event);
            childView.setPressed(true);
            if (rippleHover) {
                startHover();",https://www.github.com/balysv/material-ripple/commit/c57915d3c06a84c48468204b0524aa3cdd366a41,"        public void run() {
            prepressed = false;
            childView.setLongClickable(false);
            childView.onTouchEvent(event);
            childView.setPressed(true);
            if (rippleHover) {
                startHover();
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'prepressed', ' ', '=', ' ', 'false', ';', '\n', '            ', 'childView', '.', 'setLongClickable', '(', 'false', ')', ';', '\n', '            ', 'childView', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '            ', 'childView', '.', 'setPressed', '(', 'true', ')', ';', '\n', '            ', 'if', ' ', '(', 'rippleHover', ')', ' ', '{', '\n', '                ', 'startHover', '(', ')', ';', '\n']"
master,0bc347b7f1400ae4c00965cb53eb19b746856134,MaterialRippleLayout.java,rippleInAdapter,"        public RippleBuilder rippleInAdapter(boolean inAdapter) {
            this.rippleSearchAdapter = inAdapter;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/0bc347b7f1400ae4c00965cb53eb19b746856134,"        public RippleBuilder rippleInAdapter(boolean inAdapter) {
            this.rippleSearchAdapter = inAdapter;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleInAdapter', '(', 'boolean', ' ', 'inAdapter', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleSearchAdapter', ' ', '=', ' ', 'inAdapter', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,ce4be503c27d6b824a1f3349e251a983c3e553df,MaterialRippleLayout.java,onLongPress,"        public void onLongPress(MotionEvent e) {
            mHasPerformedLongPress = childView.performLongClick();
            if (mHasPerformedLongPress) {
                if (rippleHover) {",https://www.github.com/balysv/material-ripple/commit/ce4be503c27d6b824a1f3349e251a983c3e553df,"        public void onLongPress(MotionEvent e) {
            mHasPerformedLongPress = childView.performLongClick();
            if (mHasPerformedLongPress) {
                if (rippleHover) {
","['        ', 'public', ' ', 'void', ' ', 'onLongPress', '(', 'MotionEvent', ' ', 'e', ')', ' ', '{', '\n', '            ', 'mHasPerformedLongPress', ' ', '=', ' ', 'childView', '.', 'performLongClick', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'mHasPerformedLongPress', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'rippleHover', ')', ' ', '{', '\n']"
master,ce4be503c27d6b824a1f3349e251a983c3e553df,MaterialRippleLayout.java,enableClipPathSupportIfNecessary,"    private void enableClipPathSupportIfNecessary() {
        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            if (rippleRoundedCorners != 0) {",https://www.github.com/balysv/material-ripple/commit/ce4be503c27d6b824a1f3349e251a983c3e553df,"    private void enableClipPathSupportIfNecessary() {
        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            if (rippleRoundedCorners != 0) {
","['    ', 'private', ' ', 'void', ' ', 'enableClipPathSupportIfNecessary', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '<', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'JELLY_BEAN_MR1', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'rippleRoundedCorners', ' ', '!', '=', ' ', '0', ')', ' ', '{', '\n']"
master,ce4be503c27d6b824a1f3349e251a983c3e553df,MaterialRippleLayout.java,rippleRoundedCorners,"        public RippleBuilder rippleRoundedCorners(int radiusDp) {
            this.rippleRoundedCorner = radiusDp;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/ce4be503c27d6b824a1f3349e251a983c3e553df,"        public RippleBuilder rippleRoundedCorners(int radiusDp) {
            this.rippleRoundedCorner = radiusDp;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleRoundedCorners', '(', 'int', ' ', 'radiusDp', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleRoundedCorner', ' ', '=', ' ', 'radiusDp', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,ce4be503c27d6b824a1f3349e251a983c3e553df,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleInAdapter(rippleSearchAdapter);
            layout.setRippleRoundedCorners((int) dpToPx(context.getResources(), rippleRoundedCorner));

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/ce4be503c27d6b824a1f3349e251a983c3e553df,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha((int) rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleInAdapter(rippleSearchAdapter);
            layout.setRippleRoundedCorners((int) dpToPx(context.getResources(), rippleRoundedCorner));

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setDefaultRippleAlpha', '(', '(', 'int', ')', ' ', 'rippleAlpha', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '            ', 'layout', '.', 'setRippleInAdapter', '(', 'rippleSearchAdapter', ')', ';', '\n', '            ', 'layout', '.', 'setRippleRoundedCorners', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleRoundedCorner', ')', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'parent', ' ', 'instanceof', ' ', 'MaterialRippleLayout', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout', '""', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
master,0483d16f6b7cc6181b1cb8e72cf2058e7ee1f835,MaterialRippleLayout.java,performRipple,"    public void performRipple() {
        currentCoords = new Point(getWidth() / 2, getHeight() / 2);
        startRipple(null);
    }",https://www.github.com/balysv/material-ripple/commit/0483d16f6b7cc6181b1cb8e72cf2058e7ee1f835,"    public void performRipple() {
        currentCoords = new Point(getWidth() / 2, getHeight() / 2);
        startRipple(null);
    }
","['    ', 'public', ' ', 'void', ' ', 'performRipple', '(', ')', ' ', '{', '\n', '        ', 'currentCoords', ' ', '=', ' ', 'new', ' ', 'Point', '(', 'getWidth', '(', ')', ' ', '/', ' ', '2', ',', ' ', 'getHeight', '(', ')', ' ', '/', ' ', '2', ')', ';', '\n', '        ', 'startRipple', '(', 'null', ')', ';', '\n', '    ', '}', '\n']"
master,0483d16f6b7cc6181b1cb8e72cf2058e7ee1f835,MaterialRippleLayout.java,performRipple,"    public void performRipple(Point anchor) {
        currentCoords = new Point(anchor.x, anchor.y);
        startRipple(null);
    }",https://www.github.com/balysv/material-ripple/commit/0483d16f6b7cc6181b1cb8e72cf2058e7ee1f835,"    public void performRipple(Point anchor) {
        currentCoords = new Point(anchor.x, anchor.y);
        startRipple(null);
    }
","['    ', 'public', ' ', 'void', ' ', 'performRipple', '(', 'Point', ' ', 'anchor', ')', ' ', '{', '\n', '        ', 'currentCoords', ' ', '=', ' ', 'new', ' ', 'Point', '(', 'anchor', '.', 'x', ',', ' ', 'anchor', '.', 'y', ')', ';', '\n', '        ', 'startRipple', '(', 'null', ')', ';', '\n', '    ', '}', '\n']"
master,debf326398fed25ca35903583df77c502be00d54,MaterialRippleLayout.java,onInterceptTouchEvent,"    public boolean onInterceptTouchEvent(MotionEvent event) {
        return !findClickableViewInChild(childView, (int) event.getX(), (int) event.getY());
    }",https://www.github.com/balysv/material-ripple/commit/debf326398fed25ca35903583df77c502be00d54,"    public boolean onInterceptTouchEvent(MotionEvent event) {
        return !findClickableViewInChild(childView, (int) event.getX(), (int) event.getY());
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onInterceptTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'return', ' ', '!', 'findClickableViewInChild', '(', 'childView', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,00f34fa551093d2d5c69475bf073529322fca883,MaterialRippleLayout.java,onTouchEvent,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            previousCoords.set(currentCoords.x, currentCoords.y);
            currentCoords.set((int) event.getX(), (int) event.getY());
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult || hasPerformedLongPress) {
            return true;",https://www.github.com/balysv/material-ripple/commit/00f34fa551093d2d5c69475bf073529322fca883,"    public boolean onTouchEvent(MotionEvent event) {
        boolean superOnTouchEvent = super.onTouchEvent(event);

        if (!isEnabled() || !childView.isEnabled()) return superOnTouchEvent;

        boolean isEventInBounds = bounds.contains((int) event.getX(), (int) event.getY());

        if (isEventInBounds) {
            previousCoords.set(currentCoords.x, currentCoords.y);
            currentCoords.set((int) event.getX(), (int) event.getY());
        }

        boolean gestureResult = gestureDetector.onTouchEvent(event);
        if (gestureResult || hasPerformedLongPress) {
            return true;
","['    ', 'public', ' ', 'boolean', ' ', 'onTouchEvent', '(', 'MotionEvent', ' ', 'event', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'superOnTouchEvent', ' ', '=', ' ', 'super', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'isEnabled', '(', ')', ' ', '|', '|', ' ', '!', 'childView', '.', 'isEnabled', '(', ')', ')', ' ', 'return', ' ', 'superOnTouchEvent', ';', '\n', '\n', '        ', 'boolean', ' ', 'isEventInBounds', ' ', '=', ' ', 'bounds', '.', 'contains', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'isEventInBounds', ')', ' ', '{', '\n', '            ', 'previousCoords', '.', 'set', '(', 'currentCoords', '.', 'x', ',', ' ', 'currentCoords', '.', 'y', ')', ';', '\n', '            ', 'currentCoords', '.', 'set', '(', '(', 'int', ')', ' ', 'event', '.', 'getX', '(', ')', ',', ' ', '(', 'int', ')', ' ', 'event', '.', 'getY', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'boolean', ' ', 'gestureResult', ' ', '=', ' ', 'gestureDetector', '.', 'onTouchEvent', '(', 'event', ')', ';', '\n', '        ', 'if', ' ', '(', 'gestureResult', ' ', '|', '|', ' ', 'hasPerformedLongPress', ')', ' ', '{', '\n', '            ', 'return', ' ', 'true', ';', '\n']"
master,00f34fa551093d2d5c69475bf073529322fca883,MaterialRippleLayout.java,onLongPress,"        public void onLongPress(MotionEvent e) {
            hasPerformedLongPress = childView.performLongClick();
            if (hasPerformedLongPress) {
                if (rippleHover) {",https://www.github.com/balysv/material-ripple/commit/00f34fa551093d2d5c69475bf073529322fca883,"        public void onLongPress(MotionEvent e) {
            hasPerformedLongPress = childView.performLongClick();
            if (hasPerformedLongPress) {
                if (rippleHover) {
","['        ', 'public', ' ', 'void', ' ', 'onLongPress', '(', 'MotionEvent', ' ', 'e', ')', ' ', '{', '\n', '            ', 'hasPerformedLongPress', ' ', '=', ' ', 'childView', '.', 'performLongClick', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'hasPerformedLongPress', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'rippleHover', ')', ' ', '{', '\n']"
master,00f34fa551093d2d5c69475bf073529322fca883,MaterialRippleLayout.java,onDown,"        public boolean onDown(MotionEvent e) {
            hasPerformedLongPress = false;
            return super.onDown(e);
        }",https://www.github.com/balysv/material-ripple/commit/00f34fa551093d2d5c69475bf073529322fca883,"        public boolean onDown(MotionEvent e) {
            hasPerformedLongPress = false;
            return super.onDown(e);
        }
","['        ', 'public', ' ', 'boolean', ' ', 'onDown', '(', 'MotionEvent', ' ', 'e', ')', ' ', '{', '\n', '            ', 'hasPerformedLongPress', ' ', '=', ' ', 'false', ';', '\n', '            ', 'return', ' ', 'super', '.', 'onDown', '(', 'e', ')', ';', '\n', '        ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        } else if (id == R.id.switch_recycler) {
            startActivity(new Intent(this, DemoRecyclerActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        } else if (id == R.id.switch_recycler) {
            startActivity(new Intent(this, DemoRecyclerActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_list', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoListActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_recycler', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoRecyclerActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoListActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_button) {
            startActivity(new Intent(this, DemoActivity.class));
            finish();
            return true;
        } else if (id == R.id.switch_recycler) {
            startActivity(new Intent(this, DemoRecyclerActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_button) {
            startActivity(new Intent(this, DemoActivity.class));
            finish();
            return true;
        } else if (id == R.id.switch_recycler) {
            startActivity(new Intent(this, DemoRecyclerActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_button', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_recycler', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoRecyclerActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoRecyclerActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo_recycler);
        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.list);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        recyclerView.setAdapter(new MyAdapter());
    }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.demo_recycler);
        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.list);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        recyclerView.setAdapter(new MyAdapter());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'demo_recycler', ')', ';', '\n', '        ', 'RecyclerView', ' ', 'recyclerView', ' ', '=', ' ', '(', 'RecyclerView', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'list', ')', ';', '\n', '        ', 'recyclerView', '.', 'setLayoutManager', '(', 'new', ' ', 'LinearLayoutManager', '(', 'this', ')', ')', ';', '\n', '        ', 'recyclerView', '.', 'setAdapter', '(', 'new', ' ', 'MyAdapter', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoRecyclerActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_recycler, menu);
        return true;
    }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_recycler, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'menu_recycler', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoRecyclerActivity.java,onOptionsItemSelected,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_button) {
            startActivity(new Intent(this, DemoActivity.class));
            finish();
            return true;
        } else if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.switch_button) {
            startActivity(new Intent(this, DemoActivity.class));
            finish();
            return true;
        } else if (id == R.id.switch_list) {
            startActivity(new Intent(this, DemoListActivity.class));
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onOptionsItemSelected', '(', 'MenuItem', ' ', 'item', ')', ' ', '{', '\n', '        ', 'int', ' ', 'id', ' ', '=', ' ', 'item', '.', 'getItemId', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_button', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'id', ' ', '=', '=', ' ', 'R', '.', 'id', '.', 'switch_list', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DemoListActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ' ', 'true', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'super', '.', 'onOptionsItemSelected', '(', 'item', ')', ';', '\n', '    ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoRecyclerActivity.java,onCreateViewHolder,"        public MyViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
            final LayoutInflater inflater = LayoutInflater.from(viewGroup.getContext());
            return new MyViewHolder(
                MaterialRippleLayout.on(inflater.inflate(R.layout.demo_recycler_item, viewGroup, false))",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"        public MyViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
            final LayoutInflater inflater = LayoutInflater.from(viewGroup.getContext());
            return new MyViewHolder(
                MaterialRippleLayout.on(inflater.inflate(R.layout.demo_recycler_item, viewGroup, false))
","['        ', 'public', ' ', 'MyViewHolder', ' ', 'onCreateViewHolder', '(', 'ViewGroup', ' ', 'viewGroup', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '            ', 'final', ' ', 'LayoutInflater', ' ', 'inflater', ' ', '=', ' ', 'LayoutInflater', '.', 'from', '(', 'viewGroup', '.', 'getContext', '(', ')', ')', ';', '\n', '            ', 'return', ' ', 'new', ' ', 'MyViewHolder', '(', '\n', '                ', 'MaterialRippleLayout', '.', 'on', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'demo_recycler_item', ',', ' ', 'viewGroup', ',', ' ', 'false', ')', ')', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoRecyclerActivity.java,onBindViewHolder,"        public void onBindViewHolder(MyViewHolder viewHolder, int i) {
            viewHolder.text.setText(data[i]);
        }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"        public void onBindViewHolder(MyViewHolder viewHolder, int i) {
            viewHolder.text.setText(data[i]);
        }
","['        ', 'public', ' ', 'void', ' ', 'onBindViewHolder', '(', 'MyViewHolder', ' ', 'viewHolder', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '            ', 'viewHolder', '.', 'text', '.', 'setText', '(', 'data', '[', 'i', ']', ')', ';', '\n', '        ', '}', '\n']"
master,06afef858d8e0789d3c05b514b609c886f684dfb,DemoRecyclerActivity.java,onClick,"        public void onClick(View v) {
            Toast.makeText(v.getContext(), ""Rippled item: "" + getAdapterPosition(), Toast.LENGTH_SHORT).show();
        }",https://www.github.com/balysv/material-ripple/commit/06afef858d8e0789d3c05b514b609c886f684dfb,"        public void onClick(View v) {
            Toast.makeText(v.getContext(), ""Rippled item: "" + getAdapterPosition(), Toast.LENGTH_SHORT).show();
        }
","['        ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '            ', 'Toast', '.', 'makeText', '(', 'v', '.', 'getContext', '(', ')', ',', ' ', '""', 'Rippled item: ', '""', ' ', '+', ' ', 'getAdapterPosition', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '        ', '}', '\n']"
master,1731afbe0bb3d535d4b46b5ef0b4611422e14680,MaterialRippleLayout.java,rippleAlpha,"        public RippleBuilder rippleAlpha(float alpha) {
            this.rippleAlpha = alpha;
            return this;
        }",https://www.github.com/balysv/material-ripple/commit/1731afbe0bb3d535d4b46b5ef0b4611422e14680,"        public RippleBuilder rippleAlpha(float alpha) {
            this.rippleAlpha = alpha;
            return this;
        }
","['        ', 'public', ' ', 'RippleBuilder', ' ', 'rippleAlpha', '(', 'float', ' ', 'alpha', ')', ' ', '{', '\n', '            ', 'this', '.', 'rippleAlpha', ' ', '=', ' ', 'alpha', ';', '\n', '            ', 'return', ' ', 'this', ';', '\n', '        ', '}', '\n']"
master,1731afbe0bb3d535d4b46b5ef0b4611422e14680,MaterialRippleLayout.java,create,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha(rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleInAdapter(rippleSearchAdapter);
            layout.setRippleRoundedCorners((int) dpToPx(context.getResources(), rippleRoundedCorner));

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }",https://www.github.com/balysv/material-ripple/commit/1731afbe0bb3d535d4b46b5ef0b4611422e14680,"        public MaterialRippleLayout create() {
            MaterialRippleLayout layout = new MaterialRippleLayout(context);
            layout.setRippleColor(rippleColor);
            layout.setDefaultRippleAlpha(rippleAlpha);
            layout.setRippleDelayClick(rippleDelayClick);
            layout.setRippleDiameter((int) dpToPx(context.getResources(), rippleDiameter));
            layout.setRippleDuration(rippleDuration);
            layout.setRippleFadeDuration(rippleFadeDuration);
            layout.setRippleHover(rippleHover);
            layout.setRipplePersistent(ripplePersistent);
            layout.setRippleOverlay(rippleOverlay);
            layout.setRippleBackground(rippleBackground);
            layout.setRippleInAdapter(rippleSearchAdapter);
            layout.setRippleRoundedCorners((int) dpToPx(context.getResources(), rippleRoundedCorner));

            ViewGroup.LayoutParams params = child.getLayoutParams();
            ViewGroup parent = (ViewGroup) child.getParent();
            int index = 0;

            if (parent != null && parent instanceof MaterialRippleLayout) {
                throw new IllegalStateException(""MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout"");
            }

            if (parent != null) {
                index = parent.indexOfChild(child);
                parent.removeView(child);
            }

            layout.addView(child, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));

            if (parent != null) {
                parent.addView(layout, index, params);
            }

            return layout;
        }
","['        ', 'public', ' ', 'MaterialRippleLayout', ' ', 'create', '(', ')', ' ', '{', '\n', '            ', 'MaterialRippleLayout', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'MaterialRippleLayout', '(', 'context', ')', ';', '\n', '            ', 'layout', '.', 'setRippleColor', '(', 'rippleColor', ')', ';', '\n', '            ', 'layout', '.', 'setDefaultRippleAlpha', '(', 'rippleAlpha', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDelayClick', '(', 'rippleDelayClick', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDiameter', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleDiameter', ')', ')', ';', '\n', '            ', 'layout', '.', 'setRippleDuration', '(', 'rippleDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleFadeDuration', '(', 'rippleFadeDuration', ')', ';', '\n', '            ', 'layout', '.', 'setRippleHover', '(', 'rippleHover', ')', ';', '\n', '            ', 'layout', '.', 'setRipplePersistent', '(', 'ripplePersistent', ')', ';', '\n', '            ', 'layout', '.', 'setRippleOverlay', '(', 'rippleOverlay', ')', ';', '\n', '            ', 'layout', '.', 'setRippleBackground', '(', 'rippleBackground', ')', ';', '\n', '            ', 'layout', '.', 'setRippleInAdapter', '(', 'rippleSearchAdapter', ')', ';', '\n', '            ', 'layout', '.', 'setRippleRoundedCorners', '(', '(', 'int', ')', ' ', 'dpToPx', '(', 'context', '.', 'getResources', '(', ')', ',', ' ', 'rippleRoundedCorner', ')', ')', ';', '\n', '\n', '            ', 'ViewGroup', '.', 'LayoutParams', ' ', 'params', ' ', '=', ' ', 'child', '.', 'getLayoutParams', '(', ')', ';', '\n', '            ', 'ViewGroup', ' ', 'parent', ' ', '=', ' ', '(', 'ViewGroup', ')', ' ', 'child', '.', 'getParent', '(', ')', ';', '\n', '            ', 'int', ' ', 'index', ' ', '=', ' ', '0', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'parent', ' ', 'instanceof', ' ', 'MaterialRippleLayout', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'MaterialRippleLayout could not be created: parent of the view already is a MaterialRippleLayout', '""', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'index', ' ', '=', ' ', 'parent', '.', 'indexOfChild', '(', 'child', ')', ';', '\n', '                ', 'parent', '.', 'removeView', '(', 'child', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'layout', '.', 'addView', '(', 'child', ',', ' ', 'new', ' ', 'ViewGroup', '.', 'LayoutParams', '(', 'MATCH_PARENT', ',', ' ', 'MATCH_PARENT', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'parent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'parent', '.', 'addView', '(', 'layout', ',', ' ', 'index', ',', ' ', 'params', ')', ';', '\n', '            ', '}', '\n', '\n', '            ', 'return', ' ', 'layout', ';', '\n', '        ', '}', '\n']"
