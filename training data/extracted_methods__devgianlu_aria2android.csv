Branch Name,Commit Hash,File Name,Method Name,Method Code,Commit Link,Method Code No Comments,Tokens
master,2a969b3c1603a5aaf94b98309940c5aa815f9664,MainActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }",https://www.github.com/devgianlu/aria2android/commit/2a969b3c1603a5aaf94b98309940c5aa815f9664,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2a969b3c1603a5aaf94b98309940c5aa815f9664,ExampleUnitTest.java,addition_isCorrect,"    public void addition_isCorrect() throws Exception {
        assertEquals(4, 2 + 2);
    }",https://www.github.com/devgianlu/aria2android/commit/2a969b3c1603a5aaf94b98309940c5aa815f9664,"    public void addition_isCorrect() throws Exception {
        assertEquals(4, 2 + 2);
    }
","['    ', 'public', ' ', 'void', ' ', 'addition_isCorrect', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertEquals', '(', '4', ',', ' ', '2', ' ', '+', ' ', '2', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onStart,"            public void onStart() {
                DownloadBinActivity.this.runOnUiThread(new Runnable() {
                    @Override",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void onStart() {
                DownloadBinActivity.this.runOnUiThread(new Runnable() {
                    @Override
","['            ', 'public', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '                ', 'DownloadBinActivity', '.', 'this', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,run,"                    public void run() {
                        pd.show();
                    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                    public void run() {
                        pd.show();
                    }
","['                    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                        ', 'pd', '.', 'show', '(', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onStart,"                                public void onStart() {
                                    DownloadBinActivity.this.runOnUiThread(new Runnable() {
                                        @Override",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                                public void onStart() {
                                    DownloadBinActivity.this.runOnUiThread(new Runnable() {
                                        @Override
","['                                ', 'public', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '                                    ', 'DownloadBinActivity', '.', 'this', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '                                        ', '@Override', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,run,"                                        public void run() {
                                            pd.show();
                                        }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                                        public void run() {
                                            pd.show();
                                        }
","['                                        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                                            ', 'pd', '.', 'show', '(', ')', ';', '\n', '                                        ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onResponse,"                                public void onResponse(String response) {
                                    pd.dismiss();

                                    String downloadURL;
                                    try {
                                        downloadURL = new JSONObject(response).getJSONArray(""assets"").getJSONObject(0).getString(""browser_download_url"");",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                                public void onResponse(String response) {
                                    pd.dismiss();

                                    String downloadURL;
                                    try {
                                        downloadURL = new JSONObject(response).getJSONArray(""assets"").getJSONObject(0).getString(""browser_download_url"");
","['                                ', 'public', ' ', 'void', ' ', 'onResponse', '(', 'String', ' ', 'response', ')', ' ', '{', '\n', '                                    ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '\n', '                                    ', 'String', ' ', 'downloadURL', ';', '\n', '                                    ', 'try', ' ', '{', '\n', '                                        ', 'downloadURL', ' ', '=', ' ', 'new', ' ', 'JSONObject', '(', 'response', ')', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', '.', 'getJSONObject', '(', '0', ')', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onException,"                                public void onException(Exception exception) {
                                    Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
                                }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                                public void onException(Exception exception) {
                                    Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ' ', '{', '\n', '                                    ', 'Utils', '.', 'UIToast', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', 'exception', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onFailed,"                                public void onFailed(int code, String message) {
                                    Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
                                }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                                public void onFailed(int code, String message) {
                                    Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '                                    ', 'Utils', '.', 'UIToast', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', '""', '#', '""', ' ', '+', ' ', 'code', ' ', '+', ' ', '""', ': ', '""', ' ', '+', ' ', 'message', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,run,"                    public void run() {
                        builder.create().show();
                    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"                    public void run() {
                        builder.create().show();
                    }
","['                    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                        ', 'builder', '.', 'create', '(', ')', '.', 'show', '(', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onException,"            public void onException(Exception exception) {
                pd.dismiss();
                Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
            }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void onException(Exception exception) {
                pd.dismiss();
                Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ' ', '{', '\n', '                ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', 'exception', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadBinActivity.java,onFailed,"            public void onFailed(int code, String message) {
                pd.dismiss();
                Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
            }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void onFailed(int code, String message) {
                pd.dismiss();
                Utils.UIToast(DownloadBinActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
            }
","['            ', 'public', ' ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '                ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', '""', '#', '""', ' ', '+', ' ', 'code', ' ', '+', ' ', '""', ': ', '""', ' ', '+', ' ', 'message', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,MainActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        startActivity(new Intent(this, DownloadBinActivity.class));
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        startActivity(new Intent(this, DownloadBinActivity.class));
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', '\n', '        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'DownloadBinActivity', '.', 'class', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,AsyncRequest.java,run,"    public void run() {
        handler.onStart();

        try {
            HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public void run() {
        handler.onStart();

        try {
            HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'handler', '.', 'onStart', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'new', ' ', 'URL', '(', 'url', ')', '.', 'openConnection', '(', ')', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadFile.java,onPreExecute,"    protected void onPreExecute() {
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    protected void onPreExecute() {
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'protected', ' ', 'void', ' ', 'onPreExecute', '(', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadFile.java,run,"            public void run() {
                progressDialog = new ProgressDialog(context);
                progressDialog.setCancelable(false);
                progressDialog.setIndeterminate(false);
                progressDialog.setMessage(context.getString(R.string.downloading_bin));

                progressDialog.show();
            }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void run() {
                progressDialog = new ProgressDialog(context);
                progressDialog.setCancelable(false);
                progressDialog.setIndeterminate(false);
                progressDialog.setMessage(context.getString(R.string.downloading_bin));

                progressDialog.show();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'progressDialog', ' ', '=', ' ', 'new', ' ', 'ProgressDialog', '(', 'context', ')', ';', '\n', '                ', 'progressDialog', '.', 'setCancelable', '(', 'false', ')', ';', '\n', '                ', 'progressDialog', '.', 'setIndeterminate', '(', 'false', ')', ';', '\n', '                ', 'progressDialog', '.', 'setMessage', '(', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'downloading_bin', ')', ')', ';', '\n', '\n', '                ', 'progressDialog', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadFile.java,onPostExecute,"    protected void onPostExecute(Object result) {
        progressDialog.dismiss();

        if (result instanceof ByteArrayOutputStream) {
            ByteArrayOutputStream out = (ByteArrayOutputStream) result;",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    protected void onPostExecute(Object result) {
        progressDialog.dismiss();

        if (result instanceof ByteArrayOutputStream) {
            ByteArrayOutputStream out = (ByteArrayOutputStream) result;
","['    ', 'protected', ' ', 'void', ' ', 'onPostExecute', '(', 'Object', ' ', 'result', ')', ' ', '{', '\n', '        ', 'progressDialog', '.', 'dismiss', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'result', ' ', 'instanceof', ' ', 'ByteArrayOutputStream', ')', ' ', '{', '\n', '            ', 'ByteArrayOutputStream', ' ', 'out', ' ', '=', ' ', '(', 'ByteArrayOutputStream', ')', ' ', 'result', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadFile.java,onProgressUpdate,"    protected void onProgressUpdate(Integer... values) {
        progressDialog.setProgress(values[0]);
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    protected void onProgressUpdate(Integer... values) {
        progressDialog.setProgress(values[0]);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onProgressUpdate', '(', 'Integer', '.', '.', '.', ' ', 'values', ')', ' ', '{', '\n', '        ', 'progressDialog', '.', 'setProgress', '(', 'values', '[', '0', ']', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,DownloadFile.java,doInBackground,"    protected Object doInBackground(URL... params) {
        try {
            HttpURLConnection conn = (HttpURLConnection) params[0].openConnection();",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    protected Object doInBackground(URL... params) {
        try {
            HttpURLConnection conn = (HttpURLConnection) params[0].openConnection();
","['    ', 'protected', ' ', 'Object', ' ', 'doInBackground', '(', 'URL', '.', '.', '.', ' ', 'params', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'params', '[', '0', ']', '.', 'openConnection', '(', ')', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,IResponse.java,onStart,"    void onStart();

    void onResponse(String response);

    void onException(Exception exception);

    void onFailed(int code, String message);
}",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    void onStart();

    void onResponse(String response);

    void onException(Exception exception);

    void onFailed(int code, String message);
}
","['    ', 'void', ' ', 'onStart', '(', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onResponse', '(', 'String', ' ', 'response', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ';', '\n', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,IResponse.java,onResponse,"    void onResponse(String response);

    void onException(Exception exception);

    void onFailed(int code, String message);
}",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    void onResponse(String response);

    void onException(Exception exception);

    void onFailed(int code, String message);
}
","['    ', 'void', ' ', 'onResponse', '(', 'String', ' ', 'response', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ';', '\n', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,IResponse.java,onException,"    void onException(Exception exception);

    void onFailed(int code, String message);
}",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    void onException(Exception exception);

    void onFailed(int code, String message);
}
","['    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ';', '\n', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,unzipBin,"    public static void unzipBin(InputStream in, Context context) throws IOException {
        try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(in))) {
            ZipEntry ze;",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void unzipBin(InputStream in, Context context) throws IOException {
        try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(in))) {
            ZipEntry ze;
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'unzipBin', '(', 'InputStream', ' ', 'in', ',', ' ', 'Context', ' ', 'context', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'try', ' ', '(', 'ZipInputStream', ' ', 'zis', ' ', '=', ' ', 'new', ' ', 'ZipInputStream', '(', 'new', ' ', 'BufferedInputStream', '(', 'in', ')', ')', ')', ' ', '{', '\n', '            ', 'ZipEntry', ' ', 'ze', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final String text) {
        UIToast(context, text, Toast.LENGTH_SHORT);
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final String text) {
        UIToast(context, text, Toast.LENGTH_SHORT);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'String', ' ', 'text', ')', ' ', '{', '\n', '        ', 'UIToast', '(', 'context', ',', ' ', 'text', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final String text, final int duration) {
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final String text, final int duration) {
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'String', ' ', 'text', ',', ' ', 'final', ' ', 'int', ' ', 'duration', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,run,"            public void run() {
                Toast.makeText(context, text, duration).show();
            }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void run() {
                Toast.makeText(context, text, duration).show();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'text', ',', ' ', 'duration', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final String text, final int duration, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, text, duration).show();
            }
        });
        context.runOnUiThread(extra);
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final String text, final int duration, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, text, duration).show();
            }
        });
        context.runOnUiThread(extra);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'String', ' ', 'text', ',', ' ', 'final', ' ', 'int', ' ', 'duration', ',', ' ', 'Runnable', ' ', 'extra', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'text', ',', ' ', 'duration', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'extra', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString() + (message.isError() ? "" See logs for more..."" : """"), Toast.LENGTH_SHORT).show();
            }
        });
        LogMe(context, message.toString(), message.isError());
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString() + (message.isError() ? "" See logs for more..."" : """"), Toast.LENGTH_SHORT).show();
            }
        });
        LogMe(context, message.toString(), message.isError());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ' ', '+', ' ', '(', 'message', '.', 'isError', '(', ')', ' ', '?', ' ', '""', ' See logs for more...', '""', ' ', ':', ' ', '""', '""', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '        ', 'LogMe', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,run,"            public void run() {
                Toast.makeText(context, message.toString() + (message.isError() ? "" See logs for more..."" : """"), Toast.LENGTH_SHORT).show();
            }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void run() {
                Toast.makeText(context, message.toString() + (message.isError() ? "" See logs for more..."" : """"), Toast.LENGTH_SHORT).show();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ' ', '+', ' ', '(', 'message', '.', 'isError', '(', ')', ' ', '?', ' ', '""', ' See logs for more...', '""', ' ', ':', ' ', '""', '""', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final String message_extras) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        LogMe(context, message + "" Details: "" + message_extras, message.isError());
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final String message_extras) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        LogMe(context, message + "" Details: "" + message_extras, message.isError());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'final', ' ', 'String', ' ', 'message_extras', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'LogMe', '(', 'context', ',', ' ', 'message', ' ', '+', ' ', '""', ' Details: ', '""', ' ', '+', ' ', 'message_extras', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,run,"            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final Throwable exception) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        LogMe(context, message + "" Details: "" + exception.getMessage(), message.isError());
        SecretLog(context, exception);
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final Throwable exception) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        LogMe(context, message + "" Details: "" + exception.getMessage(), message.isError());
        SecretLog(context, exception);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'final', ' ', 'Throwable', ' ', 'exception', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'LogMe', '(', 'context', ',', ' ', 'message', ' ', '+', ' ', '""', ' Details: ', '""', ' ', '+', ' ', 'exception', '.', 'getMessage', '(', ')', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '        ', 'SecretLog', '(', 'context', ',', ' ', 'exception', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final String message_extras, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });
        context.runOnUiThread(extra);
        LogMe(context, message + "" Details: "" + message_extras, message.isError());
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final String message_extras, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });
        context.runOnUiThread(extra);
        LogMe(context, message + "" Details: "" + message_extras, message.isError());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'final', ' ', 'String', ' ', 'message_extras', ',', ' ', 'Runnable', ' ', 'extra', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'extra', ')', ';', '\n', '        ', 'LogMe', '(', 'context', ',', ' ', 'message', ' ', '+', ' ', '""', ' Details: ', '""', ' ', '+', ' ', 'message_extras', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final Throwable exception, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });
        context.runOnUiThread(extra);

        LogMe(context, message + "" Details: "" + exception.getMessage(), message.isError());
        SecretLog(context, exception);
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final Throwable exception, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });
        context.runOnUiThread(extra);

        LogMe(context, message + "" Details: "" + exception.getMessage(), message.isError());
        SecretLog(context, exception);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'final', ' ', 'Throwable', ' ', 'exception', ',', ' ', 'Runnable', ' ', 'extra', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'extra', ')', ';', '\n', '\n', '        ', 'LogMe', '(', 'context', ',', ' ', 'message', ' ', '+', ' ', '""', ' Details: ', '""', ' ', '+', ' ', 'exception', '.', 'getMessage', '(', ')', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '        ', 'SecretLog', '(', 'context', ',', ' ', 'exception', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });
        context.runOnUiThread(extra);
        LogMe(context, message.toString(), message.isError());
    }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, Runnable extra) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });
        context.runOnUiThread(extra);
        LogMe(context, message.toString(), message.isError());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'Runnable', ' ', 'extra', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'extra', ')', ';', '\n', '        ', 'LogMe', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,SecretLog,"    public static void SecretLog(Activity context, Throwable exx) {
        exx.printStackTrace();

        try {
            FileOutputStream fOut = context.openFileOutput(new SimpleDateFormat(""d-LL-yyyy"", Locale.getDefault()).format(new java.util.Date()) + "".secret"", Context.MODE_APPEND);",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void SecretLog(Activity context, Throwable exx) {
        exx.printStackTrace();

        try {
            FileOutputStream fOut = context.openFileOutput(new SimpleDateFormat(""d-LL-yyyy"", Locale.getDefault()).format(new java.util.Date()) + "".secret"", Context.MODE_APPEND);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'SecretLog', '(', 'Activity', ' ', 'context', ',', ' ', 'Throwable', ' ', 'exx', ')', ' ', '{', '\n', '        ', 'exx', '.', 'printStackTrace', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'FileOutputStream', ' ', 'fOut', ' ', '=', ' ', 'context', '.', 'openFileOutput', '(', 'new', ' ', 'SimpleDateFormat', '(', '""', 'd-LL-yyyy', '""', ',', ' ', 'Locale', '.', 'getDefault', '(', ')', ')', '.', 'format', '(', 'new', ' ', 'java', '.', 'util', '.', 'Date', '(', ')', ')', ' ', '+', ' ', '""', '.secret', '""', ',', ' ', 'Context', '.', 'MODE_APPEND', ')', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,LogMe,"    public static void LogMe(Activity context, String message, boolean isError) {
        try {
            FileOutputStream fOut = context.openFileOutput(new SimpleDateFormat(""d-LL-yyyy"", Locale.getDefault()).format(new java.util.Date()) + "".log"", Context.MODE_APPEND);",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"    public static void LogMe(Activity context, String message, boolean isError) {
        try {
            FileOutputStream fOut = context.openFileOutput(new SimpleDateFormat(""d-LL-yyyy"", Locale.getDefault()).format(new java.util.Date()) + "".log"", Context.MODE_APPEND);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'LogMe', '(', 'Activity', ' ', 'context', ',', ' ', 'String', ' ', 'message', ',', ' ', 'boolean', ' ', 'isError', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'FileOutputStream', ' ', 'fOut', ' ', '=', ' ', 'context', '.', 'openFileOutput', '(', 'new', ' ', 'SimpleDateFormat', '(', '""', 'd-LL-yyyy', '""', ',', ' ', 'Locale', '.', 'getDefault', '(', ')', ')', '.', 'format', '(', 'new', ' ', 'java', '.', 'util', '.', 'Date', '(', ')', ')', ' ', '+', ' ', '""', '.log', '""', ',', ' ', 'Context', '.', 'MODE_APPEND', ')', ';', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,toString,"        public String toString() {
            return text;
        }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"        public String toString() {
            return text;
        }
","['        ', 'public', ' ', 'String', ' ', 'toString', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', 'text', ';', '\n', '        ', '}', '\n', '<END>']"
master,2184f579ae75c7c2fcd72a841f0019e745d62147,Utils.java,isError,"        public boolean isError() {
            return isError;
        }",https://www.github.com/devgianlu/aria2android/commit/2184f579ae75c7c2fcd72a841f0019e745d62147,"        public boolean isError() {
            return isError;
        }
","['        ', 'public', ' ', 'boolean', ' ', 'isError', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', 'isError', ';', '\n', '        ', '}', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,BinUtils.java,binAvailable,"    public static boolean binAvailable(Context context) {
        return new File(context.getFilesDir().getPath() + ""/bin/aria2c"").exists();
    }",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"    public static boolean binAvailable(Context context) {
        return new File(context.getFilesDir().getPath() + ""/bin/aria2c"").exists();
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'binAvailable', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/aria2c', '""', ')', '.', 'exists', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();

        if (!BinUtils.binAvailable(this))
            downloadBinDialog();",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"    protected void onStart() {
        super.onStart();

        if (!BinUtils.binAvailable(this))
            downloadBinDialog();
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'BinUtils', '.', 'binAvailable', '(', 'this', ')', ')', '\n', '            ', 'downloadBinDialog', '(', ')', ';', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (!BinUtils.binAvailable(this)) {
            Utils.UIToast(this, Utils.TOAST_MESSAGES.BIN_NOT_FOUND);",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (!BinUtils.binAvailable(this)) {
            Utils.UIToast(this, Utils.TOAST_MESSAGES.BIN_NOT_FOUND);
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'BinUtils', '.', 'binAvailable', '(', 'this', ')', ')', ' ', '{', '\n', '            ', 'Utils', '.', 'UIToast', '(', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'BIN_NOT_FOUND', ')', ';', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onStart,"            public void onStart() {
                MainActivity.this.runOnUiThread(new Runnable() {
                    @Override",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"            public void onStart() {
                MainActivity.this.runOnUiThread(new Runnable() {
                    @Override
","['            ', 'public', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '                ', 'MainActivity', '.', 'this', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onStart,"                                public void onStart() {
                                    MainActivity.this.runOnUiThread(new Runnable() {
                                        @Override",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"                                public void onStart() {
                                    MainActivity.this.runOnUiThread(new Runnable() {
                                        @Override
","['                                ', 'public', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '                                    ', 'MainActivity', '.', 'this', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '                                        ', '@Override', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onException,"                                public void onException(Exception exception) {
                                    Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
                                }",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"                                public void onException(Exception exception) {
                                    Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ' ', '{', '\n', '                                    ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', 'exception', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onFailed,"                                public void onFailed(int code, String message) {
                                    Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
                                }",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"                                public void onFailed(int code, String message) {
                                    Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '                                    ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', '""', '#', '""', ' ', '+', ' ', 'code', ' ', '+', ' ', '""', ': ', '""', ' ', '+', ' ', 'message', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onException,"            public void onException(Exception exception) {
                pd.dismiss();
                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
            }",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"            public void onException(Exception exception) {
                pd.dismiss();
                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, exception);
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ' ', '{', '\n', '                ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', 'exception', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,MainActivity.java,onFailed,"            public void onFailed(int code, String message) {
                pd.dismiss();
                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
            }",https://www.github.com/devgianlu/aria2android/commit/8e94964fd2a0c4cb30f2c8a07e0b4559fe3eba8a,"            public void onFailed(int code, String message) {
                pd.dismiss();
                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
            }
","['            ', 'public', ' ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '                ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', '""', '#', '""', ' ', '+', ' ', 'code', ' ', '+', ' ', '""', ': ', '""', ' ', '+', ' ', 'message', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,0b7623d14a4ffa878f2a418f834b19f27a04aee0,BinUtils.java,binAvailable,"    public static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir().getPath() + ""/bin/aria2c"");
        return file.exists() && !file.isDirectory();
    }",https://www.github.com/devgianlu/aria2android/commit/0b7623d14a4ffa878f2a418f834b19f27a04aee0,"    public static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir().getPath() + ""/bin/aria2c"");
        return file.exists() && !file.isDirectory();
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'binAvailable', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/aria2c', '""', ')', ';', '\n', '        ', 'return', ' ', 'file', '.', 'exists', '(', ')', ' ', '&', '&', ' ', '!', 'file', '.', 'isDirectory', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0b7623d14a4ffa878f2a418f834b19f27a04aee0,MainActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (!BinUtils.binAvailable(this)) {
            downloadBinDialog();",https://www.github.com/devgianlu/aria2android/commit/0b7623d14a4ffa878f2a418f834b19f27a04aee0,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (!BinUtils.binAvailable(this)) {
            downloadBinDialog();
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'BinUtils', '.', 'binAvailable', '(', 'this', ')', ')', ' ', '{', '\n', '            ', 'downloadBinDialog', '(', ')', ';', '\n', '<END>']"
master,5deee0f32d68c64192bbb06a09046689e339bb5c,BinUtils.java,binVersion,"    public static String binVersion(Context context) {
        try {
            return new BufferedReader(",https://www.github.com/devgianlu/aria2android/commit/5deee0f32d68c64192bbb06a09046689e339bb5c,"    public static String binVersion(Context context) {
        try {
            return new BufferedReader(
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'binVersion', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'BufferedReader', '(', '\n', '<END>']"
master,5deee0f32d68c64192bbb06a09046689e339bb5c,MainActivity.java,onFocusChange,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    File path = new File(outputPath.getText().toString());",https://www.github.com/devgianlu/aria2android/commit/5deee0f32d68c64192bbb06a09046689e339bb5c,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    File path = new File(outputPath.getText().toString());
","['            ', 'public', ' ', 'void', ' ', 'onFocusChange', '(', 'View', ' ', 'v', ',', ' ', 'boolean', ' ', 'hasFocus', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'hasFocus', ')', ' ', '{', '\n', '                    ', 'File', ' ', 'path', ' ', '=', ' ', 'new', ' ', 'File', '(', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ';', '\n', '<END>']"
master,5deee0f32d68c64192bbb06a09046689e339bb5c,MainActivity.java,onFocusChange,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int port;",https://www.github.com/devgianlu/aria2android/commit/5deee0f32d68c64192bbb06a09046689e339bb5c,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int port;
","['            ', 'public', ' ', 'void', ' ', 'onFocusChange', '(', 'View', ' ', 'v', ',', ' ', 'boolean', ' ', 'hasFocus', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'hasFocus', ')', ' ', '{', '\n', '                    ', 'int', ' ', 'port', ';', '\n', '<END>']"
master,5deee0f32d68c64192bbb06a09046689e339bb5c,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        Notification.Builder builder = new Notification.Builder(context);
        builder.setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentText(""aria2 is currently running"");

        startForeground(new Random().nextInt(1000), builder.build());

        try {
            process = Runtime.getRuntime().exec(context.getFilesDir().getPath() + ""/bin/aria2c --daemon"" + (intent.getBooleanExtra(""useConfig"", false) ? "" --conf-path=./aria2.conf"" : ""--no-conf=true""));",https://www.github.com/devgianlu/aria2android/commit/5deee0f32d68c64192bbb06a09046689e339bb5c,"    protected void onHandleIntent(Intent intent) {
        Notification.Builder builder = new Notification.Builder(context);
        builder.setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentText(""aria2 is currently running"");

        startForeground(new Random().nextInt(1000), builder.build());

        try {
            process = Runtime.getRuntime().exec(context.getFilesDir().getPath() + ""/bin/aria2c --daemon"" + (intent.getBooleanExtra(""useConfig"", false) ? "" --conf-path=./aria2.conf"" : ""--no-conf=true""));
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'Notification', '.', 'Builder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'Notification', '.', 'Builder', '(', 'context', ')', ';', '\n', '        ', 'builder', '.', 'setContentTitle', '(', '""', 'aria2 service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2 is currently running', '""', ')', ';', '\n', '\n', '        ', 'startForeground', '(', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '1000', ')', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/aria2c --daemon', '""', ' ', '+', ' ', '(', 'intent', '.', 'getBooleanExtra', '(', '""', 'useConfig', '""', ',', ' ', 'false', ')', ' ', '?', ' ', '""', ' --conf-path=./aria2.conf', '""', ' ', ':', ' ', '""', '--no-conf=true', '""', ')', ')', ';', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,MainActivity.java,onServerStarted,"            public void onServerStarted(InputStream in, InputStream err) {
                streamListener = new StreamListener(in, err);
                new Thread(streamListener).start();
            }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"            public void onServerStarted(InputStream in, InputStream err) {
                streamListener = new StreamListener(in, err);
                new Thread(streamListener).start();
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStarted', '(', 'InputStream', ' ', 'in', ',', ' ', 'InputStream', ' ', 'err', ')', ' ', '{', '\n', '                ', 'streamListener', ' ', '=', ' ', 'new', ' ', 'StreamListener', '(', 'in', ',', ' ', 'err', ')', ';', '\n', '                ', 'new', ' ', 'Thread', '(', 'streamListener', ')', '.', 'start', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,MainActivity.java,onException,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                ex.printStackTrace();
            }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                ex.printStackTrace();
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ',', ' ', 'boolean', ' ', 'fatal', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'ex', '.', 'printStackTrace', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,MainActivity.java,onServerStopped,"            public void onServerStopped() {
                StreamListener.stop();
            }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"            public void onServerStopped() {
                StreamListener.stop();
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStopped', '(', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked)
                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                else
                    stopService(new Intent(MainActivity.this, aria2Service.class));


                outputPath.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked)
                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                else
                    stopService(new Intent(MainActivity.this, aria2Service.class));


                outputPath.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', 'else', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,MainActivity.java,onClick,"                                public void onClick(DialogInterface dialog, int which) {
                                    try {
                                        startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id=com.gianlu.aria2app"")));",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"                                public void onClick(DialogInterface dialog, int which) {
                                    try {
                                        startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id=com.gianlu.aria2app"")));
","['                                ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                                    ', 'try', ' ', '{', '\n', '                                        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', ' ', 'Uri', '.', 'parse', '(', '""', 'market://details?id=com.gianlu.aria2app', '""', ')', ')', ')', ';', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,MainActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return super.onCreateOptionsMenu(menu);
    }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return super.onCreateOptionsMenu(menu);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'main', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'super', '.', 'onCreateOptionsMenu', '(', 'menu', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,StreamListener.java,run,"    public void run() {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        BufferedReader ereader = new BufferedReader(new InputStreamReader(err));

        while (!_shouldStop) {
            String line;",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public void run() {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        BufferedReader ereader = new BufferedReader(new InputStreamReader(err));

        while (!_shouldStop) {
            String line;
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ';', '\n', '        ', 'BufferedReader', ' ', 'ereader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'err', ')', ')', ';', '\n', '\n', '        ', 'while', ' ', '(', '!', '_shouldStop', ')', ' ', '{', '\n', '            ', 'String', ' ', 'line', ';', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,Utils.java,optionProcessor,"    public static String optionProcessor(Map<String, String> options) {
        String extended = """";
        if (options == null || options.isEmpty()) return """";

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty() || entry.getValue().isEmpty()) continue;

            extended += "" --"" + entry.getKey() + ""="" + entry.getValue();
        }

        return extended;
    }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public static String optionProcessor(Map<String, String> options) {
        String extended = """";
        if (options == null || options.isEmpty()) return """";

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty() || entry.getValue().isEmpty()) continue;

            extended += "" --"" + entry.getKey() + ""="" + entry.getValue();
        }

        return extended;
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'optionProcessor', '(', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ')', ' ', '{', '\n', '        ', 'String', ' ', 'extended', ' ', '=', ' ', '""', '""', ';', '\n', '        ', 'if', ' ', '(', 'options', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'options', '.', 'isEmpty', '(', ')', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'options', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'entry', '.', 'getKey', '(', ')', '.', 'isEmpty', '(', ')', ' ', '|', '|', ' ', 'entry', '.', 'getValue', '(', ')', '.', 'isEmpty', '(', ')', ')', ' ', 'continue', ';', '\n', '\n', '            ', 'extended', ' ', '+', '=', ' ', '""', ' --', '""', ' ', '+', ' ', 'entry', '.', 'getKey', '(', ')', ' ', '+', ' ', '""', '=', '""', ' ', '+', ' ', 'entry', '.', 'getValue', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'extended', ';', '\n', '    ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,Utils.java,optionProcessor,"    public static Map<String, String> optionProcessor(InputStream in) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        Map<String, String> map = new ArrayMap<>();

        String line;
        while ((line = reader.readLine()) != null) {
            String[] _option = line.split(""="");
            map.put(_option[0], _option[1]);
        }

        return map;
    }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public static Map<String, String> optionProcessor(InputStream in) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        Map<String, String> map = new ArrayMap<>();

        String line;
        while ((line = reader.readLine()) != null) {
            String[] _option = line.split(""="");
            map.put(_option[0], _option[1]);
        }

        return map;
    }
","['    ', 'public', ' ', 'static', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'optionProcessor', '(', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ';', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ' ', '=', ' ', 'new', ' ', 'ArrayMap', '<', '>', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'line', ';', '\n', '        ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'String', '[', ']', ' ', '_option', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'map', '.', 'put', '(', '_option', '[', '0', ']', ',', ' ', '_option', '[', '1', ']', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'map', ';', '\n', '    ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,Iaria2.java,onServerStarted,"    void onServerStarted(InputStream in, InputStream err);

    void onException(Exception ex, boolean fatal);

    void onServerStopped();
}",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    void onServerStarted(InputStream in, InputStream err);

    void onException(Exception ex, boolean fatal);

    void onServerStopped();
}
","['    ', 'void', ' ', 'onServerStarted', '(', 'InputStream', ' ', 'in', ',', ' ', 'InputStream', ' ', 'err', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ',', ' ', 'boolean', ' ', 'fatal', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onServerStopped', '(', ')', ';', '\n', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,Iaria2.java,onException,"    void onException(Exception ex, boolean fatal);

    void onServerStopped();
}",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    void onException(Exception ex, boolean fatal);

    void onServerStopped();
}
","['    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ',', ' ', 'boolean', ' ', 'fatal', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onServerStopped', '(', ')', ';', '\n', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,aria2StartConfig.java,createFromParcel,"        public aria2StartConfig createFromParcel(Parcel in) {
            return new aria2StartConfig(in);
        }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"        public aria2StartConfig createFromParcel(Parcel in) {
            return new aria2StartConfig(in);
        }
","['        ', 'public', ' ', 'aria2StartConfig', ' ', 'createFromParcel', '(', 'Parcel', ' ', 'in', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'aria2StartConfig', '(', 'in', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,aria2StartConfig.java,newArray,"        public aria2StartConfig[] newArray(int size) {
            return new aria2StartConfig[size];
        }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"        public aria2StartConfig[] newArray(int size) {
            return new aria2StartConfig[size];
        }
","['        ', 'public', ' ', 'aria2StartConfig', '[', ']', ' ', 'newArray', '(', 'int', ' ', 'size', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'aria2StartConfig', '[', 'size', ']', ';', '\n', '        ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,aria2StartConfig.java,writeToParcel,"    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(outputDirectory);
        dest.writeByte((byte) (useConfig ? 1 : 0));
        dest.writeInt(rpcPort);
        dest.writeString(rpcToken);
    }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(outputDirectory);
        dest.writeByte((byte) (useConfig ? 1 : 0));
        dest.writeInt(rpcPort);
        dest.writeString(rpcToken);
    }
","['    ', 'public', ' ', 'void', ' ', 'writeToParcel', '(', 'Parcel', ' ', 'dest', ',', ' ', 'int', ' ', 'flags', ')', ' ', '{', '\n', '        ', 'dest', '.', 'writeString', '(', 'outputDirectory', ')', ';', '\n', '        ', 'dest', '.', 'writeByte', '(', '(', 'byte', ')', ' ', '(', 'useConfig', ' ', '?', ' ', '1', ' ', ':', ' ', '0', ')', ')', ';', '\n', '        ', 'dest', '.', 'writeInt', '(', 'rpcPort', ')', ';', '\n', '        ', 'dest', '.', 'writeString', '(', 'rpcToken', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,aria2Service.java,killService,"    public static void killService() {
        handler.onServerStopped();
        if (process != null)
            process.destroy();",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public static void killService() {
        handler.onServerStopped();
        if (process != null)
            process.destroy();
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,aria2Service.java,onStartCommand,"    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(new Random().nextInt(100), new Notification.Builder(context).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentText(""aria2 is currently running"").build());

        onHandleIntent(intent);
        return START_STICKY;
    }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(new Random().nextInt(100), new Notification.Builder(context).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentText(""aria2 is currently running"").build());

        onHandleIntent(intent);
        return START_STICKY;
    }
","['    ', 'public', ' ', 'int', ' ', 'onStartCommand', '(', 'Intent', ' ', 'intent', ',', ' ', 'int', ' ', 'flags', ',', ' ', 'int', ' ', 'startId', ')', ' ', '{', '\n', '        ', 'startForeground', '(', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '100', ')', ',', ' ', 'new', ' ', 'Notification', '.', 'Builder', '(', 'context', ')', '.', 'setContentTitle', '(', '""', 'aria2 service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2 is currently running', '""', ')', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'onHandleIntent', '(', 'intent', ')', ';', '\n', '        ', 'return', ' ', 'START_STICKY', ';', '\n', '    ', '}', '\n', '<END>']"
master,423be707246672f0ac77625acb557e1ab6624e9f,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        try {
            process = Runtime.getRuntime().exec(context.getFilesDir().getPath()
                    + ""/bin/aria2c --daemon ""
                    + (config.useConfig() ? ""--conf-path=./aria2.conf"" : ""--no-conf=true"")
                    + "" --dir="" + config.getOutputDirectory()
                    + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                    + "" --rpc-secret="" + config.getRpcToken()
                    + Utils.optionProcessor(config.getOptions()));
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }",https://www.github.com/devgianlu/aria2android/commit/423be707246672f0ac77625acb557e1ab6624e9f,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        try {
            process = Runtime.getRuntime().exec(context.getFilesDir().getPath()
                    + ""/bin/aria2c --daemon ""
                    + (config.useConfig() ? ""--conf-path=./aria2.conf"" : ""--no-conf=true"")
                    + "" --dir="" + config.getOutputDirectory()
                    + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                    + "" --rpc-secret="" + config.getRpcToken()
                    + Utils.optionProcessor(config.getOptions()));
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', 'intent', '.', 'getParcelableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', '\n', '                    ', '+', ' ', '""', '/bin/aria2c --daemon ', '""', '\n', '                    ', '+', ' ', '(', 'config', '.', 'useConfig', '(', ')', ' ', '?', ' ', '""', '--conf-path=./aria2.conf', '""', ' ', ':', ' ', '""', '--no-conf=true', '""', ')', '\n', '                    ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'getOutputDirectory', '(', ')', '\n', '                    ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'getRpcPort', '(', ')', '\n', '                    ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'getRpcToken', '(', ')', '\n', '                    ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'getOptions', '(', ')', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ',', ' ', 'true', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_SAVE_SESSION, b)",https://www.github.com/devgianlu/aria2android/commit/4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_SAVE_SESSION, b)
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'compoundButton', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'preferences', '.', 'edit', '(', ')', '\n', '                        ', '.', 'putBoolean', '(', 'Utils', '.', 'PREF_SAVE_SESSION', ',', ' ', 'b', ')', '\n', '<END>']"
master,4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,aria2StartConfig.java,writeToParcel,"    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(outputDirectory);
        dest.writeByte((byte) (useConfig ? 1 : 0));
        dest.writeByte((byte) (saveSession ? 1 : 0));
        dest.writeInt(rpcPort);
        dest.writeString(rpcToken);
    }",https://www.github.com/devgianlu/aria2android/commit/4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,"    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(outputDirectory);
        dest.writeByte((byte) (useConfig ? 1 : 0));
        dest.writeByte((byte) (saveSession ? 1 : 0));
        dest.writeInt(rpcPort);
        dest.writeString(rpcToken);
    }
","['    ', 'public', ' ', 'void', ' ', 'writeToParcel', '(', 'Parcel', ' ', 'dest', ',', ' ', 'int', ' ', 'flags', ')', ' ', '{', '\n', '        ', 'dest', '.', 'writeString', '(', 'outputDirectory', ')', ';', '\n', '        ', 'dest', '.', 'writeByte', '(', '(', 'byte', ')', ' ', '(', 'useConfig', ' ', '?', ' ', '1', ' ', ':', ' ', '0', ')', ')', ';', '\n', '        ', 'dest', '.', 'writeByte', '(', '(', 'byte', ')', ' ', '(', 'saveSession', ' ', '?', ' ', '1', ' ', ':', ' ', '0', ')', ')', ';', '\n', '        ', 'dest', '.', 'writeInt', '(', 'rpcPort', ')', ';', '\n', '        ', 'dest', '.', 'writeString', '(', 'rpcToken', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,aria2StartConfig.java,isSavingSession,"    public boolean isSavingSession() {
        return saveSession;
    }",https://www.github.com/devgianlu/aria2android/commit/4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,"    public boolean isSavingSession() {
        return saveSession;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'isSavingSession', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'saveSession', ';', '\n', '    ', '}', '\n', '<END>']"
master,4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        boolean loadConfig = config.isSavingSession() && new File(getFilesDir().getPath() + ""/bin/session"").exists();

        try {
            process = Runtime.getRuntime().exec(context.getFilesDir().getPath()
                    + ""/bin/aria2c --daemon --check-certificate=false""
                    + (config.useConfig() ? "" --conf-path=./aria2.conf"" : "" --no-conf=true"")
                    + (config.isSavingSession() ? "" --save-session=/data/data/com.gianlu.aria2android/files/bin/session --save-session-interval=10"" : "" "")
                    + (loadConfig ? "" --input-file=/data/data/com.gianlu.aria2android/files/bin/session"" : "" "")
                    + "" --dir="" + config.getOutputDirectory()
                    + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                    + "" --rpc-secret="" + config.getRpcToken()
                    + Utils.optionProcessor(config.getOptions()));
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }",https://www.github.com/devgianlu/aria2android/commit/4a3bf5fb295d8d9652b4c4cc5344e652a43d53a4,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        boolean loadConfig = config.isSavingSession() && new File(getFilesDir().getPath() + ""/bin/session"").exists();

        try {
            process = Runtime.getRuntime().exec(context.getFilesDir().getPath()
                    + ""/bin/aria2c --daemon --check-certificate=false""
                    + (config.useConfig() ? "" --conf-path=./aria2.conf"" : "" --no-conf=true"")
                    + (config.isSavingSession() ? "" --save-session=/data/data/com.gianlu.aria2android/files/bin/session --save-session-interval=10"" : "" "")
                    + (loadConfig ? "" --input-file=/data/data/com.gianlu.aria2android/files/bin/session"" : "" "")
                    + "" --dir="" + config.getOutputDirectory()
                    + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                    + "" --rpc-secret="" + config.getRpcToken()
                    + Utils.optionProcessor(config.getOptions()));
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', 'intent', '.', 'getParcelableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'boolean', ' ', 'loadConfig', ' ', '=', ' ', 'config', '.', 'isSavingSession', '(', ')', ' ', '&', '&', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/session', '""', ')', '.', 'exists', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', '\n', '                    ', '+', ' ', '""', '/bin/aria2c --daemon --check-certificate=false', '""', '\n', '                    ', '+', ' ', '(', 'config', '.', 'useConfig', '(', ')', ' ', '?', ' ', '""', ' --conf-path=./aria2.conf', '""', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                    ', '+', ' ', '(', 'config', '.', 'isSavingSession', '(', ')', ' ', '?', ' ', '""', ' --save-session=/data/data/com.gianlu.aria2android/files/bin/session --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                    ', '+', ' ', '(', 'loadConfig', ' ', '?', ' ', '""', ' --input-file=/data/data/com.gianlu.aria2android/files/bin/session', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                    ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'getOutputDirectory', '(', ')', '\n', '                    ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'getRpcPort', '(', ')', '\n', '                    ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'getRpcToken', '(', ')', '\n', '                    ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'getOptions', '(', ')', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ',', ' ', 'true', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6014a1afa1a3e9f031154db11ab178bab67afca0,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/6014a1afa1a3e9f031154db11ab178bab67afca0,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,6014a1afa1a3e9f031154db11ab178bab67afca0,aria2Service.java,onStartCommand,"    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(new Random().nextInt(100), new Notification.Builder(getBaseContext()).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentText(""aria2 is currently running"").build());

        onHandleIntent(intent);
        return START_STICKY;
    }",https://www.github.com/devgianlu/aria2android/commit/6014a1afa1a3e9f031154db11ab178bab67afca0,"    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(new Random().nextInt(100), new Notification.Builder(getBaseContext()).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentText(""aria2 is currently running"").build());

        onHandleIntent(intent);
        return START_STICKY;
    }
","['    ', 'public', ' ', 'int', ' ', 'onStartCommand', '(', 'Intent', ' ', 'intent', ',', ' ', 'int', ' ', 'flags', ',', ' ', 'int', ' ', 'startId', ')', ' ', '{', '\n', '        ', 'startForeground', '(', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '100', ')', ',', ' ', 'new', ' ', 'Notification', '.', 'Builder', '(', 'getBaseContext', '(', ')', ')', '.', 'setContentTitle', '(', '""', 'aria2 service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2 is currently running', '""', ')', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'onHandleIntent', '(', 'intent', ')', ';', '\n', '        ', 'return', ' ', 'START_STICKY', ';', '\n', '    ', '}', '\n', '<END>']"
master,6014a1afa1a3e9f031154db11ab178bab67afca0,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        String binPath = getFilesDir().getPath() + ""/bin"";

        try {
            process = Runtime.getRuntime().exec(binPath
                    + ""/aria2c --daemon --check-certificate=false""
                    + (config.useConfig() ? "" --conf-path="" + binPath + ""/aria2.conf"" : "" --no-conf=true"")
                    + (config.isSavingSession() ? "" --save-session="" + binPath + ""/session --save-session-interval=10"" : "" "")
                    + "" --input-file="" + binPath + ""/session""
                    + "" --dir="" + config.getOutputDirectory()
                    + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                    + "" --rpc-secret="" + config.getRpcToken()
                    + Utils.optionProcessor(config.getOptions()));
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }",https://www.github.com/devgianlu/aria2android/commit/6014a1afa1a3e9f031154db11ab178bab67afca0,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        String binPath = getFilesDir().getPath() + ""/bin"";

        try {
            process = Runtime.getRuntime().exec(binPath
                    + ""/aria2c --daemon --check-certificate=false""
                    + (config.useConfig() ? "" --conf-path="" + binPath + ""/aria2.conf"" : "" --no-conf=true"")
                    + (config.isSavingSession() ? "" --save-session="" + binPath + ""/session --save-session-interval=10"" : "" "")
                    + "" --input-file="" + binPath + ""/session""
                    + "" --dir="" + config.getOutputDirectory()
                    + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                    + "" --rpc-secret="" + config.getRpcToken()
                    + Utils.optionProcessor(config.getOptions()));
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', 'intent', '.', 'getParcelableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin', '""', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'binPath', '\n', '                    ', '+', ' ', '""', '/aria2c --daemon --check-certificate=false', '""', '\n', '                    ', '+', ' ', '(', 'config', '.', 'useConfig', '(', ')', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'binPath', ' ', '+', ' ', '""', '/aria2.conf', '""', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                    ', '+', ' ', '(', 'config', '.', 'isSavingSession', '(', ')', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'binPath', ' ', '+', ' ', '""', '/session --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                    ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'binPath', ' ', '+', ' ', '""', '/session', '""', '\n', '                    ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'getOutputDirectory', '(', ')', '\n', '                    ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'getRpcPort', '(', ')', '\n', '                    ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'getRpcToken', '(', ')', '\n', '                    ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'getOptions', '(', ')', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ',', ' ', 'true', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,LoglineAdapter.java,clear,"    public void clear() {
        objs.clear();
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"    public void clear() {
        objs.clear();
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'void', ' ', 'clear', '(', ')', ' ', '{', '\n', '        ', 'objs', '.', 'clear', '(', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,LoglineAdapter.java,run,"            public void run() {
                notifyDataSetChanged();
            }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"            public void run() {
                notifyDataSetChanged();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'notifyDataSetChanged', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,LoglineAdapter.java,addLine,"    public void addLine(LoglineItem line) {
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"    public void addLine(LoglineItem line) {
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'void', ' ', 'addLine', '(', 'LoglineItem', ' ', 'line', ')', ' ', '{', '\n', '        ', 'objs', '.', 'add', '(', 'line', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,LoglineAdapter.java,addLine,"    public void addLine(LoglineItem.TYPE type, String message) {
        addLine(new LoglineItem(type, message));
    }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"    public void addLine(LoglineItem.TYPE type, String message) {
        addLine(new LoglineItem(type, message));
    }
","['    ', 'public', ' ', 'void', ' ', 'addLine', '(', 'LoglineItem', '.', 'TYPE', ' ', 'type', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '        ', 'addLine', '(', 'new', ' ', 'LoglineItem', '(', 'type', ',', ' ', 'message', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,MainActivity.java,onServerStarted,"            public void onServerStarted(InputStream in, InputStream err) {
                adapter.clear();
                streamListener = new StreamListener(adapter, in, err);
                adapter.addLine(LoglineItem.TYPE.INFO, ""Server started!"");
                new Thread(streamListener).start();
            }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"            public void onServerStarted(InputStream in, InputStream err) {
                adapter.clear();
                streamListener = new StreamListener(adapter, in, err);
                adapter.addLine(LoglineItem.TYPE.INFO, ""Server started!"");
                new Thread(streamListener).start();
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStarted', '(', 'InputStream', ' ', 'in', ',', ' ', 'InputStream', ' ', 'err', ')', ' ', '{', '\n', '                ', 'adapter', '.', 'clear', '(', ')', ';', '\n', '                ', 'streamListener', ' ', '=', ' ', 'new', ' ', 'StreamListener', '(', 'adapter', ',', ' ', 'in', ',', ' ', 'err', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'INFO', ',', ' ', '""', 'Server started!', '""', ')', ';', '\n', '                ', 'new', ' ', 'Thread', '(', 'streamListener', ')', '.', 'start', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,MainActivity.java,onException,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, ""Server exception! "" + ex.getMessage());
            }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, ""Server exception! "" + ex.getMessage());
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ',', ' ', 'boolean', ' ', 'fatal', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'UNEXPECTED_EXCEPTION', ',', ' ', 'ex', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ',', ' ', '""', 'Server exception! ', '""', ' ', '+', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,MainActivity.java,onServerStopped,"            public void onServerStopped() {
                StreamListener.stop();
                adapter.addLine(LoglineItem.TYPE.INFO, ""Server stopped!"");
            }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"            public void onServerStopped() {
                StreamListener.stop();
                adapter.addLine(LoglineItem.TYPE.INFO, ""Server stopped!"");
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStopped', '(', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'INFO', ',', ' ', '""', 'Server stopped!', '""', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,MainActivity.java,onClick,"                                public void onClick(DialogInterface dialogInterface, int i) {
                                    startActivity(getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"")
                                            .putExtra(""external"", true)",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"                                public void onClick(DialogInterface dialogInterface, int i) {
                                    startActivity(getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"")
                                            .putExtra(""external"", true)
","['                                ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                    ', 'startActivity', '(', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', '\n', '                                            ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '<END>']"
master,beddd4258453b48c709e96640e06865bddb354b0,Utils.java,fastTextView,"    public static TextView fastTextView(Context context, String text) {
        TextView textView = new TextView(context);
        textView.setText(text);

        return textView;
    }",https://www.github.com/devgianlu/aria2android/commit/beddd4258453b48c709e96640e06865bddb354b0,"    public static TextView fastTextView(Context context, String text) {
        TextView textView = new TextView(context);
        textView.setText(text);

        return textView;
    }
","['    ', 'public', ' ', 'static', ' ', 'TextView', ' ', 'fastTextView', '(', 'Context', ' ', 'context', ',', ' ', 'String', ' ', 'text', ')', ' ', '{', '\n', '        ', 'TextView', ' ', 'textView', ' ', '=', ' ', 'new', ' ', 'TextView', '(', 'context', ')', ';', '\n', '        ', 'textView', '.', 'setText', '(', 'text', ')', ';', '\n', '\n', '        ', 'return', ' ', 'textView', ';', '\n', '    ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LoglineAdapter.java,onClick,"            public void onClick(View view) {
                ((ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE)).setPrimaryClip(ClipData.newPlainText(""error log"", item.getMessage()));
                Utils.UIToast(context, Utils.TOAST_MESSAGES.COPIED_TO_CLIPBOARD);
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public void onClick(View view) {
                ((ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE)).setPrimaryClip(ClipData.newPlainText(""error log"", item.getMessage()));
                Utils.UIToast(context, Utils.TOAST_MESSAGES.COPIED_TO_CLIPBOARD);
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', '(', '(', 'ClipboardManager', ')', ' ', 'context', '.', 'getSystemService', '(', 'Context', '.', 'CLIPBOARD_SERVICE', ')', ')', '.', 'setPrimaryClip', '(', 'ClipData', '.', 'newPlainText', '(', '""', 'error log', '""', ',', ' ', 'item', '.', 'getMessage', '(', ')', ')', ')', ';', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'context', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'COPIED_TO_CLIPBOARD', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LogsActivity.java,onItemClick,"            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText(""stack trace"", ((LoglineItem) adapterView.getItemAtPosition(i)).getMessage());
                clipboard.setPrimaryClip(clip);

                Utils.UIToast(LogsActivity.this, getString(R.string.copiedClipboard), Toast.LENGTH_SHORT);
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText(""stack trace"", ((LoglineItem) adapterView.getItemAtPosition(i)).getMessage());
                clipboard.setPrimaryClip(clip);

                Utils.UIToast(LogsActivity.this, getString(R.string.copiedClipboard), Toast.LENGTH_SHORT);
            }
","['            ', 'public', ' ', 'void', ' ', 'onItemClick', '(', 'AdapterView', '<', '?', '>', ' ', 'adapterView', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'i', ',', ' ', 'long', ' ', 'l', ')', ' ', '{', '\n', '                ', 'ClipboardManager', ' ', 'clipboard', ' ', '=', ' ', '(', 'ClipboardManager', ')', ' ', 'getSystemService', '(', 'Context', '.', 'CLIPBOARD_SERVICE', ')', ';', '\n', '                ', 'ClipData', ' ', 'clip', ' ', '=', ' ', 'ClipData', '.', 'newPlainText', '(', '""', 'stack trace', '""', ',', ' ', '(', '(', 'LoglineItem', ')', ' ', 'adapterView', '.', 'getItemAtPosition', '(', 'i', ')', ')', '.', 'getMessage', '(', ')', ')', ';', '\n', '                ', 'clipboard', '.', 'setPrimaryClip', '(', 'clip', ')', ';', '\n', '\n', '                ', 'Utils', '.', 'UIToast', '(', 'LogsActivity', '.', 'this', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'copiedClipboard', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LogsActivity.java,accept,"            public boolean accept(File file, String s) {
                return s.toLowerCase().endsWith("".log"");
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public boolean accept(File file, String s) {
                return s.toLowerCase().endsWith("".log"");
            }
","['            ', 'public', ' ', 'boolean', ' ', 'accept', '(', 'File', ' ', 'file', ',', ' ', 'String', ' ', 's', ')', ' ', '{', '\n', '                ', 'return', ' ', 's', '.', 'toLowerCase', '(', ')', '.', 'endsWith', '(', '""', '.log', '""', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LogsActivity.java,onItemSelected,"            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                List<LoglineItem> logLines = new ArrayList<>();
                try {
                    FileInputStream in = openFileInput(adapterView.getItemAtPosition(i).toString());
                    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (line.startsWith(""--ERROR--"")) {
                            logLines.add(new LoglineItem(TYPE.ERROR, line.replace(""--ERROR--"", """")));
                        } else if (line.startsWith(""--INFO--"")) {
                            logLines.add(new LoglineItem(TYPE.INFO, line.replace(""--INFO--"", """")));
                        }
                    }
                } catch (IOException ex) {
                    Utils.UIToast(LogsActivity.this, Utils.TOAST_MESSAGES.FATAL_EXCEPTION, ex);
                    onBackPressed();
                }

                log.setAdapter(new LoglineAdapter(logLines));
                log.setSelection(log.getCount() - 1);
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                List<LoglineItem> logLines = new ArrayList<>();
                try {
                    FileInputStream in = openFileInput(adapterView.getItemAtPosition(i).toString());
                    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (line.startsWith(""--ERROR--"")) {
                            logLines.add(new LoglineItem(TYPE.ERROR, line.replace(""--ERROR--"", """")));
                        } else if (line.startsWith(""--INFO--"")) {
                            logLines.add(new LoglineItem(TYPE.INFO, line.replace(""--INFO--"", """")));
                        }
                    }
                } catch (IOException ex) {
                    Utils.UIToast(LogsActivity.this, Utils.TOAST_MESSAGES.FATAL_EXCEPTION, ex);
                    onBackPressed();
                }

                log.setAdapter(new LoglineAdapter(logLines));
                log.setSelection(log.getCount() - 1);
            }
","['            ', 'public', ' ', 'void', ' ', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', ' ', 'adapterView', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'i', ',', ' ', 'long', ' ', 'l', ')', ' ', '{', '\n', '                ', 'List', '<', 'LoglineItem', '>', ' ', 'logLines', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', ')', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'FileInputStream', ' ', 'in', ' ', '=', ' ', 'openFileInput', '(', 'adapterView', '.', 'getItemAtPosition', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '\n', '                    ', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ';', '\n', '                    ', 'String', ' ', 'line', ';', '\n', '                    ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                        ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '--ERROR--', '""', ')', ')', ' ', '{', '\n', '                            ', 'logLines', '.', 'add', '(', 'new', ' ', 'LoglineItem', '(', 'TYPE', '.', 'ERROR', ',', ' ', 'line', '.', 'replace', '(', '""', '--ERROR--', '""', ',', ' ', '""', '""', ')', ')', ')', ';', '\n', '                        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '--INFO--', '""', ')', ')', ' ', '{', '\n', '                            ', 'logLines', '.', 'add', '(', 'new', ' ', 'LoglineItem', '(', 'TYPE', '.', 'INFO', ',', ' ', 'line', '.', 'replace', '(', '""', '--INFO--', '""', ',', ' ', '""', '""', ')', ')', ')', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'Utils', '.', 'UIToast', '(', 'LogsActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FATAL_EXCEPTION', ',', ' ', 'ex', ')', ';', '\n', '                    ', 'onBackPressed', '(', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'log', '.', 'setAdapter', '(', 'new', ' ', 'LoglineAdapter', '(', 'logLines', ')', ')', ';', '\n', '                ', 'log', '.', 'setSelection', '(', 'log', '.', 'getCount', '(', ')', ' ', '-', ' ', '1', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LogsActivity.java,onNothingSelected,"            public void onNothingSelected(AdapterView<?> adapterView) {
                finishActivity(0);
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public void onNothingSelected(AdapterView<?> adapterView) {
                finishActivity(0);
            }
","['            ', 'public', ' ', 'void', ' ', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', ' ', 'adapterView', ')', ' ', '{', '\n', '                ', 'finishActivity', '(', '0', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LogsActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.logs, menu);
        return super.onCreateOptionsMenu(menu);
    }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.logs, menu);
        return super.onCreateOptionsMenu(menu);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'MenuInflater', ' ', 'inflater', ' ', '=', ' ', 'getMenuInflater', '(', ')', ';', '\n', '        ', 'inflater', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'logs', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'super', '.', 'onCreateOptionsMenu', '(', 'menu', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,LogsActivity.java,accept,"                    public boolean accept(File file, String s) {
                        return s.toLowerCase().endsWith("".log"");
                    }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"                    public boolean accept(File file, String s) {
                        return s.toLowerCase().endsWith("".log"");
                    }
","['                    ', 'public', ' ', 'boolean', ' ', 'accept', '(', 'File', ' ', 'file', ',', ' ', 'String', ' ', 's', ')', ' ', '{', '\n', '                        ', 'return', ' ', 's', '.', 'toLowerCase', '(', ')', '.', 'endsWith', '(', '""', '.log', '""', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,MainActivity.java,onClick,"                            public void onClick(DialogInterface dialogInterface, int i) {
                                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
                            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"                            public void onClick(DialogInterface dialogInterface, int i) {
                                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
                            }
","['                            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                ', 'ActivityCompat', '.', 'requestPermissions', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', '}', ',', ' ', '1', ')', ';', '\n', '                            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,PreferencesActivity.java,onPreferenceClick,"            public boolean onPreferenceClick(Preference preference) {
                Intent i = new Intent(Intent.ACTION_SEND);
                i.setType(""message/rfc822"");
                i.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.email)});
                i.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                i.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                        ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                        ""\nDevice: "" + android.os.Build.DEVICE +
                        ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"");
                try {
                    startActivity(Intent.createChooser(i, ""Send mail to the developer...""));
                } catch (android.content.ActivityNotFoundException ex) {
                    Utils.UIToast(PreferencesActivity.this, Utils.TOAST_MESSAGES.NO_EMAIL_CLIENT);
                }
                return true;
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public boolean onPreferenceClick(Preference preference) {
                Intent i = new Intent(Intent.ACTION_SEND);
                i.setType(""message/rfc822"");
                i.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.email)});
                i.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                i.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                        ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                        ""\nDevice: "" + android.os.Build.DEVICE +
                        ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"");
                try {
                    startActivity(Intent.createChooser(i, ""Send mail to the developer...""));
                } catch (android.content.ActivityNotFoundException ex) {
                    Utils.UIToast(PreferencesActivity.this, Utils.TOAST_MESSAGES.NO_EMAIL_CLIENT);
                }
                return true;
            }
","['            ', 'public', ' ', 'boolean', ' ', 'onPreferenceClick', '(', 'Preference', ' ', 'preference', ')', ' ', '{', '\n', '                ', 'Intent', ' ', 'i', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_SEND', ')', ';', '\n', '                ', 'i', '.', 'setType', '(', '""', 'message/rfc822', '""', ')', ';', '\n', '                ', 'i', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_EMAIL', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'getString', '(', 'R', '.', 'string', '.', 'email', ')', '}', ')', ';', '\n', '                ', 'i', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_SUBJECT', ',', ' ', '""', 'Aria2App', '""', ')', ';', '\n', '                ', 'i', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', ' ', '""', 'OS Version: ', '""', ' ', '+', ' ', 'System', '.', 'getProperty', '(', '""', 'os.version', '""', ')', ' ', '+', ' ', '""', '(', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'INCREMENTAL', ' ', '+', ' ', '""', ')', '""', ' ', '+', '\n', '                        ', '""', '\\', 'nOS API Level: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '+', '\n', '                        ', '""', '\\', 'nDevice: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'DEVICE', ' ', '+', '\n', '                        ', '""', '\\', 'nModel (and Product): ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'MODEL', ' ', '+', ' ', '""', ' (', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'PRODUCT', ' ', '+', ' ', '""', ')', '""', ')', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'startActivity', '(', 'Intent', '.', 'createChooser', '(', 'i', ',', ' ', '""', 'Send mail to the developer...', '""', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'android', '.', 'content', '.', 'ActivityNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'Utils', '.', 'UIToast', '(', 'PreferencesActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'NO_EMAIL_CLIENT', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,PreferencesActivity.java,onPreferenceClick,"            public boolean onPreferenceClick(Preference preference) {
                startActivity(new Intent(PreferencesActivity.this, LogsActivity.class));
                return true;
            }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"            public boolean onPreferenceClick(Preference preference) {
                startActivity(new Intent(PreferencesActivity.this, LogsActivity.class));
                return true;
            }
","['            ', 'public', ' ', 'boolean', ' ', 'onPreferenceClick', '(', 'Preference', ' ', 'preference', ')', ' ', '{', '\n', '                ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'PreferencesActivity', '.', 'this', ',', ' ', 'LogsActivity', '.', 'class', ')', ')', ';', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '<END>']"
master,5d5ea3a426bf26fe841aee0483866a7b1401c1a3,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        String binPath = getFilesDir().getPath() + ""/bin"";

        String command = binPath
                + ""/aria2c --daemon --check-certificate=false""
                + (config.useConfig() ? "" --conf-path="" + binPath + ""/aria2.conf"" : "" --no-conf=true"")
                + (config.isSavingSession() ? "" --save-session="" + binPath + ""/session --save-session-interval=10"" : "" "")
                + "" --input-file="" + binPath + ""/session""
                + "" --dir="" + config.getOutputDirectory()
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                + "" --rpc-secret="" + config.getRpcToken()
                + Utils.optionProcessor(config.getOptions());

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }",https://www.github.com/devgianlu/aria2android/commit/5d5ea3a426bf26fe841aee0483866a7b1401c1a3,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        String binPath = getFilesDir().getPath() + ""/bin"";

        String command = binPath
                + ""/aria2c --daemon --check-certificate=false""
                + (config.useConfig() ? "" --conf-path="" + binPath + ""/aria2.conf"" : "" --no-conf=true"")
                + (config.isSavingSession() ? "" --save-session="" + binPath + ""/session --save-session-interval=10"" : "" "")
                + "" --input-file="" + binPath + ""/session""
                + "" --dir="" + config.getOutputDirectory()
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                + "" --rpc-secret="" + config.getRpcToken()
                + Utils.optionProcessor(config.getOptions());

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', 'intent', '.', 'getParcelableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin', '""', ';', '\n', '\n', '        ', 'String', ' ', 'command', ' ', '=', ' ', 'binPath', '\n', '                ', '+', ' ', '""', '/aria2c --daemon --check-certificate=false', '""', '\n', '                ', '+', ' ', '(', 'config', '.', 'useConfig', '(', ')', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'binPath', ' ', '+', ' ', '""', '/aria2.conf', '""', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                ', '+', ' ', '(', 'config', '.', 'isSavingSession', '(', ')', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'binPath', ' ', '+', ' ', '""', '/session --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'binPath', ' ', '+', ' ', '""', '/session', '""', '\n', '                ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'getOutputDirectory', '(', ')', '\n', '                ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'getRpcPort', '(', ')', '\n', '                ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'getRpcToken', '(', ')', '\n', '                ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'getOptions', '(', ')', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'command', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ',', ' ', 'true', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8605fafa69cac2d050b9f06735cb47a4a9f9274e,LoglineAdapter.java,addLine,"    public void addLine(LoglineItem line) {
        Utils.LogMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/8605fafa69cac2d050b9f06735cb47a4a9f9274e,"    public void addLine(LoglineItem line) {
        Utils.LogMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'void', ' ', 'addLine', '(', 'LoglineItem', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Utils', '.', 'LogMe', '(', 'context', ',', ' ', 'line', '.', 'getMessage', '(', ')', ',', ' ', 'line', '.', 'getType', '(', ')', ' ', '=', '=', ' ', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ')', ';', '\n', '        ', 'objs', '.', 'add', '(', 'line', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,Analytics.java,isTrackingAllowed,"    public static boolean isTrackingAllowed(Context context) {
        return !PreferenceManager.getDefaultSharedPreferences(context).getBoolean(""a2_trackingDisable"", false) && !BuildConfig.DEBUG;
    }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"    public static boolean isTrackingAllowed(Context context) {
        return !PreferenceManager.getDefaultSharedPreferences(context).getBoolean(""a2_trackingDisable"", false) && !BuildConfig.DEBUG;
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'isTrackingAllowed', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'return', ' ', '!', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'context', ')', '.', 'getBoolean', '(', '""', 'a2_trackingDisable', '""', ',', ' ', 'false', ')', ' ', '&', '&', ' ', '!', 'BuildConfig', '.', 'DEBUG', ';', '\n', '    ', '}', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,UncaughtExceptionHandler.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        Intent intent = new Intent(Intent.ACTION_SEND);
                        intent.setType(""message/rfc822"");
                        intent.putExtra(Intent.EXTRA_EMAIL, new String[]{context.getString(R.string.email)});
                        intent.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                        intent.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                                ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                                ""\nDevice: "" + android.os.Build.DEVICE +
                                ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"" +
                                ""\n\nException"" + throwable.toString() +
                                ""\nStacktrace: "" + Arrays.toString(throwable.getStackTrace()));
                        try {
                            context.startActivity(Intent.createChooser(intent, ""Send mail to the developer...""));
                            Utils.UIToast(context, ""Thank you! :)"");
                        } catch (android.content.ActivityNotFoundException ex) {
                            Utils.UIToast(context, Utils.TOAST_MESSAGES.NO_EMAIL_CLIENT);
                        }

                        System.exit(1);
                    }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        Intent intent = new Intent(Intent.ACTION_SEND);
                        intent.setType(""message/rfc822"");
                        intent.putExtra(Intent.EXTRA_EMAIL, new String[]{context.getString(R.string.email)});
                        intent.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                        intent.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                                ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                                ""\nDevice: "" + android.os.Build.DEVICE +
                                ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"" +
                                ""\n\nException"" + throwable.toString() +
                                ""\nStacktrace: "" + Arrays.toString(throwable.getStackTrace()));
                        try {
                            context.startActivity(Intent.createChooser(intent, ""Send mail to the developer...""));
                            Utils.UIToast(context, ""Thank you! :)"");
                        } catch (android.content.ActivityNotFoundException ex) {
                            Utils.UIToast(context, Utils.TOAST_MESSAGES.NO_EMAIL_CLIENT);
                        }

                        System.exit(1);
                    }
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_SEND', ')', ';', '\n', '                        ', 'intent', '.', 'setType', '(', '""', 'message/rfc822', '""', ')', ';', '\n', '                        ', 'intent', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_EMAIL', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'email', ')', '}', ')', ';', '\n', '                        ', 'intent', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_SUBJECT', ',', ' ', '""', 'Aria2App', '""', ')', ';', '\n', '                        ', 'intent', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', ' ', '""', 'OS Version: ', '""', ' ', '+', ' ', 'System', '.', 'getProperty', '(', '""', 'os.version', '""', ')', ' ', '+', ' ', '""', '(', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'INCREMENTAL', ' ', '+', ' ', '""', ')', '""', ' ', '+', '\n', '                                ', '""', '\\', 'nOS API Level: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '+', '\n', '                                ', '""', '\\', 'nDevice: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'DEVICE', ' ', '+', '\n', '                                ', '""', '\\', 'nModel (and Product): ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'MODEL', ' ', '+', ' ', '""', ' (', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'PRODUCT', ' ', '+', ' ', '""', ')', '""', ' ', '+', '\n', '                                ', '""', '\\', 'n', '\\', 'nException', '""', ' ', '+', ' ', 'throwable', '.', 'toString', '(', ')', ' ', '+', '\n', '                                ', '""', '\\', 'nStacktrace: ', '""', ' ', '+', ' ', 'Arrays', '.', 'toString', '(', 'throwable', '.', 'getStackTrace', '(', ')', ')', ')', ';', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'context', '.', 'startActivity', '(', 'Intent', '.', 'createChooser', '(', 'intent', ',', ' ', '""', 'Send mail to the developer...', '""', ')', ')', ';', '\n', '                            ', 'Utils', '.', 'UIToast', '(', 'context', ',', ' ', '""', 'Thank you! :)', '""', ')', ';', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'android', '.', 'content', '.', 'ActivityNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'Utils', '.', 'UIToast', '(', 'context', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'NO_EMAIL_CLIENT', ')', ';', '\n', '                        ', '}', '\n', '\n', '                        ', 'System', '.', 'exit', '(', '1', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,UncaughtExceptionHandler.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        System.exit(1);
                    }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        System.exit(1);
                    }
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'System', '.', 'exit', '(', '1', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionDuration"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .setValue(preferences.getLong(""currentSessionDuration"", -1))
                                .build());
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionDuration"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            Utils.UIToast(MainActivity.this, Utils.TOAST_MESSAGES.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .setValue(preferences.getLong(""currentSessionDuration"", -1))
                                .build());
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionDuration', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'Utils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'TOAST_MESSAGES', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'setValue', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionDuration', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,Utils.java,showDialog,"    public static void showDialog(Activity activity, final Dialog dialog) {
        if (activity == null || activity.isFinishing()) return;

        activity.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"    public static void showDialog(Activity activity, final Dialog dialog) {
        if (activity == null || activity.isFinishing()) return;

        activity.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'showDialog', '(', 'Activity', ' ', 'activity', ',', ' ', 'final', ' ', 'Dialog', ' ', 'dialog', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'activity', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'activity', '.', 'isFinishing', '(', ')', ')', ' ', 'return', ';', '\n', '\n', '        ', 'activity', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,Utils.java,run,"            public void run() {
                dialog.show();
            }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"            public void run() {
                dialog.show();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'dialog', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,Utils.java,showDialog,"    public static void showDialog(Activity activity, final AlertDialog.Builder builder) {
        if (activity == null || activity.isFinishing()) return;

        activity.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"    public static void showDialog(Activity activity, final AlertDialog.Builder builder) {
        if (activity == null || activity.isFinishing()) return;

        activity.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'showDialog', '(', 'Activity', ' ', 'activity', ',', ' ', 'final', ' ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'activity', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'activity', '.', 'isFinishing', '(', ')', ')', ' ', 'return', ';', '\n', '\n', '        ', 'activity', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,Utils.java,run,"            public void run() {
                builder.create().show();
            }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"            public void run() {
                builder.create().show();
            }
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'builder', '.', 'create', '(', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,101de1686f334e85ca7343cce84c4ae961a0036a,Utils.java,UIToast,"    public static void UIToast(Activity context, String text) {
        UIToast(context, text, Toast.LENGTH_SHORT);
    }",https://www.github.com/devgianlu/aria2android/commit/101de1686f334e85ca7343cce84c4ae961a0036a,"    public static void UIToast(Activity context, String text) {
        UIToast(context, text, Toast.LENGTH_SHORT);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'Activity', ' ', 'context', ',', ' ', 'String', ' ', 'text', ')', ' ', '{', '\n', '        ', 'UIToast', '(', 'context', ',', ' ', 'text', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,LoglineAdapter.java,addLine,"    public void addLine(LoglineItem line) {
        CommonUtils.logMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,"    public void addLine(LoglineItem line) {
        CommonUtils.logMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'void', ' ', 'addLine', '(', 'LoglineItem', ' ', 'line', ')', ' ', '{', '\n', '        ', 'CommonUtils', '.', 'logMe', '(', 'context', ',', ' ', 'line', '.', 'getMessage', '(', ')', ',', ' ', 'line', '.', 'getType', '(', ')', ' ', '=', '=', ' ', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ')', ';', '\n', '        ', 'objs', '.', 'add', '(', 'line', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString() + (message.isError() ? "" See logs for more..."" : """"), Toast.LENGTH_SHORT).show();
            }
        });
        CommonUtils.logMe(context, message.toString(), message.isError());
    }",https://www.github.com/devgianlu/aria2android/commit/f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString() + (message.isError() ? "" See logs for more..."" : """"), Toast.LENGTH_SHORT).show();
            }
        });
        CommonUtils.logMe(context, message.toString(), message.isError());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ' ', '+', ' ', '(', 'message', '.', 'isError', '(', ')', ' ', '?', ' ', '""', ' See logs for more...', '""', ' ', ':', ' ', '""', '""', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '        ', 'CommonUtils', '.', 'logMe', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final String message_extras) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        CommonUtils.logMe(context, message + "" Details: "" + message_extras, message.isError());
    }",https://www.github.com/devgianlu/aria2android/commit/f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final String message_extras) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        CommonUtils.logMe(context, message + "" Details: "" + message_extras, message.isError());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'final', ' ', 'String', ' ', 'message_extras', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'CommonUtils', '.', 'logMe', '(', 'context', ',', ' ', 'message', ' ', '+', ' ', '""', ' Details: ', '""', ' ', '+', ' ', 'message_extras', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,Utils.java,UIToast,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final Throwable exception) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        CommonUtils.logMe(context, message + "" Details: "" + exception.getMessage(), message.isError());
        CommonUtils.secretLog(context, exception);
    }",https://www.github.com/devgianlu/aria2android/commit/f4ac1dca5e8be06db7e1535f377ae2b1c7a3dc21,"    public static void UIToast(final Activity context, final TOAST_MESSAGES message, final Throwable exception) {
        context.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(context, message.toString(), Toast.LENGTH_SHORT).show();
            }
        });

        CommonUtils.logMe(context, message + "" Details: "" + exception.getMessage(), message.isError());
        CommonUtils.secretLog(context, exception);
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'UIToast', '(', 'final', ' ', 'Activity', ' ', 'context', ',', ' ', 'final', ' ', 'TOAST_MESSAGES', ' ', 'message', ',', ' ', 'final', ' ', 'Throwable', ' ', 'exception', ')', ' ', '{', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'Toast', '.', 'makeText', '(', 'context', ',', ' ', 'message', '.', 'toString', '(', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'CommonUtils', '.', 'logMe', '(', 'context', ',', ' ', 'message', ' ', '+', ' ', '""', ' Details: ', '""', ' ', '+', ' ', 'exception', '.', 'getMessage', '(', ')', ',', ' ', 'message', '.', 'isError', '(', ')', ')', ';', '\n', '        ', 'CommonUtils', '.', 'secretLog', '(', 'context', ',', ' ', 'exception', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,UncaughtExceptionHandler.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        Intent intent = new Intent(Intent.ACTION_SEND);
                        intent.setType(""message/rfc822"");
                        intent.putExtra(Intent.EXTRA_EMAIL, new String[]{context.getString(R.string.email)});
                        intent.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                        intent.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                                ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                                ""\nDevice: "" + android.os.Build.DEVICE +
                                ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"" +
                                ""\n\nException"" + throwable.toString() +
                                ""\nStacktrace: "" + Arrays.toString(throwable.getStackTrace()));
                        try {
                            context.startActivity(Intent.createChooser(intent, ""Send mail to the developer...""));
                            CommonUtils.UIToast(context, ""Thank you! :)"");
                        } catch (android.content.ActivityNotFoundException ex) {
                            CommonUtils.UIToast(context, Utils.ToastMessages.NO_EMAIL_CLIENT);
                        }

                        System.exit(1);
                    }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        Intent intent = new Intent(Intent.ACTION_SEND);
                        intent.setType(""message/rfc822"");
                        intent.putExtra(Intent.EXTRA_EMAIL, new String[]{context.getString(R.string.email)});
                        intent.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                        intent.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                                ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                                ""\nDevice: "" + android.os.Build.DEVICE +
                                ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"" +
                                ""\n\nException"" + throwable.toString() +
                                ""\nStacktrace: "" + Arrays.toString(throwable.getStackTrace()));
                        try {
                            context.startActivity(Intent.createChooser(intent, ""Send mail to the developer...""));
                            CommonUtils.UIToast(context, ""Thank you! :)"");
                        } catch (android.content.ActivityNotFoundException ex) {
                            CommonUtils.UIToast(context, Utils.ToastMessages.NO_EMAIL_CLIENT);
                        }

                        System.exit(1);
                    }
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_SEND', ')', ';', '\n', '                        ', 'intent', '.', 'setType', '(', '""', 'message/rfc822', '""', ')', ';', '\n', '                        ', 'intent', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_EMAIL', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'email', ')', '}', ')', ';', '\n', '                        ', 'intent', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_SUBJECT', ',', ' ', '""', 'Aria2App', '""', ')', ';', '\n', '                        ', 'intent', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', ' ', '""', 'OS Version: ', '""', ' ', '+', ' ', 'System', '.', 'getProperty', '(', '""', 'os.version', '""', ')', ' ', '+', ' ', '""', '(', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'INCREMENTAL', ' ', '+', ' ', '""', ')', '""', ' ', '+', '\n', '                                ', '""', '\\', 'nOS API Level: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '+', '\n', '                                ', '""', '\\', 'nDevice: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'DEVICE', ' ', '+', '\n', '                                ', '""', '\\', 'nModel (and Product): ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'MODEL', ' ', '+', ' ', '""', ' (', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'PRODUCT', ' ', '+', ' ', '""', ')', '""', ' ', '+', '\n', '                                ', '""', '\\', 'n', '\\', 'nException', '""', ' ', '+', ' ', 'throwable', '.', 'toString', '(', ')', ' ', '+', '\n', '                                ', '""', '\\', 'nStacktrace: ', '""', ' ', '+', ' ', 'Arrays', '.', 'toString', '(', 'throwable', '.', 'getStackTrace', '(', ')', ')', ')', ';', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'context', '.', 'startActivity', '(', 'Intent', '.', 'createChooser', '(', 'intent', ',', ' ', '""', 'Send mail to the developer...', '""', ')', ')', ';', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'context', ',', ' ', '""', 'Thank you! :)', '""', ')', ';', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'android', '.', 'content', '.', 'ActivityNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'context', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'NO_EMAIL_CLIENT', ')', ';', '\n', '                        ', '}', '\n', '\n', '                        ', 'System', '.', 'exit', '(', '1', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,LoglineAdapter.java,onClick,"            public void onClick(View view) {
                ((ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE)).setPrimaryClip(ClipData.newPlainText(""error log"", item.getMessage()));
                CommonUtils.UIToast(context, Utils.ToastMessages.COPIED_TO_CLIPBOARD);
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onClick(View view) {
                ((ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE)).setPrimaryClip(ClipData.newPlainText(""error log"", item.getMessage()));
                CommonUtils.UIToast(context, Utils.ToastMessages.COPIED_TO_CLIPBOARD);
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', '(', '(', 'ClipboardManager', ')', ' ', 'context', '.', 'getSystemService', '(', 'Context', '.', 'CLIPBOARD_SERVICE', ')', ')', '.', 'setPrimaryClip', '(', 'ClipData', '.', 'newPlainText', '(', '""', 'error log', '""', ',', ' ', 'item', '.', 'getMessage', '(', ')', ')', ')', ';', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'context', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'COPIED_TO_CLIPBOARD', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,LogsActivity.java,onItemClick,"            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText(""stack trace"", ((LoglineItem) adapterView.getItemAtPosition(i)).getMessage());
                clipboard.setPrimaryClip(clip);

                CommonUtils.UIToast(LogsActivity.this, getString(R.string.copiedClipboard), Toast.LENGTH_SHORT);
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText(""stack trace"", ((LoglineItem) adapterView.getItemAtPosition(i)).getMessage());
                clipboard.setPrimaryClip(clip);

                CommonUtils.UIToast(LogsActivity.this, getString(R.string.copiedClipboard), Toast.LENGTH_SHORT);
            }
","['            ', 'public', ' ', 'void', ' ', 'onItemClick', '(', 'AdapterView', '<', '?', '>', ' ', 'adapterView', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'i', ',', ' ', 'long', ' ', 'l', ')', ' ', '{', '\n', '                ', 'ClipboardManager', ' ', 'clipboard', ' ', '=', ' ', '(', 'ClipboardManager', ')', ' ', 'getSystemService', '(', 'Context', '.', 'CLIPBOARD_SERVICE', ')', ';', '\n', '                ', 'ClipData', ' ', 'clip', ' ', '=', ' ', 'ClipData', '.', 'newPlainText', '(', '""', 'stack trace', '""', ',', ' ', '(', '(', 'LoglineItem', ')', ' ', 'adapterView', '.', 'getItemAtPosition', '(', 'i', ')', ')', '.', 'getMessage', '(', ')', ')', ';', '\n', '                ', 'clipboard', '.', 'setPrimaryClip', '(', 'clip', ')', ';', '\n', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'LogsActivity', '.', 'this', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'copiedClipboard', ')', ',', ' ', 'Toast', '.', 'LENGTH_SHORT', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,LogsActivity.java,onItemSelected,"            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                List<LoglineItem> logLines = new ArrayList<>();
                try {
                    FileInputStream in = openFileInput(adapterView.getItemAtPosition(i).toString());
                    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (line.startsWith(""--ERROR--"")) {
                            logLines.add(new LoglineItem(TYPE.ERROR, line.replace(""--ERROR--"", """")));
                        } else if (line.startsWith(""--INFO--"")) {
                            logLines.add(new LoglineItem(TYPE.INFO, line.replace(""--INFO--"", """")));
                        }
                    }
                } catch (IOException ex) {
                    CommonUtils.UIToast(LogsActivity.this, Utils.ToastMessages.FATAL_EXCEPTION, ex);
                    onBackPressed();
                }

                log.setAdapter(new LoglineAdapter(logLines));
                log.setSelection(log.getCount() - 1);
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                List<LoglineItem> logLines = new ArrayList<>();
                try {
                    FileInputStream in = openFileInput(adapterView.getItemAtPosition(i).toString());
                    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (line.startsWith(""--ERROR--"")) {
                            logLines.add(new LoglineItem(TYPE.ERROR, line.replace(""--ERROR--"", """")));
                        } else if (line.startsWith(""--INFO--"")) {
                            logLines.add(new LoglineItem(TYPE.INFO, line.replace(""--INFO--"", """")));
                        }
                    }
                } catch (IOException ex) {
                    CommonUtils.UIToast(LogsActivity.this, Utils.ToastMessages.FATAL_EXCEPTION, ex);
                    onBackPressed();
                }

                log.setAdapter(new LoglineAdapter(logLines));
                log.setSelection(log.getCount() - 1);
            }
","['            ', 'public', ' ', 'void', ' ', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', ' ', 'adapterView', ',', ' ', 'View', ' ', 'view', ',', ' ', 'int', ' ', 'i', ',', ' ', 'long', ' ', 'l', ')', ' ', '{', '\n', '                ', 'List', '<', 'LoglineItem', '>', ' ', 'logLines', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', ')', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'FileInputStream', ' ', 'in', ' ', '=', ' ', 'openFileInput', '(', 'adapterView', '.', 'getItemAtPosition', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '\n', '                    ', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ';', '\n', '                    ', 'String', ' ', 'line', ';', '\n', '                    ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                        ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '--ERROR--', '""', ')', ')', ' ', '{', '\n', '                            ', 'logLines', '.', 'add', '(', 'new', ' ', 'LoglineItem', '(', 'TYPE', '.', 'ERROR', ',', ' ', 'line', '.', 'replace', '(', '""', '--ERROR--', '""', ',', ' ', '""', '""', ')', ')', ')', ';', '\n', '                        ', '}', ' ', 'else', ' ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '--INFO--', '""', ')', ')', ' ', '{', '\n', '                            ', 'logLines', '.', 'add', '(', 'new', ' ', 'LoglineItem', '(', 'TYPE', '.', 'INFO', ',', ' ', 'line', '.', 'replace', '(', '""', '--INFO--', '""', ',', ' ', '""', '""', ')', ')', ')', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'CommonUtils', '.', 'UIToast', '(', 'LogsActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FATAL_EXCEPTION', ',', ' ', 'ex', ')', ';', '\n', '                    ', 'onBackPressed', '(', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'log', '.', 'setAdapter', '(', 'new', ' ', 'LoglineAdapter', '(', 'logLines', ')', ')', ';', '\n', '                ', 'log', '.', 'setSelection', '(', 'log', '.', 'getCount', '(', ')', ' ', '-', ' ', '1', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,MainActivity.java,onException,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, ""Server exception! "" + ex.getMessage());
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, ""Server exception! "" + ex.getMessage());
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ',', ' ', 'boolean', ' ', 'fatal', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'UNEXPECTED_EXCEPTION', ',', ' ', 'ex', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ',', ' ', '""', 'Server exception! ', '""', ' ', '+', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionDuration"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .setValue(preferences.getLong(""currentSessionDuration"", -1))
                                .build());
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionDuration"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir().getPath() + ""/bin/session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .setValue(preferences.getLong(""currentSessionDuration"", -1))
                                .build());
                }


                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionDuration', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', '.', 'getPath', '(', ')', ' ', '+', ' ', '""', '/bin/session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'setValue', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionDuration', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,MainActivity.java,onException,"                                public void onException(Exception exception) {
                                    CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, exception);
                                }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"                                public void onException(Exception exception) {
                                    CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, exception);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ' ', '{', '\n', '                                    ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', 'exception', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,MainActivity.java,onFailed,"                                public void onFailed(int code, String message) {
                                    CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
                                }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"                                public void onFailed(int code, String message) {
                                    CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '                                    ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', '""', '#', '""', ' ', '+', ' ', 'code', ' ', '+', ' ', '""', ': ', '""', ' ', '+', ' ', 'message', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,MainActivity.java,onException,"            public void onException(Exception exception) {
                pd.dismiss();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, exception);
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onException(Exception exception) {
                pd.dismiss();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, exception);
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ' ', '{', '\n', '                ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', 'exception', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,MainActivity.java,onFailed,"            public void onFailed(int code, String message) {
                pd.dismiss();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public void onFailed(int code, String message) {
                pd.dismiss();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_RETRIEVING_RELEASES, ""#"" + code + "": "" + message);
            }
","['            ', 'public', ' ', 'void', ' ', 'onFailed', '(', 'int', ' ', 'code', ',', ' ', 'String', ' ', 'message', ')', ' ', '{', '\n', '                ', 'pd', '.', 'dismiss', '(', ')', ';', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_RETRIEVING_RELEASES', ',', ' ', '""', '#', '""', ' ', '+', ' ', 'code', ' ', '+', ' ', '""', ': ', '""', ' ', '+', ' ', 'message', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,23812c8a01e5f7de9ba16b6b4796ec4955a7b025,PreferencesActivity.java,onPreferenceClick,"            public boolean onPreferenceClick(Preference preference) {
                Intent i = new Intent(Intent.ACTION_SEND);
                i.setType(""message/rfc822"");
                i.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.email)});
                i.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                i.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                        ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                        ""\nDevice: "" + android.os.Build.DEVICE +
                        ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"");
                try {
                    startActivity(Intent.createChooser(i, ""Send mail to the developer...""));
                } catch (android.content.ActivityNotFoundException ex) {
                    CommonUtils.UIToast(PreferencesActivity.this, Utils.ToastMessages.NO_EMAIL_CLIENT);
                }
                return true;
            }",https://www.github.com/devgianlu/aria2android/commit/23812c8a01e5f7de9ba16b6b4796ec4955a7b025,"            public boolean onPreferenceClick(Preference preference) {
                Intent i = new Intent(Intent.ACTION_SEND);
                i.setType(""message/rfc822"");
                i.putExtra(Intent.EXTRA_EMAIL, new String[]{getString(R.string.email)});
                i.putExtra(Intent.EXTRA_SUBJECT, ""Aria2App"");
                i.putExtra(Intent.EXTRA_TEXT, ""OS Version: "" + System.getProperty(""os.version"") + ""("" + android.os.Build.VERSION.INCREMENTAL + "")"" +
                        ""\nOS API Level: "" + android.os.Build.VERSION.SDK_INT +
                        ""\nDevice: "" + android.os.Build.DEVICE +
                        ""\nModel (and Product): "" + android.os.Build.MODEL + "" ("" + android.os.Build.PRODUCT + "")"");
                try {
                    startActivity(Intent.createChooser(i, ""Send mail to the developer...""));
                } catch (android.content.ActivityNotFoundException ex) {
                    CommonUtils.UIToast(PreferencesActivity.this, Utils.ToastMessages.NO_EMAIL_CLIENT);
                }
                return true;
            }
","['            ', 'public', ' ', 'boolean', ' ', 'onPreferenceClick', '(', 'Preference', ' ', 'preference', ')', ' ', '{', '\n', '                ', 'Intent', ' ', 'i', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_SEND', ')', ';', '\n', '                ', 'i', '.', 'setType', '(', '""', 'message/rfc822', '""', ')', ';', '\n', '                ', 'i', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_EMAIL', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'getString', '(', 'R', '.', 'string', '.', 'email', ')', '}', ')', ';', '\n', '                ', 'i', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_SUBJECT', ',', ' ', '""', 'Aria2App', '""', ')', ';', '\n', '                ', 'i', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', ' ', '""', 'OS Version: ', '""', ' ', '+', ' ', 'System', '.', 'getProperty', '(', '""', 'os.version', '""', ')', ' ', '+', ' ', '""', '(', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'INCREMENTAL', ' ', '+', ' ', '""', ')', '""', ' ', '+', '\n', '                        ', '""', '\\', 'nOS API Level: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '+', '\n', '                        ', '""', '\\', 'nDevice: ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'DEVICE', ' ', '+', '\n', '                        ', '""', '\\', 'nModel (and Product): ', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'MODEL', ' ', '+', ' ', '""', ' (', '""', ' ', '+', ' ', 'android', '.', 'os', '.', 'Build', '.', 'PRODUCT', ' ', '+', ' ', '""', ')', '""', ')', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'startActivity', '(', 'Intent', '.', 'createChooser', '(', 'i', ',', ' ', '""', 'Send mail to the developer...', '""', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'android', '.', 'content', '.', 'ActivityNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'CommonUtils', '.', 'UIToast', '(', 'PreferencesActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'NO_EMAIL_CLIENT', ')', ';', '\n', '                ', '}', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '<END>']"
master,5a520562c33b7b0bc1ac6e875d5d819bb13df580,LoglineAdapter.java,addLine,"    private void addLine(LoglineItem line) {
        CommonUtils.logMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/5a520562c33b7b0bc1ac6e875d5d819bb13df580,"    private void addLine(LoglineItem line) {
        CommonUtils.logMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'private', ' ', 'void', ' ', 'addLine', '(', 'LoglineItem', ' ', 'line', ')', ' ', '{', '\n', '        ', 'CommonUtils', '.', 'logMe', '(', 'context', ',', ' ', 'line', '.', 'getMessage', '(', ')', ',', ' ', 'line', '.', 'getType', '(', ')', ' ', '=', '=', ' ', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ')', ';', '\n', '        ', 'objs', '.', 'add', '(', 'line', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,5a520562c33b7b0bc1ac6e875d5d819bb13df580,aria2Service.java,killService,"    private static void killService() {
        handler.onServerStopped();
        if (process != null)
            process.destroy();",https://www.github.com/devgianlu/aria2android/commit/5a520562c33b7b0bc1ac6e875d5d819bb13df580,"    private static void killService() {
        handler.onServerStopped();
        if (process != null)
            process.destroy();
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,BinUtils.java,unzipBin,"    public static void unzipBin(byte[] in, Context context) throws IOException {
        try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new ByteArrayInputStream(in)))) {
            ZipEntry ze;",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    public static void unzipBin(byte[] in, Context context) throws IOException {
        try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new ByteArrayInputStream(in)))) {
            ZipEntry ze;
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'unzipBin', '(', 'byte', '[', ']', ' ', 'in', ',', ' ', 'Context', ' ', 'context', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'try', ' ', '(', 'ZipInputStream', ' ', 'zis', ' ', '=', ' ', 'new', ' ', 'ZipInputStream', '(', 'new', ' ', 'BufferedInputStream', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'in', ')', ')', ')', ')', ' ', '{', '\n', '            ', 'ZipEntry', ' ', 'ze', ';', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,BinUtils.java,downloadBin,"    public static void downloadBin(final URL url, final IDownload handler) {
        new Thread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    public static void downloadBin(final URL url, final IDownload handler) {
        new Thread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'downloadBin', '(', 'final', ' ', 'URL', ' ', 'url', ',', ' ', 'final', ' ', 'IDownload', ' ', 'handler', ')', ' ', '{', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,BinUtils.java,run,"            public void run() {
                try {
                    HttpURLConnection conn = (HttpURLConnection) url.openConnection();",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void run() {
                try {
                    HttpURLConnection conn = (HttpURLConnection) url.openConnection();
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'url', '.', 'openConnection', '(', ')', ';', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,BinUtils.java,binAvailable,"    public static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.exists() && !file.isDirectory();
    }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    public static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.exists() && !file.isDirectory();
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'binAvailable', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'return', ' ', 'file', '.', 'exists', '(', ')', ' ', '&', '&', ' ', '!', 'file', '.', 'isDirectory', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,BinUtils.java,delete,"    public static boolean delete(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.delete();
    }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    public static boolean delete(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.delete();
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'delete', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'return', ' ', 'file', '.', 'delete', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,BootCompletedReceiver.java,onReceive,"    public void onReceive(Context context, Intent intent) {
        if (!Objects.equals(intent.getAction(), Intent.ACTION_BOOT_COMPLETED))
            return;

        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);

        if (preferences.getBoolean(Utils.PREF_START_AT_BOOT, false))
            context.startService(new Intent(context, aria2Service.class)",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    public void onReceive(Context context, Intent intent) {
        if (!Objects.equals(intent.getAction(), Intent.ACTION_BOOT_COMPLETED))
            return;

        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);

        if (preferences.getBoolean(Utils.PREF_START_AT_BOOT, false))
            context.startService(new Intent(context, aria2Service.class)
","['    ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'Objects', '.', 'equals', '(', 'intent', '.', 'getAction', '(', ')', ',', ' ', 'Intent', '.', 'ACTION_BOOT_COMPLETED', ')', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'SharedPreferences', ' ', 'preferences', ' ', '=', ' ', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'context', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'preferences', '.', 'getBoolean', '(', 'Utils', '.', 'PREF_START_AT_BOOT', ',', ' ', 'false', ')', ')', '\n', '            ', 'context', '.', 'startService', '(', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onServerStarted,"            public void onServerStarted(InputStream in, InputStream err) {
                adapter.clear();
                streamListener = new StreamListener(adapter, in, err);
                adapter.addLine(LoglineItem.TYPE.INFO, getString(R.string.serverStarted));
                new Thread(streamListener).start();
            }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void onServerStarted(InputStream in, InputStream err) {
                adapter.clear();
                streamListener = new StreamListener(adapter, in, err);
                adapter.addLine(LoglineItem.TYPE.INFO, getString(R.string.serverStarted));
                new Thread(streamListener).start();
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStarted', '(', 'InputStream', ' ', 'in', ',', ' ', 'InputStream', ' ', 'err', ')', ' ', '{', '\n', '                ', 'adapter', '.', 'clear', '(', ')', ';', '\n', '                ', 'streamListener', ' ', '=', ' ', 'new', ' ', 'StreamListener', '(', 'adapter', ',', ' ', 'in', ',', ' ', 'err', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'serverStarted', ')', ')', ';', '\n', '                ', 'new', ' ', 'Thread', '(', 'streamListener', ')', '.', 'start', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onException,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, getString(R.string.serverException, ex.getMessage()));
            }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void onException(Exception ex, boolean fatal) {
                StreamListener.stop();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, getString(R.string.serverException, ex.getMessage()));
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ',', ' ', 'boolean', ' ', 'fatal', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'UNEXPECTED_EXCEPTION', ',', ' ', 'ex', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'serverException', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onServerStopped,"            public void onServerStopped() {
                StreamListener.stop();
                adapter.addLine(LoglineItem.TYPE.INFO, getString(R.string.serverStopped));
            }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void onServerStopped() {
                StreamListener.stop();
                adapter.addLine(LoglineItem.TYPE.INFO, getString(R.string.serverStopped));
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStopped', '(', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'serverStopped', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_START_AT_BOOT, b)",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_START_AT_BOOT, b)
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'preferences', '.', 'edit', '(', ')', '\n', '                        ', '.', 'putBoolean', '(', 'Utils', '.', 'PREF_START_AT_BOOT', ',', ' ', 'b', ')', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    false,
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'false', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', ' ', '{', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                        ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                            ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                    ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_TIMING', ')', '\n', '                                    ', '.', 'setLabel', '(', 'Analytics', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                    ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                    ', '.', 'build', '(', ')', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onStart,"            public void onStart() {
                CommonUtils.showDialog(MainActivity.this, pd);
            }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"            public void onStart() {
                CommonUtils.showDialog(MainActivity.this, pd);
            }
","['            ', 'public', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '                ', 'CommonUtils', '.', 'showDialog', '(', 'MainActivity', '.', 'this', ',', ' ', 'pd', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onStart,"                                public void onStart() {
                                    CommonUtils.showDialog(MainActivity.this, pd);
                                }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"                                public void onStart() {
                                    CommonUtils.showDialog(MainActivity.this, pd);
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '                                    ', 'CommonUtils', '.', 'showDialog', '(', 'MainActivity', '.', 'this', ',', ' ', 'pd', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onDone,"                                            public void onDone(byte[] out) {
                                                try {
                                                    BinUtils.unzipBin(out, MainActivity.this);
                                                } catch (IOException ex) {
                                                    CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_DOWNLOADING_BIN, ex);
                                                }

                                                pdd.dismiss();
                                                runOnUiThread(new Runnable() {
                                                    @Override",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"                                            public void onDone(byte[] out) {
                                                try {
                                                    BinUtils.unzipBin(out, MainActivity.this);
                                                } catch (IOException ex) {
                                                    CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_DOWNLOADING_BIN, ex);
                                                }

                                                pdd.dismiss();
                                                runOnUiThread(new Runnable() {
                                                    @Override
","['                                            ', 'public', ' ', 'void', ' ', 'onDone', '(', 'byte', '[', ']', ' ', 'out', ')', ' ', '{', '\n', '                                                ', 'try', ' ', '{', '\n', '                                                    ', 'BinUtils', '.', 'unzipBin', '(', 'out', ',', ' ', 'MainActivity', '.', 'this', ')', ';', '\n', '                                                ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                                                    ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_DOWNLOADING_BIN', ',', ' ', 'ex', ')', ';', '\n', '                                                ', '}', '\n', '\n', '                                                ', 'pdd', '.', 'dismiss', '(', ')', ';', '\n', '                                                ', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '                                                    ', '@Override', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,run,"                                                    public void run() {
                                                        recreate();
                                                    }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"                                                    public void run() {
                                                        recreate();
                                                    }
","['                                                    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                                                        ', 'recreate', '(', ')', ';', '\n', '                                                    ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onException,"                                            public void onException(Exception ex) {
                                                pdd.dismiss();
                                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_DOWNLOADING_BIN, ex);
                                            }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"                                            public void onException(Exception ex) {
                                                pdd.dismiss();
                                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_DOWNLOADING_BIN, ex);
                                            }
","['                                            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                                                ', 'pdd', '.', 'dismiss', '(', ')', ';', '\n', '                                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_DOWNLOADING_BIN', ',', ' ', 'ex', ')', ';', '\n', '                                            ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,MainActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'main', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n', '<END>']"
master,ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String confPath = new File(getFilesDir(), ""aria2c.conf"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig() ? "" --conf-path="" + confPath : "" --no-conf=true"")
                + (config.isSavingSession() ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.getOutputDirectory()
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                + "" --rpc-secret="" + config.getRpcToken()
                + Utils.optionProcessor(config.getOptions());

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }",https://www.github.com/devgianlu/aria2android/commit/ac7bc8b8201d9cbcbf2a4a7a1e4b203c393dc473,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = intent.getParcelableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String confPath = new File(getFilesDir(), ""aria2c.conf"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig() ? "" --conf-path="" + confPath : "" --no-conf=true"")
                + (config.isSavingSession() ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.getOutputDirectory()
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.getRpcPort()
                + "" --rpc-secret="" + config.getRpcToken()
                + Utils.optionProcessor(config.getOptions());

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            handler.onException(ex, true);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', 'intent', '.', 'getParcelableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'confPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c.conf', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'command', ' ', '=', ' ', 'binPath', '\n', '                ', '+', ' ', '""', ' --daemon --check-certificate=false', '""', '\n', '                ', '+', ' ', '(', 'config', '.', 'useConfig', '(', ')', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'confPath', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                ', '+', ' ', '(', 'config', '.', 'isSavingSession', '(', ')', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'sessionPath', ' ', '+', ' ', '""', ' --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'sessionPath', '\n', '                ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'getOutputDirectory', '(', ')', '\n', '                ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'getRpcPort', '(', ')', '\n', '                ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'getRpcToken', '(', ')', '\n', '                ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'getOptions', '(', ')', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'command', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ',', ' ', 'true', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,MainActivity.java,onException,"            public void onException(Exception ex) {
                StreamListener.stop();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, getString(R.string.serverException, ex.getMessage()));
            }",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"            public void onException(Exception ex) {
                StreamListener.stop();
                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.UNEXPECTED_EXCEPTION, ex);
                adapter.addLine(LoglineItem.TYPE.ERROR, getString(R.string.serverException, ex.getMessage()));
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'StreamListener', '.', 'stop', '(', ')', ';', '\n', '                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'UNEXPECTED_EXCEPTION', ',', ' ', 'ex', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'serverException', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_USE_CONFIG, b)
                        .apply();

                configFile.setEnabled(b);
            }",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_USE_CONFIG, b)
                        .apply();

                configFile.setEnabled(b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'preferences', '.', 'edit', '(', ')', '\n', '                        ', '.', 'putBoolean', '(', 'Utils', '.', 'PREF_USE_CONFIG', ',', ' ', 'b', ')', '\n', '                        ', '.', 'apply', '(', ')', ';', '\n', '\n', '                ', 'configFile', '.', 'setEnabled', '(', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,MainActivity.java,onFocusChange,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    File file = new File(configFile.getText().toString());",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    File file = new File(configFile.getText().toString());
","['            ', 'public', ' ', 'void', ' ', 'onFocusChange', '(', 'View', ' ', 'v', ',', ' ', 'boolean', ' ', 'hasFocus', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'hasFocus', ')', ' ', '{', '\n', '                    ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ';', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    // TODO: Send Control-C to aria2c
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'useConfig', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', ' ', '{', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                        ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                            ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                    ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_TIMING', ')', '\n', '                                    ', '.', 'setLabel', '(', 'Analytics', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                    ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                    ', '.', 'build', '(', ')', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,IResponse.java,onStart,"    void onStart();

    void onResponse(String response);

    void onException(Exception exception);
}",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"    void onStart();

    void onResponse(String response);

    void onException(Exception exception);
}
","['    ', 'void', ' ', 'onStart', '(', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onResponse', '(', 'String', ' ', 'response', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ';', '\n', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,IResponse.java,onResponse,"    void onResponse(String response);

    void onException(Exception exception);
}",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"    void onResponse(String response);

    void onException(Exception exception);
}
","['    ', 'void', ' ', 'onResponse', '(', 'String', ' ', 'response', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'exception', ')', ';', '\n', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,Iaria2.java,onServerStarted,"    void onServerStarted(InputStream in, InputStream err);

    void onException(Exception ex);

    void onServerStopped();
}",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"    void onServerStarted(InputStream in, InputStream err);

    void onException(Exception ex);

    void onServerStopped();
}
","['    ', 'void', ' ', 'onServerStarted', '(', 'InputStream', ' ', 'in', ',', ' ', 'InputStream', ' ', 'err', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ';', '\n', '\n', '    ', 'void', ' ', 'onServerStopped', '(', ')', ';', '\n', '}', '\n', '<END>']"
master,84a9388f17ff941cf645fb8a732fff7f7bfcb52a,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            handler.onException(ex);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }",https://www.github.com/devgianlu/aria2android/commit/84a9388f17ff941cf645fb8a732fff7f7bfcb52a,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            handler.onException(ex);
            stopSelf();
            return;
        }

        handler.onServerStarted(process.getInputStream(), process.getErrorStream());
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', '(', 'aria2StartConfig', ')', ' ', 'intent', '.', 'getSerializableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'command', ' ', '=', ' ', 'binPath', '\n', '                ', '+', ' ', '""', ' --daemon --check-certificate=false', '""', '\n', '                ', '+', ' ', '(', 'config', '.', 'useConfig', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'config', '.', 'configFile', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                ', '+', ' ', '(', 'config', '.', 'saveSession', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'sessionPath', ' ', '+', ' ', '""', ' --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'sessionPath', '\n', '                ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'outputDirectory', '\n', '                ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'rpcPort', '\n', '                ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'rpcToken', '\n', '                ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'options', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'command', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,88d9a3e9a3086ee520fcc41fe5a0397296b6ad7a,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/88d9a3e9a3086ee520fcc41fe5a0397296b6ad7a,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'useConfig', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', ' ', '{', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                        ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                            ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                    ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_TIMING', ')', '\n', '                                    ', '.', 'setLabel', '(', 'Analytics', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                    ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                    ', '.', 'build', '(', ')', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,88d9a3e9a3086ee520fcc41fe5a0397296b6ad7a,aria2Service.java,killService,"    private static void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        handler.onServerStopped();
    }",https://www.github.com/devgianlu/aria2android/commit/88d9a3e9a3086ee520fcc41fe5a0397296b6ad7a,"    private static void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        handler.onServerStopped();
    }
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '\n', '        ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,BinUtils.java,unzipBin,"    static void unzipBin(byte[] in, Context context) throws IOException {
        try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new ByteArrayInputStream(in)))) {
            ZipEntry ze;",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    static void unzipBin(byte[] in, Context context) throws IOException {
        try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new ByteArrayInputStream(in)))) {
            ZipEntry ze;
","['    ', 'static', ' ', 'void', ' ', 'unzipBin', '(', 'byte', '[', ']', ' ', 'in', ',', ' ', 'Context', ' ', 'context', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'try', ' ', '(', 'ZipInputStream', ' ', 'zis', ' ', '=', ' ', 'new', ' ', 'ZipInputStream', '(', 'new', ' ', 'BufferedInputStream', '(', 'new', ' ', 'ByteArrayInputStream', '(', 'in', ')', ')', ')', ')', ' ', '{', '\n', '            ', 'ZipEntry', ' ', 'ze', ';', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,BinUtils.java,downloadBin,"    static void downloadBin(final URL url, final IDownload handler) {
        new Thread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    static void downloadBin(final URL url, final IDownload handler) {
        new Thread(new Runnable() {
            @Override
","['    ', 'static', ' ', 'void', ' ', 'downloadBin', '(', 'final', ' ', 'URL', ' ', 'url', ',', ' ', 'final', ' ', 'IDownload', ' ', 'handler', ')', ' ', '{', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,BinUtils.java,binAvailable,"    static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.exists() && !file.isDirectory();
    }",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.exists() && !file.isDirectory();
    }
","['    ', 'static', ' ', 'boolean', ' ', 'binAvailable', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'return', ' ', 'file', '.', 'exists', '(', ')', ' ', '&', '&', ' ', '!', 'file', '.', 'isDirectory', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,BinUtils.java,delete,"    static boolean delete(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.delete();
    }",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    static boolean delete(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.delete();
    }
","['    ', 'static', ' ', 'boolean', ' ', 'delete', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'return', ' ', 'file', '.', 'delete', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,BinUtils.java,binVersion,"    static String binVersion(Context context) {
        try {
            return new BufferedReader(",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    static String binVersion(Context context) {
        try {
            return new BufferedReader(
","['    ', 'static', ' ', 'String', ' ', 'binVersion', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'BufferedReader', '(', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,BinUtils.java,onDone,"        void onDone(byte[] out);

        void onException(Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"        void onDone(byte[] out);

        void onException(Exception ex);
    }
}
","['        ', 'void', ' ', 'onDone', '(', 'byte', '[', ']', ' ', 'out', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,UncaughtExceptionHandler.java,uncaughtException,"    public void uncaughtException(final Thread thread, final Throwable throwable) {
        if (BuildConfig.DEBUG) throwable.printStackTrace();
        if (!BuildConfig.DEBUG) {
            Tracker tracker = Analytics.getTracker();

            StringWriter writer = new StringWriter();
            throwable.printStackTrace(new PrintWriter(writer));

            if (tracker != null)
                tracker.send(new HitBuilders.ExceptionBuilder()
                        .setDescription(String.format(Locale.getDefault(), ""Thread %d: %s @@ %s"", thread.getId(), thread.getName(), throwable.toString() + ""\n"" + writer.toString()))
                        .setFatal(true)
                        .build());
        }

        CommonUtils.sendEmail(context, context.getString(R.string.app_name));
    }",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    public void uncaughtException(final Thread thread, final Throwable throwable) {
        if (BuildConfig.DEBUG) throwable.printStackTrace();
        if (!BuildConfig.DEBUG) {
            Tracker tracker = Analytics.getTracker();

            StringWriter writer = new StringWriter();
            throwable.printStackTrace(new PrintWriter(writer));

            if (tracker != null)
                tracker.send(new HitBuilders.ExceptionBuilder()
                        .setDescription(String.format(Locale.getDefault(), ""Thread %d: %s @@ %s"", thread.getId(), thread.getName(), throwable.toString() + ""\n"" + writer.toString()))
                        .setFatal(true)
                        .build());
        }

        CommonUtils.sendEmail(context, context.getString(R.string.app_name));
    }
","['    ', 'public', ' ', 'void', ' ', 'uncaughtException', '(', 'final', ' ', 'Thread', ' ', 'thread', ',', ' ', 'final', ' ', 'Throwable', ' ', 'throwable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', 'throwable', '.', 'printStackTrace', '(', ')', ';', '\n', '        ', 'if', ' ', '(', '!', 'BuildConfig', '.', 'DEBUG', ')', ' ', '{', '\n', '            ', 'Tracker', ' ', 'tracker', ' ', '=', ' ', 'Analytics', '.', 'getTracker', '(', ')', ';', '\n', '\n', '            ', 'StringWriter', ' ', 'writer', ' ', '=', ' ', 'new', ' ', 'StringWriter', '(', ')', ';', '\n', '            ', 'throwable', '.', 'printStackTrace', '(', 'new', ' ', 'PrintWriter', '(', 'writer', ')', ')', ';', '\n', '\n', '            ', 'if', ' ', '(', 'tracker', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'tracker', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'ExceptionBuilder', '(', ')', '\n', '                        ', '.', 'setDescription', '(', 'String', '.', 'format', '(', 'Locale', '.', 'getDefault', '(', ')', ',', ' ', '""', 'Thread %d: %s @@ %s', '""', ',', ' ', 'thread', '.', 'getId', '(', ')', ',', ' ', 'thread', '.', 'getName', '(', ')', ',', ' ', 'throwable', '.', 'toString', '(', ')', ' ', '+', ' ', '""', '\\', 'n', '""', ' ', '+', ' ', 'writer', '.', 'toString', '(', ')', ')', ')', '\n', '                        ', '.', 'setFatal', '(', 'true', ')', '\n', '                        ', '.', 'build', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'CommonUtils', '.', 'sendEmail', '(', 'context', ',', ' ', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'app_name', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,PreferencesActivity.java,onPreferenceClick,"            public boolean onPreferenceClick(Preference preference) {
                CommonUtils.sendEmail(PreferencesActivity.this, getString(R.string.app_name));
                return true;
            }",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"            public boolean onPreferenceClick(Preference preference) {
                CommonUtils.sendEmail(PreferencesActivity.this, getString(R.string.app_name));
                return true;
            }
","['            ', 'public', ' ', 'boolean', ' ', 'onPreferenceClick', '(', 'Preference', ' ', 'preference', ')', ' ', '{', '\n', '                ', 'CommonUtils', '.', 'sendEmail', '(', 'PreferencesActivity', '.', 'this', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'app_name', ')', ')', ';', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '<END>']"
master,036e8e16f7e532f3012d36cfa9e8f8556fba9c25,Utils.java,optionProcessor,"    static String optionProcessor(Map<String, String> options) {
        String extended = """";
        if (options == null || options.isEmpty()) return """";

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty() || entry.getValue().isEmpty()) continue;

            extended += "" --"" + entry.getKey() + ""="" + entry.getValue();
        }

        return extended;
    }",https://www.github.com/devgianlu/aria2android/commit/036e8e16f7e532f3012d36cfa9e8f8556fba9c25,"    static String optionProcessor(Map<String, String> options) {
        String extended = """";
        if (options == null || options.isEmpty()) return """";

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty() || entry.getValue().isEmpty()) continue;

            extended += "" --"" + entry.getKey() + ""="" + entry.getValue();
        }

        return extended;
    }
","['    ', 'static', ' ', 'String', ' ', 'optionProcessor', '(', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ')', ' ', '{', '\n', '        ', 'String', ' ', 'extended', ' ', '=', ' ', '""', '""', ';', '\n', '        ', 'if', ' ', '(', 'options', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'options', '.', 'isEmpty', '(', ')', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'options', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'entry', '.', 'getKey', '(', ')', '.', 'isEmpty', '(', ')', ' ', '|', '|', ' ', 'entry', '.', 'getValue', '(', ')', '.', 'isEmpty', '(', ')', ')', ' ', 'continue', ';', '\n', '\n', '            ', 'extended', ' ', '+', '=', ' ', '""', ' --', '""', ' ', '+', ' ', 'entry', '.', 'getKey', '(', ')', ' ', '+', ' ', '""', '=', '""', ' ', '+', ' ', 'entry', '.', 'getValue', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'extended', ';', '\n', '    ', '}', '\n', '<END>']"
master,5c48e81046e5810ef13bf55405ef44be60335c4a,aria2Service.java,killService,"    private static void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (handler != null)
            handler.onServerStopped();",https://www.github.com/devgianlu/aria2android/commit/5c48e81046e5810ef13bf55405ef44be60335c4a,"    private static void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (handler != null)
            handler.onServerStopped();
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '<END>']"
master,5c48e81046e5810ef13bf55405ef44be60335c4a,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            if (handler != null)
                handler.onException(ex);
            stopSelf();
            return;
        }

        if (handler != null)
            handler.onServerStarted(process.getInputStream(), process.getErrorStream());",https://www.github.com/devgianlu/aria2android/commit/5c48e81046e5810ef13bf55405ef44be60335c4a,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            if (handler != null)
                handler.onException(ex);
            stopSelf();
            return;
        }

        if (handler != null)
            handler.onServerStarted(process.getInputStream(), process.getErrorStream());
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', '(', 'aria2StartConfig', ')', ' ', 'intent', '.', 'getSerializableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'command', ' ', '=', ' ', 'binPath', '\n', '                ', '+', ' ', '""', ' --daemon --check-certificate=false', '""', '\n', '                ', '+', ' ', '(', 'config', '.', 'useConfig', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'config', '.', 'configFile', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                ', '+', ' ', '(', 'config', '.', 'saveSession', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'sessionPath', ' ', '+', ' ', '""', ' --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'sessionPath', '\n', '                ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'outputDirectory', '\n', '                ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'rpcPort', '\n', '                ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'rpcToken', '\n', '                ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'options', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'command', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '<END>']"
master,965e3d294da609b58c7419947b7182930465fd65,StreamListener.java,run,"    public void run() {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        BufferedReader ereader = new BufferedReader(new InputStreamReader(err));

        while (!_shouldStop) {
            try {",https://www.github.com/devgianlu/aria2android/commit/965e3d294da609b58c7419947b7182930465fd65,"    public void run() {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        BufferedReader ereader = new BufferedReader(new InputStreamReader(err));

        while (!_shouldStop) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ';', '\n', '        ', 'BufferedReader', ' ', 'ereader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'err', ')', ')', ';', '\n', '\n', '        ', 'while', ' ', '(', '!', '_shouldStop', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,965e3d294da609b58c7419947b7182930465fd65,aria2Service.java,onStartCommand,"    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(new Random().nextInt(100), new Notification.Builder(getBaseContext()).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2 is currently running"").build());

        onHandleIntent(intent);
        return START_STICKY;
    }",https://www.github.com/devgianlu/aria2android/commit/965e3d294da609b58c7419947b7182930465fd65,"    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(new Random().nextInt(100), new Notification.Builder(getBaseContext()).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2 is currently running"").build());

        onHandleIntent(intent);
        return START_STICKY;
    }
","['    ', 'public', ' ', 'int', ' ', 'onStartCommand', '(', 'Intent', ' ', 'intent', ',', ' ', 'int', ' ', 'flags', ',', ' ', 'int', ' ', 'startId', ')', ' ', '{', '\n', '        ', 'startForeground', '(', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', '100', ')', ',', ' ', 'new', ' ', 'Notification', '.', 'Builder', '(', 'getBaseContext', '(', ')', ')', '.', 'setContentTitle', '(', '""', 'aria2 service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentIntent', '(', 'PendingIntent', '.', 'getActivity', '(', 'this', ',', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', ')', ',', ' ', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', ',', ' ', 'PendingIntent', '.', 'FLAG_UPDATE_CURRENT', ')', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2 is currently running', '""', ')', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'onHandleIntent', '(', 'intent', ')', ';', '\n', '        ', 'return', ' ', 'START_STICKY', ';', '\n', '    ', '}', '\n', '<END>']"
master,3660642a6585ae610c1e59030de4bfafe9860767,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/3660642a6585ae610c1e59030de4bfafe9860767,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'useConfig', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'Utils', '.', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', ' ', '{', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                        ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                            ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                    ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_TIMING', ')', '\n', '                                    ', '.', 'setLabel', '(', 'Analytics', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                    ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                    ', '.', 'build', '(', ')', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,3cc021cbcd4d7893eec99401ecc68a396d92a151,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String vss, String rss) {
        System.out.println(""PID: "" + pid + ""   CPU: "" + cpuUsage + ""%   VSS: "" + vss + ""K   RSS: "" + rss + ""K"");
        /*",https://www.github.com/devgianlu/aria2android/commit/3cc021cbcd4d7893eec99401ecc68a396d92a151,"    private void sendNotification(String pid, String cpuUsage, String vss, String rss) {
        System.out.println(""PID: "" + pid + ""   CPU: "" + cpuUsage + ""%   VSS: "" + vss + ""K   RSS: "" + rss + ""K"");
        /*
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'vss', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'System', '.', 'out', '.', 'println', '(', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ' ', '+', ' ', '""', '   CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%   VSS: ', '""', ' ', '+', ' ', 'vss', ' ', '+', ' ', '""', 'K   RSS: ', '""', ' ', '+', ' ', 'rss', ' ', '+', ' ', '""', 'K', '""', ')', ';', '\n', '        ', '/', '*', '\n', '<END>']"
master,3cc021cbcd4d7893eec99401ecc68a396d92a151,aria2Service.java,killService,"    private static void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (monitor != null)
            monitor.stop();

        if (handler != null)
            handler.onServerStopped();",https://www.github.com/devgianlu/aria2android/commit/3cc021cbcd4d7893eec99401ecc68a396d92a151,"    private static void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (monitor != null)
            monitor.stop();

        if (handler != null)
            handler.onServerStopped();
","['    ', 'private', ' ', 'static', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'monitor', '.', 'stop', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '<END>']"
master,3cc021cbcd4d7893eec99401ecc68a396d92a151,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            if (handler != null)
                handler.onException(ex);
            stopSelf();
            return;
        }

        if (handler != null)
            handler.onServerStarted(process.getInputStream(), process.getErrorStream());

        monitor = new PerformanceMonitor(this);
        new Thread(monitor).start();
    }",https://www.github.com/devgianlu/aria2android/commit/3cc021cbcd4d7893eec99401ecc68a396d92a151,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            if (handler != null)
                handler.onException(ex);
            stopSelf();
            return;
        }

        if (handler != null)
            handler.onServerStarted(process.getInputStream(), process.getErrorStream());

        monitor = new PerformanceMonitor(this);
        new Thread(monitor).start();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', '(', 'aria2StartConfig', ')', ' ', 'intent', '.', 'getSerializableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'command', ' ', '=', ' ', 'binPath', '\n', '                ', '+', ' ', '""', ' --daemon --check-certificate=false', '""', '\n', '                ', '+', ' ', '(', 'config', '.', 'useConfig', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'config', '.', 'configFile', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                ', '+', ' ', '(', 'config', '.', 'saveSession', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'sessionPath', ' ', '+', ' ', '""', ' --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'sessionPath', '\n', '                ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'outputDirectory', '\n', '                ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'rpcPort', '\n', '                ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'rpcToken', '\n', '                ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'options', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'command', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '\n', '        ', 'monitor', ' ', '=', ' ', 'new', ' ', 'PerformanceMonitor', '(', 'this', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'monitor', ')', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,36da221f8c7de0dca5fe9f96843709f83fcf37b7,PerformanceMonitor.java,run,"    public void run() {
        try {
            Process process = Runtime.getRuntime().exec(""top -d 1""); // TODO: Adjustable delay",https://www.github.com/devgianlu/aria2android/commit/36da221f8c7de0dca5fe9f96843709f83fcf37b7,"    public void run() {
        try {
            Process process = Runtime.getRuntime().exec(""top -d 1""); 
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'top -d 1', '""', ')', ';', ' ', '\n', '<END>']"
master,36da221f8c7de0dca5fe9f96843709f83fcf37b7,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String vss, String rss) {
        // System.out.println(""PID: "" + pid + ""   CPU: "" + cpuUsage + ""%   VSS: "" + vss + ""K   RSS: "" + rss + ""K""); TODO: Print to log (maybe)
        builder.setContentText(""PID: "" + pid + ""   CPU: "" + cpuUsage + ""%   VSS: "" + vss + ""K   RSS: "" + rss + ""K""); // TODO: Custom view
        manager.notify(NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/36da221f8c7de0dca5fe9f96843709f83fcf37b7,"    private void sendNotification(String pid, String cpuUsage, String vss, String rss) {
        
        builder.setContentText(""PID: "" + pid + ""   CPU: "" + cpuUsage + ""%   VSS: "" + vss + ""K   RSS: "" + rss + ""K""); 
        manager.notify(NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'vss', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', '\n', '        ', 'builder', '.', 'setContentText', '(', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ' ', '+', ' ', '""', '   CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%   VSS: ', '""', ' ', '+', ' ', 'vss', ' ', '+', ' ', '""', 'K   RSS: ', '""', ' ', '+', ' ', 'rss', ' ', '+', ' ', '""', 'K', '""', ')', ';', ' ', '\n', '        ', 'manager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,36da221f8c7de0dca5fe9f96843709f83fcf37b7,aria2Service.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (handler != null)
            handler.onServerStopped();",https://www.github.com/devgianlu/aria2android/commit/36da221f8c7de0dca5fe9f96843709f83fcf37b7,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (handler != null)
            handler.onServerStopped();
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '<END>']"
master,36da221f8c7de0dca5fe9f96843709f83fcf37b7,aria2Service.java,onStartCommand,"    public int onStartCommand(Intent intent, int flags, int startId) {
        builder = new Notification.Builder(getBaseContext()).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2 is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());

        onHandleIntent(intent);
        return START_STICKY;
    }",https://www.github.com/devgianlu/aria2android/commit/36da221f8c7de0dca5fe9f96843709f83fcf37b7,"    public int onStartCommand(Intent intent, int flags, int startId) {
        builder = new Notification.Builder(getBaseContext()).setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2 is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());

        onHandleIntent(intent);
        return START_STICKY;
    }
","['    ', 'public', ' ', 'int', ' ', 'onStartCommand', '(', 'Intent', ' ', 'intent', ',', ' ', 'int', ' ', 'flags', ',', ' ', 'int', ' ', 'startId', ')', ' ', '{', '\n', '        ', 'builder', ' ', '=', ' ', 'new', ' ', 'Notification', '.', 'Builder', '(', 'getBaseContext', '(', ')', ')', '.', 'setContentTitle', '(', '""', 'aria2 service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentIntent', '(', 'PendingIntent', '.', 'getActivity', '(', 'this', ',', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', ')', ',', ' ', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', ',', ' ', 'PendingIntent', '.', 'FLAG_UPDATE_CURRENT', ')', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2 is currently running', '""', ')', ';', '\n', '\n', '        ', 'startForeground', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'onHandleIntent', '(', 'intent', ')', ';', '\n', '        ', 'return', ' ', 'START_STICKY', ';', '\n', '    ', '}', '\n', '<END>']"
master,36da221f8c7de0dca5fe9f96843709f83fcf37b7,aria2Service.java,onHandleIntent,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            if (handler != null)
                handler.onException(ex);
            stopSelf();
            return;
        }

        if (handler != null)
            handler.onServerStarted(process.getInputStream(), process.getErrorStream());

        monitor = new PerformanceMonitor(this, NOTIFICATION_ID, builder);
        new Thread(monitor).start();
    }",https://www.github.com/devgianlu/aria2android/commit/36da221f8c7de0dca5fe9f96843709f83fcf37b7,"    protected void onHandleIntent(Intent intent) {
        aria2StartConfig config = (aria2StartConfig) intent.getSerializableExtra(CONFIG);

        String binPath = new File(getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(getFilesDir(), ""session"").getAbsolutePath();

        String command = binPath
                + "" --daemon --check-certificate=false""
                + (config.useConfig ? "" --conf-path="" + config.configFile : "" --no-conf=true"")
                + (config.saveSession ? "" --save-session="" + sessionPath + "" --save-session-interval=10"" : "" "")
                + "" --input-file="" + sessionPath
                + "" --dir="" + config.outputDirectory
                + "" --enable-rpc --rpc-listen-all=true --rpc-listen-port="" + config.rpcPort
                + "" --rpc-secret="" + config.rpcToken
                + Utils.optionProcessor(config.options);

        try {
            process = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            if (handler != null)
                handler.onException(ex);
            stopSelf();
            return;
        }

        if (handler != null)
            handler.onServerStarted(process.getInputStream(), process.getErrorStream());

        monitor = new PerformanceMonitor(this, NOTIFICATION_ID, builder);
        new Thread(monitor).start();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onHandleIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'aria2StartConfig', ' ', 'config', ' ', '=', ' ', '(', 'aria2StartConfig', ')', ' ', 'intent', '.', 'getSerializableExtra', '(', 'CONFIG', ')', ';', '\n', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'command', ' ', '=', ' ', 'binPath', '\n', '                ', '+', ' ', '""', ' --daemon --check-certificate=false', '""', '\n', '                ', '+', ' ', '(', 'config', '.', 'useConfig', ' ', '?', ' ', '""', ' --conf-path=', '""', ' ', '+', ' ', 'config', '.', 'configFile', ' ', ':', ' ', '""', ' --no-conf=true', '""', ')', '\n', '                ', '+', ' ', '(', 'config', '.', 'saveSession', ' ', '?', ' ', '""', ' --save-session=', '""', ' ', '+', ' ', 'sessionPath', ' ', '+', ' ', '""', ' --save-session-interval=10', '""', ' ', ':', ' ', '""', ' ', '""', ')', '\n', '                ', '+', ' ', '""', ' --input-file=', '""', ' ', '+', ' ', 'sessionPath', '\n', '                ', '+', ' ', '""', ' --dir=', '""', ' ', '+', ' ', 'config', '.', 'outputDirectory', '\n', '                ', '+', ' ', '""', ' --enable-rpc --rpc-listen-all=true --rpc-listen-port=', '""', ' ', '+', ' ', 'config', '.', 'rpcPort', '\n', '                ', '+', ' ', '""', ' --rpc-secret=', '""', ' ', '+', ' ', 'config', '.', 'rpcToken', '\n', '                ', '+', ' ', 'Utils', '.', 'optionProcessor', '(', 'config', '.', 'options', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'command', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '            ', 'stopSelf', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStarted', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ')', ';', '\n', '\n', '        ', 'monitor', ' ', '=', ' ', 'new', ' ', 'PerformanceMonitor', '(', 'this', ',', ' ', 'NOTIFICATION_ID', ',', ' ', 'builder', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'monitor', ')', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,36da221f8c7de0dca5fe9f96843709f83fcf37b7,aria2Service.java,onDestroy,"    public void onDestroy() {
        killService();

        if (monitor != null)
            monitor.stop();",https://www.github.com/devgianlu/aria2android/commit/36da221f8c7de0dca5fe9f96843709f83fcf37b7,"    public void onDestroy() {
        killService();

        if (monitor != null)
            monitor.stop();
","['    ', 'public', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'killService', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'monitor', '.', 'stop', '(', ')', ';', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,MainActivity.java,onServerStarted,"            public void onServerStarted(InputStream in, InputStream err) {
                noLogs.setVisibility(View.GONE);
                logs.setVisibility(View.VISIBLE);

                adapter.clear();
                streamListener = new StreamListener(adapter, in, err);
                adapter.addLine(LoglineItem.TYPE.INFO, getString(R.string.serverStarted));
                new Thread(streamListener).start();
            }",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"            public void onServerStarted(InputStream in, InputStream err) {
                noLogs.setVisibility(View.GONE);
                logs.setVisibility(View.VISIBLE);

                adapter.clear();
                streamListener = new StreamListener(adapter, in, err);
                adapter.addLine(LoglineItem.TYPE.INFO, getString(R.string.serverStarted));
                new Thread(streamListener).start();
            }
","['            ', 'public', ' ', 'void', ' ', 'onServerStarted', '(', 'InputStream', ' ', 'in', ',', ' ', 'InputStream', ' ', 'err', ')', ' ', '{', '\n', '                ', 'noLogs', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '                ', 'logs', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '\n', '                ', 'adapter', '.', 'clear', '(', ')', ';', '\n', '                ', 'streamListener', ' ', '=', ' ', 'new', ' ', 'StreamListener', '(', 'adapter', ',', ' ', 'in', ',', ' ', 'err', ')', ';', '\n', '                ', 'adapter', '.', 'addLine', '(', 'LoglineItem', '.', 'TYPE', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'serverStarted', ')', ')', ';', '\n', '                ', 'new', ' ', 'Thread', '(', 'streamListener', ')', '.', 'start', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_SHOW_PERFORMANCE, b)
                        .apply();

                updateDelay.setEnabled(b);
            }",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                preferences.edit()
                        .putBoolean(Utils.PREF_SHOW_PERFORMANCE, b)
                        .apply();

                updateDelay.setEnabled(b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'preferences', '.', 'edit', '(', ')', '\n', '                        ', '.', 'putBoolean', '(', 'Utils', '.', 'PREF_SHOW_PERFORMANCE', ',', ' ', 'b', ')', '\n', '                        ', '.', 'apply', '(', ')', ';', '\n', '\n', '                ', 'updateDelay', '.', 'setEnabled', '(', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,MainActivity.java,onFocusChange,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int delay;",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int delay;
","['            ', 'public', ' ', 'void', ' ', 'onFocusChange', '(', 'View', ' ', 'v', ',', ' ', 'boolean', ' ', 'hasFocus', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'hasFocus', ')', ' ', '{', '\n', '                    ', 'int', ' ', 'delay', ';', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked)
                    updateDelay.setEnabled(false);",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    if (Analytics.isTrackingAllowed(MainActivity.this))
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_ON)
                                .build());


                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    if (Analytics.isTrackingAllowed(MainActivity.this)) {
                        Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.EventBuilder()
                                .setCategory(Analytics.CATEGORY_USER_INPUT)
                                .setAction(Analytics.ACTION_TURN_OFF)
                                .build());

                        if (preferences.getLong(""currentSessionStart"", -1) != -1)
                            Analytics.getDefaultTracker(getApplication()).send(new HitBuilders.TimingBuilder()
                                    .setCategory(Analytics.CATEGORY_TIMING)
                                    .setLabel(Analytics.LABEL_SESSION_DURATION)
                                    .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                    .build());
                    }
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked)
                    configFile.setEnabled(false);
                else
                    configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked)
                    updateDelay.setEnabled(false);
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_ON', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'useConfig', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'Utils', '.', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'Analytics', '.', 'isTrackingAllowed', '(', 'MainActivity', '.', 'this', ')', ')', ' ', '{', '\n', '                        ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                                ', '.', 'setAction', '(', 'Analytics', '.', 'ACTION_TURN_OFF', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                        ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                            ', 'Analytics', '.', 'getDefaultTracker', '(', 'getApplication', '(', ')', ')', '.', 'send', '(', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                    ', '.', 'setCategory', '(', 'Analytics', '.', 'CATEGORY_TIMING', ')', '\n', '                                    ', '.', 'setLabel', '(', 'Analytics', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                    ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                    ', '.', 'build', '(', ')', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', '\n', '                    ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'showPerformance', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'updateDelay', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,PerformanceMonitor.java,run,"    public void run() {
        try {
            Process process = Runtime.getRuntime().exec(""top -d "" + String.valueOf(delay));",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"    public void run() {
        try {
            Process process = Runtime.getRuntime().exec(""top -d "" + String.valueOf(delay));
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'top -d ', '""', ' ', '+', ' ', 'String', '.', 'valueOf', '(', 'delay', ')', ')', ';', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop)
            return;

        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024));
        builder.setCustomContentView(layout);
        manager.notify(NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop)
            return;

        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024));
        builder.setCustomContentView(layout);
        manager.notify(NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '_stop', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '        ', 'manager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,aria2Service.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (monitor != null)
            monitor.stop();

        if (handler != null)
            handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
    }",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (monitor != null)
            monitor.stop();

        if (handler != null)
            handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
    }
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'monitor', '.', 'stop', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '\n', '        ', '(', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ')', '.', 'cancel', '(', 'NOTIFICATION_ID', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fbd392140f95e688a4c265aa458fa4d96c7883f2,aria2Service.java,onStartCommand,"    public int onStartCommand(Intent intent, int flags, int startId) {
        builder = new NotificationCompat.Builder(getBaseContext())
                .setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2 is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());

        onHandleIntent(intent);
        return START_STICKY;
    }",https://www.github.com/devgianlu/aria2android/commit/fbd392140f95e688a4c265aa458fa4d96c7883f2,"    public int onStartCommand(Intent intent, int flags, int startId) {
        builder = new NotificationCompat.Builder(getBaseContext())
                .setContentTitle(""aria2 service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2 is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());

        onHandleIntent(intent);
        return START_STICKY;
    }
","['    ', 'public', ' ', 'int', ' ', 'onStartCommand', '(', 'Intent', ' ', 'intent', ',', ' ', 'int', ' ', 'flags', ',', ' ', 'int', ' ', 'startId', ')', ' ', '{', '\n', '        ', 'builder', ' ', '=', ' ', 'new', ' ', 'NotificationCompat', '.', 'Builder', '(', 'getBaseContext', '(', ')', ')', '\n', '                ', '.', 'setContentTitle', '(', '""', 'aria2 service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentIntent', '(', 'PendingIntent', '.', 'getActivity', '(', 'this', ',', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', ')', ',', ' ', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', ',', ' ', 'PendingIntent', '.', 'FLAG_UPDATE_CURRENT', ')', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2 is currently running', '""', ')', ';', '\n', '\n', '        ', 'startForeground', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'onHandleIntent', '(', 'intent', ')', ';', '\n', '        ', 'return', ' ', 'START_STICKY', ';', '\n', '    ', '}', '\n', '<END>']"
master,87df5034119dd308788507f095a601374ce7df49,aria2Service.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (monitor != null)
            monitor.stop();

        if (handler != null)
            handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
        stopSelf();
    }",https://www.github.com/devgianlu/aria2android/commit/87df5034119dd308788507f095a601374ce7df49,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null)
                handler.onException(ex);
        }

        if (process != null)
            process.destroy();

        if (monitor != null)
            monitor.stop();

        if (handler != null)
            handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
        stopSelf();
    }
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '                ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'monitor', '.', 'stop', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '\n', '        ', '(', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ')', '.', 'cancel', '(', 'NOTIFICATION_ID', ')', ';', '\n', '        ', 'stopSelf', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,87df5034119dd308788507f095a601374ce7df49,aria2Service.java,onDestroy,"    public void onDestroy() {
        killService();
        super.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/87df5034119dd308788507f095a601374ce7df49,"    public void onDestroy() {
        killService();
        super.onDestroy();
    }
","['    ', 'public', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'killService', '(', ')', ';', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_ON)
                            .build());

                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_OFF)
                            .build());

                    if (preferences.getLong(""currentSessionStart"", -1) != -1)
                        ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.TimingBuilder()
                                .setCategory(ThisApplication.CATEGORY_TIMING)
                                .setLabel(ThisApplication.LABEL_SESSION_DURATION)
                                .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                .build());
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked) configFile.setEnabled(false);
                else configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked)
                    updateDelay.setEnabled(false);",https://www.github.com/devgianlu/aria2android/commit/1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_ON)
                            .build());

                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_OFF)
                            .build());

                    if (preferences.getLong(""currentSessionStart"", -1) != -1)
                        ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.TimingBuilder()
                                .setCategory(ThisApplication.CATEGORY_TIMING)
                                .setLabel(ThisApplication.LABEL_SESSION_DURATION)
                                .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                .build());
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked) configFile.setEnabled(false);
                else configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked)
                    updateDelay.setEnabled(false);
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                            ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                            ', '.', 'setAction', '(', 'ThisApplication', '.', 'ACTION_TURN_ON', ')', '\n', '                            ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'useConfig', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'Utils', '.', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                            ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                            ', '.', 'setAction', '(', 'ThisApplication', '.', 'ACTION_TURN_OFF', ')', '\n', '                            ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                        ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_TIMING', ')', '\n', '                                ', '.', 'setLabel', '(', 'ThisApplication', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', ' ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'showPerformance', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', '\n', '                    ', 'updateDelay', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '<END>']"
master,1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,ThisApplication.java,sendAnalytics,"    public static void sendAnalytics(Context context, @Nullable Map<String, String> map) {
        if (!PreferenceManager.getDefaultSharedPreferences(context).getBoolean(""a2_trackingDisable"", false) && !BuildConfig.DEBUG)
            if (tracker != null)",https://www.github.com/devgianlu/aria2android/commit/1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,"    public static void sendAnalytics(Context context, @Nullable Map<String, String> map) {
        if (!PreferenceManager.getDefaultSharedPreferences(context).getBoolean(""a2_trackingDisable"", false) && !BuildConfig.DEBUG)
            if (tracker != null)
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'sendAnalytics', '(', 'Context', ' ', 'context', ',', ' ', '@Nullable', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'context', ')', '.', 'getBoolean', '(', '""', 'a2_trackingDisable', '""', ',', ' ', 'false', ')', ' ', '&', '&', ' ', '!', 'BuildConfig', '.', 'DEBUG', ')', '\n', '            ', 'if', ' ', '(', 'tracker', ' ', '!', '=', ' ', 'null', ')', '\n', '<END>']"
master,1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,ThisApplication.java,onCreate,"    public void onCreate() {
        super.onCreate();

        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(!BuildConfig.DEBUG);
        tracker = getTracker(this);
    }",https://www.github.com/devgianlu/aria2android/commit/1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,"    public void onCreate() {
        super.onCreate();

        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(!BuildConfig.DEBUG);
        tracker = getTracker(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onCreate', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', ')', ';', '\n', '\n', '        ', 'FirebaseAnalytics', '.', 'getInstance', '(', 'this', ')', '.', 'setAnalyticsCollectionEnabled', '(', '!', 'BuildConfig', '.', 'DEBUG', ')', ';', '\n', '        ', 'tracker', ' ', '=', ' ', 'getTracker', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,UncaughtExceptionHandler.java,uncaughtException,"    public void uncaughtException(final Thread thread, final Throwable throwable) {
        if (BuildConfig.DEBUG) {
            throwable.printStackTrace();",https://www.github.com/devgianlu/aria2android/commit/1a4fd5ed1336d99a4e68abb7fde32bb87be488ec,"    public void uncaughtException(final Thread thread, final Throwable throwable) {
        if (BuildConfig.DEBUG) {
            throwable.printStackTrace();
","['    ', 'public', ' ', 'void', ' ', 'uncaughtException', '(', 'final', ' ', 'Thread', ' ', 'thread', ',', ' ', 'final', ' ', 'Throwable', ' ', 'throwable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', '{', '\n', '            ', 'throwable', '.', 'printStackTrace', '(', ')', ';', '\n', '<END>']"
master,9277d571532e667014a836ea5c1ea02c792c6f9f,LoglineAdapter.java,addLine,"    private void addLine(LoglineItem line) {
        Logging.logMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/9277d571532e667014a836ea5c1ea02c792c6f9f,"    private void addLine(LoglineItem line) {
        Logging.logMe(context, line.getMessage(), line.getType() == LoglineItem.TYPE.ERROR);
        objs.add(line);
        context.runOnUiThread(new Runnable() {
            @Override
","['    ', 'private', ' ', 'void', ' ', 'addLine', '(', 'LoglineItem', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'logMe', '(', 'context', ',', ' ', 'line', '.', 'getMessage', '(', ')', ',', ' ', 'line', '.', 'getType', '(', ')', ' ', '=', '=', ' ', 'LoglineItem', '.', 'TYPE', '.', 'ERROR', ')', ';', '\n', '        ', 'objs', '.', 'add', '(', 'line', ')', ';', '\n', '        ', 'context', '.', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,9277d571532e667014a836ea5c1ea02c792c6f9f,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop)
            return;

        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);
        manager.notify(NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/9277d571532e667014a836ea5c1ea02c792c6f9f,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop)
            return;

        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);
        manager.notify(NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '_stop', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '        ', 'manager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,9277d571532e667014a836ea5c1ea02c792c6f9f,ThisApplication.java,onCreate,"    public void onCreate() {
        super.onCreate();

        CommonUtils.setDebug(BuildConfig.DEBUG);

        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(!BuildConfig.DEBUG);
        tracker = getTracker(this);
    }",https://www.github.com/devgianlu/aria2android/commit/9277d571532e667014a836ea5c1ea02c792c6f9f,"    public void onCreate() {
        super.onCreate();

        CommonUtils.setDebug(BuildConfig.DEBUG);

        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(!BuildConfig.DEBUG);
        tracker = getTracker(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onCreate', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', ')', ';', '\n', '\n', '        ', 'CommonUtils', '.', 'setDebug', '(', 'BuildConfig', '.', 'DEBUG', ')', ';', '\n', '\n', '        ', 'FirebaseAnalytics', '.', 'getInstance', '(', 'this', ')', '.', 'setAnalyticsCollectionEnabled', '(', '!', 'BuildConfig', '.', 'DEBUG', ')', ';', '\n', '        ', 'tracker', ' ', '=', ' ', 'getTracker', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,cb8251422c2a523ed905030d3a483faf2d21d70e,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_ON)
                            .build());

                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_OFF)
                            .build());

                    if (preferences.getLong(""currentSessionStart"", -1) != -1)
                        ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.TimingBuilder()
                                .setCategory(ThisApplication.CATEGORY_TIMING)
                                .setLabel(ThisApplication.LABEL_SESSION_DURATION)
                                .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                .build());
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked) configFile.setEnabled(false);
                else configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked) updateDelay.setEnabled(false);
                else updateDelay.setEnabled(showPerformance.isChecked());",https://www.github.com/devgianlu/aria2android/commit/cb8251422c2a523ed905030d3a483faf2d21d70e,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) {
                    preferences.edit().putLong(""currentSessionStart"", System.currentTimeMillis()).apply();

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_ON)
                            .build());

                    if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                        CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.WRITE_STORAGE_DENIED);
                        return;
                    }

                    File sessionFile = new File(getFilesDir(), ""session"");
                    if (saveSession.isChecked() && !sessionFile.exists()) {
                        try {
                            if (!sessionFile.createNewFile()) {
                                CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE);
                                saveSession.setChecked(false);
                                return;
                            }
                        } catch (IOException ex) {
                            CommonUtils.UIToast(MainActivity.this, Utils.ToastMessages.FAILED_CREATING_SESSION_FILE, ex);
                            saveSession.setChecked(false);
                            return;
                        }
                    }

                    startService(new Intent(MainActivity.this, aria2Service.class)
                            .putExtra(aria2Service.CONFIG, new aria2StartConfig(
                                    outputPath.getText().toString(),
                                    null,
                                    useConfig.isChecked(),
                                    configFile.getText().toString(),
                                    saveSession.isChecked(),
                                    Utils.getPort(outputPath),
                                    rpcToken.getText().toString())
                            ));
                } else {
                    stopService(new Intent(MainActivity.this, aria2Service.class));

                    ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                            .setCategory(ThisApplication.CATEGORY_USER_INPUT)
                            .setAction(ThisApplication.ACTION_TURN_OFF)
                            .build());

                    if (preferences.getLong(""currentSessionStart"", -1) != -1)
                        ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.TimingBuilder()
                                .setCategory(ThisApplication.CATEGORY_TIMING)
                                .setLabel(ThisApplication.LABEL_SESSION_DURATION)
                                .setValue(System.currentTimeMillis() - preferences.getLong(""currentSessionStart"", -1))
                                .build());
                }

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked) configFile.setEnabled(false);
                else configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked) updateDelay.setEnabled(false);
                else updateDelay.setEnabled(showPerformance.isChecked());
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', '{', '\n', '                    ', 'preferences', '.', 'edit', '(', ')', '.', 'putLong', '(', '""', 'currentSessionStart', '""', ',', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ')', '.', 'apply', '(', ')', ';', '\n', '\n', '                    ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                            ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                            ', '.', 'setAction', '(', 'ThisApplication', '.', 'ACTION_TURN_ON', ')', '\n', '                            ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'MainActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                        ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'WRITE_STORAGE_DENIED', ')', ';', '\n', '                        ', 'return', ';', '\n', '                    ', '}', '\n', '\n', '                    ', 'File', ' ', 'sessionFile', ' ', '=', ' ', 'new', ' ', 'File', '(', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ';', '\n', '                    ', 'if', ' ', '(', 'saveSession', '.', 'isChecked', '(', ')', ' ', '&', '&', ' ', '!', 'sessionFile', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'if', ' ', '(', '!', 'sessionFile', '.', 'createNewFile', '(', ')', ')', ' ', '{', '\n', '                                ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ')', ';', '\n', '                                ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                                ', 'return', ';', '\n', '                            ', '}', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'CommonUtils', '.', 'UIToast', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ToastMessages', '.', 'FAILED_CREATING_SESSION_FILE', ',', ' ', 'ex', ')', ';', '\n', '                            ', 'saveSession', '.', 'setChecked', '(', 'false', ')', ';', '\n', '                            ', 'return', ';', '\n', '                        ', '}', '\n', '                    ', '}', '\n', '\n', '                    ', 'startService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', 'aria2Service', '.', 'CONFIG', ',', ' ', 'new', ' ', 'aria2StartConfig', '(', '\n', '                                    ', 'outputPath', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'null', ',', '\n', '                                    ', 'useConfig', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'configFile', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', '\n', '                                    ', 'saveSession', '.', 'isChecked', '(', ')', ',', '\n', '                                    ', 'Utils', '.', 'getPort', '(', 'outputPath', ')', ',', '\n', '                                    ', 'rpcToken', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', '\n', '                            ', ')', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'stopService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'aria2Service', '.', 'class', ')', ')', ';', '\n', '\n', '                    ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                            ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_USER_INPUT', ')', '\n', '                            ', '.', 'setAction', '(', 'ThisApplication', '.', 'ACTION_TURN_OFF', ')', '\n', '                            ', '.', 'build', '(', ')', ')', ';', '\n', '\n', '                    ', 'if', ' ', '(', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                        ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'TimingBuilder', '(', ')', '\n', '                                ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_TIMING', ')', '\n', '                                ', '.', 'setLabel', '(', 'ThisApplication', '.', 'LABEL_SESSION_DURATION', ')', '\n', '                                ', '.', 'setValue', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'preferences', '.', 'getLong', '(', '""', 'currentSessionStart', '""', ',', ' ', '-', '1', ')', ')', '\n', '                                ', '.', 'build', '(', ')', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', ' ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'showPerformance', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'updateDelay', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', ' ', 'updateDelay', '.', 'setEnabled', '(', 'showPerformance', '.', 'isChecked', '(', ')', ')', ';', '\n', '<END>']"
master,cb8251422c2a523ed905030d3a483faf2d21d70e,aria2Service.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.destroy();
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null) handler.onException(ex);
        }

        if (monitor != null) monitor.stop();
        if (handler != null) handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
        stopSelf();
    }",https://www.github.com/devgianlu/aria2android/commit/cb8251422c2a523ed905030d3a483faf2d21d70e,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.destroy();
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            if (handler != null) handler.onException(ex);
        }

        if (monitor != null) monitor.stop();
        if (handler != null) handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
        stopSelf();
    }
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'destroy', '(', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', ' ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', ' ', 'monitor', '.', 'stop', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', ' ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '\n', '        ', '(', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ')', '.', 'cancel', '(', 'NOTIFICATION_ID', ')', ';', '\n', '        ', 'stopSelf', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,cb8251422c2a523ed905030d3a483faf2d21d70e,aria2Service.java,onDestroy,"    public void onDestroy() {
        super.onDestroy();
        killService();
    }",https://www.github.com/devgianlu/aria2android/commit/cb8251422c2a523ed905030d3a483faf2d21d70e,"    public void onDestroy() {
        super.onDestroy();
        killService();
    }
","['    ', 'public', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'killService', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d2423373d3ec269cd4b54afd23225bda987f95bd,BinUtils.java,delete,"    static void delete(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        file.delete();
    }",https://www.github.com/devgianlu/aria2android/commit/d2423373d3ec269cd4b54afd23225bda987f95bd,"    static void delete(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        file.delete();
    }
","['    ', 'static', ' ', 'void', ' ', 'delete', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'file', '.', 'delete', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d2423373d3ec269cd4b54afd23225bda987f95bd,PreferencesActivity.java,onPreferenceClick,"            public boolean onPreferenceClick(Preference preference) {
                CommonUtils.sendEmail(PreferencesActivity.this, getString(R.string.app_name), null);
                return true;
            }",https://www.github.com/devgianlu/aria2android/commit/d2423373d3ec269cd4b54afd23225bda987f95bd,"            public boolean onPreferenceClick(Preference preference) {
                CommonUtils.sendEmail(PreferencesActivity.this, getString(R.string.app_name), null);
                return true;
            }
","['            ', 'public', ' ', 'boolean', ' ', 'onPreferenceClick', '(', 'Preference', ' ', 'preference', ')', ' ', '{', '\n', '                ', 'CommonUtils', '.', 'sendEmail', '(', 'PreferencesActivity', '.', 'this', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'app_name', ')', ',', ' ', 'null', ')', ';', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '<END>']"
master,d2423373d3ec269cd4b54afd23225bda987f95bd,aria2Service.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            if (process != null) {
                process.destroy();
                process.waitFor();
            }
        } catch (IOException | InterruptedException ex) {
            if (handler != null) handler.onException(ex);
        }

        if (monitor != null) monitor.stop();
        if (handler != null) handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
        stopSelf();
    }",https://www.github.com/devgianlu/aria2android/commit/d2423373d3ec269cd4b54afd23225bda987f95bd,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            if (process != null) {
                process.destroy();
                process.waitFor();
            }
        } catch (IOException | InterruptedException ex) {
            if (handler != null) handler.onException(ex);
        }

        if (monitor != null) monitor.stop();
        if (handler != null) handler.onServerStopped();

        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).cancel(NOTIFICATION_ID);
        stopSelf();
    }
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'process', '.', 'destroy', '(', ')', ';', '\n', '                ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '            ', '}', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', ' ', 'handler', '.', 'onException', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', ' ', 'monitor', '.', 'stop', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'handler', ' ', '!', '=', ' ', 'null', ')', ' ', 'handler', '.', 'onServerStopped', '(', ')', ';', '\n', '\n', '        ', '(', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ')', '.', 'cancel', '(', 'NOTIFICATION_ID', ')', ';', '\n', '        ', 'stopSelf', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinService.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            Bundle bundle = new Bundle();
            bundle.putSerializable(""ex"", ex);
            dispatchAction(Action.SERVER_EX, bundle);
        }

        if (process != null) process.destroy();
        if (monitor != null) monitor.stopSafe();
        if (streamListener != null) streamListener.stopSafe();
        dispatchAction(Action.SERVER_STOP, null);

        manager.cancel(NOTIFICATION_ID);
        stopSelf();
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            Bundle bundle = new Bundle();
            bundle.putSerializable(""ex"", ex);
            dispatchAction(Action.SERVER_EX, bundle);
        }

        if (process != null) process.destroy();
        if (monitor != null) monitor.stopSafe();
        if (streamListener != null) streamListener.stopSafe();
        dispatchAction(Action.SERVER_STOP, null);

        manager.cancel(NOTIFICATION_ID);
        stopSelf();
    }
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '            ', 'bundle', '.', 'putSerializable', '(', '""', 'ex', '""', ',', ' ', 'ex', ')', ';', '\n', '            ', 'dispatchAction', '(', 'Action', '.', 'SERVER_EX', ',', ' ', 'bundle', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', 'process', '.', 'destroy', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', ' ', 'monitor', '.', 'stopSafe', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'streamListener', ' ', '!', '=', ' ', 'null', ')', ' ', 'streamListener', '.', 'stopSafe', '(', ')', ';', '\n', '        ', 'dispatchAction', '(', 'Action', '.', 'SERVER_STOP', ',', ' ', 'null', ')', ';', '\n', '\n', '        ', 'manager', '.', 'cancel', '(', 'NOTIFICATION_ID', ')', ';', '\n', '        ', 'stopSelf', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinService.java,dispatchAction,"    private void dispatchAction(Action action, @Nullable Bundle extras) {
        Intent intent = new Intent(action.toString());
        if (extras != null) intent.putExtras(extras);
        LocalBroadcastManager.getInstance(this).sendBroadcastSync(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private void dispatchAction(Action action, @Nullable Bundle extras) {
        Intent intent = new Intent(action.toString());
        if (extras != null) intent.putExtras(extras);
        LocalBroadcastManager.getInstance(this).sendBroadcastSync(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchAction', '(', 'Action', ' ', 'action', ',', ' ', '@Nullable', ' ', 'Bundle', ' ', 'extras', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'action', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'extras', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtras', '(', 'extras', ')', ';', '\n', '        ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', '.', 'sendBroadcastSync', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinService.java,onStartCommand,"    public int onStartCommand(Intent intent, int flags, int startId) {
        manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        builder = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                .setContentTitle(""aria2c service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2c is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());

        onHandleIntent(intent);
        return START_STICKY;
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public int onStartCommand(Intent intent, int flags, int startId) {
        manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        builder = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                .setContentTitle(""aria2c service"")
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentIntent(PendingIntent.getActivity(this, new Random().nextInt(), new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2c is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());

        onHandleIntent(intent);
        return START_STICKY;
    }
","['    ', 'public', ' ', 'int', ' ', 'onStartCommand', '(', 'Intent', ' ', 'intent', ',', ' ', 'int', ' ', 'flags', ',', ' ', 'int', ' ', 'startId', ')', ' ', '{', '\n', '        ', 'manager', ' ', '=', ' ', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ';', '\n', '        ', 'builder', ' ', '=', ' ', 'new', ' ', 'NotificationCompat', '.', 'Builder', '(', 'getBaseContext', '(', ')', ',', ' ', 'CHANNEL_ID', ')', '\n', '                ', '.', 'setContentTitle', '(', '""', 'aria2c service', '""', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '.', 'setSmallIcon', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ')', '\n', '                ', '.', 'setContentIntent', '(', 'PendingIntent', '.', 'getActivity', '(', 'this', ',', ' ', 'new', ' ', 'Random', '(', ')', '.', 'nextInt', '(', ')', ',', ' ', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', ',', ' ', 'PendingIntent', '.', 'FLAG_UPDATE_CURRENT', ')', ')', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2c is currently running', '""', ')', ';', '\n', '\n', '        ', 'startForeground', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'onHandleIntent', '(', 'intent', ')', ';', '\n', '        ', 'return', ' ', 'START_STICKY', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinService.java,onNewLogLine,"    public void onNewLogLine(Logging.LogLine line) {
        Bundle bundle = new Bundle();
        bundle.putSerializable(""msg"", line);
        dispatchAction(Action.SERVER_MSG, bundle);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onNewLogLine(Logging.LogLine line) {
        Bundle bundle = new Bundle();
        bundle.putSerializable(""msg"", line);
        dispatchAction(Action.SERVER_MSG, bundle);
    }
","['    ', 'public', ' ', 'void', ' ', 'onNewLogLine', '(', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '        ', 'bundle', '.', 'putSerializable', '(', '""', 'msg', '""', ',', ' ', 'line', ')', ';', '\n', '        ', 'dispatchAction', '(', 'Action', '.', 'SERVER_MSG', ',', ' ', 'bundle', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinService.java,find,"        public static Action find(Intent intent) {
            for (Action action : values())
                if (Objects.equals(action.toString(), intent.getAction()))
                    return action;

            return null;
        }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        public static Action find(Intent intent) {
            for (Action action : values())
                if (Objects.equals(action.toString(), intent.getAction()))
                    return action;

            return null;
        }
","['        ', 'public', ' ', 'static', ' ', 'Action', ' ', 'find', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'for', ' ', '(', 'Action', ' ', 'action', ' ', ':', ' ', 'values', '(', ')', ')', '\n', '                ', 'if', ' ', '(', 'Objects', '.', 'equals', '(', 'action', '.', 'toString', '(', ')', ',', ' ', 'intent', '.', 'getAction', '(', ')', ')', ')', '\n', '                    ', 'return', ' ', 'action', ';', '\n', '\n', '            ', 'return', ' ', 'null', ';', '\n', '        ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinService.java,toString,"        public String toString() {
            return ""com.gianlu.aria2android."" + name();
        }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        public String toString() {
            return ""com.gianlu.aria2android."" + name();
        }
","['        ', 'public', ' ', 'String', ' ', 'toString', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', 'com.gianlu.aria2android.', '""', ' ', '+', ' ', 'name', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);
        manager.notify(BinService.NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);
        manager.notify(BinService.NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '_stop', ')', ' ', 'return', ';', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '        ', 'manager', '.', 'notify', '(', 'BinService', '.', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,StartConfig.java,fromPrefs,"    public static StartConfig fromPrefs(Context context) {
        return new StartConfig(Prefs.getString(context, PKeys.OUTPUT_DIRECTORY, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath()),
                null, // TODO: Config file editor",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public static StartConfig fromPrefs(Context context) {
        return new StartConfig(Prefs.getString(context, PKeys.OUTPUT_DIRECTORY, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath()),
                null, 
","['    ', 'public', ' ', 'static', ' ', 'StartConfig', ' ', 'fromPrefs', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'StartConfig', '(', 'Prefs', '.', 'getString', '(', 'context', ',', ' ', 'PKeys', '.', 'OUTPUT_DIRECTORY', ',', ' ', 'Environment', '.', 'getExternalStoragePublicDirectory', '(', 'Environment', '.', 'DIRECTORY_DOWNLOADS', ')', '.', 'getAbsolutePath', '(', ')', ')', ',', '\n', '                ', 'null', ',', ' ', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,StreamListener.java,run,"    public void run() {
        BufferedReader in = new BufferedReader(new InputStreamReader(this.in));
        BufferedReader err = new BufferedReader(new InputStreamReader(this.err));

        while (!_shouldStop) {
            try {",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void run() {
        BufferedReader in = new BufferedReader(new InputStreamReader(this.in));
        BufferedReader err = new BufferedReader(new InputStreamReader(this.err));

        while (!_shouldStop) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'in', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'this', '.', 'in', ')', ')', ';', '\n', '        ', 'BufferedReader', ' ', 'err', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'this', '.', 'err', ')', ')', ';', '\n', '\n', '        ', 'while', ' ', '(', '!', '_shouldStop', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,downloadAndExtractBin,"    public static void downloadAndExtractBin(final Context context, final GitHubApi.Release.Asset asset, final IDownloadAndExtractBin listener) {
        final Handler handler = new Handler(context.getMainLooper());
        new Thread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public static void downloadAndExtractBin(final Context context, final GitHubApi.Release.Asset asset, final IDownloadAndExtractBin listener) {
        final Handler handler = new Handler(context.getMainLooper());
        new Thread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'downloadAndExtractBin', '(', 'final', ' ', 'Context', ' ', 'context', ',', ' ', 'final', ' ', 'GitHubApi', '.', 'Release', '.', 'Asset', ' ', 'asset', ',', ' ', 'final', ' ', 'IDownloadAndExtractBin', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Handler', ' ', 'handler', ' ', '=', ' ', 'new', ' ', 'Handler', '(', 'context', '.', 'getMainLooper', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,run,"            public void run() {
                try {
                    HttpURLConnection conn = (HttpURLConnection) new URL(asset.downloadUrl).openConnection();",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void run() {
                try {
                    HttpURLConnection conn = (HttpURLConnection) new URL(asset.downloadUrl).openConnection();
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'new', ' ', 'URL', '(', 'asset', '.', 'downloadUrl', ')', '.', 'openConnection', '(', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,run,"                            public void run() {
                                listener.onBinDownloaded();
                            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                            public void run() {
                                listener.onBinDownloaded();
                            }
","['                            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                                ', 'listener', '.', 'onBinDownloaded', '(', ')', ';', '\n', '                            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,run,"                            public void run() {
                                listener.onBinExtracted();
                            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                            public void run() {
                                listener.onBinExtracted();
                            }
","['                            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                                ', 'listener', '.', 'onBinExtracted', '(', ')', ';', '\n', '                            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,run,"                        public void run() {
                            listener.onException(ex);
                        }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                        public void run() {
                            listener.onException(ex);
                        }
","['                        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                            ', 'listener', '.', 'onException', '(', 'ex', ')', ';', '\n', '                        ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,binAvailable,"    public static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.exists() && !file.isDirectory() && file.canExecute();
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public static boolean binAvailable(Context context) {
        File file = new File(context.getFilesDir(), ""aria2c"");
        return file.exists() && !file.isDirectory() && file.canExecute();
    }
","['    ', 'public', ' ', 'static', ' ', 'boolean', ' ', 'binAvailable', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'return', ' ', 'file', '.', 'exists', '(', ')', ' ', '&', '&', ' ', '!', 'file', '.', 'isDirectory', '(', ')', ' ', '&', '&', ' ', 'file', '.', 'canExecute', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,createCommandLine,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.useConfig) builder.append("" --conf-path="").append(config.configFile);
        else builder.append("" --no-conf=true"");

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        builder.append(Utils.optionsParser(config.options));

        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.useConfig) builder.append("" --conf-path="").append(config.configFile);
        else builder.append("" --no-conf=true"");

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        builder.append(Utils.optionsParser(config.options));

        return builder.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'createCommandLine', '(', 'Context', ' ', 'context', ',', ' ', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'builder', '.', 'append', '(', 'binPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --daemon', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --check-certificate=false', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --input-file=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --dir=', '""', ')', '.', 'append', '(', 'config', '.', 'outputDirectory', ')', '\n', '                ', '.', 'append', '(', '""', ' --enable-rpc', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-all=true', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-port=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcPort', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-secret=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcToken', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'useConfig', ')', ' ', 'builder', '.', 'append', '(', '""', ' --conf-path=', '""', ')', '.', 'append', '(', 'config', '.', 'configFile', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' --no-conf=true', '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'saveSession', ')', '\n', '            ', 'builder', '.', 'append', '(', '""', ' --save-session=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '.', 'append', '(', '""', ' --save-session-interval=10', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'builder', '.', 'append', '(', 'Utils', '.', 'optionsParser', '(', 'config', '.', 'options', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,onBinDownloaded,"        void onBinDownloaded();

        void onBinExtracted();

        void onException(Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        void onBinDownloaded();

        void onBinExtracted();

        void onException(Exception ex);
    }
}
","['        ', 'void', ' ', 'onBinDownloaded', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onBinExtracted', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BinUtils.java,onBinExtracted,"        void onBinExtracted();

        void onException(Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        void onBinExtracted();

        void onException(Exception ex);
    }
}
","['        ', 'void', ' ', 'onBinExtracted', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,BootCompletedReceiver.java,onReceive,"    public void onReceive(Context context, Intent intent) {
        if (!Objects.equals(intent.getAction(), Intent.ACTION_BOOT_COMPLETED))
            return;

        if (Prefs.getBoolean(context, PKeys.START_AT_BOOT, false))
            context.startService(new Intent(context, BinService.class)",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onReceive(Context context, Intent intent) {
        if (!Objects.equals(intent.getAction(), Intent.ACTION_BOOT_COMPLETED))
            return;

        if (Prefs.getBoolean(context, PKeys.START_AT_BOOT, false))
            context.startService(new Intent(context, BinService.class)
","['    ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'Objects', '.', 'equals', '(', 'intent', '.', 'getAction', '(', ')', ',', ' ', 'Intent', '.', 'ACTION_BOOT_COMPLETED', ')', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'context', ',', ' ', 'PKeys', '.', 'START_AT_BOOT', ',', ' ', 'false', ')', ')', '\n', '            ', 'context', '.', 'startService', '(', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'BinService', '.', 'class', ')', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,ReleasesAdapter.java,onClick,"            public void onClick(View view) {
                if (listener != null) listener.onReleaseSelected(release);
            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onClick(View view) {
                if (listener != null) listener.onReleaseSelected(release);
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onReleaseSelected', '(', 'release', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,DownloadBinActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download_bin);

        layout = findViewById(R.id.downloadBin);
        loading = findViewById(R.id.downloadBin_loading);
        progress = findViewById(R.id.downloadBin_progress);
        list = findViewById(R.id.downloadBin_list);

        progress.setText(R.string.retrievingReleases);
        GitHubApi.get(this).getReleases(""aria2"", ""aria2"", this);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download_bin);

        layout = findViewById(R.id.downloadBin);
        loading = findViewById(R.id.downloadBin_loading);
        progress = findViewById(R.id.downloadBin_progress);
        list = findViewById(R.id.downloadBin_list);

        progress.setText(R.string.retrievingReleases);
        GitHubApi.get(this).getReleases(""aria2"", ""aria2"", this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_download_bin', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin', ')', ';', '\n', '        ', 'loading', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_loading', ')', ';', '\n', '        ', 'progress', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_progress', ')', ';', '\n', '        ', 'list', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_list', ')', ';', '\n', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'retrievingReleases', ')', ';', '\n', '        ', 'GitHubApi', '.', 'get', '(', 'this', ')', '.', 'getReleases', '(', '""', 'aria2', '""', ',', ' ', '""', 'aria2', '""', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,DownloadBinActivity.java,onResult,"    public void onResult(List<GitHubApi.Release> result) {
        loading.setVisibility(View.GONE);
        MessageLayout.hide(layout);
        list.setVisibility(View.VISIBLE);
        list.setAdapter(new ReleasesAdapter(this, result, this));
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onResult(List<GitHubApi.Release> result) {
        loading.setVisibility(View.GONE);
        MessageLayout.hide(layout);
        list.setVisibility(View.VISIBLE);
        list.setAdapter(new ReleasesAdapter(this, result, this));
    }
","['    ', 'public', ' ', 'void', ' ', 'onResult', '(', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ' ', '{', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'MessageLayout', '.', 'hide', '(', 'layout', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'list', '.', 'setAdapter', '(', 'new', ' ', 'ReleasesAdapter', '(', 'this', ',', ' ', 'result', ',', ' ', 'this', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,DownloadBinActivity.java,onBinDownloaded,"    public void onBinDownloaded() {
        progress.setText(R.string.extractingBin);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onBinDownloaded() {
        progress.setText(R.string.extractingBin);
    }
","['    ', 'public', ' ', 'void', ' ', 'onBinDownloaded', '(', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'extractingBin', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,DownloadBinActivity.java,onBinExtracted,"    public void onBinExtracted() {
        progress.setText(R.string.binExtracted);
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onBinExtracted() {
        progress.setText(R.string.binExtracted);
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }
","['    ', 'public', ' ', 'void', ' ', 'onBinExtracted', '(', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'binExtracted', ')', ';', '\n', '        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', '\n', '                ', '.', 'addFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ' ', '|', ' ', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ')', ';', '\n', '        ', 'finish', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,DownloadBinActivity.java,onException,"    public void onException(Exception ex) {
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        MessageLayout.show(layout, getString(R.string.failedRetrievingReleases_reason, ex.getMessage()), R.drawable.ic_error_outline_black_48dp);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onException(Exception ex) {
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        MessageLayout.show(layout, getString(R.string.failedRetrievingReleases_reason, ex.getMessage()), R.drawable.ic_error_outline_black_48dp);
    }
","['    ', 'public', ' ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'MessageLayout', '.', 'show', '(', 'layout', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'failedRetrievingReleases_reason', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ',', ' ', 'R', '.', 'drawable', '.', 'ic_error_outline_black_48dp', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,DownloadBinActivity.java,onReleaseSelected,"    public void onReleaseSelected(GitHubApi.Release release) {
        progress.setText(R.string.downloadingBin);
        loading.setVisibility(View.VISIBLE);
        list.setVisibility(View.GONE);
        MessageLayout.hide(layout);

        BinUtils.downloadAndExtractBin(this, release.androidAsset, this);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onReleaseSelected(GitHubApi.Release release) {
        progress.setText(R.string.downloadingBin);
        loading.setVisibility(View.VISIBLE);
        list.setVisibility(View.GONE);
        MessageLayout.hide(layout);

        BinUtils.downloadAndExtractBin(this, release.androidAsset, this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onReleaseSelected', '(', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'downloadingBin', ')', ';', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'MessageLayout', '.', 'hide', '(', 'layout', ')', ';', '\n', '\n', '        ', 'BinUtils', '.', 'downloadAndExtractBin', '(', 'this', ',', ' ', 'release', '.', 'androidAsset', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onClick,"                            public void onClick(DialogInterface dialogInterface, int i) {
                                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_PERMISSION_CODE);
                            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                            public void onClick(DialogInterface dialogInterface, int i) {
                                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_PERMISSION_CODE);
                            }
","['                            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                ', 'ActivityCompat', '.', 'requestPermissions', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'Manifest', '.', 'permission', '.', 'WRITE_EXTERNAL_STORAGE', '}', ',', ' ', 'WRITE_PERMISSION_CODE', ')', ';', '\n', '                            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.SAVE_SESSION, b);
            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.SAVE_SESSION, b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'compoundButton', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'SAVE_SESSION', ',', ' ', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.START_AT_BOOT, b);
            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.START_AT_BOOT, b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'START_AT_BOOT', ',', ' ', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.USE_CONFIG, b);
                configFile.setEnabled(b);
                if (!b) configFile.setErrorEnabled(false);
            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.USE_CONFIG, b);
                configFile.setEnabled(b);
                if (!b) configFile.setErrorEnabled(false);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'USE_CONFIG', ',', ' ', 'b', ')', ';', '\n', '                ', 'configFile', '.', 'setEnabled', '(', 'b', ')', ';', '\n', '                ', 'if', ' ', '(', '!', 'b', ')', ' ', 'configFile', '.', 'setErrorEnabled', '(', 'false', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                if (!useConfig.isChecked()) return;

                File file = new File(text);
                if (file.exists() && file.isFile()) {
                    if (file.canRead()) {",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                if (!useConfig.isChecked()) return;

                File file = new File(text);
                if (file.exists() && file.isFile()) {
                    if (file.canRead()) {
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'useConfig', '.', 'isChecked', '(', ')', ')', ' ', 'return', ';', '\n', '\n', '                ', 'File', ' ', 'file', ' ', '=', ' ', 'new', ' ', 'File', '(', 'text', ')', ';', '\n', '                ', 'if', ' ', '(', 'file', '.', 'exists', '(', ')', ' ', '&', '&', ' ', 'file', '.', 'isFile', '(', ')', ')', ' ', '{', '\n', '                    ', 'if', ' ', '(', 'file', '.', 'canRead', '(', ')', ')', ' ', '{', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                File path = new File(text);
                if (path.exists()) {
                    if (path.canWrite()) {",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                File path = new File(text);
                if (path.exists()) {
                    if (path.canWrite()) {
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'File', ' ', 'path', ' ', '=', ' ', 'new', ' ', 'File', '(', 'text', ')', ';', '\n', '                ', 'if', ' ', '(', 'path', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '                    ', 'if', ' ', '(', 'path', '.', 'canWrite', '(', ')', ')', ' ', '{', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int port;
                try {
                    port = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidPort);
                }

                if (port > 0 && port < 65535) Prefs.putInt(MainActivity.this, PKeys.RPC_PORT, port);
                else throw new SuperEditText.InvalidInputException(R.string.invalidPort);",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int port;
                try {
                    port = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidPort);
                }

                if (port > 0 && port < 65535) Prefs.putInt(MainActivity.this, PKeys.RPC_PORT, port);
                else throw new SuperEditText.InvalidInputException(R.string.invalidPort);
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'int', ' ', 'port', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'port', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'text', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidPort', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'if', ' ', '(', 'port', ' ', '>', ' ', '0', ' ', '&', '&', ' ', 'port', ' ', '<', ' ', '65535', ')', ' ', 'Prefs', '.', 'putInt', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'RPC_PORT', ',', ' ', 'port', ')', ';', '\n', '                ', 'else', ' ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidPort', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                if (text.isEmpty())
                    throw new SuperEditText.InvalidInputException(R.string.invalidToken);",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                if (text.isEmpty())
                    throw new SuperEditText.InvalidInputException(R.string.invalidToken);
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'if', ' ', '(', 'text', '.', 'isEmpty', '(', ')', ')', '\n', '                    ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidToken', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.SHOW_PERFORMANCE, b);
                updateDelay.setEnabled(b);
            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.SHOW_PERFORMANCE, b);
                updateDelay.setEnabled(b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'SHOW_PERFORMANCE', ',', ' ', 'b', ')', ';', '\n', '                ', 'updateDelay', '.', 'setEnabled', '(', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int delay;
                try {
                    delay = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidUpdateDelay);
                }

                if (delay > 0)
                    Prefs.putInt(MainActivity.this, PKeys.NOTIFICATION_UPDATE_DELAY, delay);",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int delay;
                try {
                    delay = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidUpdateDelay);
                }

                if (delay > 0)
                    Prefs.putInt(MainActivity.this, PKeys.NOTIFICATION_UPDATE_DELAY, delay);
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'int', ' ', 'delay', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'delay', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'text', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidUpdateDelay', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'if', ' ', '(', 'delay', ' ', '>', ' ', '0', ')', '\n', '                    ', 'Prefs', '.', 'putInt', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'NOTIFICATION_UPDATE_DELAY', ',', ' ', 'delay', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) startService();
                else stopService();

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked) configFile.setEnabled(false);
                else configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked) updateDelay.setEnabled(false);
                else updateDelay.setEnabled(showPerformance.isChecked());",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) startService();
                else stopService();

                outputPath.setEnabled(!isChecked);
                useConfig.setEnabled(!isChecked);
                if (isChecked) configFile.setEnabled(false);
                else configFile.setEnabled(useConfig.isChecked());
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked) updateDelay.setEnabled(false);
                else updateDelay.setEnabled(showPerformance.isChecked());
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'startService', '(', ')', ';', '\n', '                ', 'else', ' ', 'stopService', '(', ')', ';', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'useConfig', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'configFile', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', ' ', 'configFile', '.', 'setEnabled', '(', 'useConfig', '.', 'isChecked', '(', ')', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'showPerformance', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'updateDelay', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', ' ', 'updateDelay', '.', 'setEnabled', '(', 'showPerformance', '.', 'isChecked', '(', ')', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onClick,"            public void onClick(View v) {
                openAria2App();
            }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void onClick(View v) {
                openAria2App();
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'openAria2App', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onClick,"                    public void onClick(DialogInterface dialog, int which) {
                        try {
",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                    public void onClick(DialogInterface dialog, int which) {
                        try {
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,openAria2App,"    private void openAria2App() {
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.logMe(this, ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private void openAria2App() {
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.logMe(this, ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();
","['    ', 'private', ' ', 'void', ' ', 'openAria2App', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'getPackageManager', '(', ')', '.', 'getPackageInfo', '(', '""', 'com.gianlu.aria2app', '""', ',', ' ', '0', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'PackageManager', '.', 'NameNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'logMe', '(', 'this', ',', ' ', 'ex', ')', ';', '\n', '            ', 'installAria2App', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'isRunning', ')', ' ', '{', '\n', '            ', 'startAria2App', '(', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onClick,"                        public void onClick(DialogInterface dialogInterface, int i) {
                            startAria2App();
                        }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                        public void onClick(DialogInterface dialogInterface, int i) {
                            startAria2App();
                        }
","['                        ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                            ', 'startAria2App', '(', ')', ';', '\n', '                        ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,startAria2App,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(this, PKeys.RPC_PORT, 6800))
                    .putExtra(""token"", Prefs.getString(this, PKeys.RPC_TOKEN, ""aria2"")));
        }

        ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                .setCategory(ThisApplication.CATEGORY_USER_INPUT)",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(this, PKeys.RPC_PORT, 6800))
                    .putExtra(""token"", Prefs.getString(this, PKeys.RPC_TOKEN, ""aria2"")));
        }

        ThisApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                .setCategory(ThisApplication.CATEGORY_USER_INPUT)
","['    ', 'private', ' ', 'void', ' ', 'startAria2App', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'intent', '\n', '                    ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'port', '""', ',', ' ', 'Prefs', '.', 'getInt', '(', 'this', ',', ' ', 'PKeys', '.', 'RPC_PORT', ',', ' ', '6800', ')', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'token', '""', ',', ' ', 'Prefs', '.', 'getString', '(', 'this', ',', ' ', 'PKeys', '.', 'RPC_TOKEN', ',', ' ', '""', 'aria2', '""', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'ThisApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_USER_INPUT', ')', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onClick,"                            public void onClick(DialogInterface dialogInterface, int i) {
                                if (BinUtils.delete(MainActivity.this)) {
                                    startActivity(new Intent(MainActivity.this, DownloadBinActivity.class)",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                            public void onClick(DialogInterface dialogInterface, int i) {
                                if (BinUtils.delete(MainActivity.this)) {
                                    startActivity(new Intent(MainActivity.this, DownloadBinActivity.class)
","['                            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                ', 'if', ' ', '(', 'BinUtils', '.', 'delete', '(', 'MainActivity', '.', 'this', ')', ')', ' ', '{', '\n', '                                    ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'DownloadBinActivity', '.', 'class', ')', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,MainActivity.java,onReceive,"        public void onReceive(Context context, Intent intent) {
            BinService.Action action = BinService.Action.find(intent);
            if (action != null) {
                switch (action) {",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        public void onReceive(Context context, Intent intent) {
            BinService.Action action = BinService.Action.find(intent);
            if (action != null) {
                switch (action) {
","['        ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'BinService', '.', 'Action', ' ', 'action', ' ', '=', ' ', 'BinService', '.', 'Action', '.', 'find', '(', 'intent', ')', ';', '\n', '            ', 'if', ' ', '(', 'action', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'switch', ' ', '(', 'action', ')', ' ', '{', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,GitHubApi.java,get,"    public static GitHubApi get(Context context) {
        if (instance == null) instance = new GitHubApi(context);
        return instance;
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public static GitHubApi get(Context context) {
        if (instance == null) instance = new GitHubApi(context);
        return instance;
    }
","['    ', 'public', ' ', 'static', ' ', 'GitHubApi', ' ', 'get', '(', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'instance', ' ', '=', '=', ' ', 'null', ')', ' ', 'instance', ' ', '=', ' ', 'new', ' ', 'GitHubApi', '(', 'context', ')', ';', '\n', '        ', 'return', ' ', 'instance', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,GitHubApi.java,basicRequestSync,"    private HttpURLConnection basicRequestSync(String url) throws IOException, StatusCodeException {
        HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
        conn.connect();

        if (conn.getResponseCode() == 200) return conn;
        else throw new StatusCodeException(conn.getResponseCode(), conn.getResponseMessage());",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private HttpURLConnection basicRequestSync(String url) throws IOException, StatusCodeException {
        HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
        conn.connect();

        if (conn.getResponseCode() == 200) return conn;
        else throw new StatusCodeException(conn.getResponseCode(), conn.getResponseMessage());
","['    ', 'private', ' ', 'HttpURLConnection', ' ', 'basicRequestSync', '(', 'String', ' ', 'url', ')', ' ', 'throws', ' ', 'IOException', ',', ' ', 'StatusCodeException', ' ', '{', '\n', '        ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'new', ' ', 'URL', '(', 'url', ')', '.', 'openConnection', '(', ')', ';', '\n', '        ', 'conn', '.', 'connect', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'conn', '.', 'getResponseCode', '(', ')', ' ', '=', '=', ' ', '200', ')', ' ', 'return', ' ', 'conn', ';', '\n', '        ', 'else', ' ', 'throw', ' ', 'new', ' ', 'StatusCodeException', '(', 'conn', '.', 'getResponseCode', '(', ')', ',', ' ', 'conn', '.', 'getResponseMessage', '(', ')', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,GitHubApi.java,run,"            public void run() {
                try {
                    HttpURLConnection conn = basicRequestSync(""https://api.github.com/repos/"" + author + ""/"" + repo + ""/releases"");",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"            public void run() {
                try {
                    HttpURLConnection conn = basicRequestSync(""https://api.github.com/repos/"" + author + ""/"" + repo + ""/releases"");
","['            ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', 'basicRequestSync', '(', '""', 'https://api.github.com/repos/', '""', ' ', '+', ' ', 'author', ' ', '+', ' ', '""', '/', '""', ' ', '+', ' ', 'repo', ' ', '+', ' ', '""', '/releases', '""', ')', ';', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,GitHubApi.java,run,"                        public void run() {
                            listener.onResult(releases);
                        }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"                        public void run() {
                            listener.onResult(releases);
                        }
","['                        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                            ', 'listener', '.', 'onResult', '(', 'releases', ')', ';', '\n', '                        ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,GitHubApi.java,onResult,"        void onResult(E result);

        void onException(Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        public Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            public Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        void onResult(E result);

        void onException(Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        public Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            public Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'onResult', '(', 'E', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'public', ' ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'public', ' ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,GitHubApi.java,onException,"        void onException(Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        public Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            public Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        void onException(Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        public Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            public Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'onException', '(', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'public', ' ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'public', ' ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,SuperEditText.java,init,"    private void init() {
        text = new TextInputEditText(getContext());
        text.addTextChangedListener(this);
        addView(text);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    private void init() {
        text = new TextInputEditText(getContext());
        text.addTextChangedListener(this);
        addView(text);
    }
","['    ', 'private', ' ', 'void', ' ', 'init', '(', ')', ' ', '{', '\n', '        ', 'text', ' ', '=', ' ', 'new', ' ', 'TextInputEditText', '(', 'getContext', '(', ')', ')', ';', '\n', '        ', 'text', '.', 'addTextChangedListener', '(', 'this', ')', ';', '\n', '        ', 'addView', '(', 'text', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,SuperEditText.java,beforeTextChanged,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                text.setError(getContext().getString(ex.messageId));
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                text.setError(getContext().getString(ex.messageId));
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'beforeTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,SuperEditText.java,onTextChanged,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                text.setError(getContext().getString(ex.messageId));
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                text.setError(getContext().getString(ex.messageId));
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,SuperEditText.java,afterTextChanged,"    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,SuperEditText.java,validate,"        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,ThisApplication.java,onCreate,"    public void onCreate() {
        super.onCreate();

        CommonUtils.setDebug(BuildConfig.DEBUG);
        Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler(this));

        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(!BuildConfig.DEBUG);
        tracker = getTracker(this);
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    public void onCreate() {
        super.onCreate();

        CommonUtils.setDebug(BuildConfig.DEBUG);
        Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler(this));

        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(!BuildConfig.DEBUG);
        tracker = getTracker(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onCreate', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', ')', ';', '\n', '\n', '        ', 'CommonUtils', '.', 'setDebug', '(', 'BuildConfig', '.', 'DEBUG', ')', ';', '\n', '        ', 'Thread', '.', 'setDefaultUncaughtExceptionHandler', '(', 'new', ' ', 'UncaughtExceptionHandler', '(', 'this', ')', ')', ';', '\n', '\n', '        ', 'FirebaseAnalytics', '.', 'getInstance', '(', 'this', ')', '.', 'setAnalyticsCollectionEnabled', '(', '!', 'BuildConfig', '.', 'DEBUG', ')', ';', '\n', '        ', 'tracker', ' ', '=', ' ', 'getTracker', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8317a776b91f7a2141ddd459d7a097ac210896e5,Utils.java,optionsParser,"    static String optionsParser(@Nullable Map<String, String> options) {
        if (options == null || options.isEmpty()) return """";
        StringBuilder extended = new StringBuilder();

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty() || entry.getValue().isEmpty()) continue;
            extended.append("" --"").append(entry.getKey()).append(""="").append(entry.getValue());
        }

        return extended.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/8317a776b91f7a2141ddd459d7a097ac210896e5,"    static String optionsParser(@Nullable Map<String, String> options) {
        if (options == null || options.isEmpty()) return """";
        StringBuilder extended = new StringBuilder();

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty() || entry.getValue().isEmpty()) continue;
            extended.append("" --"").append(entry.getKey()).append(""="").append(entry.getValue());
        }

        return extended.toString();
    }
","['    ', 'static', ' ', 'String', ' ', 'optionsParser', '(', '@Nullable', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'options', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'options', '.', 'isEmpty', '(', ')', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '        ', 'StringBuilder', ' ', 'extended', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'options', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'entry', '.', 'getKey', '(', ')', '.', 'isEmpty', '(', ')', ' ', '|', '|', ' ', 'entry', '.', 'getValue', '(', ')', '.', 'isEmpty', '(', ')', ')', ' ', 'continue', ';', '\n', '            ', 'extended', '.', 'append', '(', '""', ' --', '""', ')', '.', 'append', '(', 'entry', '.', 'getKey', '(', ')', ')', '.', 'append', '(', '""', '=', '""', ')', '.', 'append', '(', 'entry', '.', 'getValue', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'extended', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,BinService.java,killService,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            dispatchAction(Action.SERVER_EX, ex, null);
        }

        if (process != null) process.destroy();
        if (monitor != null) monitor.stopSafe();
        if (streamListener != null) streamListener.stopSafe();
        dispatchAction(Action.SERVER_STOP, null, null);

        manager.cancel(NOTIFICATION_ID);
        stopSelf();
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    private void killService() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
            process.waitFor();
        } catch (IOException | InterruptedException ex) {
            dispatchAction(Action.SERVER_EX, ex, null);
        }

        if (process != null) process.destroy();
        if (monitor != null) monitor.stopSafe();
        if (streamListener != null) streamListener.stopSafe();
        dispatchAction(Action.SERVER_STOP, null, null);

        manager.cancel(NOTIFICATION_ID);
        stopSelf();
    }
","['    ', 'private', ' ', 'void', ' ', 'killService', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '            ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'dispatchAction', '(', 'Action', '.', 'SERVER_EX', ',', ' ', 'ex', ',', ' ', 'null', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', 'process', '.', 'destroy', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', ' ', 'monitor', '.', 'stopSafe', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'streamListener', ' ', '!', '=', ' ', 'null', ')', ' ', 'streamListener', '.', 'stopSafe', '(', ')', ';', '\n', '        ', 'dispatchAction', '(', 'Action', '.', 'SERVER_STOP', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '\n', '        ', 'manager', '.', 'cancel', '(', 'NOTIFICATION_ID', ')', ';', '\n', '        ', 'stopSelf', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,BinService.java,dispatchAction,"    private void dispatchAction(Action action, @Nullable Throwable ex, @Nullable Logging.LogLine msg) {
        Intent intent = new Intent(action.toString());
        if (ex != null) intent.putExtra(""ex"", ex);
        if (msg != null) intent.putExtra(""msg"", msg);
        LocalBroadcastManager.getInstance(this).sendBroadcastSync(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    private void dispatchAction(Action action, @Nullable Throwable ex, @Nullable Logging.LogLine msg) {
        Intent intent = new Intent(action.toString());
        if (ex != null) intent.putExtra(""ex"", ex);
        if (msg != null) intent.putExtra(""msg"", msg);
        LocalBroadcastManager.getInstance(this).sendBroadcastSync(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchAction', '(', 'Action', ' ', 'action', ',', ' ', '@Nullable', ' ', 'Throwable', ' ', 'ex', ',', ' ', '@Nullable', ' ', 'Logging', '.', 'LogLine', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'action', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'ex', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'ex', '""', ',', ' ', 'ex', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'msg', '""', ',', ' ', 'msg', ')', ';', '\n', '        ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', '.', 'sendBroadcastSync', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,BinService.java,onNewLogLine,"    public void onNewLogLine(Logging.LogLine line) {
        dispatchAction(Action.SERVER_MSG, null, line);
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    public void onNewLogLine(Logging.LogLine line) {
        dispatchAction(Action.SERVER_MSG, null, line);
    }
","['    ', 'public', ' ', 'void', ' ', 'onNewLogLine', '(', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'dispatchAction', '(', 'Action', '.', 'SERVER_MSG', ',', ' ', 'null', ',', ' ', 'line', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,BinUtils.java,createCommandLine,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        builder.append(Utils.optionsParser(config.options));

        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        builder.append(Utils.optionsParser(config.options));

        return builder.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'createCommandLine', '(', 'Context', ' ', 'context', ',', ' ', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'builder', '.', 'append', '(', 'binPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --daemon', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --check-certificate=false', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --input-file=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --dir=', '""', ')', '.', 'append', '(', 'config', '.', 'outputDirectory', ')', '\n', '                ', '.', 'append', '(', '""', ' --enable-rpc', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-all=true', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-port=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcPort', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-secret=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcToken', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'saveSession', ')', '\n', '            ', 'builder', '.', 'append', '(', '""', ' --save-session=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '.', 'append', '(', '""', ' --save-session-interval=10', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'builder', '.', 'append', '(', 'Utils', '.', 'optionsParser', '(', 'config', '.', 'options', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) startService();
                else stopService();

                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked) updateDelay.setEnabled(false);
                else updateDelay.setEnabled(showPerformance.isChecked());",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                if (isChecked) startService();
                else stopService();

                outputPath.setEnabled(!isChecked);
                saveSession.setEnabled(!isChecked);
                startAtBoot.setEnabled(!isChecked);
                rpcToken.setEnabled(!isChecked);
                rpcPort.setEnabled(!isChecked);
                showPerformance.setEnabled(!isChecked);
                if (isChecked) updateDelay.setEnabled(false);
                else updateDelay.setEnabled(showPerformance.isChecked());
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'startService', '(', ')', ';', '\n', '                ', 'else', ' ', 'stopService', '(', ')', ';', '\n', '\n', '                ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'saveSession', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'startAtBoot', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcToken', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'rpcPort', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'showPerformance', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'updateDelay', '.', 'setEnabled', '(', 'false', ')', ';', '\n', '                ', 'else', ' ', 'updateDelay', '.', 'setEnabled', '(', 'showPerformance', '.', 'isChecked', '(', ')', ')', ';', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,PreferencesActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTitle(R.string.preferences);

        ActionBar actionBar = getSupportActionBar();
        if (actionBar != null) actionBar.setDisplayHomeAsUpEnabled(true);
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTitle(R.string.preferences);

        ActionBar actionBar = getSupportActionBar();
        if (actionBar != null) actionBar.setDisplayHomeAsUpEnabled(true);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'preferences', ')', ';', '\n', '\n', '        ', 'ActionBar', ' ', 'actionBar', ' ', '=', ' ', 'getSupportActionBar', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'actionBar', ' ', '!', '=', ' ', 'null', ')', ' ', 'actionBar', '.', 'setDisplayHomeAsUpEnabled', '(', 'true', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,PreferencesActivity.java,onIsMultiPane,"    public boolean onIsMultiPane() {
        return isXLargeTablet(this);
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    public boolean onIsMultiPane() {
        return isXLargeTablet(this);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onIsMultiPane', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'isXLargeTablet', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,PreferencesActivity.java,onBuildHeaders,"    public void onBuildHeaders(List<Header> target) {
        loadHeadersFromResource(R.xml.pref_headers, target);
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    public void onBuildHeaders(List<Header> target) {
        loadHeadersFromResource(R.xml.pref_headers, target);
    }
","['    ', 'public', ' ', 'void', ' ', 'onBuildHeaders', '(', 'List', '<', 'Header', '>', ' ', 'target', ')', ' ', '{', '\n', '        ', 'loadHeadersFromResource', '(', 'R', '.', 'xml', '.', 'pref_headers', ',', ' ', 'target', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,PreferencesActivity.java,onHeaderClick,"    public void onHeaderClick(Header header, int position) {
        if (header.iconRes == R.drawable.ic_announcement_black_24dp) {
            startActivity(new Intent(this, LogsActivity.class));
            return;
        }

        super.onHeaderClick(header, position);
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    public void onHeaderClick(Header header, int position) {
        if (header.iconRes == R.drawable.ic_announcement_black_24dp) {
            startActivity(new Intent(this, LogsActivity.class));
            return;
        }

        super.onHeaderClick(header, position);
    }
","['    ', 'public', ' ', 'void', ' ', 'onHeaderClick', '(', 'Header', ' ', 'header', ',', ' ', 'int', ' ', 'position', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'header', '.', 'iconRes', ' ', '=', '=', ' ', 'R', '.', 'drawable', '.', 'ic_announcement_black_24dp', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'LogsActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'super', '.', 'onHeaderClick', '(', 'header', ',', ' ', 'position', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,PreferencesActivity.java,isValidFragment,"    protected boolean isValidFragment(String fragmentName) {
        return AppCompatPreferenceFragment.class.getName().equals(fragmentName)
                || AboutFragment.class.getName().equals(fragmentName);",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    protected boolean isValidFragment(String fragmentName) {
        return AppCompatPreferenceFragment.class.getName().equals(fragmentName)
                || AboutFragment.class.getName().equals(fragmentName);
","['    ', 'protected', ' ', 'boolean', ' ', 'isValidFragment', '(', 'String', ' ', 'fragmentName', ')', ' ', '{', '\n', '        ', 'return', ' ', 'AppCompatPreferenceFragment', '.', 'class', '.', 'getName', '(', ')', '.', 'equals', '(', 'fragmentName', ')', '\n', '                ', '|', '|', ' ', 'AboutFragment', '.', 'class', '.', 'getName', '(', ')', '.', 'equals', '(', 'fragmentName', ')', ';', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,PreferencesActivity.java,sendAnalytics,"        protected void sendAnalytics() {
            ThisApplication.sendAnalytics(getActivity(), new HitBuilders.EventBuilder()
                    .setCategory(ThisApplication.CATEGORY_USER_INPUT)",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"        protected void sendAnalytics() {
            ThisApplication.sendAnalytics(getActivity(), new HitBuilders.EventBuilder()
                    .setCategory(ThisApplication.CATEGORY_USER_INPUT)
","['        ', 'protected', ' ', 'void', ' ', 'sendAnalytics', '(', ')', ' ', '{', '\n', '            ', 'ThisApplication', '.', 'sendAnalytics', '(', 'getActivity', '(', ')', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                    ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_USER_INPUT', ')', '\n', '<END>']"
master,0710a78f630752c6bc0ed632efbfcb5475e0d352,Utils.java,optionsParser,"    static String optionsParser(@Nullable Map<String, String> options) {
        if (options == null || options.isEmpty()) return """";
        StringBuilder extended = new StringBuilder();

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty()) continue;
            extended.append("" --"").append(entry.getKey()).append(""="").append(entry.getValue());
        }

        return extended.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/0710a78f630752c6bc0ed632efbfcb5475e0d352,"    static String optionsParser(@Nullable Map<String, String> options) {
        if (options == null || options.isEmpty()) return """";
        StringBuilder extended = new StringBuilder();

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty()) continue;
            extended.append("" --"").append(entry.getKey()).append(""="").append(entry.getValue());
        }

        return extended.toString();
    }
","['    ', 'static', ' ', 'String', ' ', 'optionsParser', '(', '@Nullable', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'options', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'options', '.', 'isEmpty', '(', ')', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '        ', 'StringBuilder', ' ', 'extended', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'options', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'entry', '.', 'getKey', '(', ')', '.', 'isEmpty', '(', ')', ')', ' ', 'continue', ';', '\n', '            ', 'extended', '.', 'append', '(', '""', ' --', '""', ')', '.', 'append', '(', 'entry', '.', 'getKey', '(', ')', ')', '.', 'append', '(', '""', '=', '""', ')', '.', 'append', '(', 'entry', '.', 'getValue', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'extended', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,StartConfig.java,fromPrefs,"    public static StartConfig fromPrefs(Context context) throws JSONException {
        HashMap<String, String> options = new HashMap<>();
        Utils.toMap(new JSONObject(Prefs.getBase64String(context, PKeys.CUSTOM_OPTIONS, ""{}"")), options);
        return new StartConfig(Prefs.getString(context, PKeys.OUTPUT_DIRECTORY, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath()),
                options,",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    public static StartConfig fromPrefs(Context context) throws JSONException {
        HashMap<String, String> options = new HashMap<>();
        Utils.toMap(new JSONObject(Prefs.getBase64String(context, PKeys.CUSTOM_OPTIONS, ""{}"")), options);
        return new StartConfig(Prefs.getString(context, PKeys.OUTPUT_DIRECTORY, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath()),
                options,
","['    ', 'public', ' ', 'static', ' ', 'StartConfig', ' ', 'fromPrefs', '(', 'Context', ' ', 'context', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'HashMap', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'Utils', '.', 'toMap', '(', 'new', ' ', 'JSONObject', '(', 'Prefs', '.', 'getBase64String', '(', 'context', ',', ' ', 'PKeys', '.', 'CUSTOM_OPTIONS', ',', ' ', '""', '{}', '""', ')', ')', ',', ' ', 'options', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'StartConfig', '(', 'Prefs', '.', 'getString', '(', 'context', ',', ' ', 'PKeys', '.', 'OUTPUT_DIRECTORY', ',', ' ', 'Environment', '.', 'getExternalStoragePublicDirectory', '(', 'Environment', '.', 'DIRECTORY_DOWNLOADS', ')', '.', 'getAbsolutePath', '(', ')', ')', ',', '\n', '                ', 'options', ',', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_config_editor);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_config_editor);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_config_editor', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'FAILED_LOADING_OPTIONS', ',', ' ', 'ex', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,notifyOptionsChanged,"    private void notifyOptionsChanged() {
        ((TextView) findViewById(R.id.configEditor_test)).setText(options.toString());
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    private void notifyOptionsChanged() {
        ((TextView) findViewById(R.id.configEditor_test)).setText(options.toString());
    }
","['    ', 'private', ' ', 'void', ' ', 'notifyOptionsChanged', '(', ')', ' ', '{', '\n', '        ', '(', '(', 'TextView', ')', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'configEditor_test', ')', ')', '.', 'setText', '(', 'options', '.', 'toString', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.config_editor, menu);
        return true;
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.config_editor, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'config_editor', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,load,"    private void load() throws JSONException {
        options = new HashMap<>();
        JSONObject obj = new JSONObject(Prefs.getBase64String(this, PKeys.CUSTOM_OPTIONS, ""{}""));
        Utils.toMap(obj, options);
        notifyOptionsChanged();
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    private void load() throws JSONException {
        options = new HashMap<>();
        JSONObject obj = new JSONObject(Prefs.getBase64String(this, PKeys.CUSTOM_OPTIONS, ""{}""));
        Utils.toMap(obj, options);
        notifyOptionsChanged();
    }
","['    ', 'private', ' ', 'void', ' ', 'load', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'options', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'JSONObject', ' ', 'obj', ' ', '=', ' ', 'new', ' ', 'JSONObject', '(', 'Prefs', '.', 'getBase64String', '(', 'this', ',', ' ', 'PKeys', '.', 'CUSTOM_OPTIONS', ',', ' ', '""', '{}', '""', ')', ')', ';', '\n', '        ', 'Utils', '.', 'toMap', '(', 'obj', ',', ' ', 'options', ')', ';', '\n', '        ', 'notifyOptionsChanged', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,save,"    private void save() {
        try {
            JSONObject obj = new JSONObject();",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    private void save() {
        try {
            JSONObject obj = new JSONObject();
","['    ', 'private', ' ', 'void', ' ', 'save', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'JSONObject', ' ', 'obj', ' ', '=', ' ', 'new', ' ', 'JSONObject', '(', ')', ';', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,importOptions,"    private void importOptions(String str) {
        options.putAll(Utils.optionsParser(str));
        hasChanges = true;
        notifyOptionsChanged();
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    private void importOptions(String str) {
        options.putAll(Utils.optionsParser(str));
        hasChanges = true;
        notifyOptionsChanged();
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptions', '(', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'options', '.', 'putAll', '(', 'Utils', '.', 'optionsParser', '(', 'str', ')', ')', ';', '\n', '        ', 'hasChanges', ' ', '=', ' ', 'true', ';', '\n', '        ', 'notifyOptionsChanged', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,importOptionsFromStream,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException ex) {
            Toaster.show(this, Utils.Messages.CANNOT_IMPORT, ex);
            return;
        }

        importOptions(builder.toString());
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException ex) {
            Toaster.show(this, Utils.Messages.CANNOT_IMPORT, ex);
            return;
        }

        importOptions(builder.toString());
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptionsFromStream', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'try', ' ', '(', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'line', ';', '\n', '            ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', 'builder', '.', 'append', '(', 'line', ')', '.', 'append', '(', ""'\\n'"", ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'CANNOT_IMPORT', ',', ' ', 'ex', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'importOptions', '(', 'builder', '.', 'toString', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,onActivityResult,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == IMPORT_CODE) {
            try {",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == IMPORT_CODE) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'requestCode', ' ', '=', '=', ' ', 'IMPORT_CODE', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,onClick,"                                public void onClick(DialogInterface dialogInterface, int i) {
                                    save();
                                    onBackPressed();
                                }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"                                public void onClick(DialogInterface dialogInterface, int i) {
                                    save();
                                    onBackPressed();
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                    ', 'save', '(', ')', ';', '\n', '                                    ', 'onBackPressed', '(', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,ConfigEditorActivity.java,onClick,"                                public void onClick(DialogInterface dialogInterface, int i) {
                                    onBackPressed();
                                }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"                                public void onClick(DialogInterface dialogInterface, int i) {
                                    onBackPressed();
                                }
","['                                ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                    ', 'onBackPressed', '(', ')', ';', '\n', '                                ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,MainActivity.java,onClick,"            public void onClick(View view) {
                startActivity(new Intent(MainActivity.this, ConfigEditorActivity.class));
            }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"            public void onClick(View view) {
                startActivity(new Intent(MainActivity.this, ConfigEditorActivity.class));
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'ConfigEditorActivity', '.', 'class', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                boolean successful;
                if (isChecked) successful = startService();
                else successful = stopService();

                if (successful) {
                    outputPath.setEnabled(!isChecked);",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                boolean successful;
                if (isChecked) successful = startService();
                else successful = stopService();

                if (successful) {
                    outputPath.setEnabled(!isChecked);
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'boolean', ' ', 'successful', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'successful', ' ', '=', ' ', 'startService', '(', ')', ';', '\n', '                ', 'else', ' ', 'successful', ' ', '=', ' ', 'stopService', '(', ')', ';', '\n', '\n', '                ', 'if', ' ', '(', 'successful', ')', ' ', '{', '\n', '                    ', 'outputPath', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,Utils.java,optionsBuilder,"    public static String optionsBuilder(@Nullable Map<String, String> options) {
        if (options == null || options.isEmpty()) return """";
        StringBuilder extended = new StringBuilder();

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty()) continue;
            extended.append("" --"").append(entry.getKey()).append(""="").append(entry.getValue());
        }

        return extended.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    public static String optionsBuilder(@Nullable Map<String, String> options) {
        if (options == null || options.isEmpty()) return """";
        StringBuilder extended = new StringBuilder();

        for (Map.Entry<String, String> entry : options.entrySet()) {
            if (entry.getKey().isEmpty()) continue;
            extended.append("" --"").append(entry.getKey()).append(""="").append(entry.getValue());
        }

        return extended.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'optionsBuilder', '(', '@Nullable', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'options', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'options', '.', 'isEmpty', '(', ')', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '        ', 'StringBuilder', ' ', 'extended', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'options', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'entry', '.', 'getKey', '(', ')', '.', 'isEmpty', '(', ')', ')', ' ', 'continue', ';', '\n', '            ', 'extended', '.', 'append', '(', '""', ' --', '""', ')', '.', 'append', '(', 'entry', '.', 'getKey', '(', ')', ')', '.', 'append', '(', '""', '=', '""', ')', '.', 'append', '(', 'entry', '.', 'getValue', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'extended', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,Utils.java,optionsParser,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            if (!line.startsWith(""--"") || !line.contains(""="")) continue;
            String[] split = line.split(""="");
            map.put(split[0].substring(2), split[1]);
        }
        return map;
    }",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            if (!line.startsWith(""--"") || !line.contains(""="")) continue;
            String[] split = line.split(""="");
            map.put(split[0].substring(2), split[1]);
        }
        return map;
    }
","['    ', 'public', ' ', 'static', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'optionsParser', '(', 'String', ' ', 'options', ')', ' ', '{', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'options', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', '!', 'line', '.', 'startsWith', '(', '""', '--', '""', ')', ' ', '|', '|', ' ', '!', 'line', '.', 'contains', '(', '""', '=', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'map', '.', 'put', '(', 'split', '[', '0', ']', '.', 'substring', '(', '2', ')', ',', ' ', 'split', '[', '1', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'map', ';', '\n', '    ', '}', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,Utils.java,toMap,"    public static void toMap(JSONObject obj, Map<String, String> map) throws JSONException {
        Iterator<String> iterator = obj.keys();
        while (iterator.hasNext()) {
            String key = iterator.next();",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    public static void toMap(JSONObject obj, Map<String, String> map) throws JSONException {
        Iterator<String> iterator = obj.keys();
        while (iterator.hasNext()) {
            String key = iterator.next();
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'toMap', '(', 'JSONObject', ' ', 'obj', ',', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'Iterator', '<', 'String', '>', ' ', 'iterator', ' ', '=', ' ', 'obj', '.', 'keys', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'iterator', '.', 'hasNext', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'key', ' ', '=', ' ', 'iterator', '.', 'next', '(', ')', ';', '\n', '<END>']"
master,16d97ea8408fd1dbeff8f650464d2141cd0573e9,Utils.java,toJSONObject,"    public static void toJSONObject(JSONObject obj, Map<String, String> map) throws JSONException {
        for (Map.Entry<String, String> entry : map.entrySet())
            obj.put(entry.getKey(), entry.getValue());",https://www.github.com/devgianlu/aria2android/commit/16d97ea8408fd1dbeff8f650464d2141cd0573e9,"    public static void toJSONObject(JSONObject obj, Map<String, String> map) throws JSONException {
        for (Map.Entry<String, String> entry : map.entrySet())
            obj.put(entry.getKey(), entry.getValue());
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'toJSONObject', '(', 'JSONObject', ' ', 'obj', ',', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'map', '.', 'entrySet', '(', ')', ')', '\n', '            ', 'obj', '.', 'put', '(', 'entry', '.', 'getKey', '(', ')', ',', ' ', 'entry', '.', 'getValue', '(', ')', ')', ';', '\n', '<END>']"
master,a84122eacbdacf1d7b33a3faf67bac3a243865e4,BinUtils.java,createCommandLine,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        builder.append(Utils.optionsBuilder(config.options));

        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/a84122eacbdacf1d7b33a3faf67bac3a243865e4,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        builder.append(Utils.optionsBuilder(config.options));

        return builder.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'createCommandLine', '(', 'Context', ' ', 'context', ',', ' ', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'builder', '.', 'append', '(', 'binPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --daemon', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --check-certificate=false', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --input-file=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --dir=', '""', ')', '.', 'append', '(', 'config', '.', 'outputDirectory', ')', '\n', '                ', '.', 'append', '(', '""', ' --enable-rpc', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-all=true', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-port=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcPort', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-secret=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcToken', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'saveSession', ')', '\n', '            ', 'builder', '.', 'append', '(', '""', ' --save-session=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '.', 'append', '(', '""', ' --save-session-interval=10', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'builder', '.', 'append', '(', 'Utils', '.', 'optionsBuilder', '(', 'config', '.', 'options', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,a84122eacbdacf1d7b33a3faf67bac3a243865e4,ConfigEditorActivity.java,onActivityResult,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == IMPORT_CODE) {
            if (resultCode == Activity.RESULT_OK) {",https://www.github.com/devgianlu/aria2android/commit/a84122eacbdacf1d7b33a3faf67bac3a243865e4,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == IMPORT_CODE) {
            if (resultCode == Activity.RESULT_OK) {
","['    ', 'protected', ' ', 'void', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'requestCode', ' ', '=', '=', ' ', 'IMPORT_CODE', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'resultCode', ' ', '=', '=', ' ', 'Activity', '.', 'RESULT_OK', ')', ' ', '{', '\n', '<END>']"
master,a84122eacbdacf1d7b33a3faf67bac3a243865e4,Utils.java,optionsParser,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"") || !line.contains(""="")) continue;
            String[] split = line.split(""="");
            map.put(split[0], split[1]);
        }
        return map;
    }",https://www.github.com/devgianlu/aria2android/commit/a84122eacbdacf1d7b33a3faf67bac3a243865e4,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"") || !line.contains(""="")) continue;
            String[] split = line.split(""="");
            map.put(split[0], split[1]);
        }
        return map;
    }
","['    ', 'public', ' ', 'static', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'optionsParser', '(', 'String', ' ', 'options', ')', ' ', '{', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'options', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'line', ' ', '=', ' ', 'line', '.', 'trim', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '#', '""', ')', ' ', '|', '|', ' ', '!', 'line', '.', 'contains', '(', '""', '=', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'map', '.', 'put', '(', 'split', '[', '0', ']', ',', ' ', 'split', '[', '1', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'map', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,onCreateViewHolder,"    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        return new ViewHolder(parent);
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        return new ViewHolder(parent);
    }
","['    ', 'public', ' ', 'ViewHolder', ' ', 'onCreateViewHolder', '(', 'ViewGroup', ' ', 'parent', ',', ' ', 'int', ' ', 'viewType', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'ViewHolder', '(', 'parent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,notifyOptionEdited,"    public void notifyOptionEdited(int pos) {
        edited.add(pos);
        notifyItemChanged(pos);
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    public void notifyOptionEdited(int pos) {
        edited.add(pos);
        notifyItemChanged(pos);
    }
","['    ', 'public', ' ', 'void', ' ', 'notifyOptionEdited', '(', 'int', ' ', 'pos', ')', ' ', '{', '\n', '        ', 'edited', '.', 'add', '(', 'pos', ')', ';', '\n', '        ', 'notifyItemChanged', '(', 'pos', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,saved,"    public void saved() {
        edited.clear();
        notifyDataSetChanged();
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    public void saved() {
        edited.clear();
        notifyDataSetChanged();
    }
","['    ', 'public', ' ', 'void', ' ', 'saved', '(', ')', ' ', '{', '\n', '        ', 'edited', '.', 'clear', '(', ')', ';', '\n', '        ', 'notifyDataSetChanged', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,onClick,"            public void onClick(View view) {
                if (listener != null) listener.onEditOption(entry.getKey());
            }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"            public void onClick(View view) {
                if (listener != null) listener.onEditOption(entry.getKey());
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onEditOption', '(', 'entry', '.', 'getKey', '(', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,onClick,"            public void onClick(View view) {
                if (listener != null) listener.onRemoveOption(entry.getKey());
            }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"            public void onClick(View view) {
                if (listener != null) listener.onRemoveOption(entry.getKey());
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onRemoveOption', '(', 'entry', '.', 'getKey', '(', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,onEditOption,"        void onEditOption(String key);

        void onRemoveOption(String key);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"        void onEditOption(String key);

        void onRemoveOption(String key);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onEditOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'public', ' ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,OptionsAdapter.java,onRemoveOption,"        void onRemoveOption(String key);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"        void onRemoveOption(String key);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'public', ' ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_config_editor);
        setTitle(R.string.customOptions);

        RecyclerView list = findViewById(R.id.configEditor_list);
        list.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        list.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        list.setAdapter(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_config_editor);
        setTitle(R.string.customOptions);

        RecyclerView list = findViewById(R.id.configEditor_list);
        list.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        list.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        list.setAdapter(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_config_editor', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'customOptions', ')', ';', '\n', '\n', '        ', 'RecyclerView', ' ', 'list', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'configEditor_list', ')', ';', '\n', '        ', 'list', '.', 'setLayoutManager', '(', 'new', ' ', 'LinearLayoutManager', '(', 'this', ',', ' ', 'LinearLayoutManager', '.', 'VERTICAL', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'list', '.', 'addItemDecoration', '(', 'new', ' ', 'DividerItemDecoration', '(', 'this', ',', ' ', 'DividerItemDecoration', '.', 'VERTICAL', ')', ')', ';', '\n', '        ', 'adapter', ' ', '=', ' ', 'new', ' ', 'OptionsAdapter', '(', 'this', ',', ' ', 'options', ',', ' ', 'this', ')', ';', '\n', '        ', 'list', '.', 'setAdapter', '(', 'adapter', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'FAILED_LOADING_OPTIONS', ',', ' ', 'ex', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,load,"    private void load() throws JSONException {
        options.clear();
        JSONObject obj = new JSONObject(Prefs.getBase64String(this, PKeys.CUSTOM_OPTIONS, ""{}""));
        Utils.toMap(obj, options);
        adapter.notifyDataSetChanged();
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    private void load() throws JSONException {
        options.clear();
        JSONObject obj = new JSONObject(Prefs.getBase64String(this, PKeys.CUSTOM_OPTIONS, ""{}""));
        Utils.toMap(obj, options);
        adapter.notifyDataSetChanged();
    }
","['    ', 'private', ' ', 'void', ' ', 'load', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'options', '.', 'clear', '(', ')', ';', '\n', '        ', 'JSONObject', ' ', 'obj', ' ', '=', ' ', 'new', ' ', 'JSONObject', '(', 'Prefs', '.', 'getBase64String', '(', 'this', ',', ' ', 'PKeys', '.', 'CUSTOM_OPTIONS', ',', ' ', '""', '{}', '""', ')', ')', ';', '\n', '        ', 'Utils', '.', 'toMap', '(', 'obj', ',', ' ', 'options', ')', ';', '\n', '        ', 'adapter', '.', 'notifyDataSetChanged', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,importOptions,"    private void importOptions(String str) {
        Map<String, String> newOptions = Utils.optionsParser(str);
        options.putAll(newOptions);
        hasChanges = true;
        adapter.notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    private void importOptions(String str) {
        Map<String, String> newOptions = Utils.optionsParser(str);
        options.putAll(newOptions);
        hasChanges = true;
        adapter.notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptions', '(', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'newOptions', ' ', '=', ' ', 'Utils', '.', 'optionsParser', '(', 'str', ')', ';', '\n', '        ', 'options', '.', 'putAll', '(', 'newOptions', ')', ';', '\n', '        ', 'hasChanges', ' ', '=', ' ', 'true', ';', '\n', '        ', 'adapter', '.', 'notifyItemRangeInserted', '(', 'options', '.', 'size', '(', ')', ' ', '-', ' ', 'newOptions', '.', 'size', '(', ')', ',', ' ', 'newOptions', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        String keyStr = key.getText().toString();
                        if (keyStr.startsWith(""--"")) keyStr = keyStr.substring(2);
                        options.put(keyStr, value.getText().toString());
                        int pos = options.size() - 1;
                        adapter.notifyItemInserted(pos);
                        adapter.notifyOptionEdited(pos);
                        hasChanges = true;
                    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        String keyStr = key.getText().toString();
                        if (keyStr.startsWith(""--"")) keyStr = keyStr.substring(2);
                        options.put(keyStr, value.getText().toString());
                        int pos = options.size() - 1;
                        adapter.notifyItemInserted(pos);
                        adapter.notifyOptionEdited(pos);
                        hasChanges = true;
                    }
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'String', ' ', 'keyStr', ' ', '=', ' ', 'key', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', '\n', '                        ', 'if', ' ', '(', 'keyStr', '.', 'startsWith', '(', '""', '--', '""', ')', ')', ' ', 'keyStr', ' ', '=', ' ', 'keyStr', '.', 'substring', '(', '2', ')', ';', '\n', '                        ', 'options', '.', 'put', '(', 'keyStr', ',', ' ', 'value', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ';', '\n', '                        ', 'int', ' ', 'pos', ' ', '=', ' ', 'options', '.', 'size', '(', ')', ' ', '-', ' ', '1', ';', '\n', '                        ', 'adapter', '.', 'notifyItemInserted', '(', 'pos', ')', ';', '\n', '                        ', 'adapter', '.', 'notifyOptionEdited', '(', 'pos', ')', ';', '\n', '                        ', 'hasChanges', ' ', '=', ' ', 'true', ';', '\n', '                    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        options.put(key, newValue.getText().toString());
                        int pos = CommonUtils.indexOf(options.keySet(), key);
                        if (pos != -1) adapter.notifyOptionEdited(pos);
                        hasChanges = true;
                    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        options.put(key, newValue.getText().toString());
                        int pos = CommonUtils.indexOf(options.keySet(), key);
                        if (pos != -1) adapter.notifyOptionEdited(pos);
                        hasChanges = true;
                    }
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'options', '.', 'put', '(', 'key', ',', ' ', 'newValue', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ';', '\n', '                        ', 'int', ' ', 'pos', ' ', '=', ' ', 'CommonUtils', '.', 'indexOf', '(', 'options', '.', 'keySet', '(', ')', ',', ' ', 'key', ')', ';', '\n', '                        ', 'if', ' ', '(', 'pos', ' ', '!', '=', ' ', '-', '1', ')', ' ', 'adapter', '.', 'notifyOptionEdited', '(', 'pos', ')', ';', '\n', '                        ', 'hasChanges', ' ', '=', ' ', 'true', ';', '\n', '                    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,onEditOption,"    public void onEditOption(String key) {
        showEditDialog(key);
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    public void onEditOption(String key) {
        showEditDialog(key);
    }
","['    ', 'public', ' ', 'void', ' ', 'onEditOption', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'showEditDialog', '(', 'key', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,ConfigEditorActivity.java,onRemoveOption,"    public void onRemoveOption(String key) {
        int pos = CommonUtils.indexOf(options.keySet(), key);
        if (pos != -1) {
            hasChanges = true;",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    public void onRemoveOption(String key) {
        int pos = CommonUtils.indexOf(options.keySet(), key);
        if (pos != -1) {
            hasChanges = true;
","['    ', 'public', ' ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'int', ' ', 'pos', ' ', '=', ' ', 'CommonUtils', '.', 'indexOf', '(', 'options', '.', 'keySet', '(', ')', ',', ' ', 'key', ')', ';', '\n', '        ', 'if', ' ', '(', 'pos', ' ', '!', '=', ' ', '-', '1', ')', ' ', '{', '\n', '            ', 'hasChanges', ' ', '=', ' ', 'true', ';', '\n', '<END>']"
master,eb74fe3015486ed77ea7b9068904256080a44dbb,Utils.java,optionsParser,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            map.put(split[0], split.length == 1 ? null : split[1]);
        }
        return map;
    }",https://www.github.com/devgianlu/aria2android/commit/eb74fe3015486ed77ea7b9068904256080a44dbb,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            map.put(split[0], split.length == 1 ? null : split[1]);
        }
        return map;
    }
","['    ', 'public', ' ', 'static', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'optionsParser', '(', 'String', ' ', 'options', ')', ' ', '{', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'options', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'line', ' ', '=', ' ', 'line', '.', 'trim', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '#', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'map', '.', 'put', '(', 'split', '[', '0', ']', ',', ' ', 'split', '.', 'length', ' ', '=', '=', ' ', '1', ' ', '?', ' ', 'null', ' ', ':', ' ', 'split', '[', '1', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'map', ';', '\n', '    ', '}', '\n', '<END>']"
master,2d4591c15fb42c00673da4af89e2c9a38ed122ab,BinService.java,dispatchAction,"    private void dispatchAction(Action action, @Nullable Throwable ex, @Nullable Logging.LogLine msg) {
        Intent intent = new Intent(action.toString());
        if (ex != null) intent.putExtra(""ex"", ex);
        if (msg != null) intent.putExtra(""msg"", msg);
        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/2d4591c15fb42c00673da4af89e2c9a38ed122ab,"    private void dispatchAction(Action action, @Nullable Throwable ex, @Nullable Logging.LogLine msg) {
        Intent intent = new Intent(action.toString());
        if (ex != null) intent.putExtra(""ex"", ex);
        if (msg != null) intent.putExtra(""msg"", msg);
        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchAction', '(', 'Action', ' ', 'action', ',', ' ', '@Nullable', ' ', 'Throwable', ' ', 'ex', ',', ' ', '@Nullable', ' ', 'Logging', '.', 'LogLine', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'action', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'ex', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'ex', '""', ',', ' ', 'ex', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'msg', '""', ',', ' ', 'msg', ')', ';', '\n', '        ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2d4591c15fb42c00673da4af89e2c9a38ed122ab,MainActivity.java,onReceive,"        public void onReceive(Context context, final Intent intent) {
            final BinService.Action action = BinService.Action.find(intent);
            if (action != null && intent != null) {
                runOnUiThread(new Runnable() {",https://www.github.com/devgianlu/aria2android/commit/2d4591c15fb42c00673da4af89e2c9a38ed122ab,"        public void onReceive(Context context, final Intent intent) {
            final BinService.Action action = BinService.Action.find(intent);
            if (action != null && intent != null) {
                runOnUiThread(new Runnable() {
","['        ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'final', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'final', ' ', 'BinService', '.', 'Action', ' ', 'action', ' ', '=', ' ', 'BinService', '.', 'Action', '.', 'find', '(', 'intent', ')', ';', '\n', '            ', 'if', ' ', '(', 'action', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'runOnUiThread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '<END>']"
master,2d4591c15fb42c00673da4af89e2c9a38ed122ab,MainActivity.java,run,"                    public void run() {
                        switch (action) {
                            case SERVER_START:",https://www.github.com/devgianlu/aria2android/commit/2d4591c15fb42c00673da4af89e2c9a38ed122ab,"                    public void run() {
                        switch (action) {
                            case SERVER_START:
","['                    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                        ', 'switch', ' ', '(', 'action', ')', ' ', '{', '\n', '                            ', 'case', ' ', 'SERVER_START', ':', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler());
        }

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler());
        }

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '            ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,startBin,"    private void startBin(StartConfig config) {
        try {
            process = Runtime.getRuntime().exec(BinUtils.createCommandLine(this, config)); // FIXME: May fail without noticing
            streamListener = new StreamListener(process.getInputStream(), process.getErrorStream(), this);
        } catch (IOException ex) {
            ex(ex);
        }

        dispatchBroadcast(Action.SERVER_START, null, null);
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    private void startBin(StartConfig config) {
        try {
            process = Runtime.getRuntime().exec(BinUtils.createCommandLine(this, config)); 
            streamListener = new StreamListener(process.getInputStream(), process.getErrorStream(), this);
        } catch (IOException ex) {
            ex(ex);
        }

        dispatchBroadcast(Action.SERVER_START, null, null);
    }
","['    ', 'private', ' ', 'void', ' ', 'startBin', '(', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'BinUtils', '.', 'createCommandLine', '(', 'this', ',', ' ', 'config', ')', ')', ';', ' ', '\n', '            ', 'streamListener', ' ', '=', ' ', 'new', ' ', 'StreamListener', '(', 'process', '.', 'getInputStream', '(', ')', ',', ' ', 'process', '.', 'getErrorStream', '(', ')', ',', ' ', 'this', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'ex', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_START', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,ex,"    private void ex(Exception ex) {
        Logging.logMe(this, ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    private void ex(Exception ex) {
        Logging.logMe(this, ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }
","['    ', 'private', ' ', 'void', ' ', 'ex', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'logMe', '(', 'this', ',', ' ', 'ex', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_EX', ',', ' ', 'null', ',', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,stopBin,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }
","['    ', 'private', ' ', 'void', ' ', 'stopBin', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'ex', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', '.', 'destroy', '(', ')', ';', '\n', '                ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '                ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'ex', '(', 'ex', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'streamListener', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'streamListener', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_STOP', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,dispatchBroadcast,"    private void dispatchBroadcast(Action action, @Nullable Logging.LogLine msg, @Nullable Throwable ex) {
        Intent intent = new Intent(action.toString());
        if (msg != null) intent.putExtra(""msg"", msg);
        if (ex != null) intent.putExtra(""ex"", ex);
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    private void dispatchBroadcast(Action action, @Nullable Logging.LogLine msg, @Nullable Throwable ex) {
        Intent intent = new Intent(action.toString());
        if (msg != null) intent.putExtra(""msg"", msg);
        if (ex != null) intent.putExtra(""ex"", ex);
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchBroadcast', '(', 'Action', ' ', 'action', ',', ' ', '@Nullable', ' ', 'Logging', '.', 'LogLine', ' ', 'msg', ',', ' ', '@Nullable', ' ', 'Throwable', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'action', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'msg', '""', ',', ' ', 'msg', ')', ';', '\n', '        ', 'if', ' ', '(', 'ex', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'ex', '""', ',', ' ', 'ex', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,onNewLogLine,"    public void onNewLogLine(Logging.LogLine line) {
        dispatchBroadcast(Action.SERVER_MSG, line, null);
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    public void onNewLogLine(Logging.LogLine line) {
        dispatchBroadcast(Action.SERVER_MSG, line, null);
    }
","['    ', 'public', ' ', 'void', ' ', 'onNewLogLine', '(', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_MSG', ',', ' ', 'line', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BinService.java,handleMessage,"        public void handleMessage(Message msg) {
            switch (msg.what) {
                case START:",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"        public void handleMessage(Message msg) {
            switch (msg.what) {
                case START:
","['        ', 'public', ' ', 'void', ' ', 'handleMessage', '(', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '            ', 'switch', ' ', '(', 'msg', '.', 'what', ')', ' ', '{', '\n', '                ', 'case', ' ', 'START', ':', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);
        // manager.notify(BinService.NOTIFICATION_ID, builder.build());",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);
        
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '_stop', ')', ' ', 'return', ';', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '        ', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BootCompletedReceiver.java,onServiceConnected,"                public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
                    Messenger messenger = new Messenger(iBinder);
                    try {
                        messenger.send(Message.obtain(null, BinService.START, StartConfig.fromPrefs(context)));",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"                public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
                    Messenger messenger = new Messenger(iBinder);
                    try {
                        messenger.send(Message.obtain(null, BinService.START, StartConfig.fromPrefs(context)));
","['                ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '                    ', 'Messenger', ' ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '                    ', 'try', ' ', '{', '\n', '                        ', 'messenger', '.', 'send', '(', 'Message', '.', 'obtain', '(', 'null', ',', ' ', 'BinService', '.', 'START', ',', ' ', 'StartConfig', '.', 'fromPrefs', '(', 'context', ')', ')', ')', ';', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,BootCompletedReceiver.java,onServiceDisconnected,"                public void onServiceDisconnected(ComponentName componentName) {

                }
            }, Context.BIND_AUTO_CREATE);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"                public void onServiceDisconnected(ComponentName componentName) {

                }
            }, Context.BIND_AUTO_CREATE);
        }
    }
}
","['                ', 'public', ' ', 'void', ' ', 'onServiceDisconnected', '(', 'ComponentName', ' ', 'componentName', ')', ' ', '{', '\n', '\n', '                ', '}', '\n', '            ', '}', ',', ' ', 'Context', '.', 'BIND_AUTO_CREATE', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,MainActivity.java,onServiceConnected,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
        }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,MainActivity.java,onServiceDisconnected,"        public void onServiceDisconnected(ComponentName componentName) {
            serviceMessenger = null;
        }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"        public void onServiceDisconnected(ComponentName componentName) {
            serviceMessenger = null;
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceDisconnected', '(', 'ComponentName', ' ', 'componentName', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        bindService(new Intent(MainActivity.this, BinService.class), serviceConnection, BIND_AUTO_CREATE);
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    protected void onStart() {
        super.onStart();
        bindService(new Intent(MainActivity.this, BinService.class), serviceConnection, BIND_AUTO_CREATE);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'bindService', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'BinService', '.', 'class', ')', ',', ' ', 'serviceConnection', ',', ' ', 'BIND_AUTO_CREATE', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,4e7f816c29700049c2deaa73644b68b0751bf515,MainActivity.java,onStop,"    protected void onStop() {
        unbindService(serviceConnection);
        super.onStop();
    }",https://www.github.com/devgianlu/aria2android/commit/4e7f816c29700049c2deaa73644b68b0751bf515,"    protected void onStop() {
        unbindService(serviceConnection);
        super.onStop();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStop', '(', ')', ' ', '{', '\n', '        ', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '        ', 'super', '.', 'onStop', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,414e4cb1450d32a704bd47f862fcabd7c359cc02,BinService.java,stopBin,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        if (performanceMonitor != null) {
            performanceMonitor.stopSafe();
            streamListener = null;
        }

        stopForeground(true);
        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }",https://www.github.com/devgianlu/aria2android/commit/414e4cb1450d32a704bd47f862fcabd7c359cc02,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        if (performanceMonitor != null) {
            performanceMonitor.stopSafe();
            streamListener = null;
        }

        stopForeground(true);
        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }
","['    ', 'private', ' ', 'void', ' ', 'stopBin', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'ex', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', '.', 'destroy', '(', ')', ';', '\n', '                ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '                ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'ex', '(', 'ex', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'streamListener', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'streamListener', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'performanceMonitor', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'performanceMonitor', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'stopForeground', '(', 'true', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_STOP', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5f8f744458f20a0a63e9c54ca677824337375103,BinService.java,onTerminated,"    public void onTerminated() {
        if (process != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/5f8f744458f20a0a63e9c54ca677824337375103,"    public void onTerminated() {
        if (process != null) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'onTerminated', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,5f8f744458f20a0a63e9c54ca677824337375103,BinService.java,unknownLogLine,"    public void unknownLogLine(String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);
        ThisApplication.sendAnalytics(this, new HitBuilders.EventBuilder()
                .setCategory(ThisApplication.CATEGORY_UNKNOWN_LOG_LINE)",https://www.github.com/devgianlu/aria2android/commit/5f8f744458f20a0a63e9c54ca677824337375103,"    public void unknownLogLine(String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);
        ThisApplication.sendAnalytics(this, new HitBuilders.EventBuilder()
                .setCategory(ThisApplication.CATEGORY_UNKNOWN_LOG_LINE)
","['    ', 'public', ' ', 'void', ' ', 'unknownLogLine', '(', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', 'System', '.', 'out', '.', 'println', '(', '""', 'UNKNOWN LINE: ', '""', ' ', '+', ' ', 'line', ')', ';', '\n', '        ', 'ThisApplication', '.', 'sendAnalytics', '(', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                ', '.', 'setCategory', '(', 'ThisApplication', '.', 'CATEGORY_UNKNOWN_LOG_LINE', ')', '\n', '<END>']"
master,5f8f744458f20a0a63e9c54ca677824337375103,StreamListener.java,handleUnrecognizedOption,"    private void handleUnrecognizedOption(String line) {
        Matcher matcher = UNRECOGNIZED_OPTION_PATTERN.matcher(line);
        if (matcher.find()) {
            String option = matcher.group(1);
            listener.onNewLogLine(new Logging.LogLine(Logging.LogLine.Type.ERROR, ""Unrecognized option: "" + option));
        }

        listener.onTerminated();
    }",https://www.github.com/devgianlu/aria2android/commit/5f8f744458f20a0a63e9c54ca677824337375103,"    private void handleUnrecognizedOption(String line) {
        Matcher matcher = UNRECOGNIZED_OPTION_PATTERN.matcher(line);
        if (matcher.find()) {
            String option = matcher.group(1);
            listener.onNewLogLine(new Logging.LogLine(Logging.LogLine.Type.ERROR, ""Unrecognized option: "" + option));
        }

        listener.onTerminated();
    }
","['    ', 'private', ' ', 'void', ' ', 'handleUnrecognizedOption', '(', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Matcher', ' ', 'matcher', ' ', '=', ' ', 'UNRECOGNIZED_OPTION_PATTERN', '.', 'matcher', '(', 'line', ')', ';', '\n', '        ', 'if', ' ', '(', 'matcher', '.', 'find', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'option', ' ', '=', ' ', 'matcher', '.', 'group', '(', '1', ')', ';', '\n', '            ', 'listener', '.', 'onNewLogLine', '(', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'ERROR', ',', ' ', '""', 'Unrecognized option: ', '""', ' ', '+', ' ', 'option', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'listener', '.', 'onTerminated', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5f8f744458f20a0a63e9c54ca677824337375103,StreamListener.java,onNewLogLine,"        void onNewLogLine(Logging.LogLine line);

        void onTerminated();

        void unknownLogLine(String line);
    }
}",https://www.github.com/devgianlu/aria2android/commit/5f8f744458f20a0a63e9c54ca677824337375103,"        void onNewLogLine(Logging.LogLine line);

        void onTerminated();

        void unknownLogLine(String line);
    }
}
","['        ', 'void', ' ', 'onNewLogLine', '(', 'Logging', '.', 'LogLine', ' ', 'line', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onTerminated', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'unknownLogLine', '(', 'String', ' ', 'line', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,5f8f744458f20a0a63e9c54ca677824337375103,StreamListener.java,onTerminated,"        void onTerminated();

        void unknownLogLine(String line);
    }
}",https://www.github.com/devgianlu/aria2android/commit/5f8f744458f20a0a63e9c54ca677824337375103,"        void onTerminated();

        void unknownLogLine(String line);
    }
}
","['        ', 'void', ' ', 'onTerminated', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'unknownLogLine', '(', 'String', ' ', 'line', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,23fea20401fe74a0482e08161c6010f3991fed49,StreamListener.java,isProcessAlive,"    private boolean isProcessAlive() {
        try {
            process.exitValue();",https://www.github.com/devgianlu/aria2android/commit/23fea20401fe74a0482e08161c6010f3991fed49,"    private boolean isProcessAlive() {
        try {
            process.exitValue();
","['    ', 'private', ' ', 'boolean', ' ', 'isProcessAlive', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'process', '.', 'exitValue', '(', ')', ';', '\n', '<END>']"
master,23fea20401fe74a0482e08161c6010f3991fed49,StreamListener.java,run,"    public void run() {
        BufferedReader in = new BufferedReader(new InputStreamReader(this.in));
        BufferedReader err = new BufferedReader(new InputStreamReader(this.err));

        while (!_shouldStop && isProcessAlive()) {
            try {",https://www.github.com/devgianlu/aria2android/commit/23fea20401fe74a0482e08161c6010f3991fed49,"    public void run() {
        BufferedReader in = new BufferedReader(new InputStreamReader(this.in));
        BufferedReader err = new BufferedReader(new InputStreamReader(this.err));

        while (!_shouldStop && isProcessAlive()) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'in', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'this', '.', 'in', ')', ')', ';', '\n', '        ', 'BufferedReader', ' ', 'err', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'this', '.', 'err', ')', ')', ';', '\n', '\n', '        ', 'while', ' ', '(', '!', '_shouldStop', ' ', '&', '&', ' ', 'isProcessAlive', '(', ')', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,8f2679998cee48220cc026b40a759a5bbc9a87c1,MainActivity.java,onClick,"            public void onClick(View view) {
                if (adapter != null) {
                    adapter.clear();",https://www.github.com/devgianlu/aria2android/commit/8f2679998cee48220cc026b40a759a5bbc9a87c1,"            public void onClick(View view) {
                if (adapter != null) {
                    adapter.clear();
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'adapter', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'adapter', '.', 'clear', '(', ')', ';', '\n', '<END>']"
master,8f2679998cee48220cc026b40a759a5bbc9a87c1,MainActivity.java,run,"                    public void run() {
                        noLogs.setVisibility(View.GONE);
                        logs.setVisibility(View.VISIBLE);

                        switch (action) {
                            case SERVER_START:",https://www.github.com/devgianlu/aria2android/commit/8f2679998cee48220cc026b40a759a5bbc9a87c1,"                    public void run() {
                        noLogs.setVisibility(View.GONE);
                        logs.setVisibility(View.VISIBLE);

                        switch (action) {
                            case SERVER_START:
","['                    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                        ', 'noLogs', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '                        ', 'logs', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '\n', '                        ', 'switch', ' ', '(', 'action', ')', ' ', '{', '\n', '                            ', 'case', ' ', 'SERVER_START', ':', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,BinUtils.java,createCommandLine,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        if (config.allowOriginAll) builder.append("" --rpc-allow-origin-all=true"");
        else builder.append("" "");

        builder.append(Utils.optionsBuilder(config.options));

        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"    public static String createCommandLine(Context context, StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        if (config.allowOriginAll) builder.append("" --rpc-allow-origin-all=true"");
        else builder.append("" "");

        builder.append(Utils.optionsBuilder(config.options));

        return builder.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'createCommandLine', '(', 'Context', ' ', 'context', ',', ' ', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'builder', '.', 'append', '(', 'binPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --daemon', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --check-certificate=false', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --input-file=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --dir=', '""', ')', '.', 'append', '(', 'config', '.', 'outputDirectory', ')', '\n', '                ', '.', 'append', '(', '""', ' --enable-rpc', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-all=true', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-port=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcPort', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-secret=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcToken', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'saveSession', ')', '\n', '            ', 'builder', '.', 'append', '(', '""', ' --save-session=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '.', 'append', '(', '""', ' --save-session-interval=10', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'allowOriginAll', ')', ' ', 'builder', '.', 'append', '(', '""', ' --rpc-allow-origin-all=true', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'builder', '.', 'append', '(', 'Utils', '.', 'optionsBuilder', '(', 'config', '.', 'options', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,OptionsAdapter.java,notifyOptionEdited,"    public void notifyOptionEdited(int pos) {
        edited.add(pos);
        notifyItemChanged(pos);
        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"    public void notifyOptionEdited(int pos) {
        edited.add(pos);
        notifyItemChanged(pos);
        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'notifyOptionEdited', '(', 'int', ' ', 'pos', ')', ' ', '{', '\n', '        ', 'edited', '.', 'add', '(', 'pos', ')', ';', '\n', '        ', 'notifyItemChanged', '(', 'pos', ')', ';', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,OptionsAdapter.java,saved,"    public void saved() {
        edited.clear();
        notifyDataSetChanged();
        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"    public void saved() {
        edited.clear();
        notifyDataSetChanged();
        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'saved', '(', ')', ' ', '{', '\n', '        ', 'edited', '.', 'clear', '(', ')', ';', '\n', '        ', 'notifyDataSetChanged', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,OptionsAdapter.java,onClick,"            public void onClick(View view) {
                if (listener != null) {
                    listener.onRemoveOption(entry.getKey());",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"            public void onClick(View view) {
                if (listener != null) {
                    listener.onRemoveOption(entry.getKey());
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'listener', '.', 'onRemoveOption', '(', 'entry', '.', 'getKey', '(', ')', ')', ';', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,OptionsAdapter.java,onEditOption,"        void onEditOption(String key);

        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"        void onEditOption(String key);

        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onEditOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'public', ' ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,OptionsAdapter.java,onRemoveOption,"        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'public', ' ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,OptionsAdapter.java,onItemsCountChanged,"        void onItemsCountChanged(int count);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"        void onItemsCountChanged(int count);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        public ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'public', ' ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_config_editor);
        setTitle(R.string.customOptions);

        layout = findViewById(R.id.configEditor);
        RecyclerView list = findViewById(R.id.configEditor_list);
        list.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        list.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        list.setAdapter(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_config_editor);
        setTitle(R.string.customOptions);

        layout = findViewById(R.id.configEditor);
        RecyclerView list = findViewById(R.id.configEditor_list);
        list.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        list.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        list.setAdapter(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_config_editor', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'customOptions', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'configEditor', ')', ';', '\n', '        ', 'RecyclerView', ' ', 'list', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'configEditor_list', ')', ';', '\n', '        ', 'list', '.', 'setLayoutManager', '(', 'new', ' ', 'LinearLayoutManager', '(', 'this', ',', ' ', 'LinearLayoutManager', '.', 'VERTICAL', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'list', '.', 'addItemDecoration', '(', 'new', ' ', 'DividerItemDecoration', '(', 'this', ',', ' ', 'DividerItemDecoration', '.', 'VERTICAL', ')', ')', ';', '\n', '        ', 'adapter', ' ', '=', ' ', 'new', ' ', 'OptionsAdapter', '(', 'this', ',', ' ', 'options', ',', ' ', 'this', ')', ';', '\n', '        ', 'list', '.', 'setAdapter', '(', 'adapter', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'FAILED_LOADING_OPTIONS', ',', ' ', 'ex', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,ConfigEditorActivity.java,onItemsCountChanged,"    public void onItemsCountChanged(int count) {
        if (count == 0) {
            MessageLayout.show(layout, R.string.noCustomOptions, R.drawable.ic_info_outline_black_48dp);",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"    public void onItemsCountChanged(int count) {
        if (count == 0) {
            MessageLayout.show(layout, R.string.noCustomOptions, R.drawable.ic_info_outline_black_48dp);
","['    ', 'public', ' ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'count', ' ', '=', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'MessageLayout', '.', 'show', '(', 'layout', ',', ' ', 'R', '.', 'string', '.', 'noCustomOptions', ',', ' ', 'R', '.', 'drawable', '.', 'ic_info_outline_black_48dp', ')', ';', '\n', '<END>']"
master,56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.RPC_ALLOW_ORIGIN_ALL, b);
            }",https://www.github.com/devgianlu/aria2android/commit/56e9b73be1ab11a2f4cc6f17bf7a8070a0abcd1e,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(MainActivity.this, PKeys.RPC_ALLOW_ORIGIN_ALL, b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'compoundButton', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'RPC_ALLOW_ORIGIN_ALL', ',', ' ', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,80091b2d6a6735c4b84e21fccb2a8cf8bb0bd603,BinUtils.java,createCommandLine,"    public static String createCommandLine(Context context, @NonNull StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        if (config.allowOriginAll) builder.append("" --rpc-allow-origin-all=true"");
        else builder.append("" "");

        builder.append(Utils.optionsBuilder(config.options));

        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/80091b2d6a6735c4b84e21fccb2a8cf8bb0bd603,"    public static String createCommandLine(Context context, @NonNull StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        StringBuilder builder = new StringBuilder();
        builder.append(binPath)
                .append("" --daemon"")
                .append("" --check-certificate=false"")
                .append("" --input-file="").append(sessionPath)
                .append("" --dir="").append(config.outputDirectory)
                .append("" --enable-rpc"")
                .append("" --rpc-listen-all=true"")
                .append("" --rpc-listen-port="").append(config.rpcPort)
                .append("" --rpc-secret="").append(config.rpcToken);

        if (config.saveSession)
            builder.append("" --save-session="").append(sessionPath).append("" --save-session-interval=10"");
        else builder.append("" "");

        if (config.allowOriginAll) builder.append("" --rpc-allow-origin-all=true"");
        else builder.append("" "");

        builder.append(Utils.optionsBuilder(config.options));

        return builder.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'createCommandLine', '(', 'Context', ' ', 'context', ',', ' ', '@NonNull', ' ', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'builder', '.', 'append', '(', 'binPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --daemon', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --check-certificate=false', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --input-file=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '\n', '                ', '.', 'append', '(', '""', ' --dir=', '""', ')', '.', 'append', '(', 'config', '.', 'outputDirectory', ')', '\n', '                ', '.', 'append', '(', '""', ' --enable-rpc', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-all=true', '""', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-listen-port=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcPort', ')', '\n', '                ', '.', 'append', '(', '""', ' --rpc-secret=', '""', ')', '.', 'append', '(', 'config', '.', 'rpcToken', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'saveSession', ')', '\n', '            ', 'builder', '.', 'append', '(', '""', ' --save-session=', '""', ')', '.', 'append', '(', 'sessionPath', ')', '.', 'append', '(', '""', ' --save-session-interval=10', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'allowOriginAll', ')', ' ', 'builder', '.', 'append', '(', '""', ' --rpc-allow-origin-all=true', '""', ')', ';', '\n', '        ', 'else', ' ', 'builder', '.', 'append', '(', '""', ' ', '""', ')', ';', '\n', '\n', '        ', 'builder', '.', 'append', '(', 'Utils', '.', 'optionsBuilder', '(', 'config', '.', 'options', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e9dbfd715028404c786e1f801f239d29c1b2cc37,StreamListener.java,handleUnprocessableOption,"    private void handleUnprocessableOption(String line) {
        Matcher matcher = UNPROCESSABLE_OPTION_PATTERN.matcher(line);
        if (matcher.find()) {
            String option = matcher.group(1);
            listener.onNewLogLine(new Logging.LogLine(Logging.LogLine.Type.ERROR, ""Invalid option value: "" + option));
        }

        listener.onTerminated();
    }",https://www.github.com/devgianlu/aria2android/commit/e9dbfd715028404c786e1f801f239d29c1b2cc37,"    private void handleUnprocessableOption(String line) {
        Matcher matcher = UNPROCESSABLE_OPTION_PATTERN.matcher(line);
        if (matcher.find()) {
            String option = matcher.group(1);
            listener.onNewLogLine(new Logging.LogLine(Logging.LogLine.Type.ERROR, ""Invalid option value: "" + option));
        }

        listener.onTerminated();
    }
","['    ', 'private', ' ', 'void', ' ', 'handleUnprocessableOption', '(', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Matcher', ' ', 'matcher', ' ', '=', ' ', 'UNPROCESSABLE_OPTION_PATTERN', '.', 'matcher', '(', 'line', ')', ';', '\n', '        ', 'if', ' ', '(', 'matcher', '.', 'find', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'option', ' ', '=', ' ', 'matcher', '.', 'group', '(', '1', ')', ';', '\n', '            ', 'listener', '.', 'onNewLogLine', '(', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'ERROR', ',', ' ', '""', 'Invalid option value: ', '""', ' ', '+', ' ', 'option', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'listener', '.', 'onTerminated', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e9dbfd715028404c786e1f801f239d29c1b2cc37,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int port;
                try {
                    port = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidPort);
                }

                if (port > 1024 && port < 65535)
                    Prefs.putInt(MainActivity.this, PKeys.RPC_PORT, port);",https://www.github.com/devgianlu/aria2android/commit/e9dbfd715028404c786e1f801f239d29c1b2cc37,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int port;
                try {
                    port = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidPort);
                }

                if (port > 1024 && port < 65535)
                    Prefs.putInt(MainActivity.this, PKeys.RPC_PORT, port);
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'int', ' ', 'port', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'port', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'text', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidPort', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'if', ' ', '(', 'port', ' ', '>', ' ', '1024', ' ', '&', '&', ' ', 'port', ' ', '<', ' ', '65535', ')', '\n', '                    ', 'Prefs', '.', 'putInt', '(', 'MainActivity', '.', 'this', ',', ' ', 'PKeys', '.', 'RPC_PORT', ',', ' ', 'port', ')', ';', '\n', '<END>']"
master,b3213e84a7057218742ee982419ca558d9fe52f8,BinUtils.java,downloadAndExtractBin,"    public static void downloadAndExtractBin(final Context context, final GitHubApi.Release.Asset asset, final IDownloadAndExtractBin listener) {
        final Handler handler = new Handler(Looper.getMainLooper());
        new Thread(new Runnable() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/b3213e84a7057218742ee982419ca558d9fe52f8,"    public static void downloadAndExtractBin(final Context context, final GitHubApi.Release.Asset asset, final IDownloadAndExtractBin listener) {
        final Handler handler = new Handler(Looper.getMainLooper());
        new Thread(new Runnable() {
            @Override
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'downloadAndExtractBin', '(', 'final', ' ', 'Context', ' ', 'context', ',', ' ', 'final', ' ', 'GitHubApi', '.', 'Release', '.', 'Asset', ' ', 'asset', ',', ' ', 'final', ' ', 'IDownloadAndExtractBin', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Handler', ' ', 'handler', ' ', '=', ' ', 'new', ' ', 'Handler', '(', 'Looper', '.', 'getMainLooper', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Runnable', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,b3213e84a7057218742ee982419ca558d9fe52f8,DownloadBinActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download_bin);

        layout = findViewById(R.id.downloadBin);
        loading = findViewById(R.id.downloadBin_loading);
        progress = findViewById(R.id.downloadBin_progress);
        list = findViewById(R.id.downloadBin_list);

        progress.setText(R.string.retrievingReleases);
        GitHubApi.get().getReleases(""aria2"", ""aria2"", this);
    }",https://www.github.com/devgianlu/aria2android/commit/b3213e84a7057218742ee982419ca558d9fe52f8,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download_bin);

        layout = findViewById(R.id.downloadBin);
        loading = findViewById(R.id.downloadBin_loading);
        progress = findViewById(R.id.downloadBin_progress);
        list = findViewById(R.id.downloadBin_list);

        progress.setText(R.string.retrievingReleases);
        GitHubApi.get().getReleases(""aria2"", ""aria2"", this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_download_bin', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin', ')', ';', '\n', '        ', 'loading', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_loading', ')', ';', '\n', '        ', 'progress', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_progress', ')', ';', '\n', '        ', 'list', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_list', ')', ';', '\n', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'retrievingReleases', ')', ';', '\n', '        ', 'GitHubApi', '.', 'get', '(', ')', '.', 'getReleases', '(', '""', 'aria2', '""', ',', ' ', '""', 'aria2', '""', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b3213e84a7057218742ee982419ca558d9fe52f8,GitHubApi.java,get,"    public static GitHubApi get() {
        if (instance == null) instance = new GitHubApi();
        return instance;
    }",https://www.github.com/devgianlu/aria2android/commit/b3213e84a7057218742ee982419ca558d9fe52f8,"    public static GitHubApi get() {
        if (instance == null) instance = new GitHubApi();
        return instance;
    }
","['    ', 'public', ' ', 'static', ' ', 'GitHubApi', ' ', 'get', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'instance', ' ', '=', '=', ' ', 'null', ')', ' ', 'instance', ' ', '=', ' ', 'new', ' ', 'GitHubApi', '(', ')', ';', '\n', '        ', 'return', ' ', 'instance', ';', '\n', '    ', '}', '\n', '<END>']"
master,3ed61ee67546d45caf4926a5a026bb4782ffdd49,MainActivity.java,onDestroy,"    protected void onDestroy() {
        unbindService(serviceConnection);
        super.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/3ed61ee67546d45caf4926a5a026bb4782ffdd49,"    protected void onDestroy() {
        unbindService(serviceConnection);
        super.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3ed61ee67546d45caf4926a5a026bb4782ffdd49,SuperEditText.java,beforeTextChanged,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    // What?!
                }
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/3ed61ee67546d45caf4926a5a026bb4782ffdd49,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    
                }
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'beforeTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'ClassCastException', ' ', 'ignored', ')', ' ', '{', '\n', '                    ', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,3ed61ee67546d45caf4926a5a026bb4782ffdd49,SuperEditText.java,onTextChanged,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    // What?!
                }
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/3ed61ee67546d45caf4926a5a026bb4782ffdd49,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    
                }
            }
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'ClassCastException', ' ', 'ignored', ')', ' ', '{', '\n', '                    ', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,16bc51ba530cbe8681048abd161f00cc9a7d204c,MainActivity.java,onDestroy,"    protected void onDestroy() {
        try {
            unbindService(serviceConnection);
        } catch (IllegalArgumentException ignored) {}
        super.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/16bc51ba530cbe8681048abd161f00cc9a7d204c,"    protected void onDestroy() {
        try {
            unbindService(serviceConnection);
        } catch (IllegalArgumentException ignored) {}
        super.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IllegalArgumentException', ' ', 'ignored', ')', ' ', '{', '}', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,ab93c84464cdc6aae6c8d59921316b664fd3f3e3,MainActivity.java,onClick,"                    public void onClick(DialogInterface dialog, int which) {
                        try {
                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id=com.gianlu.aria2app"")));",https://www.github.com/devgianlu/aria2android/commit/ab93c84464cdc6aae6c8d59921316b664fd3f3e3,"                    public void onClick(DialogInterface dialog, int which) {
                        try {
                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id=com.gianlu.aria2app"")));
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', ' ', 'Uri', '.', 'parse', '(', '""', 'market://details?id=com.gianlu.aria2app', '""', ')', ')', ')', ';', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,BinService.java,ex,"    private void ex(Exception ex) {
        Logging.logMe(ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"    private void ex(Exception ex) {
        Logging.logMe(ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }
","['    ', 'private', ' ', 'void', ' ', 'ex', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'logMe', '(', 'ex', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_EX', ',', ' ', 'null', ',', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,BinService.java,unknownLogLine,"    public void unknownLogLine(String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);
        AnalyticsApplication.sendAnalytics(this, new HitBuilders.EventBuilder()
                .setCategory(Utils.CATEGORY_UNKNOWN_LOG_LINE)",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"    public void unknownLogLine(String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);
        AnalyticsApplication.sendAnalytics(this, new HitBuilders.EventBuilder()
                .setCategory(Utils.CATEGORY_UNKNOWN_LOG_LINE)
","['    ', 'public', ' ', 'void', ' ', 'unknownLogLine', '(', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', 'System', '.', 'out', '.', 'println', '(', '""', 'UNKNOWN LINE: ', '""', ' ', '+', ' ', 'line', ')', ';', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                ', '.', 'setCategory', '(', 'Utils', '.', 'CATEGORY_UNKNOWN_LOG_LINE', ')', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,OptionsAdapter.java,onEditOption,"        void onEditOption(String key);

        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"        void onEditOption(String key);

        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onEditOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,OptionsAdapter.java,onRemoveOption,"        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"        void onRemoveOption(String key);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onRemoveOption', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,OptionsAdapter.java,onItemsCountChanged,"        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,MainActivity.java,openAria2App,"    private void openAria2App() {
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.logMe(ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"    private void openAria2App() {
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.logMe(ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();
","['    ', 'private', ' ', 'void', ' ', 'openAria2App', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'getPackageManager', '(', ')', '.', 'getPackageInfo', '(', '""', 'com.gianlu.aria2app', '""', ',', ' ', '0', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'PackageManager', '.', 'NameNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'logMe', '(', 'ex', ')', ';', '\n', '            ', 'installAria2App', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'isRunning', ')', ' ', '{', '\n', '            ', 'startAria2App', '(', ')', ';', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,MainActivity.java,startAria2App,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(this, PKeys.RPC_PORT, 6800))
                    .putExtra(""token"", Prefs.getString(this, PKeys.RPC_TOKEN, ""aria2"")));
        }

        AnalyticsApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                .setCategory(Utils.CATEGORY_USER_INPUT)",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(this, PKeys.RPC_PORT, 6800))
                    .putExtra(""token"", Prefs.getString(this, PKeys.RPC_TOKEN, ""aria2"")));
        }

        AnalyticsApplication.sendAnalytics(MainActivity.this, new HitBuilders.EventBuilder()
                .setCategory(Utils.CATEGORY_USER_INPUT)
","['    ', 'private', ' ', 'void', ' ', 'startAria2App', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'intent', '\n', '                    ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'port', '""', ',', ' ', 'Prefs', '.', 'getInt', '(', 'this', ',', ' ', 'PKeys', '.', 'RPC_PORT', ',', ' ', '6800', ')', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'token', '""', ',', ' ', 'Prefs', '.', 'getString', '(', 'this', ',', ' ', 'PKeys', '.', 'RPC_TOKEN', ',', ' ', '""', 'aria2', '""', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'new', ' ', 'HitBuilders', '.', 'EventBuilder', '(', ')', '\n', '                ', '.', 'setCategory', '(', 'Utils', '.', 'CATEGORY_USER_INPUT', ')', '\n', '<END>']"
master,b340f160f3d279e82859af2baebf1a1af07e7d6a,ThisApplication.java,isDebug,"    protected boolean isDebug() {
        return BuildConfig.DEBUG;
    }",https://www.github.com/devgianlu/aria2android/commit/b340f160f3d279e82859af2baebf1a1af07e7d6a,"    protected boolean isDebug() {
        return BuildConfig.DEBUG;
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'isDebug', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'BuildConfig', '.', 'DEBUG', ';', '\n', '    ', '}', '\n', '<END>']"
master,8d899f74ca227285991bdb591a0ac6ac6a52e43d,BinService.java,unknownLogLine,"    public void unknownLogLine(String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);

        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(this, Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }",https://www.github.com/devgianlu/aria2android/commit/8d899f74ca227285991bdb591a0ac6ac6a52e43d,"    public void unknownLogLine(String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);

        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(this, Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }
","['    ', 'public', ' ', 'void', ' ', 'unknownLogLine', '(', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', 'System', '.', 'out', '.', 'println', '(', '""', 'UNKNOWN LINE: ', '""', ' ', '+', ' ', 'line', ')', ';', '\n', '\n', '        ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '        ', 'bundle', '.', 'putString', '(', 'Utils', '.', 'LABEL_LOG_LINE', ',', ' ', 'line', ')', ';', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'this', ',', ' ', 'Utils', '.', 'EVENT_UNKNOWN_LOG_LINE', ',', ' ', 'bundle', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8d899f74ca227285991bdb591a0ac6ac6a52e43d,MainActivity.java,onDestroy,"    protected void onDestroy() {
        try {
            unbindService(serviceConnection);
        } catch (IllegalArgumentException ignored) {
        }
        super.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/8d899f74ca227285991bdb591a0ac6ac6a52e43d,"    protected void onDestroy() {
        try {
            unbindService(serviceConnection);
        } catch (IllegalArgumentException ignored) {
        }
        super.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IllegalArgumentException', ' ', 'ignored', ')', ' ', '{', '\n', '        ', '}', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8d899f74ca227285991bdb591a0ac6ac6a52e43d,MainActivity.java,startAria2App,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(this, PKeys.RPC_PORT, 6800))
                    .putExtra(""token"", Prefs.getString(this, PKeys.RPC_TOKEN, ""aria2"")));
        }

        AnalyticsApplication.sendAnalytics(MainActivity.this, Utils.ACTION_OPENED_ARIA2APP);
    }",https://www.github.com/devgianlu/aria2android/commit/8d899f74ca227285991bdb591a0ac6ac6a52e43d,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(this, PKeys.RPC_PORT, 6800))
                    .putExtra(""token"", Prefs.getString(this, PKeys.RPC_TOKEN, ""aria2"")));
        }

        AnalyticsApplication.sendAnalytics(MainActivity.this, Utils.ACTION_OPENED_ARIA2APP);
    }
","['    ', 'private', ' ', 'void', ' ', 'startAria2App', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'intent', '\n', '                    ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'port', '""', ',', ' ', 'Prefs', '.', 'getInt', '(', 'this', ',', ' ', 'PKeys', '.', 'RPC_PORT', ',', ' ', '6800', ')', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'token', '""', ',', ' ', 'Prefs', '.', 'getString', '(', 'this', ',', ' ', 'PKeys', '.', 'RPC_TOKEN', ',', ' ', '""', 'aria2', '""', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ACTION_OPENED_ARIA2APP', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,ed244c5a9d7755c4407381fc4e9d1bd3b67ff744,MainActivity.java,onActivityResult,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == STORAGE_ACCESS_CODE) {
            if (resultCode == Activity.RESULT_OK) {",https://www.github.com/devgianlu/aria2android/commit/ed244c5a9d7755c4407381fc4e9d1bd3b67ff744,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == STORAGE_ACCESS_CODE) {
            if (resultCode == Activity.RESULT_OK) {
","['    ', 'protected', ' ', 'void', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'requestCode', ' ', '=', '=', ' ', 'STORAGE_ACCESS_CODE', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'resultCode', ' ', '=', '=', ' ', 'Activity', '.', 'RESULT_OK', ')', ' ', '{', '\n', '<END>']"
master,ed244c5a9d7755c4407381fc4e9d1bd3b67ff744,MainActivity.java,onClick,"            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
                startActivityForResult(intent, STORAGE_ACCESS_CODE);
            }",https://www.github.com/devgianlu/aria2android/commit/ed244c5a9d7755c4407381fc4e9d1bd3b67ff744,"            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
                startActivityForResult(intent, STORAGE_ACCESS_CODE);
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_OPEN_DOCUMENT_TREE', ')', ';', '\n', '                ', 'startActivityForResult', '(', 'intent', ',', ' ', 'STORAGE_ACCESS_CODE', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,bd4c63465b0d6621b6f6d603c360c5114441e495,MainActivity.java,isARM,"    private static boolean isARM() {
        for (String abi : Build.SUPPORTED_ABIS)
            if (abi.contains(""arm""))
                return true;

        return false;
    }",https://www.github.com/devgianlu/aria2android/commit/bd4c63465b0d6621b6f6d603c360c5114441e495,"    private static boolean isARM() {
        for (String abi : Build.SUPPORTED_ABIS)
            if (abi.contains(""arm""))
                return true;

        return false;
    }
","['    ', 'private', ' ', 'static', ' ', 'boolean', ' ', 'isARM', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'abi', ' ', ':', ' ', 'Build', '.', 'SUPPORTED_ABIS', ')', '\n', '            ', 'if', ' ', '(', 'abi', '.', 'contains', '(', '""', 'arm', '""', ')', ')', '\n', '                ', 'return', ' ', 'true', ';', '\n', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n', '<END>']"
master,bd4c63465b0d6621b6f6d603c360c5114441e495,MainActivity.java,onDismiss,"                        public void onDismiss(DialogInterface dialog) {
                            finish();
                        }",https://www.github.com/devgianlu/aria2android/commit/bd4c63465b0d6621b6f6d603c360c5114441e495,"                        public void onDismiss(DialogInterface dialog) {
                            finish();
                        }
","['                        ', 'public', ' ', 'void', ' ', 'onDismiss', '(', 'DialogInterface', ' ', 'dialog', ')', ' ', '{', '\n', '                            ', 'finish', '(', ')', ';', '\n', '                        ', '}', '\n', '<END>']"
master,bd4c63465b0d6621b6f6d603c360c5114441e495,MainActivity.java,onCancel,"                        public void onCancel(DialogInterface dialog) {
                            finish();
                        }",https://www.github.com/devgianlu/aria2android/commit/bd4c63465b0d6621b6f6d603c360c5114441e495,"                        public void onCancel(DialogInterface dialog) {
                            finish();
                        }
","['                        ', 'public', ' ', 'void', ' ', 'onCancel', '(', 'DialogInterface', ' ', 'dialog', ')', ' ', '{', '\n', '                            ', 'finish', '(', ')', ';', '\n', '                        ', '}', '\n', '<END>']"
master,bd4c63465b0d6621b6f6d603c360c5114441e495,MainActivity.java,onClick,"                        public void onClick(DialogInterface dialog, int which) {
                            finish();
                        }",https://www.github.com/devgianlu/aria2android/commit/bd4c63465b0d6621b6f6d603c360c5114441e495,"                        public void onClick(DialogInterface dialog, int which) {
                            finish();
                        }
","['                        ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                            ', 'finish', '(', ')', ';', '\n', '                        ', '}', '\n', '<END>']"
master,72eda8916bc435752d10e6ee113a007c9b060b33,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/72eda8916bc435752d10e6ee113a007c9b060b33,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'new', ' ', 'RecyclerViewLayout', '(', 'this', ')', ';', '\n', '        ', 'setContentView', '(', 'layout', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'customOptions', ')', ';', '\n', '\n', '        ', 'layout', '.', 'setLayoutManager', '(', 'new', ' ', 'LinearLayoutManager', '(', 'this', ',', ' ', 'LinearLayoutManager', '.', 'VERTICAL', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'layout', '.', 'getList', '(', ')', '.', 'addItemDecoration', '(', 'new', ' ', 'DividerItemDecoration', '(', 'this', ',', ' ', 'DividerItemDecoration', '.', 'VERTICAL', ')', ')', ';', '\n', '        ', 'adapter', ' ', '=', ' ', 'new', ' ', 'OptionsAdapter', '(', 'this', ',', ' ', 'options', ',', ' ', 'this', ')', ';', '\n', '        ', 'layout', '.', 'loadListData', '(', 'adapter', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'FAILED_LOADING_OPTIONS', ',', ' ', 'ex', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,72eda8916bc435752d10e6ee113a007c9b060b33,ConfigEditorActivity.java,importOptions,"    private void importOptions(String str) {
        Map<String, String> newOptions = Utils.optionsParser(str);
        options.putAll(newOptions);
        hasChanges = true;
        adapter.notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
        onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/72eda8916bc435752d10e6ee113a007c9b060b33,"    private void importOptions(String str) {
        Map<String, String> newOptions = Utils.optionsParser(str);
        options.putAll(newOptions);
        hasChanges = true;
        adapter.notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
        onItemsCountChanged(options.size());
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptions', '(', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'newOptions', ' ', '=', ' ', 'Utils', '.', 'optionsParser', '(', 'str', ')', ';', '\n', '        ', 'options', '.', 'putAll', '(', 'newOptions', ')', ';', '\n', '        ', 'hasChanges', ' ', '=', ' ', 'true', ';', '\n', '        ', 'adapter', '.', 'notifyItemRangeInserted', '(', 'options', '.', 'size', '(', ')', ' ', '-', ' ', 'newOptions', '.', 'size', '(', ')', ',', ' ', 'newOptions', '.', 'size', '(', ')', ')', ';', '\n', '        ', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,72eda8916bc435752d10e6ee113a007c9b060b33,ConfigEditorActivity.java,onItemsCountChanged,"    public void onItemsCountChanged(int count) {
        if (count <= 0) layout.showMessage(R.string.noCustomOptions, false);
        else layout.showList();",https://www.github.com/devgianlu/aria2android/commit/72eda8916bc435752d10e6ee113a007c9b060b33,"    public void onItemsCountChanged(int count) {
        if (count <= 0) layout.showMessage(R.string.noCustomOptions, false);
        else layout.showList();
","['    ', 'public', ' ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'count', ' ', '<', '=', ' ', '0', ')', ' ', 'layout', '.', 'showMessage', '(', 'R', '.', 'string', '.', 'noCustomOptions', ',', ' ', 'false', ')', ';', '\n', '        ', 'else', ' ', 'layout', '.', 'showList', '(', ')', ';', '\n', '<END>']"
master,72eda8916bc435752d10e6ee113a007c9b060b33,DownloadBinActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download_bin);
        setTitle(getString(R.string.downloadBin) + "" - "" + getString(R.string.app_name));

        layout = findViewById(R.id.downloadBin);
        loading = findViewById(R.id.downloadBin_loading);
        progress = findViewById(R.id.downloadBin_progress);
        list = findViewById(R.id.downloadBin_list);

        progress.setText(R.string.retrievingReleases);
        GitHubApi.get().getReleases(""aria2"", ""aria2"", this);
    }",https://www.github.com/devgianlu/aria2android/commit/72eda8916bc435752d10e6ee113a007c9b060b33,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download_bin);
        setTitle(getString(R.string.downloadBin) + "" - "" + getString(R.string.app_name));

        layout = findViewById(R.id.downloadBin);
        loading = findViewById(R.id.downloadBin_loading);
        progress = findViewById(R.id.downloadBin_progress);
        list = findViewById(R.id.downloadBin_list);

        progress.setText(R.string.retrievingReleases);
        GitHubApi.get().getReleases(""aria2"", ""aria2"", this);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_download_bin', ')', ';', '\n', '        ', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'downloadBin', ')', ' ', '+', ' ', '""', ' - ', '""', ' ', '+', ' ', 'getString', '(', 'R', '.', 'string', '.', 'app_name', ')', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin', ')', ';', '\n', '        ', 'loading', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_loading', ')', ';', '\n', '        ', 'progress', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_progress', ')', ';', '\n', '        ', 'list', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'downloadBin_list', ')', ';', '\n', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'retrievingReleases', ')', ';', '\n', '        ', 'GitHubApi', '.', 'get', '(', ')', '.', 'getReleases', '(', '""', 'aria2', '""', ',', ' ', '""', 'aria2', '""', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,39ad8638bf5c93a588e55f634b2ce3cb1c2d9e8b,MainActivity.java,onClick,"            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);

                try {
                    startActivityForResult(intent, STORAGE_ACCESS_CODE);",https://www.github.com/devgianlu/aria2android/commit/39ad8638bf5c93a588e55f634b2ce3cb1c2d9e8b,"            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);

                try {
                    startActivityForResult(intent, STORAGE_ACCESS_CODE);
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_OPEN_DOCUMENT_TREE', ')', ';', '\n', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'startActivityForResult', '(', 'intent', ',', ' ', 'STORAGE_ACCESS_CODE', ')', ';', '\n', '<END>']"
master,27e7d165de6a991a5351c5a96cf3fe64cb2a961b,BinService.java,createChannel,"    private void createChannel() {
        NotificationChannel chan = new NotificationChannel(CHANNEL_ID, SERVICE_NAME, NotificationManager.IMPORTANCE_HIGH);
        chan.setLockscreenVisibility(Notification.VISIBILITY_PUBLIC);
        chan.setImportance(NotificationManager.IMPORTANCE_DEFAULT);
        NotificationManager service = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        if (service != null) service.createNotificationChannel(chan);
    }",https://www.github.com/devgianlu/aria2android/commit/27e7d165de6a991a5351c5a96cf3fe64cb2a961b,"    private void createChannel() {
        NotificationChannel chan = new NotificationChannel(CHANNEL_ID, SERVICE_NAME, NotificationManager.IMPORTANCE_HIGH);
        chan.setLockscreenVisibility(Notification.VISIBILITY_PUBLIC);
        chan.setImportance(NotificationManager.IMPORTANCE_DEFAULT);
        NotificationManager service = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        if (service != null) service.createNotificationChannel(chan);
    }
","['    ', 'private', ' ', 'void', ' ', 'createChannel', '(', ')', ' ', '{', '\n', '        ', 'NotificationChannel', ' ', 'chan', ' ', '=', ' ', 'new', ' ', 'NotificationChannel', '(', 'CHANNEL_ID', ',', ' ', 'SERVICE_NAME', ',', ' ', 'NotificationManager', '.', 'IMPORTANCE_HIGH', ')', ';', '\n', '        ', 'chan', '.', 'setLockscreenVisibility', '(', 'Notification', '.', 'VISIBILITY_PUBLIC', ')', ';', '\n', '        ', 'chan', '.', 'setImportance', '(', 'NotificationManager', '.', 'IMPORTANCE_DEFAULT', ')', ';', '\n', '        ', 'NotificationManager', ' ', 'service', ' ', '=', ' ', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '\n', '        ', 'if', ' ', '(', 'service', ' ', '!', '=', ' ', 'null', ')', ' ', 'service', '.', 'createNotificationChannel', '(', 'chan', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d23a7e708dedd4029afa724dba302fc663268f01,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.setLayoutManager(new SuppressingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/d23a7e708dedd4029afa724dba302fc663268f01,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.setLayoutManager(new SuppressingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, options, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'new', ' ', 'RecyclerViewLayout', '(', 'this', ')', ';', '\n', '        ', 'setContentView', '(', 'layout', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'customOptions', ')', ';', '\n', '\n', '        ', 'layout', '.', 'setLayoutManager', '(', 'new', ' ', 'SuppressingLinearLayoutManager', '(', 'this', ',', ' ', 'LinearLayoutManager', '.', 'VERTICAL', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'layout', '.', 'getList', '(', ')', '.', 'addItemDecoration', '(', 'new', ' ', 'DividerItemDecoration', '(', 'this', ',', ' ', 'DividerItemDecoration', '.', 'VERTICAL', ')', ')', ';', '\n', '        ', 'adapter', ' ', '=', ' ', 'new', ' ', 'OptionsAdapter', '(', 'this', ',', ' ', 'options', ',', ' ', 'this', ')', ';', '\n', '        ', 'layout', '.', 'loadListData', '(', 'adapter', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'FAILED_LOADING_OPTIONS', ',', ' ', 'ex', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,249a30810f4fd4055fb2f3ffb6c91755b6a6afdc,BinService.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler());
            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1)
                shortcutManager = (ShortcutManager) getSystemService(Context.SHORTCUT_SERVICE);
        }

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/249a30810f4fd4055fb2f3ffb6c91755b6a6afdc,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler());
            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1)
                shortcutManager = (ShortcutManager) getSystemService(Context.SHORTCUT_SERVICE);
        }

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '            ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', ')', ')', ';', '\n', '            ', 'if', ' ', '(', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION_CODES', '.', 'N_MR1', ')', '\n', '                ', 'shortcutManager', ' ', '=', ' ', '(', 'ShortcutManager', ')', ' ', 'getSystemService', '(', 'Context', '.', 'SHORTCUT_SERVICE', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,249a30810f4fd4055fb2f3ffb6c91755b6a6afdc,BinService.java,createChannel,"    private void createChannel() {
        NotificationChannel chan = new NotificationChannel(CHANNEL_ID, SERVICE_NAME, NotificationManager.IMPORTANCE_DEFAULT);
        chan.setLockscreenVisibility(Notification.VISIBILITY_PUBLIC);
        NotificationManager service = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        if (service != null) service.createNotificationChannel(chan);
    }",https://www.github.com/devgianlu/aria2android/commit/249a30810f4fd4055fb2f3ffb6c91755b6a6afdc,"    private void createChannel() {
        NotificationChannel chan = new NotificationChannel(CHANNEL_ID, SERVICE_NAME, NotificationManager.IMPORTANCE_DEFAULT);
        chan.setLockscreenVisibility(Notification.VISIBILITY_PUBLIC);
        NotificationManager service = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        if (service != null) service.createNotificationChannel(chan);
    }
","['    ', 'private', ' ', 'void', ' ', 'createChannel', '(', ')', ' ', '{', '\n', '        ', 'NotificationChannel', ' ', 'chan', ' ', '=', ' ', 'new', ' ', 'NotificationChannel', '(', 'CHANNEL_ID', ',', ' ', 'SERVICE_NAME', ',', ' ', 'NotificationManager', '.', 'IMPORTANCE_DEFAULT', ')', ';', '\n', '        ', 'chan', '.', 'setLockscreenVisibility', '(', 'Notification', '.', 'VISIBILITY_PUBLIC', ')', ';', '\n', '        ', 'NotificationManager', ' ', 'service', ' ', '=', ' ', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '\n', '        ', 'if', ' ', '(', 'service', ' ', '!', '=', ' ', 'null', ')', ' ', 'service', '.', 'createNotificationChannel', '(', 'chan', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,249a30810f4fd4055fb2f3ffb6c91755b6a6afdc,BinService.java,stopBin,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        if (performanceMonitor != null) {
            performanceMonitor.stopSafe();
            streamListener = null;
        }

        if (shortcutManager != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1) {
            ShortcutInfo shortcut = new ShortcutInfo.Builder(this, ""startService"")
                    .setShortLabel(getString(R.string.startService))
                    .setIcon(Icon.createWithResource(this, R.drawable.ic_play_arrow_black_48dp))
                    .setIntent(new Intent(ACTION_START_SERVICE))
                    .build();

            shortcutManager.setDynamicShortcuts(Collections.singletonList(shortcut));
        }

        stopForeground(true);
        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }",https://www.github.com/devgianlu/aria2android/commit/249a30810f4fd4055fb2f3ffb6c91755b6a6afdc,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        if (performanceMonitor != null) {
            performanceMonitor.stopSafe();
            streamListener = null;
        }

        if (shortcutManager != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1) {
            ShortcutInfo shortcut = new ShortcutInfo.Builder(this, ""startService"")
                    .setShortLabel(getString(R.string.startService))
                    .setIcon(Icon.createWithResource(this, R.drawable.ic_play_arrow_black_48dp))
                    .setIntent(new Intent(ACTION_START_SERVICE))
                    .build();

            shortcutManager.setDynamicShortcuts(Collections.singletonList(shortcut));
        }

        stopForeground(true);
        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }
","['    ', 'private', ' ', 'void', ' ', 'stopBin', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'ex', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', '.', 'destroy', '(', ')', ';', '\n', '                ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '                ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'ex', '(', 'ex', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'streamListener', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'streamListener', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'performanceMonitor', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'performanceMonitor', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'shortcutManager', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION_CODES', '.', 'N_MR1', ')', ' ', '{', '\n', '            ', 'ShortcutInfo', ' ', 'shortcut', ' ', '=', ' ', 'new', ' ', 'ShortcutInfo', '.', 'Builder', '(', 'this', ',', ' ', '""', 'startService', '""', ')', '\n', '                    ', '.', 'setShortLabel', '(', 'getString', '(', 'R', '.', 'string', '.', 'startService', ')', ')', '\n', '                    ', '.', 'setIcon', '(', 'Icon', '.', 'createWithResource', '(', 'this', ',', ' ', 'R', '.', 'drawable', '.', 'ic_play_arrow_black_48dp', ')', ')', '\n', '                    ', '.', 'setIntent', '(', 'new', ' ', 'Intent', '(', 'ACTION_START_SERVICE', ')', ')', '\n', '                    ', '.', 'build', '(', ')', ';', '\n', '\n', '            ', 'shortcutManager', '.', 'setDynamicShortcuts', '(', 'Collections', '.', 'singletonList', '(', 'shortcut', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'stopForeground', '(', 'true', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_STOP', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,BinUtils.java,writeStreamAsBin,"    public static void writeStreamAsBin(Context context, InputStream in) throws IOException {
        if (in == null) throw new IOException(new NullPointerException(""InputStream is null!""));

        int count;
        byte[] buffer = new byte[8192];
        try (FileOutputStream out = context.openFileOutput(""aria2c"", Context.MODE_PRIVATE)) {
            while ((count = in.read(buffer)) != -1) out.write(buffer, 0, count);",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    public static void writeStreamAsBin(Context context, InputStream in) throws IOException {
        if (in == null) throw new IOException(new NullPointerException(""InputStream is null!""));

        int count;
        byte[] buffer = new byte[8192];
        try (FileOutputStream out = context.openFileOutput(""aria2c"", Context.MODE_PRIVATE)) {
            while ((count = in.read(buffer)) != -1) out.write(buffer, 0, count);
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'writeStreamAsBin', '(', 'Context', ' ', 'context', ',', ' ', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'in', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'IOException', '(', 'new', ' ', 'NullPointerException', '(', '""', 'InputStream is null!', '""', ')', ')', ';', '\n', '\n', '        ', 'int', ' ', 'count', ';', '\n', '        ', 'byte', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'byte', '[', '8192', ']', ';', '\n', '        ', 'try', ' ', '(', 'FileOutputStream', ' ', 'out', ' ', '=', ' ', 'context', '.', 'openFileOutput', '(', '""', 'aria2c', '""', ',', ' ', 'Context', '.', 'MODE_PRIVATE', ')', ')', ' ', '{', '\n', '            ', 'while', ' ', '(', '(', 'count', ' ', '=', ' ', 'in', '.', 'read', '(', 'buffer', ')', ')', ' ', '!', '=', ' ', '-', '1', ')', ' ', 'out', '.', 'write', '(', 'buffer', ',', ' ', '0', ',', ' ', 'count', ')', ';', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,DownloadBinActivity.java,onCreateOptionsMenu,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.download_bin, menu);
        return true;
    }",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.download_bin, menu);
        return true;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'onCreateOptionsMenu', '(', 'Menu', ' ', 'menu', ')', ' ', '{', '\n', '        ', 'getMenuInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'menu', '.', 'download_bin', ',', ' ', 'menu', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,DownloadBinActivity.java,importBin,"    private void importBin() {
        startActivityForResult(Intent.createChooser(new Intent(Intent.ACTION_GET_CONTENT).setType(""*/*""), getString(R.string.customBin)), IMPORT_BIN_CODE);
    }",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    private void importBin() {
        startActivityForResult(Intent.createChooser(new Intent(Intent.ACTION_GET_CONTENT).setType(""*/*""), getString(R.string.customBin)), IMPORT_BIN_CODE);
    }
","['    ', 'private', ' ', 'void', ' ', 'importBin', '(', ')', ' ', '{', '\n', '        ', 'startActivityForResult', '(', 'Intent', '.', 'createChooser', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_GET_CONTENT', ')', '.', 'setType', '(', '""', '*/*', '""', ')', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'customBin', ')', ')', ',', ' ', 'IMPORT_BIN_CODE', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,DownloadBinActivity.java,onRequestPermissionsResult,"    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if (requestCode == READ_PERMISSION_CODE && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            importBin();
        }

        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if (requestCode == READ_PERMISSION_CODE && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            importBin();
        }

        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }
","['    ', 'public', ' ', 'void', ' ', 'onRequestPermissionsResult', '(', 'int', ' ', 'requestCode', ',', ' ', '@NonNull', ' ', 'String', '[', ']', ' ', 'permissions', ',', ' ', '@NonNull', ' ', 'int', '[', ']', ' ', 'grantResults', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'requestCode', ' ', '=', '=', ' ', 'READ_PERMISSION_CODE', ' ', '&', '&', ' ', 'grantResults', '[', '0', ']', ' ', '=', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '            ', 'importBin', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'super', '.', 'onRequestPermissionsResult', '(', 'requestCode', ',', ' ', 'permissions', ',', ' ', 'grantResults', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,DownloadBinActivity.java,onClick,"                    public void onClick(DialogInterface dialog, int which) {
                        if (ContextCompat.checkSelfPermission(DownloadBinActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                            if (ActivityCompat.shouldShowRequestPermissionRationale(DownloadBinActivity.this, android.Manifest.permission.READ_EXTERNAL_STORAGE)) {",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"                    public void onClick(DialogInterface dialog, int which) {
                        if (ContextCompat.checkSelfPermission(DownloadBinActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                            if (ActivityCompat.shouldShowRequestPermissionRationale(DownloadBinActivity.this, android.Manifest.permission.READ_EXTERNAL_STORAGE)) {
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                        ', 'if', ' ', '(', 'ContextCompat', '.', 'checkSelfPermission', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'READ_EXTERNAL_STORAGE', ')', ' ', '!', '=', ' ', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', ' ', '{', '\n', '                            ', 'if', ' ', '(', 'ActivityCompat', '.', 'shouldShowRequestPermissionRationale', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'android', '.', 'Manifest', '.', 'permission', '.', 'READ_EXTERNAL_STORAGE', ')', ')', ' ', '{', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,DownloadBinActivity.java,onClick,"                                            public void onClick(DialogInterface dialogInterface, int i) {
                                                ActivityCompat.requestPermissions(DownloadBinActivity.this, new String[]{android.Manifest.permission.READ_EXTERNAL_STORAGE}, READ_PERMISSION_CODE);
                                            }",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"                                            public void onClick(DialogInterface dialogInterface, int i) {
                                                ActivityCompat.requestPermissions(DownloadBinActivity.this, new String[]{android.Manifest.permission.READ_EXTERNAL_STORAGE}, READ_PERMISSION_CODE);
                                            }
","['                                            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                                                ', 'ActivityCompat', '.', 'requestPermissions', '(', 'DownloadBinActivity', '.', 'this', ',', ' ', 'new', ' ', 'String', '[', ']', '{', 'android', '.', 'Manifest', '.', 'permission', '.', 'READ_EXTERNAL_STORAGE', '}', ',', ' ', 'READ_PERMISSION_CODE', ')', ';', '\n', '                                            ', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,DownloadBinActivity.java,onBinExtracted,"    public void onBinExtracted() {
        progress.setText(R.string.binExtracted);

        Prefs.putBoolean(this, PKeys.CUSTOM_BIN, false);
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    public void onBinExtracted() {
        progress.setText(R.string.binExtracted);

        Prefs.putBoolean(this, PKeys.CUSTOM_BIN, false);
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }
","['    ', 'public', ' ', 'void', ' ', 'onBinExtracted', '(', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'binExtracted', ')', ';', '\n', '\n', '        ', 'Prefs', '.', 'putBoolean', '(', 'this', ',', ' ', 'PKeys', '.', 'CUSTOM_BIN', ',', ' ', 'false', ')', ';', '\n', '        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', '\n', '                ', '.', 'addFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ' ', '|', ' ', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ')', ';', '\n', '        ', 'finish', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,MainActivity.java,onClick,"                        public void onClick(DialogInterface dialog, int which) {
                            startActivity(new Intent(MainActivity.this, DownloadBinActivity.class)
                                    .putExtra(""importBin"", true)",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"                        public void onClick(DialogInterface dialog, int which) {
                            startActivity(new Intent(MainActivity.this, DownloadBinActivity.class)
                                    .putExtra(""importBin"", true)
","['                        ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'DownloadBinActivity', '.', 'class', ')', '\n', '                                    ', '.', 'putExtra', '(', '""', 'importBin', '""', ',', ' ', 'true', ')', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,SuperEditText.java,beforeTextChanged,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    // What?!
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'beforeTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'ClassCastException', ' ', 'ignored', ')', ' ', '{', '\n', '                    ', '\n', '                ', '}', '\n', '\n', '                ', 'return', ';', '\n', '            ', '}', '\n', '\n', '            ', 'setErrorEnabled', '(', 'false', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,fa447751b0fe34e5af4d3c337015da3c42a3323e,SuperEditText.java,onTextChanged,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    // What?!
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/fa447751b0fe34e5af4d3c337015da3c42a3323e,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException ignored) {
                    
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'ClassCastException', ' ', 'ignored', ')', ' ', '{', '\n', '                    ', '\n', '                ', '}', '\n', '\n', '                ', 'return', ';', '\n', '            ', '}', '\n', '\n', '            ', 'setErrorEnabled', '(', 'false', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,45a52db914dbb5cb4ff5badd1238884b1c6fc886,BinService.java,ex,"    private void ex(Exception ex) {
        Logging.log(ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }",https://www.github.com/devgianlu/aria2android/commit/45a52db914dbb5cb4ff5badd1238884b1c6fc886,"    private void ex(Exception ex) {
        Logging.log(ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }
","['    ', 'private', ' ', 'void', ' ', 'ex', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_EX', ',', ' ', 'null', ',', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,45a52db914dbb5cb4ff5badd1238884b1c6fc886,MainActivity.java,openAria2App,"    private void openAria2App() {
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.log(ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();",https://www.github.com/devgianlu/aria2android/commit/45a52db914dbb5cb4ff5badd1238884b1c6fc886,"    private void openAria2App() {
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.log(ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();
","['    ', 'private', ' ', 'void', ' ', 'openAria2App', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'getPackageManager', '(', ')', '.', 'getPackageInfo', '(', '""', 'com.gianlu.aria2app', '""', ',', ' ', '0', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'PackageManager', '.', 'NameNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '            ', 'installAria2App', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'isRunning', ')', ' ', '{', '\n', '            ', 'startAria2App', '(', ')', ';', '\n', '<END>']"
master,45a52db914dbb5cb4ff5badd1238884b1c6fc886,Utils.java,optionsParser,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0) map.put(split[0], split.length == 1 ? null : split[1]);
        }
        return map;
    }",https://www.github.com/devgianlu/aria2android/commit/45a52db914dbb5cb4ff5badd1238884b1c6fc886,"    public static Map<String, String> optionsParser(String options) {
        Map<String, String> map = new HashMap<>();
        String[] lines = options.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0) map.put(split[0], split.length == 1 ? null : split[1]);
        }
        return map;
    }
","['    ', 'public', ' ', 'static', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'optionsParser', '(', 'String', ' ', 'options', ')', ' ', '{', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'options', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'line', ' ', '=', ' ', 'line', '.', 'trim', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '#', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'split', '.', 'length', ' ', '>', ' ', '0', ')', ' ', 'map', '.', 'put', '(', 'split', '[', '0', ']', ',', ' ', 'split', '.', 'length', ' ', '=', '=', ' ', '1', ' ', '?', ' ', 'null', ' ', ':', ' ', 'split', '[', '1', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'map', ';', '\n', '    ', '}', '\n', '<END>']"
master,c41baaf75d3af51f3ab8217280dc2bb27b13216c,DownloadBinActivity.java,importBin,"    private void importBin() {
        try {
            startActivityForResult(Intent.createChooser(new Intent(Intent.ACTION_GET_CONTENT).setType(""*/*""), getString(R.string.customBin)), IMPORT_BIN_CODE);",https://www.github.com/devgianlu/aria2android/commit/c41baaf75d3af51f3ab8217280dc2bb27b13216c,"    private void importBin() {
        try {
            startActivityForResult(Intent.createChooser(new Intent(Intent.ACTION_GET_CONTENT).setType(""*/*""), getString(R.string.customBin)), IMPORT_BIN_CODE);
","['    ', 'private', ' ', 'void', ' ', 'importBin', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'startActivityForResult', '(', 'Intent', '.', 'createChooser', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_GET_CONTENT', ')', '.', 'setType', '(', '""', '*/*', '""', ')', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'customBin', ')', ')', ',', ' ', 'IMPORT_BIN_CODE', ')', ';', '\n', '<END>']"
master,c41baaf75d3af51f3ab8217280dc2bb27b13216c,MainActivity.java,onClick,"                    public void onClick(DialogInterface dialog, int which) {
                        try {
                            try {",https://www.github.com/devgianlu/aria2android/commit/c41baaf75d3af51f3ab8217280dc2bb27b13216c,"                    public void onClick(DialogInterface dialog, int which) {
                        try {
                            try {
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'try', ' ', '{', '\n', '<END>']"
master,9b3dc19e38fe9e86523f41af262cda2f700e3310,BinUtils.java,createCommandLine,"    public static String createCommandLine(Context context, @NonNull StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        Map<String, String> options = new HashMap<>(config.options);
        options.put(""daemon"", ""true"");
        options.put(""check-certificate"", ""false"");
        options.put(""input-file"", sessionPath);
        options.put(""dir"", config.outputDirectory);
        options.put(""enable-rpc"", ""true"");
        options.put(""rpc-listen-all"", ""true"");
        options.put(""rpc-listen-port"", String.valueOf(config.rpcPort));
        options.put(""rpc-secret"", config.rpcToken);

        if (config.saveSession) {
            options.put(""save-session"", sessionPath);
            if (options.get(""save-session-interval"") == null)
                options.put(""save-session-interval"", String.valueOf(SAVE_SESSION_INTERVAL));
        }

        if (config.allowOriginAll) options.put(""rpc-allow-origin-all"", ""true"");

        return binPath + Utils.optionsBuilder(options);
    }",https://www.github.com/devgianlu/aria2android/commit/9b3dc19e38fe9e86523f41af262cda2f700e3310,"    public static String createCommandLine(Context context, @NonNull StartConfig config) {
        String binPath = new File(context.getFilesDir(), ""aria2c"").getAbsolutePath();
        String sessionPath = new File(context.getFilesDir(), ""session"").getAbsolutePath();

        Map<String, String> options = new HashMap<>(config.options);
        options.put(""daemon"", ""true"");
        options.put(""check-certificate"", ""false"");
        options.put(""input-file"", sessionPath);
        options.put(""dir"", config.outputDirectory);
        options.put(""enable-rpc"", ""true"");
        options.put(""rpc-listen-all"", ""true"");
        options.put(""rpc-listen-port"", String.valueOf(config.rpcPort));
        options.put(""rpc-secret"", config.rpcToken);

        if (config.saveSession) {
            options.put(""save-session"", sessionPath);
            if (options.get(""save-session-interval"") == null)
                options.put(""save-session-interval"", String.valueOf(SAVE_SESSION_INTERVAL));
        }

        if (config.allowOriginAll) options.put(""rpc-allow-origin-all"", ""true"");

        return binPath + Utils.optionsBuilder(options);
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'createCommandLine', '(', 'Context', ' ', 'context', ',', ' ', '@NonNull', ' ', 'StartConfig', ' ', 'config', ')', ' ', '{', '\n', '        ', 'String', ' ', 'binPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'aria2c', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', 'String', ' ', 'sessionPath', ' ', '=', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', '.', 'getAbsolutePath', '(', ')', ';', '\n', '\n', '        ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', 'config', '.', 'options', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'daemon', '""', ',', ' ', '""', 'true', '""', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'check-certificate', '""', ',', ' ', '""', 'false', '""', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'input-file', '""', ',', ' ', 'sessionPath', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'dir', '""', ',', ' ', 'config', '.', 'outputDirectory', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'enable-rpc', '""', ',', ' ', '""', 'true', '""', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'rpc-listen-all', '""', ',', ' ', '""', 'true', '""', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'rpc-listen-port', '""', ',', ' ', 'String', '.', 'valueOf', '(', 'config', '.', 'rpcPort', ')', ')', ';', '\n', '        ', 'options', '.', 'put', '(', '""', 'rpc-secret', '""', ',', ' ', 'config', '.', 'rpcToken', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'saveSession', ')', ' ', '{', '\n', '            ', 'options', '.', 'put', '(', '""', 'save-session', '""', ',', ' ', 'sessionPath', ')', ';', '\n', '            ', 'if', ' ', '(', 'options', '.', 'get', '(', '""', 'save-session-interval', '""', ')', ' ', '=', '=', ' ', 'null', ')', '\n', '                ', 'options', '.', 'put', '(', '""', 'save-session-interval', '""', ',', ' ', 'String', '.', 'valueOf', '(', 'SAVE_SESSION_INTERVAL', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'config', '.', 'allowOriginAll', ')', ' ', 'options', '.', 'put', '(', '""', 'rpc-allow-origin-all', '""', ',', ' ', '""', 'true', '""', ')', ';', '\n', '\n', '        ', 'return', ' ', 'binPath', ' ', '+', ' ', 'Utils', '.', 'optionsBuilder', '(', 'options', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,ab7d8e6e07a1c7577d7f3572e1f6c7aa4723579d,SuperEditText.java,beforeTextChanged,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException exx) {
                    Logging.log(exx);
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/ab7d8e6e07a1c7577d7f3572e1f6c7aa4723579d,"    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException exx) {
                    Logging.log(exx);
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'beforeTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'ClassCastException', ' ', 'exx', ')', ' ', '{', '\n', '                    ', 'Logging', '.', 'log', '(', 'exx', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'return', ';', '\n', '            ', '}', '\n', '\n', '            ', 'setErrorEnabled', '(', 'false', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,ab7d8e6e07a1c7577d7f3572e1f6c7aa4723579d,SuperEditText.java,onTextChanged,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException exx) {
                    Logging.log(exx);
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/ab7d8e6e07a1c7577d7f3572e1f6c7aa4723579d,"    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
    }

    @Override
    public void afterTextChanged(Editable editable) {
        if (validator != null) {
            try {
                validator.validate(editable.toString());
            } catch (InvalidInputException ex) {
                try {
                    text.setError(getContext().getString(ex.messageId));
                } catch (ClassCastException exx) {
                    Logging.log(exx);
                }

                return;
            }

            setErrorEnabled(false);
        }
    }

    public interface Validator {
        void validate(String text) throws InvalidInputException;
    }

    public static class InvalidInputException extends Throwable {
        private final int messageId;

        public InvalidInputException(@StringRes int messageId) {
            this.messageId = messageId;
        }
    }
}
","['    ', 'public', ' ', 'void', ' ', 'onTextChanged', '(', 'CharSequence', ' ', 'charSequence', ',', ' ', 'int', ' ', 'i', ',', ' ', 'int', ' ', 'i1', ',', ' ', 'int', ' ', 'i2', ')', ' ', '{', '\n', '    ', '}', '\n', '\n', '    ', '@Override', '\n', '    ', 'public', ' ', 'void', ' ', 'afterTextChanged', '(', 'Editable', ' ', 'editable', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'validator', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'validator', '.', 'validate', '(', 'editable', '.', 'toString', '(', ')', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InvalidInputException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'text', '.', 'setError', '(', 'getContext', '(', ')', '.', 'getString', '(', 'ex', '.', 'messageId', ')', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'ClassCastException', ' ', 'exx', ')', ' ', '{', '\n', '                    ', 'Logging', '.', 'log', '(', 'exx', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'return', ';', '\n', '            ', '}', '\n', '\n', '            ', 'setErrorEnabled', '(', 'false', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'interface', ' ', 'Validator', ' ', '{', '\n', '        ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'InvalidInputException', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'InvalidInputException', ' ', 'extends', ' ', 'Throwable', ' ', '{', '\n', '        ', 'private', ' ', 'final', ' ', 'int', ' ', 'messageId', ';', '\n', '\n', '        ', 'public', ' ', 'InvalidInputException', '(', '@StringRes', ' ', 'int', ' ', 'messageId', ')', ' ', '{', '\n', '            ', 'this', '.', 'messageId', ' ', '=', ' ', 'messageId', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,onCreateViewHolder,"    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        return new ViewHolder(parent);
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        return new ViewHolder(parent);
    }
","['    ', 'public', ' ', 'ViewHolder', ' ', 'onCreateViewHolder', '(', '@NonNull', ' ', 'ViewGroup', ' ', 'parent', ',', ' ', 'int', ' ', 'viewType', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'ViewHolder', '(', 'parent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,onClick,"            public void onClick(View view) {
                if (listener != null) listener.onEditOption(entry);
            }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"            public void onClick(View view) {
                if (listener != null) listener.onEditOption(entry);
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onEditOption', '(', 'entry', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,onClick,"            public void onClick(View view) {
                remove(holder.getAdapterPosition());
            }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"            public void onClick(View view) {
                remove(holder.getAdapterPosition());
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'view', ')', ' ', '{', '\n', '                ', 'remove', '(', 'holder', '.', 'getAdapterPosition', '(', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,saved,"    public void saved() {
        edited.clear();
        notifyDataSetChanged();
        changed = false;

        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public void saved() {
        edited.clear();
        notifyDataSetChanged();
        changed = false;

        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'saved', '(', ')', ' ', '{', '\n', '        ', 'edited', '.', 'clear', '(', ')', ';', '\n', '        ', 'notifyDataSetChanged', '(', ')', ';', '\n', '        ', 'changed', ' ', '=', ' ', 'false', ';', '\n', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,remove,"    private void remove(int pos) {
        edited.remove(pos);
        options.remove(pos);
        changed();
        notifyItemRemoved(pos);

        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    private void remove(int pos) {
        edited.remove(pos);
        options.remove(pos);
        changed();
        notifyItemRemoved(pos);

        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'private', ' ', 'void', ' ', 'remove', '(', 'int', ' ', 'pos', ')', ' ', '{', '\n', '        ', 'edited', '.', 'remove', '(', 'pos', ')', ';', '\n', '        ', 'options', '.', 'remove', '(', 'pos', ')', ';', '\n', '        ', 'changed', '(', ')', ';', '\n', '        ', 'notifyItemRemoved', '(', 'pos', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,set,"    public void set(NameValuePair newOption) {
        for (int i = 0; i < options.size(); i++) {
            if (options.get(i).key().equals(newOption.key())) {",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public void set(NameValuePair newOption) {
        for (int i = 0; i < options.size(); i++) {
            if (options.get(i).key().equals(newOption.key())) {
","['    ', 'public', ' ', 'void', ' ', 'set', '(', 'NameValuePair', ' ', 'newOption', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'options', '.', 'size', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'options', '.', 'get', '(', 'i', ')', '.', 'key', '(', ')', '.', 'equals', '(', 'newOption', '.', 'key', '(', ')', ')', ')', ' ', '{', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,get,"    public List<NameValuePair> get() {
        return options;
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public List<NameValuePair> get() {
        return options;
    }
","['    ', 'public', ' ', 'List', '<', 'NameValuePair', '>', ' ', 'get', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'options', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,load,"    public void load(@NonNull JSONObject obj) {
        options.clear();

        Iterator<String> iterator = obj.keys();
        while (iterator.hasNext()) {
            String key = iterator.next();
            options.add(new NameValuePair(key, obj.optString(key, null)));
        }

        notifyDataSetChanged();
        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public void load(@NonNull JSONObject obj) {
        options.clear();

        Iterator<String> iterator = obj.keys();
        while (iterator.hasNext()) {
            String key = iterator.next();
            options.add(new NameValuePair(key, obj.optString(key, null)));
        }

        notifyDataSetChanged();
        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'load', '(', '@NonNull', ' ', 'JSONObject', ' ', 'obj', ')', ' ', '{', '\n', '        ', 'options', '.', 'clear', '(', ')', ';', '\n', '\n', '        ', 'Iterator', '<', 'String', '>', ' ', 'iterator', ' ', '=', ' ', 'obj', '.', 'keys', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'iterator', '.', 'hasNext', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'key', ' ', '=', ' ', 'iterator', '.', 'next', '(', ')', ';', '\n', '            ', 'options', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'key', ',', ' ', 'obj', '.', 'optString', '(', 'key', ',', ' ', 'null', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'notifyDataSetChanged', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,parseAndAdd,"    public void parseAndAdd(@NonNull String str) {
        List<NameValuePair> newOptions = Utils.parseOptions(str);
        options.addAll(newOptions);
        notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
        changed();

        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public void parseAndAdd(@NonNull String str) {
        List<NameValuePair> newOptions = Utils.parseOptions(str);
        options.addAll(newOptions);
        notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
        changed();

        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'parseAndAdd', '(', '@NonNull', ' ', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'List', '<', 'NameValuePair', '>', ' ', 'newOptions', ' ', '=', ' ', 'Utils', '.', 'parseOptions', '(', 'str', ')', ';', '\n', '        ', 'options', '.', 'addAll', '(', 'newOptions', ')', ';', '\n', '        ', 'notifyItemRangeInserted', '(', 'options', '.', 'size', '(', ')', ' ', '-', ' ', 'newOptions', '.', 'size', '(', ')', ',', ' ', 'newOptions', '.', 'size', '(', ')', ')', ';', '\n', '        ', 'changed', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,add,"    public void add(@NonNull NameValuePair option) {
        options.add(option);
        edited.add(options.size() - 1);
        changed();
        notifyItemInserted(options.size() - 1);

        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public void add(@NonNull NameValuePair option) {
        options.add(option);
        edited.add(options.size() - 1);
        changed();
        notifyItemInserted(options.size() - 1);

        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'add', '(', '@NonNull', ' ', 'NameValuePair', ' ', 'option', ')', ' ', '{', '\n', '        ', 'options', '.', 'add', '(', 'option', ')', ';', '\n', '        ', 'edited', '.', 'add', '(', 'options', '.', 'size', '(', ')', ' ', '-', ' ', '1', ')', ';', '\n', '        ', 'changed', '(', ')', ';', '\n', '        ', 'notifyItemInserted', '(', 'options', '.', 'size', '(', ')', ' ', '-', ' ', '1', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,OptionsAdapter.java,onEditOption,"        void onEditOption(NameValuePair option);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"        void onEditOption(NameValuePair option);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onEditOption', '(', 'NameValuePair', ' ', 'option', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.disableSwipeRefresh();
        layout.setLayoutManager(new SuppressingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.disableSwipeRefresh();
        layout.setLayoutManager(new SuppressingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.show(this, Utils.Messages.FAILED_LOADING_OPTIONS, ex);
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'new', ' ', 'RecyclerViewLayout', '(', 'this', ')', ';', '\n', '        ', 'setContentView', '(', 'layout', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'customOptions', ')', ';', '\n', '\n', '        ', 'layout', '.', 'disableSwipeRefresh', '(', ')', ';', '\n', '        ', 'layout', '.', 'setLayoutManager', '(', 'new', ' ', 'SuppressingLinearLayoutManager', '(', 'this', ',', ' ', 'LinearLayoutManager', '.', 'VERTICAL', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'layout', '.', 'getList', '(', ')', '.', 'addItemDecoration', '(', 'new', ' ', 'DividerItemDecoration', '(', 'this', ',', ' ', 'DividerItemDecoration', '.', 'VERTICAL', ')', ')', ';', '\n', '        ', 'adapter', ' ', '=', ' ', 'new', ' ', 'OptionsAdapter', '(', 'this', ',', ' ', 'this', ')', ';', '\n', '        ', 'layout', '.', 'loadListData', '(', 'adapter', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'FAILED_LOADING_OPTIONS', ',', ' ', 'ex', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,ConfigEditorActivity.java,load,"    private void load() throws JSONException {
        adapter.load(new JSONObject(Prefs.getBase64String(this, PKeys.CUSTOM_OPTIONS, ""{}"")));
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    private void load() throws JSONException {
        adapter.load(new JSONObject(Prefs.getBase64String(this, PKeys.CUSTOM_OPTIONS, ""{}"")));
    }
","['    ', 'private', ' ', 'void', ' ', 'load', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'adapter', '.', 'load', '(', 'new', ' ', 'JSONObject', '(', 'Prefs', '.', 'getBase64String', '(', 'this', ',', ' ', 'PKeys', '.', 'CUSTOM_OPTIONS', ',', ' ', '""', '{}', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,ConfigEditorActivity.java,save,"    private void save() {
        try {
            Prefs.putBase64String(this, PKeys.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()).toString());",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    private void save() {
        try {
            Prefs.putBase64String(this, PKeys.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()).toString());
","['    ', 'private', ' ', 'void', ' ', 'save', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Prefs', '.', 'putBase64String', '(', 'this', ',', ' ', 'PKeys', '.', 'CUSTOM_OPTIONS', ',', ' ', 'NameValuePair', '.', 'toJson', '(', 'adapter', '.', 'get', '(', ')', ')', '.', 'toString', '(', ')', ')', ';', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,ConfigEditorActivity.java,importOptionsFromStream,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException ex) {
            Toaster.show(this, Utils.Messages.CANNOT_IMPORT, ex);
            return;
        }

        adapter.parseAndAdd(builder.toString());
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException ex) {
            Toaster.show(this, Utils.Messages.CANNOT_IMPORT, ex);
            return;
        }

        adapter.parseAndAdd(builder.toString());
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptionsFromStream', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'try', ' ', '(', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'line', ';', '\n', '            ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', 'builder', '.', 'append', '(', 'line', ')', '.', 'append', '(', ""'\\n'"", ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'CANNOT_IMPORT', ',', ' ', 'ex', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'adapter', '.', 'parseAndAdd', '(', 'builder', '.', 'toString', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,ConfigEditorActivity.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        String keyStr = key.getText().toString();
                        if (keyStr.startsWith(""--"")) keyStr = keyStr.substring(2);
                        adapter.add(new NameValuePair(keyStr, value.getText().toString()));
                    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        String keyStr = key.getText().toString();
                        if (keyStr.startsWith(""--"")) keyStr = keyStr.substring(2);
                        adapter.add(new NameValuePair(keyStr, value.getText().toString()));
                    }
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'String', ' ', 'keyStr', ' ', '=', ' ', 'key', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', '\n', '                        ', 'if', ' ', '(', 'keyStr', '.', 'startsWith', '(', '""', '--', '""', ')', ')', ' ', 'keyStr', ' ', '=', ' ', 'keyStr', '.', 'substring', '(', '2', ')', ';', '\n', '                        ', 'adapter', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'keyStr', ',', ' ', 'value', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,ConfigEditorActivity.java,onClick,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        String newValueStr = newValue.getText().toString();
                        if (!newValueStr.equals(option.value()))
                            adapter.set(new NameValuePair(option.key(), newValueStr));",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"                    public void onClick(DialogInterface dialogInterface, int i) {
                        String newValueStr = newValue.getText().toString();
                        if (!newValueStr.equals(option.value()))
                            adapter.set(new NameValuePair(option.key(), newValueStr));
","['                    ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialogInterface', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '                        ', 'String', ' ', 'newValueStr', ' ', '=', ' ', 'newValue', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', '\n', '                        ', 'if', ' ', '(', '!', 'newValueStr', '.', 'equals', '(', 'option', '.', 'value', '(', ')', ')', ')', '\n', '                            ', 'adapter', '.', 'set', '(', 'new', ' ', 'NameValuePair', '(', 'option', '.', 'key', '(', ')', ',', ' ', 'newValueStr', ')', ')', ';', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,Utils.java,parseOptions,"    public static List<NameValuePair> parseOptions(String str) {
        List<NameValuePair> list = new ArrayList<>();
        String[] lines = str.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0)
                list.add(new NameValuePair(split[0], split.length == 1 ? null : split[1]));
        }

        return list;
    }",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public static List<NameValuePair> parseOptions(String str) {
        List<NameValuePair> list = new ArrayList<>();
        String[] lines = str.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0)
                list.add(new NameValuePair(split[0], split.length == 1 ? null : split[1]));
        }

        return list;
    }
","['    ', 'public', ' ', 'static', ' ', 'List', '<', 'NameValuePair', '>', ' ', 'parseOptions', '(', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'List', '<', 'NameValuePair', '>', ' ', 'list', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'str', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'line', ' ', '=', ' ', 'line', '.', 'trim', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '#', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'split', '.', 'length', ' ', '>', ' ', '0', ')', '\n', '                ', 'list', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'split', '[', '0', ']', ',', ' ', 'split', '.', 'length', ' ', '=', '=', ' ', '1', ' ', '?', ' ', 'null', ' ', ':', ' ', 'split', '[', '1', ']', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'list', ';', '\n', '    ', '}', '\n', '<END>']"
master,e36d16f7b935ba27cc398598687bb70908536351,Utils.java,toMap,"    public static void toMap(JSONObject obj, Map<String, String> map) {
        Iterator<String> iterator = obj.keys();
        while (iterator.hasNext()) {
            String key = iterator.next();",https://www.github.com/devgianlu/aria2android/commit/e36d16f7b935ba27cc398598687bb70908536351,"    public static void toMap(JSONObject obj, Map<String, String> map) {
        Iterator<String> iterator = obj.keys();
        while (iterator.hasNext()) {
            String key = iterator.next();
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'toMap', '(', 'JSONObject', ' ', 'obj', ',', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'map', ')', ' ', '{', '\n', '        ', 'Iterator', '<', 'String', '>', ' ', 'iterator', ' ', '=', ' ', 'obj', '.', 'keys', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'iterator', '.', 'hasNext', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'key', ' ', '=', ' ', 'iterator', '.', 'next', '(', ')', ';', '\n', '<END>']"
master,f8c174aac538aa33acee68de0410df7b7d606bdb,OptionsAdapter.java,remove,"    private void remove(int pos) {
        if (pos == -1) return;

        edited.remove(pos);
        options.remove(pos);
        changed();
        notifyItemRemoved(pos);

        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/f8c174aac538aa33acee68de0410df7b7d606bdb,"    private void remove(int pos) {
        if (pos == -1) return;

        edited.remove(pos);
        options.remove(pos);
        changed();
        notifyItemRemoved(pos);

        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'private', ' ', 'void', ' ', 'remove', '(', 'int', ' ', 'pos', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'pos', ' ', '=', '=', ' ', '-', '1', ')', ' ', 'return', ';', '\n', '\n', '        ', 'edited', '.', 'remove', '(', 'pos', ')', ';', '\n', '        ', 'options', '.', 'remove', '(', 'pos', ')', ';', '\n', '        ', 'changed', '(', ')', ';', '\n', '        ', 'notifyItemRemoved', '(', 'pos', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f8c174aac538aa33acee68de0410df7b7d606bdb,ConfigEditorActivity.java,importOptionsFromStream,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException | OutOfMemoryError ex) {
            System.gc();
            Toaster.show(this, Utils.Messages.CANNOT_IMPORT, ex);
            return;
        }

        adapter.parseAndAdd(builder.toString());
    }",https://www.github.com/devgianlu/aria2android/commit/f8c174aac538aa33acee68de0410df7b7d606bdb,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException | OutOfMemoryError ex) {
            System.gc();
            Toaster.show(this, Utils.Messages.CANNOT_IMPORT, ex);
            return;
        }

        adapter.parseAndAdd(builder.toString());
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptionsFromStream', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'try', ' ', '(', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'line', ';', '\n', '            ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', 'builder', '.', 'append', '(', 'line', ')', '.', 'append', '(', ""'\\n'"", ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'OutOfMemoryError', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'System', '.', 'gc', '(', ')', ';', '\n', '            ', 'Toaster', '.', 'show', '(', 'this', ',', ' ', 'Utils', '.', 'Messages', '.', 'CANNOT_IMPORT', ',', ' ', 'ex', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'adapter', '.', 'parseAndAdd', '(', 'builder', '.', 'toString', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,ConfigEditorActivity.java,onCreate,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.disableSwipeRefresh();
        layout.setLayoutManager(new SuppressingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.with(this).message(R.string.failedLoadingOptions).ex(ex).show();
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        layout = new RecyclerViewLayout(this);
        setContentView(layout);
        setTitle(R.string.customOptions);

        layout.disableSwipeRefresh();
        layout.setLayoutManager(new SuppressingLinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        layout.getList().addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));
        adapter = new OptionsAdapter(this, this);
        layout.loadListData(adapter);

        try {
            load();
        } catch (JSONException ex) {
            Toaster.with(this).message(R.string.failedLoadingOptions).ex(ex).show();
            onBackPressed();
            return;
        }

        String importOptions = getIntent().getStringExtra(""import"");
        if (importOptions != null) {
            try {
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '\n', '        ', 'layout', ' ', '=', ' ', 'new', ' ', 'RecyclerViewLayout', '(', 'this', ')', ';', '\n', '        ', 'setContentView', '(', 'layout', ')', ';', '\n', '        ', 'setTitle', '(', 'R', '.', 'string', '.', 'customOptions', ')', ';', '\n', '\n', '        ', 'layout', '.', 'disableSwipeRefresh', '(', ')', ';', '\n', '        ', 'layout', '.', 'setLayoutManager', '(', 'new', ' ', 'SuppressingLinearLayoutManager', '(', 'this', ',', ' ', 'LinearLayoutManager', '.', 'VERTICAL', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'layout', '.', 'getList', '(', ')', '.', 'addItemDecoration', '(', 'new', ' ', 'DividerItemDecoration', '(', 'this', ',', ' ', 'DividerItemDecoration', '.', 'VERTICAL', ')', ')', ';', '\n', '        ', 'adapter', ' ', '=', ' ', 'new', ' ', 'OptionsAdapter', '(', 'this', ',', ' ', 'this', ')', ';', '\n', '        ', 'layout', '.', 'loadListData', '(', 'adapter', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'load', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'JSONException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Toaster', '.', 'with', '(', 'this', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'failedLoadingOptions', ')', '.', 'ex', '(', 'ex', ')', '.', 'show', '(', ')', ';', '\n', '            ', 'onBackPressed', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'importOptions', ' ', '=', ' ', 'getIntent', '(', ')', '.', 'getStringExtra', '(', '""', 'import', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'importOptions', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,ConfigEditorActivity.java,importOptionsFromStream,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException | OutOfMemoryError ex) {
            System.gc();
            Toaster.with(this).message(R.string.cannotImport).ex(ex).show();
            return;
        }

        adapter.parseAndAdd(builder.toString());
    }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"    private void importOptionsFromStream(@NonNull InputStream in) {
        StringBuilder builder = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
            String line;
            while ((line = reader.readLine()) != null) builder.append(line).append('\n');
        } catch (IOException | OutOfMemoryError ex) {
            System.gc();
            Toaster.with(this).message(R.string.cannotImport).ex(ex).show();
            return;
        }

        adapter.parseAndAdd(builder.toString());
    }
","['    ', 'private', ' ', 'void', ' ', 'importOptionsFromStream', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'try', ' ', '(', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'line', ';', '\n', '            ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', ' ', 'builder', '.', 'append', '(', 'line', ')', '.', 'append', '(', ""'\\n'"", ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', '|', ' ', 'OutOfMemoryError', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'System', '.', 'gc', '(', ')', ';', '\n', '            ', 'Toaster', '.', 'with', '(', 'this', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'cannotImport', ')', '.', 'ex', '(', 'ex', ')', '.', 'show', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'adapter', '.', 'parseAndAdd', '(', 'builder', '.', 'toString', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,DownloadBinActivity.java,importBin,"    private void importBin() {
        AskPermission.ask(this, Manifest.permission.READ_EXTERNAL_STORAGE, new AskPermission.Listener() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"    private void importBin() {
        AskPermission.ask(this, Manifest.permission.READ_EXTERNAL_STORAGE, new AskPermission.Listener() {
            @Override
","['    ', 'private', ' ', 'void', ' ', 'importBin', '(', ')', ' ', '{', '\n', '        ', 'AskPermission', '.', 'ask', '(', 'this', ',', ' ', 'Manifest', '.', 'permission', '.', 'READ_EXTERNAL_STORAGE', ',', ' ', 'new', ' ', 'AskPermission', '.', 'Listener', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,DownloadBinActivity.java,permissionGranted,"            public void permissionGranted(@NonNull String permission) {
                try {
                    startActivityForResult(Intent.createChooser(new Intent(Intent.ACTION_GET_CONTENT).setType(""*/*""), getString(R.string.customBin)), IMPORT_BIN_CODE);",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"            public void permissionGranted(@NonNull String permission) {
                try {
                    startActivityForResult(Intent.createChooser(new Intent(Intent.ACTION_GET_CONTENT).setType(""*/*""), getString(R.string.customBin)), IMPORT_BIN_CODE);
","['            ', 'public', ' ', 'void', ' ', 'permissionGranted', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'startActivityForResult', '(', 'Intent', '.', 'createChooser', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_GET_CONTENT', ')', '.', 'setType', '(', '""', '*/*', '""', ')', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'customBin', ')', ')', ',', ' ', 'IMPORT_BIN_CODE', ')', ';', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,DownloadBinActivity.java,permissionDenied,"            public void permissionDenied(@NonNull String permission) {
                Toaster.with(DownloadBinActivity.this).message(R.string.readPermissionDenied).error(true).show();
            }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"            public void permissionDenied(@NonNull String permission) {
                Toaster.with(DownloadBinActivity.this).message(R.string.readPermissionDenied).error(true).show();
            }
","['            ', 'public', ' ', 'void', ' ', 'permissionDenied', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                ', 'Toaster', '.', 'with', '(', 'DownloadBinActivity', '.', 'this', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'readPermissionDenied', ')', '.', 'error', '(', 'true', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,DownloadBinActivity.java,askRationale,"            public void askRationale(@NonNull AlertDialog.Builder builder) {
                builder.setTitle(R.string.readPermission)
                        .setMessage(R.string.readStorage_message);",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"            public void askRationale(@NonNull AlertDialog.Builder builder) {
                builder.setTitle(R.string.readPermission)
                        .setMessage(R.string.readStorage_message);
","['            ', 'public', ' ', 'void', ' ', 'askRationale', '(', '@NonNull', ' ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ')', ' ', '{', '\n', '                ', 'builder', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'readPermission', ')', '\n', '                        ', '.', 'setMessage', '(', 'R', '.', 'string', '.', 'readStorage_message', ')', ';', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,DownloadBinActivity.java,onResult,"    public void onResult(@NonNull List<GitHubApi.Release> result) {
        loading.setVisibility(View.GONE);
        MessageLayout.hide(layout);
        list.setVisibility(View.VISIBLE);
        list.setAdapter(new ReleasesAdapter(this, result, this));
    }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"    public void onResult(@NonNull List<GitHubApi.Release> result) {
        loading.setVisibility(View.GONE);
        MessageLayout.hide(layout);
        list.setVisibility(View.VISIBLE);
        list.setAdapter(new ReleasesAdapter(this, result, this));
    }
","['    ', 'public', ' ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ' ', '{', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'MessageLayout', '.', 'hide', '(', 'layout', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'list', '.', 'setAdapter', '(', 'new', ' ', 'ReleasesAdapter', '(', 'this', ',', ' ', 'result', ',', ' ', 'this', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,DownloadBinActivity.java,onException,"    public void onException(@NonNull Exception ex) {
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        MessageLayout.show(layout, getString(R.string.failedRetrievingReleases_reason, ex.getMessage()), R.drawable.ic_error_outline_black_48dp);
    }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"    public void onException(@NonNull Exception ex) {
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        MessageLayout.show(layout, getString(R.string.failedRetrievingReleases_reason, ex.getMessage()), R.drawable.ic_error_outline_black_48dp);
    }
","['    ', 'public', ' ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'MessageLayout', '.', 'show', '(', 'layout', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'failedRetrievingReleases_reason', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ',', ' ', 'R', '.', 'drawable', '.', 'ic_error_outline_black_48dp', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,permissionDenied,"            public void permissionDenied(@NonNull String permission) {
                Toaster.with(MainActivity.this).message(R.string.writePermissionDenied).error(true).show();
            }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"            public void permissionDenied(@NonNull String permission) {
                Toaster.with(MainActivity.this).message(R.string.writePermissionDenied).error(true).show();
            }
","['            ', 'public', ' ', 'void', ' ', 'permissionDenied', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                ', 'Toaster', '.', 'with', '(', 'MainActivity', '.', 'this', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'writePermissionDenied', ')', '.', 'error', '(', 'true', ')', '.', 'show', '(', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,askRationale,"            public void askRationale(@NonNull AlertDialog.Builder builder) {
                builder.setTitle(R.string.permissionRequest)
                        .setMessage(R.string.writeStorageMessage);",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"            public void askRationale(@NonNull AlertDialog.Builder builder) {
                builder.setTitle(R.string.permissionRequest)
                        .setMessage(R.string.writeStorageMessage);
","['            ', 'public', ' ', 'void', ' ', 'askRationale', '(', '@NonNull', ' ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ')', ' ', '{', '\n', '                ', 'builder', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'permissionRequest', ')', '\n', '                        ', '.', 'setMessage', '(', 'R', '.', 'string', '.', 'writeStorageMessage', ')', ';', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,onClick,"            public void onClick(View v) {
                try {
                    Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"            public void onClick(View v) {
                try {
                    Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_OPEN_DOCUMENT_TREE', ')', ';', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,onDestroy,"    protected void onDestroy() {
        try {
            unbindService(serviceConnection);
        } catch (IllegalArgumentException ex) {
            Logging.log(ex);
        }

        super.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"    protected void onDestroy() {
        try {
            unbindService(serviceConnection);
        } catch (IllegalArgumentException ex) {
            Logging.log(ex);
        }

        super.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IllegalArgumentException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,permissionGranted,"                public void permissionGranted(@NonNull String permission) {
                    startService();
                }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"                public void permissionGranted(@NonNull String permission) {
                    startService();
                }
","['                ', 'public', ' ', 'void', ' ', 'permissionGranted', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                    ', 'startService', '(', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,permissionDenied,"                public void permissionDenied(@NonNull String permission) {
                    Toaster.with(MainActivity.this).message(R.string.writePermissionDenied).error(true).show();
                }",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"                public void permissionDenied(@NonNull String permission) {
                    Toaster.with(MainActivity.this).message(R.string.writePermissionDenied).error(true).show();
                }
","['                ', 'public', ' ', 'void', ' ', 'permissionDenied', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                    ', 'Toaster', '.', 'with', '(', 'MainActivity', '.', 'this', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'writePermissionDenied', ')', '.', 'error', '(', 'true', ')', '.', 'show', '(', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,MainActivity.java,askRationale,"                public void askRationale(@NonNull AlertDialog.Builder builder) {
                    builder.setTitle(R.string.permissionRequest)
                            .setMessage(R.string.writeStorageMessage);",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"                public void askRationale(@NonNull AlertDialog.Builder builder) {
                    builder.setTitle(R.string.permissionRequest)
                            .setMessage(R.string.writeStorageMessage);
","['                ', 'public', ' ', 'void', ' ', 'askRationale', '(', '@NonNull', ' ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ')', ' ', '{', '\n', '                    ', 'builder', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'permissionRequest', ')', '\n', '                            ', '.', 'setMessage', '(', 'R', '.', 'string', '.', 'writeStorageMessage', ')', ';', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,GitHubApi.java,onResult,"        void onResult(@NonNull E result);

        @UiThread
        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"        void onResult(@NonNull E result);

        @UiThread
        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'E', ' ', 'result', ')', ';', '\n', '\n', '        ', '@UiThread', '\n', '        ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,GitHubApi.java,onException,"        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/f0a29e15ebe8e82ac86e7e0c0aeeb3a94fd4a6d5,"        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,3b4fda894af912e0092444a2b0c4b885817a45e3,ConfigEditorActivity.java,onItemsCountChanged,"    public void onItemsCountChanged(int count) {
        if (count <= 0) layout.showInfo(R.string.noCustomOptions);
        else layout.showList();",https://www.github.com/devgianlu/aria2android/commit/3b4fda894af912e0092444a2b0c4b885817a45e3,"    public void onItemsCountChanged(int count) {
        if (count <= 0) layout.showInfo(R.string.noCustomOptions);
        else layout.showList();
","['    ', 'public', ' ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'count', ' ', '<', '=', ' ', '0', ')', ' ', 'layout', '.', 'showInfo', '(', 'R', '.', 'string', '.', 'noCustomOptions', ')', ';', '\n', '        ', 'else', ' ', 'layout', '.', 'showList', '(', ')', ';', '\n', '<END>']"
master,3b4fda894af912e0092444a2b0c4b885817a45e3,DownloadBinActivity.java,onResult,"    public void onResult(@NonNull List<GitHubApi.Release> result) {
        loading.setVisibility(View.GONE);
        message.hide();
        list.setVisibility(View.VISIBLE);
        list.setAdapter(new ReleasesAdapter(this, result, this));
    }",https://www.github.com/devgianlu/aria2android/commit/3b4fda894af912e0092444a2b0c4b885817a45e3,"    public void onResult(@NonNull List<GitHubApi.Release> result) {
        loading.setVisibility(View.GONE);
        message.hide();
        list.setVisibility(View.VISIBLE);
        list.setAdapter(new ReleasesAdapter(this, result, this));
    }
","['    ', 'public', ' ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ' ', '{', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'message', '.', 'hide', '(', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'list', '.', 'setAdapter', '(', 'new', ' ', 'ReleasesAdapter', '(', 'this', ',', ' ', 'result', ',', ' ', 'this', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b4fda894af912e0092444a2b0c4b885817a45e3,DownloadBinActivity.java,onException,"    public void onException(@NonNull Exception ex) {
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        message.setError(R.string.failedRetrievingReleases_reason, ex.getMessage());
    }",https://www.github.com/devgianlu/aria2android/commit/3b4fda894af912e0092444a2b0c4b885817a45e3,"    public void onException(@NonNull Exception ex) {
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        message.setError(R.string.failedRetrievingReleases_reason, ex.getMessage());
    }
","['    ', 'public', ' ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'message', '.', 'setError', '(', 'R', '.', 'string', '.', 'failedRetrievingReleases_reason', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3b4fda894af912e0092444a2b0c4b885817a45e3,DownloadBinActivity.java,onReleaseSelected,"    public void onReleaseSelected(GitHubApi.Release release) {
        progress.setText(R.string.downloadingBin);
        loading.setVisibility(View.VISIBLE);
        list.setVisibility(View.GONE);
        message.hide();

        BinUtils.downloadAndExtractBin(this, release.androidAsset, this);
    }",https://www.github.com/devgianlu/aria2android/commit/3b4fda894af912e0092444a2b0c4b885817a45e3,"    public void onReleaseSelected(GitHubApi.Release release) {
        progress.setText(R.string.downloadingBin);
        loading.setVisibility(View.VISIBLE);
        list.setVisibility(View.GONE);
        message.hide();

        BinUtils.downloadAndExtractBin(this, release.androidAsset, this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onReleaseSelected', '(', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'downloadingBin', ')', ';', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'message', '.', 'hide', '(', ')', ';', '\n', '\n', '        ', 'BinUtils', '.', 'downloadAndExtractBin', '(', 'this', ',', ' ', 'release', '.', 'androidAsset', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0dbc8a2a4218ab1330aeb83381f59ed9a51850f3,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        try {
            manager.notify(BinService.NOTIFICATION_ID, builder.build());",https://www.github.com/devgianlu/aria2android/commit/0dbc8a2a4218ab1330aeb83381f59ed9a51850f3,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        try {
            manager.notify(BinService.NOTIFICATION_ID, builder.build());
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '_stop', ')', ' ', 'return', ';', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'manager', '.', 'notify', '(', 'BinService', '.', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '<END>']"
master,e5d1561218c9943b37e7286f45ecca01c4ae65e5,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        manager.notify(BinService.NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/e5d1561218c9943b37e7286f45ecca01c4ae65e5,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (_stop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        manager.notify(BinService.NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '_stop', ')', ' ', 'return', ';', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'manager', '.', 'notify', '(', 'BinService', '.', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,1d64a2b07eaad57e9b48e1d571156c4be800bf82,BinService.java,stopBin,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        if (performanceMonitor != null) {
            performanceMonitor.stopSafe();
            streamListener = null;
        }

        if (shortcutManager != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1) {
            ShortcutInfo shortcut = new ShortcutInfo.Builder(this, ""startService"")
                    .setShortLabel(getString(R.string.startService))
                    .setIcon(Icon.createWithResource(this, R.drawable.baseline_play_arrow_24))
                    .setIntent(new Intent(ACTION_START_SERVICE))
                    .build();

            shortcutManager.setDynamicShortcuts(Collections.singletonList(shortcut));
        }

        stopForeground(true);
        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }",https://www.github.com/devgianlu/aria2android/commit/1d64a2b07eaad57e9b48e1d571156c4be800bf82,"    private void stopBin() {
        try {
            Runtime.getRuntime().exec(""pkill aria2c"");
        } catch (IOException ex) {
            ex(ex);
        }

        if (process != null) {
            try {
                process.destroy();
                process.waitFor();
                process = null;
            } catch (InterruptedException ex) {
                ex(ex);
            }
        }

        if (streamListener != null) {
            streamListener.stopSafe();
            streamListener = null;
        }

        if (performanceMonitor != null) {
            performanceMonitor.stopSafe();
            streamListener = null;
        }

        if (shortcutManager != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1) {
            ShortcutInfo shortcut = new ShortcutInfo.Builder(this, ""startService"")
                    .setShortLabel(getString(R.string.startService))
                    .setIcon(Icon.createWithResource(this, R.drawable.baseline_play_arrow_24))
                    .setIntent(new Intent(ACTION_START_SERVICE))
                    .build();

            shortcutManager.setDynamicShortcuts(Collections.singletonList(shortcut));
        }

        stopForeground(true);
        dispatchBroadcast(Action.SERVER_STOP, null, null);
    }
","['    ', 'private', ' ', 'void', ' ', 'stopBin', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'pkill aria2c', '""', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'ex', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'process', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', '.', 'destroy', '(', ')', ';', '\n', '                ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '                ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'InterruptedException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'ex', '(', 'ex', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'streamListener', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'streamListener', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'performanceMonitor', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'performanceMonitor', '.', 'stopSafe', '(', ')', ';', '\n', '            ', 'streamListener', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'shortcutManager', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION_CODES', '.', 'N_MR1', ')', ' ', '{', '\n', '            ', 'ShortcutInfo', ' ', 'shortcut', ' ', '=', ' ', 'new', ' ', 'ShortcutInfo', '.', 'Builder', '(', 'this', ',', ' ', '""', 'startService', '""', ')', '\n', '                    ', '.', 'setShortLabel', '(', 'getString', '(', 'R', '.', 'string', '.', 'startService', ')', ')', '\n', '                    ', '.', 'setIcon', '(', 'Icon', '.', 'createWithResource', '(', 'this', ',', ' ', 'R', '.', 'drawable', '.', 'baseline_play_arrow_24', ')', ')', '\n', '                    ', '.', 'setIntent', '(', 'new', ' ', 'Intent', '(', 'ACTION_START_SERVICE', ')', ')', '\n', '                    ', '.', 'build', '(', ')', ';', '\n', '\n', '            ', 'shortcutManager', '.', 'setDynamicShortcuts', '(', 'Collections', '.', 'singletonList', '(', 'shortcut', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'stopForeground', '(', 'true', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_STOP', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,1d64a2b07eaad57e9b48e1d571156c4be800bf82,PreferencesActivity.java,onHeaderClick,"    public void onHeaderClick(Header header, int position) {
        if (header.iconRes == R.drawable.baseline_announcement_24) {
            startActivity(new Intent(this, LogsActivity.class));
            return;
        }

        super.onHeaderClick(header, position);
    }",https://www.github.com/devgianlu/aria2android/commit/1d64a2b07eaad57e9b48e1d571156c4be800bf82,"    public void onHeaderClick(Header header, int position) {
        if (header.iconRes == R.drawable.baseline_announcement_24) {
            startActivity(new Intent(this, LogsActivity.class));
            return;
        }

        super.onHeaderClick(header, position);
    }
","['    ', 'public', ' ', 'void', ' ', 'onHeaderClick', '(', 'Header', ' ', 'header', ',', ' ', 'int', ' ', 'position', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'header', '.', 'iconRes', ' ', '=', '=', ' ', 'R', '.', 'drawable', '.', 'baseline_announcement_24', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'LogsActivity', '.', 'class', ')', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'super', '.', 'onHeaderClick', '(', 'header', ',', ' ', 'position', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,StartConfig.java,fromPrefs,"    public static StartConfig fromPrefs() throws JSONException {
        HashMap<String, String> options = new HashMap<>();
        Utils.toMap(new JSONObject(Prefs.getBase64String(PK.CUSTOM_OPTIONS, ""{}"")), options);
        return new StartConfig(Prefs.getString(PK.OUTPUT_DIRECTORY, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath()),
                options,",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"    public static StartConfig fromPrefs() throws JSONException {
        HashMap<String, String> options = new HashMap<>();
        Utils.toMap(new JSONObject(Prefs.getBase64String(PK.CUSTOM_OPTIONS, ""{}"")), options);
        return new StartConfig(Prefs.getString(PK.OUTPUT_DIRECTORY, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath()),
                options,
","['    ', 'public', ' ', 'static', ' ', 'StartConfig', ' ', 'fromPrefs', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'HashMap', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'Utils', '.', 'toMap', '(', 'new', ' ', 'JSONObject', '(', 'Prefs', '.', 'getBase64String', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', '""', '{}', '""', ')', ')', ',', ' ', 'options', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'StartConfig', '(', 'Prefs', '.', 'getString', '(', 'PK', '.', 'OUTPUT_DIRECTORY', ',', ' ', 'Environment', '.', 'getExternalStoragePublicDirectory', '(', 'Environment', '.', 'DIRECTORY_DOWNLOADS', ')', '.', 'getAbsolutePath', '(', ')', ')', ',', '\n', '                ', 'options', ',', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,BootCompletedReceiver.java,onServiceConnected,"                public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
                    Messenger messenger = new Messenger(iBinder);
                    try {
                        messenger.send(Message.obtain(null, BinService.START, StartConfig.fromPrefs()));",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"                public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
                    Messenger messenger = new Messenger(iBinder);
                    try {
                        messenger.send(Message.obtain(null, BinService.START, StartConfig.fromPrefs()));
","['                ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '                    ', 'Messenger', ' ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '                    ', 'try', ' ', '{', '\n', '                        ', 'messenger', '.', 'send', '(', 'Message', '.', 'obtain', '(', 'null', ',', ' ', 'BinService', '.', 'START', ',', ' ', 'StartConfig', '.', 'fromPrefs', '(', ')', ')', ')', ';', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,ConfigEditorActivity.java,load,"    private void load() throws JSONException {
        adapter.load(new JSONObject(Prefs.getBase64String(PK.CUSTOM_OPTIONS, ""{}"")));
    }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"    private void load() throws JSONException {
        adapter.load(new JSONObject(Prefs.getBase64String(PK.CUSTOM_OPTIONS, ""{}"")));
    }
","['    ', 'private', ' ', 'void', ' ', 'load', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'adapter', '.', 'load', '(', 'new', ' ', 'JSONObject', '(', 'Prefs', '.', 'getBase64String', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', '""', '{}', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,ConfigEditorActivity.java,save,"    private void save() {
        try {
            Prefs.putBase64String(PK.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()).toString());",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"    private void save() {
        try {
            Prefs.putBase64String(PK.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()).toString());
","['    ', 'private', ' ', 'void', ' ', 'save', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Prefs', '.', 'putBase64String', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', 'NameValuePair', '.', 'toJson', '(', 'adapter', '.', 'get', '(', ')', ')', '.', 'toString', '(', ')', ')', ';', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,DownloadBinActivity.java,onBinExtracted,"    public void onBinExtracted() {
        progress.setText(R.string.binExtracted);

        Prefs.putBoolean(PK.CUSTOM_BIN, false);
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"    public void onBinExtracted() {
        progress.setText(R.string.binExtracted);

        Prefs.putBoolean(PK.CUSTOM_BIN, false);
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }
","['    ', 'public', ' ', 'void', ' ', 'onBinExtracted', '(', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'binExtracted', ')', ';', '\n', '\n', '        ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'CUSTOM_BIN', ',', ' ', 'false', ')', ';', '\n', '        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', '\n', '                ', '.', 'addFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ' ', '|', ' ', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ')', ';', '\n', '        ', 'finish', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(PK.SAVE_SESSION, b);
            }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(PK.SAVE_SESSION, b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'compoundButton', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'SAVE_SESSION', ',', ' ', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(PK.START_AT_BOOT, b);
            }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(PK.START_AT_BOOT, b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'START_AT_BOOT', ',', ' ', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int port;
                try {
                    port = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidPort);
                }

                if (port > 1024 && port < 65535)
                    Prefs.putInt(PK.RPC_PORT, port);",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int port;
                try {
                    port = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidPort);
                }

                if (port > 1024 && port < 65535)
                    Prefs.putInt(PK.RPC_PORT, port);
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'int', ' ', 'port', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'port', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'text', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidPort', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'if', ' ', '(', 'port', ' ', '>', ' ', '1024', ' ', '&', '&', ' ', 'port', ' ', '<', ' ', '65535', ')', '\n', '                    ', 'Prefs', '.', 'putInt', '(', 'PK', '.', 'RPC_PORT', ',', ' ', 'port', ')', ';', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(PK.RPC_ALLOW_ORIGIN_ALL, b);
            }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                Prefs.putBoolean(PK.RPC_ALLOW_ORIGIN_ALL, b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'compoundButton', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'RPC_ALLOW_ORIGIN_ALL', ',', ' ', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(PK.SHOW_PERFORMANCE, b);
                updateDelay.setEnabled(b);
            }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"            public void onCheckedChanged(CompoundButton buttonView, boolean b) {
                Prefs.putBoolean(PK.SHOW_PERFORMANCE, b);
                updateDelay.setEnabled(b);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'b', ')', ' ', '{', '\n', '                ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'SHOW_PERFORMANCE', ',', ' ', 'b', ')', ';', '\n', '                ', 'updateDelay', '.', 'setEnabled', '(', 'b', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,validate,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int delay;
                try {
                    delay = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidUpdateDelay);
                }

                if (delay > 0)
                    Prefs.putInt(PK.NOTIFICATION_UPDATE_DELAY, delay);",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"            public void validate(String text) throws SuperEditText.InvalidInputException {
                int delay;
                try {
                    delay = Integer.parseInt(text);
                } catch (Exception ex) {
                    throw new SuperEditText.InvalidInputException(R.string.invalidUpdateDelay);
                }

                if (delay > 0)
                    Prefs.putInt(PK.NOTIFICATION_UPDATE_DELAY, delay);
","['            ', 'public', ' ', 'void', ' ', 'validate', '(', 'String', ' ', 'text', ')', ' ', 'throws', ' ', 'SuperEditText', '.', 'InvalidInputException', ' ', '{', '\n', '                ', 'int', ' ', 'delay', ';', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'delay', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'text', ')', ';', '\n', '                ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                    ', 'throw', ' ', 'new', ' ', 'SuperEditText', '.', 'InvalidInputException', '(', 'R', '.', 'string', '.', 'invalidUpdateDelay', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'if', ' ', '(', 'delay', ' ', '>', ' ', '0', ')', '\n', '                    ', 'Prefs', '.', 'putInt', '(', 'PK', '.', 'NOTIFICATION_UPDATE_DELAY', ',', ' ', 'delay', ')', ';', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,MainActivity.java,startAria2App,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(PK.RPC_PORT))
                    .putExtra(""token"", Prefs.getString(PK.RPC_TOKEN)));
        }

        AnalyticsApplication.sendAnalytics(MainActivity.this, Utils.ACTION_OPENED_ARIA2APP);
    }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(PK.RPC_PORT))
                    .putExtra(""token"", Prefs.getString(PK.RPC_TOKEN)));
        }

        AnalyticsApplication.sendAnalytics(MainActivity.this, Utils.ACTION_OPENED_ARIA2APP);
    }
","['    ', 'private', ' ', 'void', ' ', 'startAria2App', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'intent', '\n', '                    ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'port', '""', ',', ' ', 'Prefs', '.', 'getInt', '(', 'PK', '.', 'RPC_PORT', ')', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'token', '""', ',', ' ', 'Prefs', '.', 'getString', '(', 'PK', '.', 'RPC_TOKEN', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'MainActivity', '.', 'this', ',', ' ', 'Utils', '.', 'ACTION_OPENED_ARIA2APP', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7f9ee1e931bc905a018f961e9e7b76d19303962e,PreferenceActivity.java,disablePayPalOnGooglePlay,"    protected boolean disablePayPalOnGooglePlay() {
        return true;
    }",https://www.github.com/devgianlu/aria2android/commit/7f9ee1e931bc905a018f961e9e7b76d19303962e,"    protected boolean disablePayPalOnGooglePlay() {
        return true;
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'disablePayPalOnGooglePlay', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,check,"                    public boolean check(String text) {
                        File path = new File(text);
                        return path.exists() && path.canWrite();
                    }",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"                    public boolean check(String text) {
                        File path = new File(text);
                        return path.exists() && path.canWrite();
                    }
","['                    ', 'public', ' ', 'boolean', ' ', 'check', '(', 'String', ' ', 'text', ')', ' ', '{', '\n', '                        ', 'File', ' ', 'path', ' ', '=', ' ', 'new', ' ', 'File', '(', 'text', ')', ';', '\n', '                        ', 'return', ' ', 'path', '.', 'exists', '(', ')', ' ', '&', '&', ' ', 'path', '.', 'canWrite', '(', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,check,"                    public boolean check(String text) {
                        try {
                            int port = Integer.parseInt(text);",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"                    public boolean check(String text) {
                        try {
                            int port = Integer.parseInt(text);
","['                    ', 'public', ' ', 'boolean', ' ', 'check', '(', 'String', ' ', 'text', ')', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'int', ' ', 'port', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'text', ')', ';', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,check,"                    public boolean check(String text) {
                        return !text.isEmpty();
                    }",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"                    public boolean check(String text) {
                        return !text.isEmpty();
                    }
","['                    ', 'public', ' ', 'boolean', ' ', 'check', '(', 'String', ' ', 'text', ')', ' ', '{', '\n', '                        ', 'return', ' ', '!', 'text', '.', 'isEmpty', '(', ')', ';', '\n', '                    ', '}', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,onClick,"            public boolean onClick(View v) {
                try {
                    Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"            public boolean onClick(View v) {
                try {
                    Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
","['            ', 'public', ' ', 'boolean', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '                    ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_OPEN_DOCUMENT_TREE', ')', ';', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,onClick,"            public void onClick(View v) {
                startActivity(new Intent(MainActivity.this, ConfigEditorActivity.class));
            }",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"            public void onClick(View v) {
                startActivity(new Intent(MainActivity.this, ConfigEditorActivity.class));
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'ConfigEditorActivity', '.', 'class', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,onClick,"            public void onClick(View v) {
                if (adapter != null) {
                    adapter.clear();",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"            public void onClick(View v) {
                if (adapter != null) {
                    adapter.clear();
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'adapter', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'adapter', '.', 'clear', '(', ')', ';', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                boolean successful;
                if (isChecked) successful = startService();
                else successful = stopService();

                if (successful) screen.setEnabled(!isChecked); // FIXME
            }",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                isRunning = isChecked;

                boolean successful;
                if (isChecked) successful = startService();
                else successful = stopService();

                if (successful) screen.setEnabled(!isChecked); 
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'isRunning', ' ', '=', ' ', 'isChecked', ';', '\n', '\n', '                ', 'boolean', ' ', 'successful', ';', '\n', '                ', 'if', ' ', '(', 'isChecked', ')', ' ', 'successful', ' ', '=', ' ', 'startService', '(', ')', ';', '\n', '                ', 'else', ' ', 'successful', ' ', '=', ' ', 'stopService', '(', ')', ';', '\n', '\n', '                ', 'if', ' ', '(', 'successful', ')', ' ', 'screen', '.', 'setEnabled', '(', '!', 'isChecked', ')', ';', ' ', '\n', '            ', '}', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,openAria2App,"    private void openAria2App() { // TODO
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.log(ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"    private void openAria2App() { 
        try {
            getPackageManager().getPackageInfo(""com.gianlu.aria2app"", 0);
        } catch (PackageManager.NameNotFoundException ex) {
            Logging.log(ex);
            installAria2App();
            return;
        }

        if (isRunning) {
            startAria2App();
","['    ', 'private', ' ', 'void', ' ', 'openAria2App', '(', ')', ' ', '{', ' ', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'getPackageManager', '(', ')', '.', 'getPackageInfo', '(', '""', 'com.gianlu.aria2app', '""', ',', ' ', '0', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'PackageManager', '.', 'NameNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '            ', 'installAria2App', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'isRunning', ')', ' ', '{', '\n', '            ', 'startAria2App', '(', ')', ';', '\n', '<END>']"
master,1d605d772364b9cd747c4288556ad3565bafe65a,MainActivity.java,run,"                    public void run() {
                        logs.showList();

                        switch (action) {
                            case SERVER_START:",https://www.github.com/devgianlu/aria2android/commit/1d605d772364b9cd747c4288556ad3565bafe65a,"                    public void run() {
                        logs.showList();

                        switch (action) {
                            case SERVER_START:
","['                    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '                        ', 'logs', '.', 'showList', '(', ')', ';', '\n', '\n', '                        ', 'switch', ' ', '(', 'action', ')', ' ', '{', '\n', '                            ', 'case', ' ', 'SERVER_START', ':', '\n', '<END>']"
master,dcfd91c4c337c101fefca7ce18c812b0dc7585d8,MainActivity.java,onCheckedChanged,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                toggleService(isChecked);
            }",https://www.github.com/devgianlu/aria2android/commit/dcfd91c4c337c101fefca7ce18c812b0dc7585d8,"            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                toggleService(isChecked);
            }
","['            ', 'public', ' ', 'void', ' ', 'onCheckedChanged', '(', 'CompoundButton', ' ', 'buttonView', ',', ' ', 'boolean', ' ', 'isChecked', ')', ' ', '{', '\n', '                ', 'toggleService', '(', 'isChecked', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,dcfd91c4c337c101fefca7ce18c812b0dc7585d8,MainActivity.java,toggleService,"    private void toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) {
            int visibility = on ? View.GONE : View.VISIBLE;",https://www.github.com/devgianlu/aria2android/commit/dcfd91c4c337c101fefca7ce18c812b0dc7585d8,"    private void toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) {
            int visibility = on ? View.GONE : View.VISIBLE;
","['    ', 'private', ' ', 'void', ' ', 'toggleService', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'successful', ';', '\n', '        ', 'if', ' ', '(', 'on', ')', ' ', 'successful', ' ', '=', ' ', 'startService', '(', ')', ';', '\n', '        ', 'else', ' ', 'successful', ' ', '=', ' ', 'stopService', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'successful', ')', ' ', '{', '\n', '            ', 'int', ' ', 'visibility', ' ', '=', ' ', 'on', ' ', '?', ' ', 'View', '.', 'GONE', ' ', ':', ' ', 'View', '.', 'VISIBLE', ';', '\n', '<END>']"
master,dcfd91c4c337c101fefca7ce18c812b0dc7585d8,MainActivity.java,permissionGranted,"                public void permissionGranted(@NonNull String permission) {
                    toggleService(true);
                }",https://www.github.com/devgianlu/aria2android/commit/dcfd91c4c337c101fefca7ce18c812b0dc7585d8,"                public void permissionGranted(@NonNull String permission) {
                    toggleService(true);
                }
","['                ', 'public', ' ', 'void', ' ', 'permissionGranted', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                    ', 'toggleService', '(', 'true', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,dcfd91c4c337c101fefca7ce18c812b0dc7585d8,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        bindService(new Intent(this, BinService.class), serviceConnection, BIND_AUTO_CREATE);
    }",https://www.github.com/devgianlu/aria2android/commit/dcfd91c4c337c101fefca7ce18c812b0dc7585d8,"    protected void onStart() {
        super.onStart();
        bindService(new Intent(this, BinService.class), serviceConnection, BIND_AUTO_CREATE);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'bindService', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'BinService', '.', 'class', ')', ',', ' ', 'serviceConnection', ',', ' ', 'BIND_AUTO_CREATE', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,dcfd91c4c337c101fefca7ce18c812b0dc7585d8,MainActivity.java,startAria2App,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(PK.RPC_PORT))
                    .putExtra(""token"", Prefs.getString(PK.RPC_TOKEN)));
        }

        AnalyticsApplication.sendAnalytics(this, Utils.ACTION_OPENED_ARIA2APP);
    }",https://www.github.com/devgianlu/aria2android/commit/dcfd91c4c337c101fefca7ce18c812b0dc7585d8,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(PK.RPC_PORT))
                    .putExtra(""token"", Prefs.getString(PK.RPC_TOKEN)));
        }

        AnalyticsApplication.sendAnalytics(this, Utils.ACTION_OPENED_ARIA2APP);
    }
","['    ', 'private', ' ', 'void', ' ', 'startAria2App', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'intent', '\n', '                    ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'port', '""', ',', ' ', 'Prefs', '.', 'getInt', '(', 'PK', '.', 'RPC_PORT', ')', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'token', '""', ',', ' ', 'Prefs', '.', 'getString', '(', 'PK', '.', 'RPC_TOKEN', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'this', ',', ' ', 'Utils', '.', 'ACTION_OPENED_ARIA2APP', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,88bc941459acdc20f23991370c5ded56e241dbf7,BootCompletedReceiver.java,onServiceDisconnected,"                public void onServiceDisconnected(ComponentName componentName) {
                }
            }, Context.BIND_AUTO_CREATE);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/88bc941459acdc20f23991370c5ded56e241dbf7,"                public void onServiceDisconnected(ComponentName componentName) {
                }
            }, Context.BIND_AUTO_CREATE);
        }
    }
}
","['                ', 'public', ' ', 'void', ' ', 'onServiceDisconnected', '(', 'ComponentName', ' ', 'componentName', ')', ' ', '{', '\n', '                ', '}', '\n', '            ', '}', ',', ' ', 'Context', '.', 'BIND_AUTO_CREATE', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,88bc941459acdc20f23991370c5ded56e241dbf7,OptionsAdapter.java,onEditOption,"        void onEditOption(@NonNull NameValuePair option);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/88bc941459acdc20f23991370c5ded56e241dbf7,"        void onEditOption(@NonNull NameValuePair option);

        void onItemsCountChanged(int count);
    }

    class ViewHolder extends RecyclerView.ViewHolder {
        final TextView key;
        final TextView value;
        final ImageButton edit;
        final ImageButton delete;

        ViewHolder(ViewGroup parent) {
            super(inflater.inflate(R.layout.option_item, parent, false));

            key = itemView.findViewById(R.id.optionItem_key);
            value = itemView.findViewById(R.id.optionItem_value);
            edit = itemView.findViewById(R.id.optionItem_edit);
            delete = itemView.findViewById(R.id.optionItem_delete);
        }
    }
}
","['        ', 'void', ' ', 'onEditOption', '(', '@NonNull', ' ', 'NameValuePair', ' ', 'option', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onItemsCountChanged', '(', 'int', ' ', 'count', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'key', ';', '\n', '        ', 'final', ' ', 'TextView', ' ', 'value', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'edit', ';', '\n', '        ', 'final', ' ', 'ImageButton', ' ', 'delete', ';', '\n', '\n', '        ', 'ViewHolder', '(', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'option_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'key', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_key', ')', ';', '\n', '            ', 'value', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_value', ')', ';', '\n', '            ', 'edit', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_edit', ')', ';', '\n', '            ', 'delete', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'optionItem_delete', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,88bc941459acdc20f23991370c5ded56e241dbf7,ConfigEditorActivity.java,load,"    private void load() throws JSONException {
        adapter.load(Prefs.getJSONObject(PK.CUSTOM_OPTIONS, new JSONObject()));
    }",https://www.github.com/devgianlu/aria2android/commit/88bc941459acdc20f23991370c5ded56e241dbf7,"    private void load() throws JSONException {
        adapter.load(Prefs.getJSONObject(PK.CUSTOM_OPTIONS, new JSONObject()));
    }
","['    ', 'private', ' ', 'void', ' ', 'load', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'adapter', '.', 'load', '(', 'Prefs', '.', 'getJSONObject', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', 'new', ' ', 'JSONObject', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,88bc941459acdc20f23991370c5ded56e241dbf7,ConfigEditorActivity.java,save,"    private void save() {
        try {
            Prefs.putJSONObject(PK.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()));",https://www.github.com/devgianlu/aria2android/commit/88bc941459acdc20f23991370c5ded56e241dbf7,"    private void save() {
        try {
            Prefs.putJSONObject(PK.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()));
","['    ', 'private', ' ', 'void', ' ', 'save', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Prefs', '.', 'putJSONObject', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', 'NameValuePair', '.', 'toJson', '(', 'adapter', '.', 'get', '(', ')', ')', ')', ';', '\n', '<END>']"
master,88bc941459acdc20f23991370c5ded56e241dbf7,GitHubApi.java,basicRequestSync,"    private HttpURLConnection basicRequestSync(String url) throws IOException {
        HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
        conn.connect();

        if (conn.getResponseCode() == 200) return conn;
        else",https://www.github.com/devgianlu/aria2android/commit/88bc941459acdc20f23991370c5ded56e241dbf7,"    private HttpURLConnection basicRequestSync(String url) throws IOException {
        HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
        conn.connect();

        if (conn.getResponseCode() == 200) return conn;
        else
","['    ', 'private', ' ', 'HttpURLConnection', ' ', 'basicRequestSync', '(', 'String', ' ', 'url', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'new', ' ', 'URL', '(', 'url', ')', '.', 'openConnection', '(', ')', ';', '\n', '        ', 'conn', '.', 'connect', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'conn', '.', 'getResponseCode', '(', ')', ' ', '=', '=', ' ', '200', ')', ' ', 'return', ' ', 'conn', ';', '\n', '        ', 'else', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,BinService.java,onNewLogLine,"    public void onNewLogLine(@NonNull Logging.LogLine line) {
        dispatchBroadcast(Action.SERVER_MSG, line, null);
    }",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"    public void onNewLogLine(@NonNull Logging.LogLine line) {
        dispatchBroadcast(Action.SERVER_MSG, line, null);
    }
","['    ', 'public', ' ', 'void', ' ', 'onNewLogLine', '(', '@NonNull', ' ', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_MSG', ',', ' ', 'line', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,BinService.java,unknownLogLine,"    public void unknownLogLine(@NonNull String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);

        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(this, Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"    public void unknownLogLine(@NonNull String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);

        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(this, Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }
","['    ', 'public', ' ', 'void', ' ', 'unknownLogLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', 'System', '.', 'out', '.', 'println', '(', '""', 'UNKNOWN LINE: ', '""', ' ', '+', ' ', 'line', ')', ';', '\n', '\n', '        ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '        ', 'bundle', '.', 'putString', '(', 'Utils', '.', 'LABEL_LOG_LINE', ',', ' ', 'line', ')', ';', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'this', ',', ' ', 'Utils', '.', 'EVENT_UNKNOWN_LOG_LINE', ',', ' ', 'bundle', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (shouldStop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        manager.notify(BinService.NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (shouldStop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        manager.notify(BinService.NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'shouldStop', ')', ' ', 'return', ';', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'manager', '.', 'notify', '(', 'BinService', '.', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,StartConfig.java,fromPrefs,"    public static StartConfig fromPrefs() throws JSONException {
        HashMap<String, String> options = new HashMap<>();
        Utils.toMap(Prefs.getJSONObject(PK.CUSTOM_OPTIONS, new JSONObject()), options);
        return new StartConfig(Prefs.getString(PK.OUTPUT_DIRECTORY), options,
                Prefs.getBoolean(PK.SAVE_SESSION), Prefs.getInt(PK.RPC_PORT),",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"    public static StartConfig fromPrefs() throws JSONException {
        HashMap<String, String> options = new HashMap<>();
        Utils.toMap(Prefs.getJSONObject(PK.CUSTOM_OPTIONS, new JSONObject()), options);
        return new StartConfig(Prefs.getString(PK.OUTPUT_DIRECTORY), options,
                Prefs.getBoolean(PK.SAVE_SESSION), Prefs.getInt(PK.RPC_PORT),
","['    ', 'public', ' ', 'static', ' ', 'StartConfig', ' ', 'fromPrefs', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'HashMap', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ' ', '=', ' ', 'new', ' ', 'HashMap', '<', '>', '(', ')', ';', '\n', '        ', 'Utils', '.', 'toMap', '(', 'Prefs', '.', 'getJSONObject', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', 'new', ' ', 'JSONObject', '(', ')', ')', ',', ' ', 'options', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'StartConfig', '(', 'Prefs', '.', 'getString', '(', 'PK', '.', 'OUTPUT_DIRECTORY', ')', ',', ' ', 'options', ',', '\n', '                ', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'SAVE_SESSION', ')', ',', ' ', 'Prefs', '.', 'getInt', '(', 'PK', '.', 'RPC_PORT', ')', ',', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,StreamListener.java,run,"    public void run() {
        BufferedReader in = new BufferedReader(new InputStreamReader(this.in));
        BufferedReader err = new BufferedReader(new InputStreamReader(this.err));

        while (!shouldStop && isProcessAlive()) {
            try {",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"    public void run() {
        BufferedReader in = new BufferedReader(new InputStreamReader(this.in));
        BufferedReader err = new BufferedReader(new InputStreamReader(this.err));

        while (!shouldStop && isProcessAlive()) {
            try {
","['    ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'in', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'this', '.', 'in', ')', ')', ';', '\n', '        ', 'BufferedReader', ' ', 'err', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'this', '.', 'err', ')', ')', ';', '\n', '\n', '        ', 'while', ' ', '(', '!', 'shouldStop', ' ', '&', '&', ' ', 'isProcessAlive', '(', ')', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,StreamListener.java,onNewLogLine,"        void onNewLogLine(@NonNull Logging.LogLine line);

        void onTerminated();

        void unknownLogLine(@NonNull String line);
    }
}",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"        void onNewLogLine(@NonNull Logging.LogLine line);

        void onTerminated();

        void unknownLogLine(@NonNull String line);
    }
}
","['        ', 'void', ' ', 'onNewLogLine', '(', '@NonNull', ' ', 'Logging', '.', 'LogLine', ' ', 'line', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onTerminated', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'unknownLogLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,b90c986f2aa3a3a3f34a722e461f873dff868f89,StreamListener.java,onTerminated,"        void onTerminated();

        void unknownLogLine(@NonNull String line);
    }
}",https://www.github.com/devgianlu/aria2android/commit/b90c986f2aa3a3a3f34a722e461f873dff868f89,"        void onTerminated();

        void unknownLogLine(@NonNull String line);
    }
}
","['        ', 'void', ' ', 'onTerminated', '(', ')', ';', '\n', '\n', '        ', 'void', ' ', 'unknownLogLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,a35f7fd4a140f468bcdf4143fdf4d15aa84668df,MainActivity.java,onCancel,"                public void onCancel(DialogInterface dialog) {
                    finish();
                }",https://www.github.com/devgianlu/aria2android/commit/a35f7fd4a140f468bcdf4143fdf4d15aa84668df,"                public void onCancel(DialogInterface dialog) {
                    finish();
                }
","['                ', 'public', ' ', 'void', ' ', 'onCancel', '(', 'DialogInterface', ' ', 'dialog', ')', ' ', '{', '\n', '                    ', 'finish', '(', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,a35f7fd4a140f468bcdf4143fdf4d15aa84668df,MainActivity.java,onClick,"                public void onClick(DialogInterface dialog, int which) {
                    startActivity(new Intent(MainActivity.this, DownloadBinActivity.class)
                            .putExtra(""importBin"", true)",https://www.github.com/devgianlu/aria2android/commit/a35f7fd4a140f468bcdf4143fdf4d15aa84668df,"                public void onClick(DialogInterface dialog, int which) {
                    startActivity(new Intent(MainActivity.this, DownloadBinActivity.class)
                            .putExtra(""importBin"", true)
","['                ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                    ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'MainActivity', '.', 'this', ',', ' ', 'DownloadBinActivity', '.', 'class', ')', '\n', '                            ', '.', 'putExtra', '(', '""', 'importBin', '""', ',', ' ', 'true', ')', '\n', '<END>']"
master,a35f7fd4a140f468bcdf4143fdf4d15aa84668df,MainActivity.java,onClick,"                public void onClick(DialogInterface dialog, int which) {
                    finish();
                }",https://www.github.com/devgianlu/aria2android/commit/a35f7fd4a140f468bcdf4143fdf4d15aa84668df,"                public void onClick(DialogInterface dialog, int which) {
                    finish();
                }
","['                ', 'public', ' ', 'void', ' ', 'onClick', '(', 'DialogInterface', ' ', 'dialog', ',', ' ', 'int', ' ', 'which', ')', ' ', '{', '\n', '                    ', 'finish', '(', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,a35f7fd4a140f468bcdf4143fdf4d15aa84668df,MainActivity.java,onClick,"            public void onClick(View v) {
                logsContainer.removeAllViews();
                logsContainer.setVisibility(View.GONE);
                logsMessage.setVisibility(View.VISIBLE);
            }",https://www.github.com/devgianlu/aria2android/commit/a35f7fd4a140f468bcdf4143fdf4d15aa84668df,"            public void onClick(View v) {
                logsContainer.removeAllViews();
                logsContainer.setVisibility(View.GONE);
                logsMessage.setVisibility(View.VISIBLE);
            }
","['            ', 'public', ' ', 'void', ' ', 'onClick', '(', 'View', ' ', 'v', ')', ' ', '{', '\n', '                ', 'logsContainer', '.', 'removeAllViews', '(', ')', ';', '\n', '                ', 'logsContainer', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '                ', 'logsMessage', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,a35f7fd4a140f468bcdf4143fdf4d15aa84668df,MainActivity.java,addLog,"    private void addLog(@NonNull Logging.LogLine line) {
        logsContainer.setVisibility(View.VISIBLE);
        logsMessage.setVisibility(View.GONE);
        logsContainer.addView(Logging.LogLineAdapter.createLogLineView(getLayoutInflater(), logsContainer, line), logsContainer.getChildCount());
    }",https://www.github.com/devgianlu/aria2android/commit/a35f7fd4a140f468bcdf4143fdf4d15aa84668df,"    private void addLog(@NonNull Logging.LogLine line) {
        logsContainer.setVisibility(View.VISIBLE);
        logsMessage.setVisibility(View.GONE);
        logsContainer.addView(Logging.LogLineAdapter.createLogLineView(getLayoutInflater(), logsContainer, line), logsContainer.getChildCount());
    }
","['    ', 'private', ' ', 'void', ' ', 'addLog', '(', '@NonNull', ' ', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'logsContainer', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'logsMessage', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'logsContainer', '.', 'addView', '(', 'Logging', '.', 'LogLineAdapter', '.', 'createLogLineView', '(', 'getLayoutInflater', '(', ')', ',', ' ', 'logsContainer', ',', ' ', 'line', ')', ',', ' ', 'logsContainer', '.', 'getChildCount', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,96cfb055423f93c1eb6a4c03bf1d53b56e92844f,PreferenceActivity.java,disablePayPalOnGooglePlay,"    protected boolean disablePayPalOnGooglePlay() {
        return false;
    }",https://www.github.com/devgianlu/aria2android/commit/96cfb055423f93c1eb6a4c03bf1d53b56e92844f,"    protected boolean disablePayPalOnGooglePlay() {
        return false;
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'disablePayPalOnGooglePlay', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n', '<END>']"
master,c0f78633c91cf688afa59a38a592815c8dcf1ae2,StreamListener.java,publishLogLine,"    private void publishLogLine(Logging.LogLine.Type type, String msg) {
        Logging.LogLine line = new Logging.LogLine(System.currentTimeMillis(), ariaVersion, type, msg);
        listener.onNewLogLine(line);
        Logging.log(line);
    }",https://www.github.com/devgianlu/aria2android/commit/c0f78633c91cf688afa59a38a592815c8dcf1ae2,"    private void publishLogLine(Logging.LogLine.Type type, String msg) {
        Logging.LogLine line = new Logging.LogLine(System.currentTimeMillis(), ariaVersion, type, msg);
        listener.onNewLogLine(line);
        Logging.log(line);
    }
","['    ', 'private', ' ', 'void', ' ', 'publishLogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', ' ', 'type', ',', ' ', 'String', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'LogLine', ' ', 'line', ' ', '=', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'System', '.', 'currentTimeMillis', '(', ')', ',', ' ', 'ariaVersion', ',', ' ', 'type', ',', ' ', 'msg', ')', ';', '\n', '        ', 'listener', '.', 'onNewLogLine', '(', 'line', ')', ';', '\n', '        ', 'Logging', '.', 'log', '(', 'line', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0c7f8bb4c6c25e5b31ffdf62a0675884b450c682,BinService.java,unknownLogLine,"    public void unknownLogLine(@NonNull String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);

        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }",https://www.github.com/devgianlu/aria2android/commit/0c7f8bb4c6c25e5b31ffdf62a0675884b450c682,"    public void unknownLogLine(@NonNull String line) {
        if (BuildConfig.DEBUG) System.out.println(""UNKNOWN LINE: "" + line);

        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }
","['    ', 'public', ' ', 'void', ' ', 'unknownLogLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'BuildConfig', '.', 'DEBUG', ')', ' ', 'System', '.', 'out', '.', 'println', '(', '""', 'UNKNOWN LINE: ', '""', ' ', '+', ' ', 'line', ')', ';', '\n', '\n', '        ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '        ', 'bundle', '.', 'putString', '(', 'Utils', '.', 'LABEL_LOG_LINE', ',', ' ', 'line', ')', ';', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'Utils', '.', 'EVENT_UNKNOWN_LOG_LINE', ',', ' ', 'bundle', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,0c7f8bb4c6c25e5b31ffdf62a0675884b450c682,MainActivity.java,startAria2App,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(PK.RPC_PORT))
                    .putExtra(""token"", Prefs.getString(PK.RPC_TOKEN)));
        }

        AnalyticsApplication.sendAnalytics(Utils.ACTION_OPENED_ARIA2APP);
    }",https://www.github.com/devgianlu/aria2android/commit/0c7f8bb4c6c25e5b31ffdf62a0675884b450c682,"    private void startAria2App() {
        Intent intent = getPackageManager().getLaunchIntentForPackage(""com.gianlu.aria2app"");
        if (intent != null) {
            startActivity(intent
                    .putExtra(""external"", true)
                    .putExtra(""port"", Prefs.getInt(PK.RPC_PORT))
                    .putExtra(""token"", Prefs.getString(PK.RPC_TOKEN)));
        }

        AnalyticsApplication.sendAnalytics(Utils.ACTION_OPENED_ARIA2APP);
    }
","['    ', 'private', ' ', 'void', ' ', 'startAria2App', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'getPackageManager', '(', ')', '.', 'getLaunchIntentForPackage', '(', '""', 'com.gianlu.aria2app', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'startActivity', '(', 'intent', '\n', '                    ', '.', 'putExtra', '(', '""', 'external', '""', ',', ' ', 'true', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'port', '""', ',', ' ', 'Prefs', '.', 'getInt', '(', 'PK', '.', 'RPC_PORT', ')', ')', '\n', '                    ', '.', 'putExtra', '(', '""', 'token', '""', ',', ' ', 'Prefs', '.', 'getString', '(', 'PK', '.', 'RPC_TOKEN', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'Utils', '.', 'ACTION_OPENED_ARIA2APP', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,85e6f224c79c1806112ef6c818c34942ffaed6ed,PreferenceActivity.java,buildPreferences,"        protected void buildPreferences(@NonNull Context context) {
            MaterialCheckboxPreference nightMode = new MaterialCheckboxPreference.Builder(context)
                    .defaultValue(PK.NIGHT_MODE.fallback())
                    .key(PK.NIGHT_MODE.key())
                    .build();
            nightMode.setTitle(R.string.prefs_nightMode);
            nightMode.setSummary(R.string.prefs_nightMode_summary);
            addPreference(nightMode);
        }",https://www.github.com/devgianlu/aria2android/commit/85e6f224c79c1806112ef6c818c34942ffaed6ed,"        protected void buildPreferences(@NonNull Context context) {
            MaterialCheckboxPreference nightMode = new MaterialCheckboxPreference.Builder(context)
                    .defaultValue(PK.NIGHT_MODE.fallback())
                    .key(PK.NIGHT_MODE.key())
                    .build();
            nightMode.setTitle(R.string.prefs_nightMode);
            nightMode.setSummary(R.string.prefs_nightMode_summary);
            addPreference(nightMode);
        }
","['        ', 'protected', ' ', 'void', ' ', 'buildPreferences', '(', '@NonNull', ' ', 'Context', ' ', 'context', ')', ' ', '{', '\n', '            ', 'MaterialCheckboxPreference', ' ', 'nightMode', ' ', '=', ' ', 'new', ' ', 'MaterialCheckboxPreference', '.', 'Builder', '(', 'context', ')', '\n', '                    ', '.', 'defaultValue', '(', 'PK', '.', 'NIGHT_MODE', '.', 'fallback', '(', ')', ')', '\n', '                    ', '.', 'key', '(', 'PK', '.', 'NIGHT_MODE', '.', 'key', '(', ')', ')', '\n', '                    ', '.', 'build', '(', ')', ';', '\n', '            ', 'nightMode', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'prefs_nightMode', ')', ';', '\n', '            ', 'nightMode', '.', 'setSummary', '(', 'R', '.', 'string', '.', 'prefs_nightMode_summary', ')', ';', '\n', '            ', 'addPreference', '(', 'nightMode', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,BinUtils.java,downloadAndExtractBin,"    public static void downloadAndExtractBin(final Context context, final GitHubApi.Release.Asset asset, final IDownloadAndExtractBin listener) {
        final Handler handler = new Handler(Looper.getMainLooper());
        new Thread(() -> {
            try {",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"    public static void downloadAndExtractBin(final Context context, final GitHubApi.Release.Asset asset, final IDownloadAndExtractBin listener) {
        final Handler handler = new Handler(Looper.getMainLooper());
        new Thread(() -> {
            try {
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'downloadAndExtractBin', '(', 'final', ' ', 'Context', ' ', 'context', ',', ' ', 'final', ' ', 'GitHubApi', '.', 'Release', '.', 'Asset', ' ', 'asset', ',', ' ', 'final', ' ', 'IDownloadAndExtractBin', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Handler', ' ', 'handler', ' ', '=', ' ', 'new', ' ', 'Handler', '(', 'Looper', '.', 'getMainLooper', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', '(', ')', ' ', '-', '>', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,OptionsAdapter.java,onBindViewHolder,"    public void onBindViewHolder(@NonNull final ViewHolder holder, int position) {
        final NameValuePair entry = options.get(position);

        holder.key.setText(entry.key());
        holder.value.setText(entry.value());
        holder.edit.setOnClickListener(view -> {
            if (listener != null) listener.onEditOption(entry);
        });
        holder.delete.setOnClickListener(view -> remove(holder.getAdapterPosition()));

        if (edited.contains(position))
            holder.value.setTextColor(ContextCompat.getColor(context, R.color.colorAccent));",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"    public void onBindViewHolder(@NonNull final ViewHolder holder, int position) {
        final NameValuePair entry = options.get(position);

        holder.key.setText(entry.key());
        holder.value.setText(entry.value());
        holder.edit.setOnClickListener(view -> {
            if (listener != null) listener.onEditOption(entry);
        });
        holder.delete.setOnClickListener(view -> remove(holder.getAdapterPosition()));

        if (edited.contains(position))
            holder.value.setTextColor(ContextCompat.getColor(context, R.color.colorAccent));
","['    ', 'public', ' ', 'void', ' ', 'onBindViewHolder', '(', '@NonNull', ' ', 'final', ' ', 'ViewHolder', ' ', 'holder', ',', ' ', 'int', ' ', 'position', ')', ' ', '{', '\n', '        ', 'final', ' ', 'NameValuePair', ' ', 'entry', ' ', '=', ' ', 'options', '.', 'get', '(', 'position', ')', ';', '\n', '\n', '        ', 'holder', '.', 'key', '.', 'setText', '(', 'entry', '.', 'key', '(', ')', ')', ';', '\n', '        ', 'holder', '.', 'value', '.', 'setText', '(', 'entry', '.', 'value', '(', ')', ')', ';', '\n', '        ', 'holder', '.', 'edit', '.', 'setOnClickListener', '(', 'view', ' ', '-', '>', ' ', '{', '\n', '            ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onEditOption', '(', 'entry', ')', ';', '\n', '        ', '}', ')', ';', '\n', '        ', 'holder', '.', 'delete', '.', 'setOnClickListener', '(', 'view', ' ', '-', '>', ' ', 'remove', '(', 'holder', '.', 'getAdapterPosition', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'edited', '.', 'contains', '(', 'position', ')', ')', '\n', '            ', 'holder', '.', 'value', '.', 'setTextColor', '(', 'ContextCompat', '.', 'getColor', '(', 'context', ',', ' ', 'R', '.', 'color', '.', 'colorAccent', ')', ')', ';', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,ConfigEditorActivity.java,showAddDialog,"    private void showAddDialog() {
        LinearLayout layout = (LinearLayout) getLayoutInflater().inflate(R.layout.new_option_dialog, null, false);
        final EditText key = layout.findViewById(R.id.editOptionDialog_key);
        final EditText value = layout.findViewById(R.id.editOptionDialog_value);

        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle(R.string.newOption)
                .setView(layout)
                .setPositiveButton(R.string.apply, (dialogInterface, i) -> {
                    String keyStr = key.getText().toString();
                    if (keyStr.startsWith(""--"")) keyStr = keyStr.substring(2);
                    adapter.add(new NameValuePair(keyStr, value.getText().toString()));
                })
                .setNegativeButton(android.R.string.cancel, null);

        showDialog(builder);
    }",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"    private void showAddDialog() {
        LinearLayout layout = (LinearLayout) getLayoutInflater().inflate(R.layout.new_option_dialog, null, false);
        final EditText key = layout.findViewById(R.id.editOptionDialog_key);
        final EditText value = layout.findViewById(R.id.editOptionDialog_value);

        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle(R.string.newOption)
                .setView(layout)
                .setPositiveButton(R.string.apply, (dialogInterface, i) -> {
                    String keyStr = key.getText().toString();
                    if (keyStr.startsWith(""--"")) keyStr = keyStr.substring(2);
                    adapter.add(new NameValuePair(keyStr, value.getText().toString()));
                })
                .setNegativeButton(android.R.string.cancel, null);

        showDialog(builder);
    }
","['    ', 'private', ' ', 'void', ' ', 'showAddDialog', '(', ')', ' ', '{', '\n', '        ', 'LinearLayout', ' ', 'layout', ' ', '=', ' ', '(', 'LinearLayout', ')', ' ', 'getLayoutInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'new_option_dialog', ',', ' ', 'null', ',', ' ', 'false', ')', ';', '\n', '        ', 'final', ' ', 'EditText', ' ', 'key', ' ', '=', ' ', 'layout', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'editOptionDialog_key', ')', ';', '\n', '        ', 'final', ' ', 'EditText', ' ', 'value', ' ', '=', ' ', 'layout', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'editOptionDialog_value', ')', ';', '\n', '\n', '        ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'AlertDialog', '.', 'Builder', '(', 'this', ')', ';', '\n', '        ', 'builder', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'newOption', ')', '\n', '                ', '.', 'setView', '(', 'layout', ')', '\n', '                ', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'apply', ',', ' ', '(', 'dialogInterface', ',', ' ', 'i', ')', ' ', '-', '>', ' ', '{', '\n', '                    ', 'String', ' ', 'keyStr', ' ', '=', ' ', 'key', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', '\n', '                    ', 'if', ' ', '(', 'keyStr', '.', 'startsWith', '(', '""', '--', '""', ')', ')', ' ', 'keyStr', ' ', '=', ' ', 'keyStr', '.', 'substring', '(', '2', ')', ';', '\n', '                    ', 'adapter', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'keyStr', ',', ' ', 'value', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ')', ';', '\n', '                ', '}', ')', '\n', '                ', '.', 'setNegativeButton', '(', 'android', '.', 'R', '.', 'string', '.', 'cancel', ',', ' ', 'null', ')', ';', '\n', '\n', '        ', 'showDialog', '(', 'builder', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,ConfigEditorActivity.java,onEditOption,"    public void onEditOption(@NonNull final NameValuePair option) {
        LinearLayout layout = (LinearLayout) getLayoutInflater().inflate(R.layout.edit_option_dialog, null, false);
        SuperTextView value = layout.findViewById(R.id.editOptionDialog_value);
        value.setHtml(R.string.currentValue, option.value());
        final EditText newValue = layout.findViewById(R.id.editOptionDialog_newValue);

        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle(option.key())
                .setView(layout)
                .setPositiveButton(R.string.apply, (dialogInterface, i) -> {
                    String newValueStr = newValue.getText().toString();
                    if (!newValueStr.equals(option.value()))
                        adapter.set(new NameValuePair(option.key(), newValueStr));
                })
                .setNegativeButton(android.R.string.cancel, null);

        showDialog(builder);
    }",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"    public void onEditOption(@NonNull final NameValuePair option) {
        LinearLayout layout = (LinearLayout) getLayoutInflater().inflate(R.layout.edit_option_dialog, null, false);
        SuperTextView value = layout.findViewById(R.id.editOptionDialog_value);
        value.setHtml(R.string.currentValue, option.value());
        final EditText newValue = layout.findViewById(R.id.editOptionDialog_newValue);

        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle(option.key())
                .setView(layout)
                .setPositiveButton(R.string.apply, (dialogInterface, i) -> {
                    String newValueStr = newValue.getText().toString();
                    if (!newValueStr.equals(option.value()))
                        adapter.set(new NameValuePair(option.key(), newValueStr));
                })
                .setNegativeButton(android.R.string.cancel, null);

        showDialog(builder);
    }
","['    ', 'public', ' ', 'void', ' ', 'onEditOption', '(', '@NonNull', ' ', 'final', ' ', 'NameValuePair', ' ', 'option', ')', ' ', '{', '\n', '        ', 'LinearLayout', ' ', 'layout', ' ', '=', ' ', '(', 'LinearLayout', ')', ' ', 'getLayoutInflater', '(', ')', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'edit_option_dialog', ',', ' ', 'null', ',', ' ', 'false', ')', ';', '\n', '        ', 'SuperTextView', ' ', 'value', ' ', '=', ' ', 'layout', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'editOptionDialog_value', ')', ';', '\n', '        ', 'value', '.', 'setHtml', '(', 'R', '.', 'string', '.', 'currentValue', ',', ' ', 'option', '.', 'value', '(', ')', ')', ';', '\n', '        ', 'final', ' ', 'EditText', ' ', 'newValue', ' ', '=', ' ', 'layout', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'editOptionDialog_newValue', ')', ';', '\n', '\n', '        ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'AlertDialog', '.', 'Builder', '(', 'this', ')', ';', '\n', '        ', 'builder', '.', 'setTitle', '(', 'option', '.', 'key', '(', ')', ')', '\n', '                ', '.', 'setView', '(', 'layout', ')', '\n', '                ', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'apply', ',', ' ', '(', 'dialogInterface', ',', ' ', 'i', ')', ' ', '-', '>', ' ', '{', '\n', '                    ', 'String', ' ', 'newValueStr', ' ', '=', ' ', 'newValue', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', '\n', '                    ', 'if', ' ', '(', '!', 'newValueStr', '.', 'equals', '(', 'option', '.', 'value', '(', ')', ')', ')', '\n', '                        ', 'adapter', '.', 'set', '(', 'new', ' ', 'NameValuePair', '(', 'option', '.', 'key', '(', ')', ',', ' ', 'newValueStr', ')', ')', ';', '\n', '                ', '}', ')', '\n', '                ', '.', 'setNegativeButton', '(', 'android', '.', 'R', '.', 'string', '.', 'cancel', ',', ' ', 'null', ')', ';', '\n', '\n', '        ', 'showDialog', '(', 'builder', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,ReleasesAdapter.java,onReleaseSelected,"        void onReleaseSelected(@NonNull GitHubApi.Release release);
    }
}",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"        void onReleaseSelected(@NonNull GitHubApi.Release release);
    }
}
","['        ', 'void', ' ', 'onReleaseSelected', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,MainActivity.java,installAria2App,"    private void installAria2App() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this)
                .setTitle(R.string.aria2AppNotInstalled)
                .setMessage(R.string.aria2AppNotInstalled_message)
                .setPositiveButton(android.R.string.yes, (dialog, which) -> {
                    try {
                        try {
                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id=com.gianlu.aria2app"")));
                        } catch (ActivityNotFoundException ex) {
                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https://play.google.com/store/apps/details?id=com.gianlu.aria2app"")));
                        }
                    } catch (ActivityNotFoundException ex) {
                        Logging.log(ex);
                    }
                }).setNegativeButton(android.R.string.no, null);

        showDialog(builder);
    }",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"    private void installAria2App() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this)
                .setTitle(R.string.aria2AppNotInstalled)
                .setMessage(R.string.aria2AppNotInstalled_message)
                .setPositiveButton(android.R.string.yes, (dialog, which) -> {
                    try {
                        try {
                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id=com.gianlu.aria2app"")));
                        } catch (ActivityNotFoundException ex) {
                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https://play.google.com/store/apps/details?id=com.gianlu.aria2app"")));
                        }
                    } catch (ActivityNotFoundException ex) {
                        Logging.log(ex);
                    }
                }).setNegativeButton(android.R.string.no, null);

        showDialog(builder);
    }
","['    ', 'private', ' ', 'void', ' ', 'installAria2App', '(', ')', ' ', '{', '\n', '        ', 'AlertDialog', '.', 'Builder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'AlertDialog', '.', 'Builder', '(', 'this', ')', '\n', '                ', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'aria2AppNotInstalled', ')', '\n', '                ', '.', 'setMessage', '(', 'R', '.', 'string', '.', 'aria2AppNotInstalled_message', ')', '\n', '                ', '.', 'setPositiveButton', '(', 'android', '.', 'R', '.', 'string', '.', 'yes', ',', ' ', '(', 'dialog', ',', ' ', 'which', ')', ' ', '-', '>', ' ', '{', '\n', '                    ', 'try', ' ', '{', '\n', '                        ', 'try', ' ', '{', '\n', '                            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', ' ', 'Uri', '.', 'parse', '(', '""', 'market://details?id=com.gianlu.aria2app', '""', ')', ')', ')', ';', '\n', '                        ', '}', ' ', 'catch', ' ', '(', 'ActivityNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '                            ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', ' ', 'Uri', '.', 'parse', '(', '""', 'https://play.google.com/store/apps/details?id=com.gianlu.aria2app', '""', ')', ')', ')', ';', '\n', '                        ', '}', '\n', '                    ', '}', ' ', 'catch', ' ', '(', 'ActivityNotFoundException', ' ', 'ex', ')', ' ', '{', '\n', '                        ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', ')', '.', 'setNegativeButton', '(', 'android', '.', 'R', '.', 'string', '.', 'no', ',', ' ', 'null', ')', ';', '\n', '\n', '        ', 'showDialog', '(', 'builder', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d13b07930d23d6a10c70f0b4666cf2d964bb0263,MainActivity.java,onReceive,"        public void onReceive(Context context, final Intent intent) {
            final BinService.Action action = BinService.Action.find(intent);
            if (action != null && intent != null) {
                runOnUiThread(() -> {",https://www.github.com/devgianlu/aria2android/commit/d13b07930d23d6a10c70f0b4666cf2d964bb0263,"        public void onReceive(Context context, final Intent intent) {
            final BinService.Action action = BinService.Action.find(intent);
            if (action != null && intent != null) {
                runOnUiThread(() -> {
","['        ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'final', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'final', ' ', 'BinService', '.', 'Action', ' ', 'action', ' ', '=', ' ', 'BinService', '.', 'Action', '.', 'find', '(', 'intent', ')', ';', '\n', '            ', 'if', ' ', '(', 'action', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'runOnUiThread', '(', '(', ')', ' ', '-', '>', ' ', '{', '\n', '<END>']"
master,c640b9e363ec6c1a2027fc0642d0f605a211dabf,MainActivity.java,toggleService,"    private void toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) updateUiStatus(on);
    }",https://www.github.com/devgianlu/aria2android/commit/c640b9e363ec6c1a2027fc0642d0f605a211dabf,"    private void toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) updateUiStatus(on);
    }
","['    ', 'private', ' ', 'void', ' ', 'toggleService', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'successful', ';', '\n', '        ', 'if', ' ', '(', 'on', ')', ' ', 'successful', ' ', '=', ' ', 'startService', '(', ')', ';', '\n', '        ', 'else', ' ', 'successful', ' ', '=', ' ', 'stopService', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'successful', ')', ' ', 'updateUiStatus', '(', 'on', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,c640b9e363ec6c1a2027fc0642d0f605a211dabf,MainActivity.java,updateUiStatus,"    private void updateUiStatus(boolean on) {
        int visibility = on ? View.GONE : View.VISIBLE;
        generalCategory.setVisibility(visibility);
        rpcCategory.setVisibility(visibility);
        notificationsCategory.setVisibility(visibility);

        isRunning = on;
        toggleServer.setOnCheckedChangeListener(null);
        toggleServer.setChecked(on);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> toggleService(isChecked));
    }",https://www.github.com/devgianlu/aria2android/commit/c640b9e363ec6c1a2027fc0642d0f605a211dabf,"    private void updateUiStatus(boolean on) {
        int visibility = on ? View.GONE : View.VISIBLE;
        generalCategory.setVisibility(visibility);
        rpcCategory.setVisibility(visibility);
        notificationsCategory.setVisibility(visibility);

        isRunning = on;
        toggleServer.setOnCheckedChangeListener(null);
        toggleServer.setChecked(on);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> toggleService(isChecked));
    }
","['    ', 'private', ' ', 'void', ' ', 'updateUiStatus', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'int', ' ', 'visibility', ' ', '=', ' ', 'on', ' ', '?', ' ', 'View', '.', 'GONE', ' ', ':', ' ', 'View', '.', 'VISIBLE', ';', '\n', '        ', 'generalCategory', '.', 'setVisibility', '(', 'visibility', ')', ';', '\n', '        ', 'rpcCategory', '.', 'setVisibility', '(', 'visibility', ')', ';', '\n', '        ', 'notificationsCategory', '.', 'setVisibility', '(', 'visibility', ')', ';', '\n', '\n', '        ', 'isRunning', ' ', '=', ' ', 'on', ';', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', 'null', ')', ';', '\n', '        ', 'toggleServer', '.', 'setChecked', '(', 'on', ')', ';', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', '(', 'buttonView', ',', ' ', 'isChecked', ')', ' ', '-', '>', ' ', 'toggleService', '(', 'isChecked', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b17aa49ce47ace91fdc27c1e7bee9eeb689fad69,MainActivity.java,onServiceConnected,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
            checkIntentAction(getIntent());
        }",https://www.github.com/devgianlu/aria2android/commit/b17aa49ce47ace91fdc27c1e7bee9eeb689fad69,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
            checkIntentAction(getIntent());
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '            ', 'checkIntentAction', '(', 'getIntent', '(', ')', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,b17aa49ce47ace91fdc27c1e7bee9eeb689fad69,MainActivity.java,onNewIntent,"    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);

        if (serviceMessenger != null) checkIntentAction(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/b17aa49ce47ace91fdc27c1e7bee9eeb689fad69,"    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);

        if (serviceMessenger != null) checkIntentAction(intent);
    }
","['    ', 'protected', ' ', 'void', ' ', 'onNewIntent', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'super', '.', 'onNewIntent', '(', 'intent', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'serviceMessenger', ' ', '!', '=', ' ', 'null', ')', ' ', 'checkIntentAction', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,cfe4f701be1f14a54abb67c65050a96e83e83cfa,MainActivity.java,toggleService,"    private boolean toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) updateUiStatus(on);
        return successful;
    }",https://www.github.com/devgianlu/aria2android/commit/cfe4f701be1f14a54abb67c65050a96e83e83cfa,"    private boolean toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) updateUiStatus(on);
        return successful;
    }
","['    ', 'private', ' ', 'boolean', ' ', 'toggleService', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'successful', ';', '\n', '        ', 'if', ' ', '(', 'on', ')', ' ', 'successful', ' ', '=', ' ', 'startService', '(', ')', ';', '\n', '        ', 'else', ' ', 'successful', ' ', '=', ' ', 'stopService', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'successful', ')', ' ', 'updateUiStatus', '(', 'on', ')', ';', '\n', '        ', 'return', ' ', 'successful', ';', '\n', '    ', '}', '\n', '<END>']"
master,d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,BinService.java,dispatchStatus,"    private void dispatchStatus() {
        Intent intent = new Intent(Action.SERVER_STATUS.toString());
        intent.putExtra(""on"", process != null);
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,"    private void dispatchStatus() {
        Intent intent = new Intent(Action.SERVER_STATUS.toString());
        intent.putExtra(""on"", process != null);
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchStatus', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Action', '.', 'SERVER_STATUS', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'on', '""', ',', ' ', 'process', ' ', '!', '=', ' ', 'null', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,BinService.java,ex,"    private void ex(@NonNull Exception ex) {
        Logging.log(ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }",https://www.github.com/devgianlu/aria2android/commit/d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,"    private void ex(@NonNull Exception ex) {
        Logging.log(ex);
        dispatchBroadcast(Action.SERVER_EX, null, ex);
    }
","['    ', 'private', ' ', 'void', ' ', 'ex', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '        ', 'dispatchBroadcast', '(', 'Action', '.', 'SERVER_EX', ',', ' ', 'null', ',', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,MainActivity.java,onServiceConnected,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
            checkIntentAction(getIntent());
            askForStatus();
        }",https://www.github.com/devgianlu/aria2android/commit/d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
            checkIntentAction(getIntent());
            askForStatus();
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '            ', 'checkIntentAction', '(', 'getIntent', '(', ')', ')', ';', '\n', '            ', 'askForStatus', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();

        askForStatus();
    }",https://www.github.com/devgianlu/aria2android/commit/d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,"    protected void onResume() {
        super.onResume();

        askForStatus();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '\n', '        ', 'askForStatus', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,MainActivity.java,askForStatus,"    private void askForStatus() {
        if (serviceMessenger == null) return;

        try {
            serviceMessenger.send(Message.obtain(null, BinService.STATUS, null));",https://www.github.com/devgianlu/aria2android/commit/d3059ba5bf20b8c1cb186cb6847aaecf4ff801af,"    private void askForStatus() {
        if (serviceMessenger == null) return;

        try {
            serviceMessenger.send(Message.obtain(null, BinService.STATUS, null));
","['    ', 'private', ' ', 'void', ' ', 'askForStatus', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'serviceMessenger', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'serviceMessenger', '.', 'send', '(', 'Message', '.', 'obtain', '(', 'null', ',', ' ', 'BinService', '.', 'STATUS', ',', ' ', 'null', ')', ')', ';', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,BinService.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler(this));
            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1)
                shortcutManager = (ShortcutManager) getSystemService(Context.SHORTCUT_SERVICE);
        }

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler(this));
            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N_MR1)
                shortcutManager = (ShortcutManager) getSystemService(Context.SHORTCUT_SERVICE);
        }

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '            ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', 'this', ')', ')', ';', '\n', '            ', 'if', ' ', '(', 'android', '.', 'os', '.', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'android', '.', 'os', '.', 'Build', '.', 'VERSION_CODES', '.', 'N_MR1', ')', '\n', '                ', 'shortcutManager', ' ', '=', ' ', '(', 'ShortcutManager', ')', ' ', 'getSystemService', '(', 'Context', '.', 'SHORTCUT_SERVICE', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,BinService.java,dispatchStatus,"    public void dispatchStatus() {
        Intent intent = new Intent(Action.SERVER_STATUS.toString());
        intent.putExtra(""on"", process != null);
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"    public void dispatchStatus() {
        Intent intent = new Intent(Action.SERVER_STATUS.toString());
        intent.putExtra(""on"", process != null);
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'public', ' ', 'void', ' ', 'dispatchStatus', '(', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Action', '.', 'SERVER_STATUS', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'on', '""', ',', ' ', 'process', ' ', '!', '=', ' ', 'null', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,BinService.java,handleMessage,"        public void handleMessage(Message msg) {
            switch (msg.what) {
                case STATUS:",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"        public void handleMessage(Message msg) {
            switch (msg.what) {
                case STATUS:
","['        ', 'public', ' ', 'void', ' ', 'handleMessage', '(', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '            ', 'switch', ' ', '(', 'msg', '.', 'what', ')', ' ', '{', '\n', '                ', 'case', ' ', 'STATUS', ':', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,MainActivity.java,onServiceConnected,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
            askForStatus();
        }",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);
            askForStatus();
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '            ', 'askForStatus', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        askForStatus();
    }",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"    protected void onResume() {
        super.onResume();
        askForStatus();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'askForStatus', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,MainActivity.java,askForStatus,"    private void askForStatus() {
        if (serviceMessenger != null) {
            try {",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"    private void askForStatus() {
        if (serviceMessenger != null) {
            try {
","['    ', 'private', ' ', 'void', ' ', 'askForStatus', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'serviceMessenger', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,MainActivity.java,onDestroy,"    protected void onDestroy() {
        super.onDestroy();

        try {
            unbindService(serviceConnection);",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"    protected void onDestroy() {
        super.onDestroy();

        try {
            unbindService(serviceConnection);
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '<END>']"
master,69faf340f302fa2c237501553082d87545aef9a6,MainActivity.java,onReceive,"        public void onReceive(Context context, final Intent intent) {
            BinService.Action action = BinService.Action.find(intent);
            if (action != null && intent != null) {
                runOnUiThread(() -> {",https://www.github.com/devgianlu/aria2android/commit/69faf340f302fa2c237501553082d87545aef9a6,"        public void onReceive(Context context, final Intent intent) {
            BinService.Action action = BinService.Action.find(intent);
            if (action != null && intent != null) {
                runOnUiThread(() -> {
","['        ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'final', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'BinService', '.', 'Action', ' ', 'action', ' ', '=', ' ', 'BinService', '.', 'Action', '.', 'find', '(', 'intent', ')', ';', '\n', '            ', 'if', ' ', '(', 'action', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'intent', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'runOnUiThread', '(', '(', ')', ' ', '-', '>', ' ', '{', '\n', '<END>']"
master,878e145189680319d6295b60ce79343ca02a8b3d,BinService.java,unknownLogLine,"    public void unknownLogLine(@NonNull String line) {
        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }",https://www.github.com/devgianlu/aria2android/commit/878e145189680319d6295b60ce79343ca02a8b3d,"    public void unknownLogLine(@NonNull String line) {
        Bundle bundle = new Bundle();
        bundle.putString(Utils.LABEL_LOG_LINE, line);
        AnalyticsApplication.sendAnalytics(Utils.EVENT_UNKNOWN_LOG_LINE, bundle);
    }
","['    ', 'public', ' ', 'void', ' ', 'unknownLogLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '        ', 'bundle', '.', 'putString', '(', 'Utils', '.', 'LABEL_LOG_LINE', ',', ' ', 'line', ')', ';', '\n', '        ', 'AnalyticsApplication', '.', 'sendAnalytics', '(', 'Utils', '.', 'EVENT_UNKNOWN_LOG_LINE', ',', ' ', 'bundle', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,a2fe71e988c70aa62c54c5cfa720be6ef7b73628,MainActivity.java,onServiceConnected,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);

            IntentFilter filter = new IntentFilter();
            for (BinService.Action action : BinService.Action.values())
                filter.addAction(action.toString());

            receiver = new ServiceBroadcastReceiver();
            broadcastManager.registerReceiver(receiver, filter);

            askForStatus();
        }",https://www.github.com/devgianlu/aria2android/commit/a2fe71e988c70aa62c54c5cfa720be6ef7b73628,"        public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
            serviceMessenger = new Messenger(iBinder);

            IntentFilter filter = new IntentFilter();
            for (BinService.Action action : BinService.Action.values())
                filter.addAction(action.toString());

            receiver = new ServiceBroadcastReceiver();
            broadcastManager.registerReceiver(receiver, filter);

            askForStatus();
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'componentName', ',', ' ', 'IBinder', ' ', 'iBinder', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'iBinder', ')', ';', '\n', '\n', '            ', 'IntentFilter', ' ', 'filter', ' ', '=', ' ', 'new', ' ', 'IntentFilter', '(', ')', ';', '\n', '            ', 'for', ' ', '(', 'BinService', '.', 'Action', ' ', 'action', ' ', ':', ' ', 'BinService', '.', 'Action', '.', 'values', '(', ')', ')', '\n', '                ', 'filter', '.', 'addAction', '(', 'action', '.', 'toString', '(', ')', ')', ';', '\n', '\n', '            ', 'receiver', ' ', '=', ' ', 'new', ' ', 'ServiceBroadcastReceiver', '(', ')', ';', '\n', '            ', 'broadcastManager', '.', 'registerReceiver', '(', 'receiver', ',', ' ', 'filter', ')', ';', '\n', '\n', '            ', 'askForStatus', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,a2fe71e988c70aa62c54c5cfa720be6ef7b73628,MainActivity.java,onServiceDisconnected,"        public void onServiceDisconnected(ComponentName componentName) {
            serviceMessenger = null;
            broadcastManager.unregisterReceiver(receiver);
        }",https://www.github.com/devgianlu/aria2android/commit/a2fe71e988c70aa62c54c5cfa720be6ef7b73628,"        public void onServiceDisconnected(ComponentName componentName) {
            serviceMessenger = null;
            broadcastManager.unregisterReceiver(receiver);
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceDisconnected', '(', 'ComponentName', ' ', 'componentName', ')', ' ', '{', '\n', '            ', 'serviceMessenger', ' ', '=', ' ', 'null', ';', '\n', '            ', 'broadcastManager', '.', 'unregisterReceiver', '(', 'receiver', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,842ee98526eb8911f6ed20467cad51faf156f283,MainActivity.java,addLog,"    private void addLog(@NonNull Logging.LogLine line) {
        if (logsContainer != null) {
            logsContainer.setVisibility(View.VISIBLE);",https://www.github.com/devgianlu/aria2android/commit/842ee98526eb8911f6ed20467cad51faf156f283,"    private void addLog(@NonNull Logging.LogLine line) {
        if (logsContainer != null) {
            logsContainer.setVisibility(View.VISIBLE);
","['    ', 'private', ' ', 'void', ' ', 'addLog', '(', '@NonNull', ' ', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'logsContainer', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'logsContainer', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '<END>']"
master,9e7271e553c77d24d8533763b71cd107e6032b88,BinService.java,startService,"    public static void startService(@NonNull Context context) throws JSONException {
        StartConfig config = StartConfig.fromPrefs();

        try {
            context.startService(new Intent(context, BinService.class)",https://www.github.com/devgianlu/aria2android/commit/9e7271e553c77d24d8533763b71cd107e6032b88,"    public static void startService(@NonNull Context context) throws JSONException {
        StartConfig config = StartConfig.fromPrefs();

        try {
            context.startService(new Intent(context, BinService.class)
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'startService', '(', '@NonNull', ' ', 'Context', ' ', 'context', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'StartConfig', ' ', 'config', ' ', '=', ' ', 'StartConfig', '.', 'fromPrefs', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'context', '.', 'startService', '(', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'BinService', '.', 'class', ')', '\n', '<END>']"
master,72d773ccfeb5754b3f853bbfe0709bb75a10d0e5,BinService.java,dispatchStatus,"    public void dispatchStatus() {
        if (broadcastManager == null) return;

        Intent intent = new Intent(Action.SERVER_STATUS.toString());
        intent.putExtra(""on"", process != null);
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/72d773ccfeb5754b3f853bbfe0709bb75a10d0e5,"    public void dispatchStatus() {
        if (broadcastManager == null) return;

        Intent intent = new Intent(Action.SERVER_STATUS.toString());
        intent.putExtra(""on"", process != null);
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'public', ' ', 'void', ' ', 'dispatchStatus', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'broadcastManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'Action', '.', 'SERVER_STATUS', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'on', '""', ',', ' ', 'process', ' ', '!', '=', ' ', 'null', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,72d773ccfeb5754b3f853bbfe0709bb75a10d0e5,BinService.java,dispatchBroadcast,"    private void dispatchBroadcast(Action action, @Nullable Logging.LogLine msg, @Nullable Throwable ex) {
        if (broadcastManager == null) return;

        Intent intent = new Intent(action.toString());
        if (msg != null) intent.putExtra(""msg"", msg);
        if (ex != null) intent.putExtra(""ex"", ex);
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/72d773ccfeb5754b3f853bbfe0709bb75a10d0e5,"    private void dispatchBroadcast(Action action, @Nullable Logging.LogLine msg, @Nullable Throwable ex) {
        if (broadcastManager == null) return;

        Intent intent = new Intent(action.toString());
        if (msg != null) intent.putExtra(""msg"", msg);
        if (ex != null) intent.putExtra(""ex"", ex);
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchBroadcast', '(', 'Action', ' ', 'action', ',', ' ', '@Nullable', ' ', 'Logging', '.', 'LogLine', ' ', 'msg', ',', ' ', '@Nullable', ' ', 'Throwable', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'broadcastManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'action', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'msg', '""', ',', ' ', 'msg', ')', ';', '\n', '        ', 'if', ' ', '(', 'ex', ' ', '!', '=', ' ', 'null', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'ex', '""', ',', ' ', 'ex', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,ff7aa207270c2d7472cc518fd730d8ced3808d03,PerformanceMonitor.java,sendNotification,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (shouldStop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        try {
            manager.notify(BinService.NOTIFICATION_ID, builder.build());",https://www.github.com/devgianlu/aria2android/commit/ff7aa207270c2d7472cc518fd730d8ced3808d03,"    private void sendNotification(String pid, String cpuUsage, String rss) {
        if (shouldStop) return;
        RemoteViews layout = new RemoteViews(context.getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + pid);
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + cpuUsage + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(rss) * 1024, false));
        builder.setCustomContentView(layout);

        try {
            manager.notify(BinService.NOTIFICATION_ID, builder.build());
","['    ', 'private', ' ', 'void', ' ', 'sendNotification', '(', 'String', ' ', 'pid', ',', ' ', 'String', ' ', 'cpuUsage', ',', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'shouldStop', ')', ' ', 'return', ';', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'context', '.', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'pid', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'cpuUsage', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'rss', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'builder', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'manager', '.', 'notify', '(', 'BinService', '.', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '<END>']"
master,fb39988e5671a1a7c5230fd2ba0fc3af55da378e,BinService.java,startService,"    public static void startService(@NonNull Context context) throws JSONException {
        StartConfig config = StartConfig.fromPrefs();

        try {
            ContextCompat.startForegroundService(context, new Intent(context, BinService.class)",https://www.github.com/devgianlu/aria2android/commit/fb39988e5671a1a7c5230fd2ba0fc3af55da378e,"    public static void startService(@NonNull Context context) throws JSONException {
        StartConfig config = StartConfig.fromPrefs();

        try {
            ContextCompat.startForegroundService(context, new Intent(context, BinService.class)
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'startService', '(', '@NonNull', ' ', 'Context', ' ', 'context', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'StartConfig', ' ', 'config', ' ', '=', ' ', 'StartConfig', '.', 'fromPrefs', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'ContextCompat', '.', 'startForegroundService', '(', 'context', ',', ' ', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'BinService', '.', 'class', ')', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Compat.java,loadEnv,"    public static void loadEnv(@NonNull Aria2Ui aria2) throws BadEnvironmentException {
        String envPath = Prefs.getString(PK.ENV_LOCATION, null);
        if (envPath == null) throw new MissingEnvException();
        aria2.loadEnv(new File(envPath));
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static void loadEnv(@NonNull Aria2Ui aria2) throws BadEnvironmentException {
        String envPath = Prefs.getString(PK.ENV_LOCATION, null);
        if (envPath == null) throw new MissingEnvException();
        aria2.loadEnv(new File(envPath));
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'loadEnv', '(', '@NonNull', ' ', 'Aria2Ui', ' ', 'aria2', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'String', ' ', 'envPath', ' ', '=', ' ', 'Prefs', '.', 'getString', '(', 'PK', '.', 'ENV_LOCATION', ',', ' ', 'null', ')', ';', '\n', '        ', 'if', ' ', '(', 'envPath', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'MissingEnvException', '(', ')', ';', '\n', '        ', 'aria2', '.', 'loadEnv', '(', 'new', ' ', 'File', '(', 'envPath', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,BootCompletedReceiver.java,onReceive,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            new Aria2Ui(context, null).startService();",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            new Aria2Ui(context, null).startService();
","['    ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'Intent', '.', 'ACTION_BOOT_COMPLETED', '.', 'equals', '(', 'intent', '.', 'getAction', '(', ')', ')', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_AT_BOOT', ')', ')', '\n', '            ', 'new', ' ', 'Aria2Ui', '(', 'context', ',', ' ', 'null', ')', '.', 'startService', '(', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,DownloadBinActivity.java,onReleaseSelected,"    public void onReleaseSelected(@NonNull GitHubApi.Release release) {
        progress.setText(R.string.downloadingBin);
        loading.setVisibility(View.VISIBLE);
        list.setVisibility(View.GONE);
        message.hide();

        downloader.setRelease(release);
        downloader.downloadRelease(this);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void onReleaseSelected(@NonNull GitHubApi.Release release) {
        progress.setText(R.string.downloadingBin);
        loading.setVisibility(View.VISIBLE);
        list.setVisibility(View.GONE);
        message.hide();

        downloader.setRelease(release);
        downloader.downloadRelease(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onReleaseSelected', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'downloadingBin', ')', ';', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'message', '.', 'hide', '(', ')', ';', '\n', '\n', '        ', 'downloader', '.', 'setRelease', '(', 'release', ')', ';', '\n', '        ', 'downloader', '.', 'downloadRelease', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,DownloadBinActivity.java,doneDownload,"    public void doneDownload(@NonNull File tmp) {
        progress.setText(R.string.extractingBin);
        downloader.extractTo(getEnvDir(), (entry, name) -> name.equals(""aria2c""), this);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void doneDownload(@NonNull File tmp) {
        progress.setText(R.string.extractingBin);
        downloader.extractTo(getEnvDir(), (entry, name) -> name.equals(""aria2c""), this);
    }
","['    ', 'public', ' ', 'void', ' ', 'doneDownload', '(', '@NonNull', ' ', 'File', ' ', 'tmp', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'extractingBin', ')', ';', '\n', '        ', 'downloader', '.', 'extractTo', '(', 'getEnvDir', '(', ')', ',', ' ', '(', 'entry', ',', ' ', 'name', ')', ' ', '-', '>', ' ', 'name', '.', 'equals', '(', '""', 'aria2c', '""', ')', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,DownloadBinActivity.java,failedDownload,"    public void failedDownload(@NonNull Exception ex) {
        ex.printStackTrace(); // TODO
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void failedDownload(@NonNull Exception ex) {
        ex.printStackTrace(); 
    }
","['    ', 'public', ' ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'ex', '.', 'printStackTrace', '(', ')', ';', ' ', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,DownloadBinActivity.java,doneExtract,"    public void doneExtract(@NonNull File dest) {
        progress.setText(R.string.binExtracted);

        Prefs.putBoolean(PK.CUSTOM_BIN, false);
        Prefs.putString(PK.ENV_LOCATION, dest.getAbsolutePath());
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void doneExtract(@NonNull File dest) {
        progress.setText(R.string.binExtracted);

        Prefs.putBoolean(PK.CUSTOM_BIN, false);
        Prefs.putString(PK.ENV_LOCATION, dest.getAbsolutePath());
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }
","['    ', 'public', ' ', 'void', ' ', 'doneExtract', '(', '@NonNull', ' ', 'File', ' ', 'dest', ')', ' ', '{', '\n', '        ', 'progress', '.', 'setText', '(', 'R', '.', 'string', '.', 'binExtracted', ')', ';', '\n', '\n', '        ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'CUSTOM_BIN', ',', ' ', 'false', ')', ';', '\n', '        ', 'Prefs', '.', 'putString', '(', 'PK', '.', 'ENV_LOCATION', ',', ' ', 'dest', '.', 'getAbsolutePath', '(', ')', ')', ';', '\n', '        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', '\n', '                ', '.', 'addFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ' ', '|', ' ', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ')', ';', '\n', '        ', 'finish', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,DownloadBinActivity.java,failedExtract,"    public void failedExtract(@NonNull Exception ex) {
        ex.printStackTrace(); // TODO
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void failedExtract(@NonNull Exception ex) {
        ex.printStackTrace(); 
    }
","['    ', 'public', ' ', 'void', ' ', 'failedExtract', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'ex', '.', 'printStackTrace', '(', ')', ';', ' ', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        aria2.onStart();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    protected void onStart() {
        super.onStart();
        aria2.onStart();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'aria2', '.', 'onStart', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,MainActivity.java,onDestroy,"    protected void onDestroy() {
        super.onDestroy();
        aria2.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    protected void onDestroy() {
        super.onDestroy();
        aria2.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'aria2', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,MainActivity.java,onMessage,"    public void onMessage(@NonNull Message.Type type, int i, @Nullable Serializable o) {
        switch (type) {
            case PROCESS_TERMINATED:",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void onMessage(@NonNull Message.Type type, int i, @Nullable Serializable o) {
        switch (type) {
            case PROCESS_TERMINATED:
","['    ', 'public', ' ', 'void', ' ', 'onMessage', '(', '@NonNull', ' ', 'Message', '.', 'Type', ' ', 'type', ',', ' ', 'int', ' ', 'i', ',', ' ', '@Nullable', ' ', 'Serializable', ' ', 'o', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'type', ')', ' ', '{', '\n', '            ', 'case', ' ', 'PROCESS_TERMINATED', ':', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,extractTo,"    public void extractTo(@NonNull File dest, @Nullable Filter filter, @NonNull ExtractTo listener) {
        if (downloadTmpFile == null) {
            listener.failedExtract(new IllegalStateException(""Missing downloaded release!""));
            return;
        }

        if (dest.exists()) {
            if (!dest.isDirectory()) {
                listener.failedExtract(new IllegalStateException(dest.getAbsolutePath() + "" is not a directory!""));
                return;
            }
        } else {
            if (!dest.mkdir()) {
                listener.failedExtract(new IllegalStateException(""Failed creating "" + dest.getAbsolutePath()));
                return;
            }
        }

        gitHub.execute(() -> {
            byte[] buffer = new byte[4096];",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void extractTo(@NonNull File dest, @Nullable Filter filter, @NonNull ExtractTo listener) {
        if (downloadTmpFile == null) {
            listener.failedExtract(new IllegalStateException(""Missing downloaded release!""));
            return;
        }

        if (dest.exists()) {
            if (!dest.isDirectory()) {
                listener.failedExtract(new IllegalStateException(dest.getAbsolutePath() + "" is not a directory!""));
                return;
            }
        } else {
            if (!dest.mkdir()) {
                listener.failedExtract(new IllegalStateException(""Failed creating "" + dest.getAbsolutePath()));
                return;
            }
        }

        gitHub.execute(() -> {
            byte[] buffer = new byte[4096];
","['    ', 'public', ' ', 'void', ' ', 'extractTo', '(', '@NonNull', ' ', 'File', ' ', 'dest', ',', ' ', '@Nullable', ' ', 'Filter', ' ', 'filter', ',', ' ', '@NonNull', ' ', 'ExtractTo', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'downloadTmpFile', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'listener', '.', 'failedExtract', '(', 'new', ' ', 'IllegalStateException', '(', '""', 'Missing downloaded release!', '""', ')', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'dest', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', '!', 'dest', '.', 'isDirectory', '(', ')', ')', ' ', '{', '\n', '                ', 'listener', '.', 'failedExtract', '(', 'new', ' ', 'IllegalStateException', '(', 'dest', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', ' is not a directory!', '""', ')', ')', ';', '\n', '                ', 'return', ';', '\n', '            ', '}', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'if', ' ', '(', '!', 'dest', '.', 'mkdir', '(', ')', ')', ' ', '{', '\n', '                ', 'listener', '.', 'failedExtract', '(', 'new', ' ', 'IllegalStateException', '(', '""', 'Failed creating ', '""', ' ', '+', ' ', 'dest', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', '\n', '                ', 'return', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'gitHub', '.', 'execute', '(', '(', ')', ' ', '-', '>', ' ', '{', '\n', '            ', 'byte', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'byte', '[', '4096', ']', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,downloadRelease,"    public void downloadRelease(@NonNull DownloadRelease listener) {
        if (selectedRelease == null) {
            listener.failedDownload(new IllegalStateException(""Did not select a release!""));
            return;
        }

        if (selectedRelease.androidAsset == null) {
            listener.failedDownload(new IllegalStateException(""This release hasn't an Android asset!""));
            return;
        }

        gitHub.inputStream(selectedRelease.androidAsset.downloadUrl, new GitHubApi.InputStreamWorker() {
            @Override",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void downloadRelease(@NonNull DownloadRelease listener) {
        if (selectedRelease == null) {
            listener.failedDownload(new IllegalStateException(""Did not select a release!""));
            return;
        }

        if (selectedRelease.androidAsset == null) {
            listener.failedDownload(new IllegalStateException(""This release hasn't an Android asset!""));
            return;
        }

        gitHub.inputStream(selectedRelease.androidAsset.downloadUrl, new GitHubApi.InputStreamWorker() {
            @Override
","['    ', 'public', ' ', 'void', ' ', 'downloadRelease', '(', '@NonNull', ' ', 'DownloadRelease', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'selectedRelease', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'listener', '.', 'failedDownload', '(', 'new', ' ', 'IllegalStateException', '(', '""', 'Did not select a release!', '""', ')', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'selectedRelease', '.', 'androidAsset', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'listener', '.', 'failedDownload', '(', 'new', ' ', 'IllegalStateException', '(', '""', ""This release hasn't an Android asset!"", '""', ')', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'gitHub', '.', 'inputStream', '(', 'selectedRelease', '.', 'androidAsset', '.', 'downloadUrl', ',', ' ', 'new', ' ', 'GitHubApi', '.', 'InputStreamWorker', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,work,"            public void work(@NonNull InputStream in) throws Exception {
                File tmp = File.createTempFile(""aria2"", String.valueOf(selectedRelease.androidAsset.id));
                try (FileOutputStream out = new FileOutputStream(tmp)) {
                    byte[] buffer = new byte[4096];
                    int read;
                    while ((read = in.read(buffer)) != -1)
                        out.write(buffer, 0, read);
                }

                setDownloadTmpFile(tmp);
                handler.post(() -> listener.doneDownload(tmp));
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void work(@NonNull InputStream in) throws Exception {
                File tmp = File.createTempFile(""aria2"", String.valueOf(selectedRelease.androidAsset.id));
                try (FileOutputStream out = new FileOutputStream(tmp)) {
                    byte[] buffer = new byte[4096];
                    int read;
                    while ((read = in.read(buffer)) != -1)
                        out.write(buffer, 0, read);
                }

                setDownloadTmpFile(tmp);
                handler.post(() -> listener.doneDownload(tmp));
            }
","['            ', 'public', ' ', 'void', ' ', 'work', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '                ', 'File', ' ', 'tmp', ' ', '=', ' ', 'File', '.', 'createTempFile', '(', '""', 'aria2', '""', ',', ' ', 'String', '.', 'valueOf', '(', 'selectedRelease', '.', 'androidAsset', '.', 'id', ')', ')', ';', '\n', '                ', 'try', ' ', '(', 'FileOutputStream', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'FileOutputStream', '(', 'tmp', ')', ')', ' ', '{', '\n', '                    ', 'byte', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'byte', '[', '4096', ']', ';', '\n', '                    ', 'int', ' ', 'read', ';', '\n', '                    ', 'while', ' ', '(', '(', 'read', ' ', '=', ' ', 'in', '.', 'read', '(', 'buffer', ')', ')', ' ', '!', '=', ' ', '-', '1', ')', '\n', '                        ', 'out', '.', 'write', '(', 'buffer', ',', ' ', '0', ',', ' ', 'read', ')', ';', '\n', '                ', '}', '\n', '\n', '                ', 'setDownloadTmpFile', '(', 'tmp', ')', ';', '\n', '                ', 'handler', '.', 'post', '(', '(', ')', ' ', '-', '>', ' ', 'listener', '.', 'doneDownload', '(', 'tmp', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,exception,"            public void exception(@NonNull Exception ex) {
                handler.post(() -> listener.failedDownload(ex));
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void exception(@NonNull Exception ex) {
                handler.post(() -> listener.failedDownload(ex));
            }
","['            ', 'public', ' ', 'void', ' ', 'exception', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'handler', '.', 'post', '(', '(', ')', ' ', '-', '>', ' ', 'listener', '.', 'failedDownload', '(', 'ex', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,onResult,"            public void onResult(@NonNull List<GitHubApi.Release> result) {
                setRelease(listener.pick(result));
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void onResult(@NonNull List<GitHubApi.Release> result) {
                setRelease(listener.pick(result));
            }
","['            ', 'public', ' ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ' ', '{', '\n', '                ', 'setRelease', '(', 'listener', '.', 'pick', '(', 'result', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,onException,"            public void onException(@NonNull Exception ex) {
                listener.failedRetrieveRelease(ex);
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void onException(@NonNull Exception ex) {
                listener.failedRetrieveRelease(ex);
            }
","['            ', 'public', ' ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'listener', '.', 'failedRetrieveRelease', '(', 'ex', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,onResult,"            public void onResult(@NonNull GitHubApi.Release result) {
                setRelease(result);
                listener.doneRetrieveRelease(result);
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void onResult(@NonNull GitHubApi.Release result) {
                setRelease(result);
                listener.doneRetrieveRelease(result);
            }
","['            ', 'public', ' ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'result', ')', ' ', '{', '\n', '                ', 'setRelease', '(', 'result', ')', ';', '\n', '                ', 'listener', '.', 'doneRetrieveRelease', '(', 'result', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,accept,"        boolean accept(@NonNull ZipEntry entry, @NonNull String name);
    }

    @UiThread
    public interface ExtractTo {
        void doneExtract(@NonNull File dest);

        void failedExtract(@NonNull Exception ex);
    }

    @UiThread
    public interface DownloadRelease {
        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        boolean accept(@NonNull ZipEntry entry, @NonNull String name);
    }

    @UiThread
    public interface ExtractTo {
        void doneExtract(@NonNull File dest);

        void failedExtract(@NonNull Exception ex);
    }

    @UiThread
    public interface DownloadRelease {
        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'boolean', ' ', 'accept', '(', '@NonNull', ' ', 'ZipEntry', ' ', 'entry', ',', ' ', '@NonNull', ' ', 'String', ' ', 'name', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'ExtractTo', ' ', '{', '\n', '        ', 'void', ' ', 'doneExtract', '(', '@NonNull', ' ', 'File', ' ', 'dest', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedExtract', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'DownloadRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneDownload', '(', '@NonNull', ' ', 'File', ' ', 'tmp', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'SetRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneRetrieveRelease', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,doneExtract,"        void doneExtract(@NonNull File dest);

        void failedExtract(@NonNull Exception ex);
    }

    @UiThread
    public interface DownloadRelease {
        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void doneExtract(@NonNull File dest);

        void failedExtract(@NonNull Exception ex);
    }

    @UiThread
    public interface DownloadRelease {
        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'void', ' ', 'doneExtract', '(', '@NonNull', ' ', 'File', ' ', 'dest', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedExtract', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'DownloadRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneDownload', '(', '@NonNull', ' ', 'File', ' ', 'tmp', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'SetRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneRetrieveRelease', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,failedExtract,"        void failedExtract(@NonNull Exception ex);
    }

    @UiThread
    public interface DownloadRelease {
        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void failedExtract(@NonNull Exception ex);
    }

    @UiThread
    public interface DownloadRelease {
        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'void', ' ', 'failedExtract', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'DownloadRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneDownload', '(', '@NonNull', ' ', 'File', ' ', 'tmp', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'SetRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneRetrieveRelease', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,doneDownload,"        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void doneDownload(@NonNull File tmp);

        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'void', ' ', 'doneDownload', '(', '@NonNull', ' ', 'File', ' ', 'tmp', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'SetRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneRetrieveRelease', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,failedDownload,"        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void failedDownload(@NonNull Exception ex);
    }

    @UiThread
    public interface SetRelease {
        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'SetRelease', ' ', '{', '\n', '        ', 'void', ' ', 'doneRetrieveRelease', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,doneRetrieveRelease,"        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void doneRetrieveRelease(@NonNull GitHubApi.Release release);

        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'void', ' ', 'doneRetrieveRelease', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,failedRetrieveRelease,"        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void failedRetrieveRelease(@NonNull Exception ex);
    }

    @UiThread
    public interface PickRelease {

        @NonNull
        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'PickRelease', ' ', '{', '\n', '\n', '        ', '@NonNull', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Downloader.java,pick,"        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        GitHubApi.Release pick(@NonNull List<GitHubApi.Release> result);

        void failedRetrieveRelease(@NonNull Exception ex);
    }
}
","['        ', 'GitHubApi', '.', 'Release', ' ', 'pick', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'failedRetrieveRelease', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,onServiceConnected,"        public void onServiceConnected(ComponentName name, IBinder service) {
            messenger = new Messenger(service);
            broadcastManager.registerReceiver(receiver = new ServiceBroadcastReceiver(), new IntentFilter(Aria2Service.BROADCAST_MESSAGE));
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void onServiceConnected(ComponentName name, IBinder service) {
            messenger = new Messenger(service);
            broadcastManager.registerReceiver(receiver = new ServiceBroadcastReceiver(), new IntentFilter(Aria2Service.BROADCAST_MESSAGE));
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'name', ',', ' ', 'IBinder', ' ', 'service', ')', ' ', '{', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'service', ')', ';', '\n', '            ', 'broadcastManager', '.', 'registerReceiver', '(', 'receiver', ' ', '=', ' ', 'new', ' ', 'ServiceBroadcastReceiver', '(', ')', ',', ' ', 'new', ' ', 'IntentFilter', '(', 'Aria2Service', '.', 'BROADCAST_MESSAGE', ')', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,onServiceDisconnected,"        public void onServiceDisconnected(ComponentName name) {
            messenger = null;
            if (receiver != null) broadcastManager.unregisterReceiver(receiver);
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void onServiceDisconnected(ComponentName name) {
            messenger = null;
            if (receiver != null) broadcastManager.unregisterReceiver(receiver);
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceDisconnected', '(', 'ComponentName', ' ', 'name', ')', ' ', '{', '\n', '            ', 'messenger', ' ', '=', ' ', 'null', ';', '\n', '            ', 'if', ' ', '(', 'receiver', ' ', '!', '=', ' ', 'null', ')', ' ', 'broadcastManager', '.', 'unregisterReceiver', '(', 'receiver', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,bind,"    private void bind() {
        context.bindService(new Intent(context, Aria2Service.class), serviceConnection, Context.BIND_AUTO_CREATE);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void bind() {
        context.bindService(new Intent(context, Aria2Service.class), serviceConnection, Context.BIND_AUTO_CREATE);
    }
","['    ', 'private', ' ', 'void', ' ', 'bind', '(', ')', ' ', '{', '\n', '        ', 'context', '.', 'bindService', '(', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'Aria2Service', '.', 'class', ')', ',', ' ', 'serviceConnection', ',', ' ', 'Context', '.', 'BIND_AUTO_CREATE', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,onDestroy,"    public void onDestroy() {
        context.unbindService(serviceConnection);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void onDestroy() {
        context.unbindService(serviceConnection);
    }
","['    ', 'public', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'context', '.', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,loadEnv,"    public void loadEnv(@NonNull File env) throws BadEnvironmentException {
        aria2.loadEnv(env);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void loadEnv(@NonNull File env) throws BadEnvironmentException {
        aria2.loadEnv(env);
    }
","['    ', 'public', ' ', 'void', ' ', 'loadEnv', '(', '@NonNull', ' ', 'File', ' ', 'env', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'aria2', '.', 'loadEnv', '(', 'env', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,version,"    public String version() throws IOException, BadEnvironmentException {
        return aria2.version();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public String version() throws IOException, BadEnvironmentException {
        return aria2.version();
    }
","['    ', 'public', ' ', 'String', ' ', 'version', '(', ')', ' ', 'throws', ' ', 'IOException', ',', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'return', ' ', 'aria2', '.', 'version', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,startService,"    public void startService() {
        bind();
        Aria2Service.startService(context);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void startService() {
        bind();
        Aria2Service.startService(context);
    }
","['    ', 'public', ' ', 'void', ' ', 'startService', '(', ')', ' ', '{', '\n', '        ', 'bind', '(', ')', ';', '\n', '        ', 'Aria2Service', '.', 'startService', '(', 'context', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,stopService,"    public void stopService() {
        Aria2Service.stopService(context);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void stopService() {
        Aria2Service.stopService(context);
    }
","['    ', 'public', ' ', 'void', ' ', 'stopService', '(', ')', ' ', '{', '\n', '        ', 'Aria2Service', '.', 'stopService', '(', 'context', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,onMessage,"        void onMessage(@NonNull Message.Type type, int i, @Nullable Serializable o);
    }

    private class ServiceBroadcastReceiver extends BroadcastReceiver {

        @Override
        public void onReceive(Context context, Intent intent) {
            Message.Type type = (Message.Type) intent.getSerializableExtra(""type"");
            int i = intent.getIntExtra(""i"", 0);
            Serializable o = intent.getSerializableExtra(""o"");
            if (listener != null) listener.onMessage(type, i, o);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void onMessage(@NonNull Message.Type type, int i, @Nullable Serializable o);
    }

    private class ServiceBroadcastReceiver extends BroadcastReceiver {

        @Override
        public void onReceive(Context context, Intent intent) {
            Message.Type type = (Message.Type) intent.getSerializableExtra(""type"");
            int i = intent.getIntExtra(""i"", 0);
            Serializable o = intent.getSerializableExtra(""o"");
            if (listener != null) listener.onMessage(type, i, o);
        }
    }
}
","['        ', 'void', ' ', 'onMessage', '(', '@NonNull', ' ', 'Message', '.', 'Type', ' ', 'type', ',', ' ', 'int', ' ', 'i', ',', ' ', '@Nullable', ' ', 'Serializable', ' ', 'o', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'private', ' ', 'class', ' ', 'ServiceBroadcastReceiver', ' ', 'extends', ' ', 'BroadcastReceiver', ' ', '{', '\n', '\n', '        ', '@Override', '\n', '        ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'Message', '.', 'Type', ' ', 'type', ' ', '=', ' ', '(', 'Message', '.', 'Type', ')', ' ', 'intent', '.', 'getSerializableExtra', '(', '""', 'type', '""', ')', ';', '\n', '            ', 'int', ' ', 'i', ' ', '=', ' ', 'intent', '.', 'getIntExtra', '(', '""', 'i', '""', ',', ' ', '0', ')', ';', '\n', '            ', 'Serializable', ' ', 'o', ' ', '=', ' ', 'intent', '.', 'getSerializableExtra', '(', '""', 'o', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onMessage', '(', 'type', ',', ' ', 'i', ',', ' ', 'o', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Ui.java,onReceive,"        public void onReceive(Context context, Intent intent) {
            Message.Type type = (Message.Type) intent.getSerializableExtra(""type"");
            int i = intent.getIntExtra(""i"", 0);
            Serializable o = intent.getSerializableExtra(""o"");
            if (listener != null) listener.onMessage(type, i, o);
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void onReceive(Context context, Intent intent) {
            Message.Type type = (Message.Type) intent.getSerializableExtra(""type"");
            int i = intent.getIntExtra(""i"", 0);
            Serializable o = intent.getSerializableExtra(""o"");
            if (listener != null) listener.onMessage(type, i, o);
        }
","['        ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '            ', 'Message', '.', 'Type', ' ', 'type', ' ', '=', ' ', '(', 'Message', '.', 'Type', ')', ' ', 'intent', '.', 'getSerializableExtra', '(', '""', 'type', '""', ')', ';', '\n', '            ', 'int', ' ', 'i', ' ', '=', ' ', 'intent', '.', 'getIntExtra', '(', '""', 'i', '""', ',', ' ', '0', ')', ';', '\n', '            ', 'Serializable', ' ', 'o', ' ', '=', ' ', 'intent', '.', 'getSerializableExtra', '(', '""', 'o', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onMessage', '(', 'type', ',', ' ', 'i', ',', ' ', 'o', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,read,"    private static String read(@NonNull InputStream in) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        StringBuilder builder = new StringBuilder();

        String line;
        while ((line = reader.readLine()) != null)
            builder.append(line);

        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private static String read(@NonNull InputStream in) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        StringBuilder builder = new StringBuilder();

        String line;
        while ((line = reader.readLine()) != null)
            builder.append(line);

        return builder.toString();
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'read', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'BufferedReader', ' ', 'reader', ' ', '=', ' ', 'new', ' ', 'BufferedReader', '(', 'new', ' ', 'InputStreamReader', '(', 'in', ')', ')', ';', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'line', ';', '\n', '        ', 'while', ' ', '(', '(', 'line', ' ', '=', ' ', 'reader', '.', 'readLine', '(', ')', ')', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'builder', '.', 'append', '(', 'line', ')', ';', '\n', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,execute,"    void execute(@NonNull Runnable runnable) {
        executorService.execute(runnable);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void execute(@NonNull Runnable runnable) {
        executorService.execute(runnable);
    }
","['    ', 'void', ' ', 'execute', '(', '@NonNull', ' ', 'Runnable', ' ', 'runnable', ')', ' ', '{', '\n', '        ', 'executorService', '.', 'execute', '(', 'runnable', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,inputStream,"    void inputStream(@NonNull String url, @NonNull InputStreamWorker worker) {
        executorService.execute(() -> {
            HttpURLConnection conn = null;",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void inputStream(@NonNull String url, @NonNull InputStreamWorker worker) {
        executorService.execute(() -> {
            HttpURLConnection conn = null;
","['    ', 'void', ' ', 'inputStream', '(', '@NonNull', ' ', 'String', ' ', 'url', ',', ' ', '@NonNull', ' ', 'InputStreamWorker', ' ', 'worker', ')', ' ', '{', '\n', '        ', 'executorService', '.', 'execute', '(', '(', ')', ' ', '-', '>', ' ', '{', '\n', '            ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', 'null', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,basicRequestSync,"    private HttpURLConnection basicRequestSync(String url) throws IOException {
        HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
        conn.connect();

        if (conn.getResponseCode() == 200)
            return conn;",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private HttpURLConnection basicRequestSync(String url) throws IOException {
        HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
        conn.connect();

        if (conn.getResponseCode() == 200)
            return conn;
","['    ', 'private', ' ', 'HttpURLConnection', ' ', 'basicRequestSync', '(', 'String', ' ', 'url', ')', ' ', 'throws', ' ', 'IOException', ' ', '{', '\n', '        ', 'HttpURLConnection', ' ', 'conn', ' ', '=', ' ', '(', 'HttpURLConnection', ')', ' ', 'new', ' ', 'URL', '(', 'url', ')', '.', 'openConnection', '(', ')', ';', '\n', '        ', 'conn', '.', 'connect', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'conn', '.', 'getResponseCode', '(', ')', ' ', '=', '=', ' ', '200', ')', '\n', '            ', 'return', ' ', 'conn', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,work,"            public void work(@NonNull InputStream in) throws IOException, JSONException, ParseException {
                JSONArray array = new JSONArray(read(in));
                final List<Release> releases = new ArrayList<>();
                for (int i = 0; i < array.length(); i++)
                    releases.add(new Release(array.getJSONObject(i)));

                handler.post(() -> listener.onResult(releases));
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void work(@NonNull InputStream in) throws IOException, JSONException, ParseException {
                JSONArray array = new JSONArray(read(in));
                final List<Release> releases = new ArrayList<>();
                for (int i = 0; i < array.length(); i++)
                    releases.add(new Release(array.getJSONObject(i)));

                handler.post(() -> listener.onResult(releases));
            }
","['            ', 'public', ' ', 'void', ' ', 'work', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'IOException', ',', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '                ', 'JSONArray', ' ', 'array', ' ', '=', ' ', 'new', ' ', 'JSONArray', '(', 'read', '(', 'in', ')', ')', ';', '\n', '                ', 'final', ' ', 'List', '<', 'Release', '>', ' ', 'releases', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', ')', ';', '\n', '                ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'array', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', '\n', '                    ', 'releases', '.', 'add', '(', 'new', ' ', 'Release', '(', 'array', '.', 'getJSONObject', '(', 'i', ')', ')', ')', ';', '\n', '\n', '                ', 'handler', '.', 'post', '(', '(', ')', ' ', '-', '>', ' ', 'listener', '.', 'onResult', '(', 'releases', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,exception,"            public void exception(@NonNull Exception ex) {
                handler.post(() -> listener.onException(ex));
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void exception(@NonNull Exception ex) {
                handler.post(() -> listener.onException(ex));
            }
","['            ', 'public', ' ', 'void', ' ', 'exception', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'handler', '.', 'post', '(', '(', ')', ' ', '-', '>', ' ', 'listener', '.', 'onException', '(', 'ex', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,work,"            public void work(@NonNull InputStream in) throws Exception {
                Release release = new Release(new JSONObject(read(in)));
                handler.post(() -> listener.onResult(release));
            }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"            public void work(@NonNull InputStream in) throws Exception {
                Release release = new Release(new JSONObject(read(in)));
                handler.post(() -> listener.onResult(release));
            }
","['            ', 'public', ' ', 'void', ' ', 'work', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '                ', 'Release', ' ', 'release', ' ', '=', ' ', 'new', ' ', 'Release', '(', 'new', ' ', 'JSONObject', '(', 'read', '(', 'in', ')', ')', ')', ';', '\n', '                ', 'handler', '.', 'post', '(', '(', ')', ' ', '-', '>', ' ', 'listener', '.', 'onResult', '(', 'release', ')', ')', ';', '\n', '            ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,work,"        void work(@NonNull InputStream in) throws Exception;

        void exception(@NonNull Exception ex);
    }

    @UiThread
    public interface OnResult<E> {
        void onResult(@NonNull E result);

        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void work(@NonNull InputStream in) throws Exception;

        void exception(@NonNull Exception ex);
    }

    @UiThread
    public interface OnResult<E> {
        void onResult(@NonNull E result);

        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'work', '(', '@NonNull', ' ', 'InputStream', ' ', 'in', ')', ' ', 'throws', ' ', 'Exception', ';', '\n', '\n', '        ', 'void', ' ', 'exception', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'OnResult', '<', 'E', '>', ' ', '{', '\n', '        ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'E', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,exception,"        void exception(@NonNull Exception ex);
    }

    @UiThread
    public interface OnResult<E> {
        void onResult(@NonNull E result);

        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void exception(@NonNull Exception ex);
    }

    @UiThread
    public interface OnResult<E> {
        void onResult(@NonNull E result);

        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'exception', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', '@UiThread', '\n', '    ', 'public', ' ', 'interface', ' ', 'OnResult', '<', 'E', '>', ' ', '{', '\n', '        ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'E', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,GitHubApi.java,onResult,"        void onResult(@NonNull E result);

        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        void onResult(@NonNull E result);

        void onException(@NonNull Exception ex);
    }

    public static class Release {
        public final int id;
        public final String name;
        public final String htmlUrl;
        public final long publishedAt;
        public Asset androidAsset;

        Release(JSONObject obj) throws JSONException, ParseException {
            id = obj.getInt(""id"");
            name = obj.getString(""name"");
            htmlUrl = obj.getString(""html_url"");
            publishedAt = getDateParser().parse(obj.getString(""published_at"")).getTime();

            JSONArray assets = obj.getJSONArray(""assets"");
            for (int i = 0; i < assets.length(); i++) {
                JSONObject asset = assets.getJSONObject(i);
                if (asset.optString(""name"", """").contains(""android"")) {
                    androidAsset = new Asset(asset);
                    break;
                }
            }
        }

        public static class Asset {
            public final int id;
            public final String name;
            public final String downloadUrl;
            public final long size;

            Asset(JSONObject obj) throws JSONException {
                id = obj.getInt(""id"");
                name = obj.getString(""name"");
                downloadUrl = obj.getString(""browser_download_url"");
                size = obj.getLong(""size"");
            }
        }
    }
}
","['        ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'E', ' ', 'result', ')', ';', '\n', '\n', '        ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'static', ' ', 'class', ' ', 'Release', ' ', '{', '\n', '        ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'String', ' ', 'htmlUrl', ';', '\n', '        ', 'public', ' ', 'final', ' ', 'long', ' ', 'publishedAt', ';', '\n', '        ', 'public', ' ', 'Asset', ' ', 'androidAsset', ';', '\n', '\n', '        ', 'Release', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ',', ' ', 'ParseException', ' ', '{', '\n', '            ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '            ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '            ', 'htmlUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'html_url', '""', ')', ';', '\n', '            ', 'publishedAt', ' ', '=', ' ', 'getDateParser', '(', ')', '.', 'parse', '(', 'obj', '.', 'getString', '(', '""', 'published_at', '""', ')', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '            ', 'JSONArray', ' ', 'assets', ' ', '=', ' ', 'obj', '.', 'getJSONArray', '(', '""', 'assets', '""', ')', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'assets', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'asset', ' ', '=', ' ', 'assets', '.', 'getJSONObject', '(', 'i', ')', ';', '\n', '                ', 'if', ' ', '(', 'asset', '.', 'optString', '(', '""', 'name', '""', ',', ' ', '""', '""', ')', '.', 'contains', '(', '""', 'android', '""', ')', ')', ' ', '{', '\n', '                    ', 'androidAsset', ' ', '=', ' ', 'new', ' ', 'Asset', '(', 'asset', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'public', ' ', 'static', ' ', 'class', ' ', 'Asset', ' ', '{', '\n', '            ', 'public', ' ', 'final', ' ', 'int', ' ', 'id', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'name', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'String', ' ', 'downloadUrl', ';', '\n', '            ', 'public', ' ', 'final', ' ', 'long', ' ', 'size', ';', '\n', '\n', '            ', 'Asset', '(', 'JSONObject', ' ', 'obj', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '                ', 'id', ' ', '=', ' ', 'obj', '.', 'getInt', '(', '""', 'id', '""', ')', ';', '\n', '                ', 'name', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'name', '""', ')', ';', '\n', '                ', 'downloadUrl', ' ', '=', ' ', 'obj', '.', 'getString', '(', '""', 'browser_download_url', '""', ')', ';', '\n', '                ', 'size', ' ', '=', ' ', 'obj', '.', 'getLong', '(', '""', 'size', '""', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,get,"    public static Aria2 get() {
        if (instance == null) instance = new Aria2();
        return instance;
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static Aria2 get() {
        if (instance == null) instance = new Aria2();
        return instance;
    }
","['    ', 'public', ' ', 'static', ' ', 'Aria2', ' ', 'get', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'instance', ' ', '=', '=', ' ', 'null', ')', ' ', 'instance', ' ', '=', ' ', 'new', ' ', 'Aria2', '(', ')', ';', '\n', '        ', 'return', ' ', 'instance', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,startCommandForLog,"    private static String startCommandForLog(String exec, String... params) {
        StringBuilder builder = new StringBuilder(exec);
        for (String param : params) builder.append(' ').append(param);
        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private static String startCommandForLog(String exec, String... params) {
        StringBuilder builder = new StringBuilder(exec);
        for (String param : params) builder.append(' ').append(param);
        return builder.toString();
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'startCommandForLog', '(', 'String', ' ', 'exec', ',', ' ', 'String', '.', '.', '.', ' ', 'params', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', 'exec', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'param', ' ', ':', ' ', 'params', ')', ' ', 'builder', '.', 'append', '(', ""' '"", ')', '.', 'append', '(', 'param', ')', ';', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,addListener,"    void addListener(@NonNull MessageListener listener) {
        messageHandler.listeners.add(listener);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void addListener(@NonNull MessageListener listener) {
        messageHandler.listeners.add(listener);
    }
","['    ', 'void', ' ', 'addListener', '(', '@NonNull', ' ', 'MessageListener', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'messageHandler', '.', 'listeners', '.', 'add', '(', 'listener', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,removeListener,"    void removeListener(@NonNull MessageListener listener) {
        messageHandler.listeners.remove(listener);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void removeListener(@NonNull MessageListener listener) {
        messageHandler.listeners.remove(listener);
    }
","['    ', 'void', ' ', 'removeListener', '(', '@NonNull', ' ', 'MessageListener', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'messageHandler', '.', 'listeners', '.', 'remove', '(', 'listener', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,version,"    public String version() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        try {
            Process process = execWithParams(""-v"");",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public String version() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        try {
            Process process = execWithParams(""-v"");
","['    ', 'public', ' ', 'String', ' ', 'version', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'execWithParams', '(', '""', '-v', '""', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,execWithParams,"    private Process execWithParams(String... params) throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        String[] cmdline = new String[params.length + 1];
        cmdline[0] = env.execPath();
        System.arraycopy(params, 0, cmdline, 1, params.length);
        return Runtime.getRuntime().exec(cmdline);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private Process execWithParams(String... params) throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        String[] cmdline = new String[params.length + 1];
        cmdline[0] = env.execPath();
        System.arraycopy(params, 0, cmdline, 1, params.length);
        return Runtime.getRuntime().exec(cmdline);
    }
","['    ', 'private', ' ', 'Process', ' ', 'execWithParams', '(', 'String', '.', '.', '.', ' ', 'params', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'String', '[', ']', ' ', 'cmdline', ' ', '=', ' ', 'new', ' ', 'String', '[', 'params', '.', 'length', ' ', '+', ' ', '1', ']', ';', '\n', '        ', 'cmdline', '[', '0', ']', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'System', '.', 'arraycopy', '(', 'params', ',', ' ', '0', ',', ' ', 'cmdline', ',', ' ', '1', ',', ' ', 'params', '.', 'length', ')', ';', '\n', '        ', 'return', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', 'cmdline', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,loadEnv,"    public void loadEnv(@NonNull File env) throws BadEnvironmentException {
        if (!env.isDirectory())
            throw new BadEnvironmentException(env.getAbsolutePath() + "" is not a directory!"");

        File exec = new File(env, ""aria2c"");
        if (!exec.exists())
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" doesn't exists!"");

        if (!exec.canExecute() && !exec.setExecutable(true))
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" can't be executed!"");

        this.env = new Env(env, exec);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void loadEnv(@NonNull File env) throws BadEnvironmentException {
        if (!env.isDirectory())
            throw new BadEnvironmentException(env.getAbsolutePath() + "" is not a directory!"");

        File exec = new File(env, ""aria2c"");
        if (!exec.exists())
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" doesn't exists!"");

        if (!exec.canExecute() && !exec.setExecutable(true))
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" can't be executed!"");

        this.env = new Env(env, exec);
    }
","['    ', 'public', ' ', 'void', ' ', 'loadEnv', '(', '@NonNull', ' ', 'File', ' ', 'env', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'env', '.', 'isDirectory', '(', ')', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'env', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', ' is not a directory!', '""', ')', ';', '\n', '\n', '        ', 'File', ' ', 'exec', ' ', '=', ' ', 'new', ' ', 'File', '(', 'env', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'if', ' ', '(', '!', 'exec', '.', 'exists', '(', ')', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'exec', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', "" doesn't exists!"", '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'exec', '.', 'canExecute', '(', ')', ' ', '&', '&', ' ', '!', 'exec', '.', 'setExecutable', '(', 'true', ')', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'exec', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', "" can't be executed!"", '""', ')', ';', '\n', '\n', '        ', 'this', '.', 'env', ' ', '=', ' ', 'new', ' ', 'Env', '(', 'env', ',', ' ', 'exec', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,start,"    void start() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void start() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }
","['    ', 'void', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'reloadEnv', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'execPath', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'params', ' ', '=', ' ', 'env', '.', 'startArgs', '(', ')', ';', '\n', '\n', '        ', 'currentProcess', ' ', '=', ' ', 'execWithParams', '(', 'params', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Waiter', '(', 'currentProcess', ')', ',', ' ', '""', 'aria2android-waiterThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'monitor', ' ', '=', ' ', 'new', ' ', 'Monitor', '(', ')', ',', ' ', '""', 'aria2android-monitorThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'inputWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getInputStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-inputWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'errorWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getErrorStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-errorWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', 'startCommandForLog', '(', 'execPath', ',', ' ', 'params', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,reloadEnv,"    void reloadEnv() throws BadEnvironmentException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        loadEnv(env.baseDir);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void reloadEnv() throws BadEnvironmentException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        loadEnv(env.baseDir);
    }
","['    ', 'void', ' ', 'reloadEnv', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'loadEnv', '(', 'env', '.', 'baseDir', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,processTerminated,"    private void processTerminated(int code) {
        postMessage(Message.obtain(Message.Type.PROCESS_TERMINATED, code));

        if (monitor != null) {
            monitor.close();
            monitor = null;
        }

        if (errorWatcher != null) {
            errorWatcher.close();
            errorWatcher = null;
        }

        if (inputWatcher != null) {
            inputWatcher.close();",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void processTerminated(int code) {
        postMessage(Message.obtain(Message.Type.PROCESS_TERMINATED, code));

        if (monitor != null) {
            monitor.close();
            monitor = null;
        }

        if (errorWatcher != null) {
            errorWatcher.close();
            errorWatcher = null;
        }

        if (inputWatcher != null) {
            inputWatcher.close();
","['    ', 'private', ' ', 'void', ' ', 'processTerminated', '(', 'int', ' ', 'code', ')', ' ', '{', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_TERMINATED', ',', ' ', 'code', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'monitor', '.', 'close', '(', ')', ';', '\n', '            ', 'monitor', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'errorWatcher', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'errorWatcher', '.', 'close', '(', ')', ';', '\n', '            ', 'errorWatcher', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'inputWatcher', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'inputWatcher', '.', 'close', '(', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,monitorFailed,"    private void monitorFailed(@NonNull Exception ex) {
        postMessage(Message.obtain(Message.Type.MONITOR_FAILED, ex));
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void monitorFailed(@NonNull Exception ex) {
        postMessage(Message.obtain(Message.Type.MONITOR_FAILED, ex));
    }
","['    ', 'private', ' ', 'void', ' ', 'monitorFailed', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'MONITOR_FAILED', ',', ' ', 'ex', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,monitorGotLine,"    private void monitorGotLine(@NonNull String line) {
        Matcher matcher = TOP_PATTERN.matcher(line);
        postMessage(Message.obtain(Message.Type.MONITOR_UPDATE, line)); // TODO
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void monitorGotLine(@NonNull String line) {
        Matcher matcher = TOP_PATTERN.matcher(line);
        postMessage(Message.obtain(Message.Type.MONITOR_UPDATE, line)); 
    }
","['    ', 'private', ' ', 'void', ' ', 'monitorGotLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Matcher', ' ', 'matcher', ' ', '=', ' ', 'TOP_PATTERN', '.', 'matcher', '(', 'line', ')', ';', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'MONITOR_UPDATE', ',', ' ', 'line', ')', ')', ';', ' ', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,postMessage,"    private void postMessage(@NonNull Message message) {
        messageHandler.queue.add(message);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void postMessage(@NonNull Message message) {
        messageHandler.queue.add(message);
    }
","['    ', 'private', ' ', 'void', ' ', 'postMessage', '(', '@NonNull', ' ', 'Message', ' ', 'message', ')', ' ', '{', '\n', '        ', 'messageHandler', '.', 'queue', '.', 'add', '(', 'message', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,handleStreamMessage,"    private void handleStreamMessage(@NonNull String line) {
        if (line.startsWith(""WARNING"")) {
            postMessage(Message.obtain(Message.Type.PROCESS_WARN, line));",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void handleStreamMessage(@NonNull String line) {
        if (line.startsWith(""WARNING"")) {
            postMessage(Message.obtain(Message.Type.PROCESS_WARN, line));
","['    ', 'private', ' ', 'void', ' ', 'handleStreamMessage', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', 'WARNING', '""', ')', ')', ' ', '{', '\n', '            ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_WARN', ',', ' ', 'line', ')', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,stop,"    void stop() {
        if (currentProcess != null)
            currentProcess.destroy();",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    void stop() {
        if (currentProcess != null)
            currentProcess.destroy();
","['    ', 'void', ' ', 'stop', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'currentProcess', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'currentProcess', '.', 'destroy', '(', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,delete,"    public boolean delete() {
        stop();
        return env.delete();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public boolean delete() {
        stop();
        return env.delete();
    }
","['    ', 'public', ' ', 'boolean', ' ', 'delete', '(', ')', ' ', '{', '\n', '        ', 'stop', '(', ')', ';', '\n', '        ', 'return', ' ', 'env', '.', 'delete', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,run,"        public void run() {
            while (!shouldStop) {
                try {",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void run() {
            while (!shouldStop) {
                try {
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'while', ' ', '(', '!', 'shouldStop', ')', ' ', '{', '\n', '                ', 'try', ' ', '{', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,close,"        public void close() {
            shouldStop = true;
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void close() {
            shouldStop = true;
        }
","['        ', 'public', ' ', 'void', ' ', 'close', '(', ')', ' ', '{', '\n', '            ', 'shouldStop', ' ', '=', ' ', 'true', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,startArgs,"        String[] startArgs() {
            String[] args = new String[params.size()];
            int i = 0;
            for (Map.Entry<String, String> entry : params.entrySet()) {
                if (entry.getValue() == null || entry.getValue().isEmpty())
                    args[i] = entry.getKey();
                else
                    args[i] = entry.getKey() + ""="" + entry.getValue();

                i++;
            }
            return args;
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        String[] startArgs() {
            String[] args = new String[params.size()];
            int i = 0;
            for (Map.Entry<String, String> entry : params.entrySet()) {
                if (entry.getValue() == null || entry.getValue().isEmpty())
                    args[i] = entry.getKey();
                else
                    args[i] = entry.getKey() + ""="" + entry.getValue();

                i++;
            }
            return args;
        }
","['        ', 'String', '[', ']', ' ', 'startArgs', '(', ')', ' ', '{', '\n', '            ', 'String', '[', ']', ' ', 'args', ' ', '=', ' ', 'new', ' ', 'String', '[', 'params', '.', 'size', '(', ')', ']', ';', '\n', '            ', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', '\n', '            ', 'for', ' ', '(', 'Map', '.', 'Entry', '<', 'String', ',', ' ', 'String', '>', ' ', 'entry', ' ', ':', ' ', 'params', '.', 'entrySet', '(', ')', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'entry', '.', 'getValue', '(', ')', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'entry', '.', 'getValue', '(', ')', '.', 'isEmpty', '(', ')', ')', '\n', '                    ', 'args', '[', 'i', ']', ' ', '=', ' ', 'entry', '.', 'getKey', '(', ')', ';', '\n', '                ', 'else', '\n', '                    ', 'args', '[', 'i', ']', ' ', '=', ' ', 'entry', '.', 'getKey', '(', ')', ' ', '+', ' ', '""', '=', '""', ' ', '+', ' ', 'entry', '.', 'getValue', '(', ')', ';', '\n', '\n', '                ', 'i', '+', '+', ';', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'args', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,execPath,"        String execPath() {
            return exec.getAbsolutePath();
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        String execPath() {
            return exec.getAbsolutePath();
        }
","['        ', 'String', ' ', 'execPath', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', 'exec', '.', 'getAbsolutePath', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,delete,"        boolean delete() {
            return baseDir.delete();
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        boolean delete() {
            return baseDir.delete();
        }
","['        ', 'boolean', ' ', 'delete', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', 'baseDir', '.', 'delete', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,run,"        public void run() {
            try (Scanner scanner = new Scanner(stream)) {
                while (!shouldStop && scanner.hasNextLine())",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void run() {
            try (Scanner scanner = new Scanner(stream)) {
                while (!shouldStop && scanner.hasNextLine())
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'try', ' ', '(', 'Scanner', ' ', 'scanner', ' ', '=', ' ', 'new', ' ', 'Scanner', '(', 'stream', ')', ')', ' ', '{', '\n', '                ', 'while', ' ', '(', '!', 'shouldStop', ' ', '&', '&', ' ', 'scanner', '.', 'hasNextLine', '(', ')', ')', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,run,"        public void run() {
            Process process = null;
            try {
                process = Runtime.getRuntime().exec(""top -d 1 | grep aria2c"");",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void run() {
            Process process = null;
            try {
                process = Runtime.getRuntime().exec(""top -d 1 | grep aria2c"");
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'top -d 1 | grep aria2c', '""', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2.java,run,"        public void run() {
            try {
                int exit = process.waitFor();",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void run() {
            try {
                int exit = process.waitFor();
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'int', ' ', 'exit', ' ', '=', ' ', 'process', '.', 'waitFor', '(', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,startService,"    public static void startService(@NonNull Context context) {
        ContextCompat.startForegroundService(context, new Intent(context, Aria2Service.class)
                .setAction(ACTION_START_SERVICE));",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static void startService(@NonNull Context context) {
        ContextCompat.startForegroundService(context, new Intent(context, Aria2Service.class)
                .setAction(ACTION_START_SERVICE));
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'startService', '(', '@NonNull', ' ', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'ContextCompat', '.', 'startForegroundService', '(', 'context', ',', ' ', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'Aria2Service', '.', 'class', ')', '\n', '                ', '.', 'setAction', '(', 'ACTION_START_SERVICE', ')', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,stopService,"    public static void stopService(@NonNull Context context) {
        context.startService(new Intent(context, Aria2Service.class)
                .setAction(ACTION_STOP_SERVICE));",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static void stopService(@NonNull Context context) {
        context.startService(new Intent(context, Aria2Service.class)
                .setAction(ACTION_STOP_SERVICE));
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'stopService', '(', '@NonNull', ' ', 'Context', ' ', 'context', ')', ' ', '{', '\n', '        ', 'context', '.', 'startService', '(', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'Aria2Service', '.', 'class', ')', '\n', '                ', '.', 'setAction', '(', 'ACTION_STOP_SERVICE', ')', ')', ';', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler(this));
            aria2 = Aria2.get();
            aria2.addListener(this);
        }

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            messenger = new Messenger(new LocalHandler(this));
            aria2 = Aria2.get();
            aria2.addListener(this);
        }

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '            ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', 'this', ')', ')', ';', '\n', '            ', 'aria2', ' ', '=', ' ', 'Aria2', '.', 'get', '(', ')', ';', '\n', '            ', 'aria2', '.', 'addListener', '(', 'this', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,stop,"    private void stop() {
        aria2.stop();
        stopForeground(true);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void stop() {
        aria2.stop();
        stopForeground(true);
    }
","['    ', 'private', ' ', 'void', ' ', 'stop', '(', ')', ' ', '{', '\n', '        ', 'aria2', '.', 'stop', '(', ')', ';', '\n', '        ', 'stopForeground', '(', 'true', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,start,"    private void start() {
        try {
            aria2.start();
        } catch (BadEnvironmentException | IOException ex) {
            ex.printStackTrace(); // TODO
        }

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) createChannel();

        NotificationCompat.Builder builder = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                .setContentTitle(SERVICE_NAME)
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                //   .setSmallIcon(R.drawable.ic_notification)
                //   .setContentIntent(PendingIntent.getActivity(this, 2, new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                .setContentText(""aria2c is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void start() {
        try {
            aria2.start();
        } catch (BadEnvironmentException | IOException ex) {
            ex.printStackTrace(); 
        }

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) createChannel();

        NotificationCompat.Builder builder = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                .setContentTitle(SERVICE_NAME)
                .setShowWhen(false)
                .setAutoCancel(false)
                .setOngoing(true)
                
                
                .setContentText(""aria2c is currently running"");

        startForeground(NOTIFICATION_ID, builder.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'start', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'aria2', '.', 'start', '(', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', '|', ' ', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'ex', '.', 'printStackTrace', '(', ')', ';', ' ', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'O', ')', ' ', 'createChannel', '(', ')', ';', '\n', '\n', '        ', 'NotificationCompat', '.', 'Builder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'NotificationCompat', '.', 'Builder', '(', 'getBaseContext', '(', ')', ',', ' ', 'CHANNEL_ID', ')', '\n', '                ', '.', 'setContentTitle', '(', 'SERVICE_NAME', ')', '\n', '                ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                ', '.', 'setOngoing', '(', 'true', ')', '\n', '                ', '\n', '                ', '\n', '                ', '.', 'setContentText', '(', '""', 'aria2c is currently running', '""', ')', ';', '\n', '\n', '        ', 'startForeground', '(', 'NOTIFICATION_ID', ',', ' ', 'builder', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,onMessage,"    public void onMessage(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        dispatch(msg);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void onMessage(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        dispatch(msg);
    }
","['    ', 'public', ' ', 'void', ' ', 'onMessage', '(', '@NonNull', ' ', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'Internal', '.', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'dispatch', '(', 'msg', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,dispatch,"    private void dispatch(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        Intent intent = new Intent(BROADCAST_MESSAGE);
        intent.putExtra(""type"", msg.type);
        intent.putExtra(""i"", msg.i);
        if (msg.o instanceof Serializable) intent.putExtra(""o"", (Serializable) msg.o);
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    private void dispatch(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        Intent intent = new Intent(BROADCAST_MESSAGE);
        intent.putExtra(""type"", msg.type);
        intent.putExtra(""i"", msg.i);
        if (msg.o instanceof Serializable) intent.putExtra(""o"", (Serializable) msg.o);
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatch', '(', '@NonNull', ' ', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'Internal', '.', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'BROADCAST_MESSAGE', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'type', '""', ',', ' ', 'msg', '.', 'type', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'i', '""', ',', ' ', 'msg', '.', 'i', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', '.', 'o', ' ', 'instanceof', ' ', 'Serializable', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'o', '""', ',', ' ', '(', 'Serializable', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Aria2Service.java,handleMessage,"        public void handleMessage(Message msg) {
            super.handleMessage(msg);
        }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"        public void handleMessage(Message msg) {
            super.handleMessage(msg);
        }
","['        ', 'public', ' ', 'void', ' ', 'handleMessage', '(', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '            ', 'super', '.', 'handleMessage', '(', 'msg', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Message.java,obtain,"    public static Message obtain(@NonNull Type type, int i, Object o) {
        Message msg = cache.poll();
        if (msg == null) msg = new Message();
        msg.recycled = false;
        msg.type = type;
        msg.i = i;
        msg.o = o;
        return msg;
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static Message obtain(@NonNull Type type, int i, Object o) {
        Message msg = cache.poll();
        if (msg == null) msg = new Message();
        msg.recycled = false;
        msg.type = type;
        msg.i = i;
        msg.o = o;
        return msg;
    }
","['    ', 'public', ' ', 'static', ' ', 'Message', ' ', 'obtain', '(', '@NonNull', ' ', 'Type', ' ', 'type', ',', ' ', 'int', ' ', 'i', ',', ' ', 'Object', ' ', 'o', ')', ' ', '{', '\n', '        ', 'Message', ' ', 'msg', ' ', '=', ' ', 'cache', '.', 'poll', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', ' ', '=', '=', ' ', 'null', ')', ' ', 'msg', ' ', '=', ' ', 'new', ' ', 'Message', '(', ')', ';', '\n', '        ', 'msg', '.', 'recycled', ' ', '=', ' ', 'false', ';', '\n', '        ', 'msg', '.', 'type', ' ', '=', ' ', 'type', ';', '\n', '        ', 'msg', '.', 'i', ' ', '=', ' ', 'i', ';', '\n', '        ', 'msg', '.', 'o', ' ', '=', ' ', 'o', ';', '\n', '        ', 'return', ' ', 'msg', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Message.java,obtain,"    public static Message obtain(@NonNull Type type, Object o) {
        return obtain(type, 0, o);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static Message obtain(@NonNull Type type, Object o) {
        return obtain(type, 0, o);
    }
","['    ', 'public', ' ', 'static', ' ', 'Message', ' ', 'obtain', '(', '@NonNull', ' ', 'Type', ' ', 'type', ',', ' ', 'Object', ' ', 'o', ')', ' ', '{', '\n', '        ', 'return', ' ', 'obtain', '(', 'type', ',', ' ', '0', ',', ' ', 'o', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Message.java,obtain,"    public static Message obtain(@NonNull Type type, int i) {
        return obtain(type, i, null);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static Message obtain(@NonNull Type type, int i) {
        return obtain(type, i, null);
    }
","['    ', 'public', ' ', 'static', ' ', 'Message', ' ', 'obtain', '(', '@NonNull', ' ', 'Type', ' ', 'type', ',', ' ', 'int', ' ', 'i', ')', ' ', '{', '\n', '        ', 'return', ' ', 'obtain', '(', 'type', ',', ' ', 'i', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Message.java,obtain,"    public static Message obtain(@NonNull Type type) {
        return obtain(type, 0, null);
    }",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public static Message obtain(@NonNull Type type) {
        return obtain(type, 0, null);
    }
","['    ', 'public', ' ', 'static', ' ', 'Message', ' ', 'obtain', '(', '@NonNull', ' ', 'Type', ' ', 'type', ')', ' ', '{', '\n', '        ', 'return', ' ', 'obtain', '(', 'type', ',', ' ', '0', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,2ba785c02fe1b588b53f931c8e224ef7b2963fce,Message.java,recycle,"    public void recycle() {
        if (!recycled) {
            cache.add(this);",https://www.github.com/devgianlu/aria2android/commit/2ba785c02fe1b588b53f931c8e224ef7b2963fce,"    public void recycle() {
        if (!recycled) {
            cache.add(this);
","['    ', 'public', ' ', 'void', ' ', 'recycle', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'recycled', ')', ' ', '{', '\n', '            ', 'cache', '.', 'add', '(', 'this', ')', ';', '\n', '<END>']"
master,52be9d1a0d3d59673a7c91edd4b9bd47a936e054,ConfigEditorActivity.java,load,"    private void load() throws JSONException {
        adapter.load(JsonStoring.intoPrefs().getJsonObject(PK.CUSTOM_OPTIONS));
    }",https://www.github.com/devgianlu/aria2android/commit/52be9d1a0d3d59673a7c91edd4b9bd47a936e054,"    private void load() throws JSONException {
        adapter.load(JsonStoring.intoPrefs().getJsonObject(PK.CUSTOM_OPTIONS));
    }
","['    ', 'private', ' ', 'void', ' ', 'load', '(', ')', ' ', 'throws', ' ', 'JSONException', ' ', '{', '\n', '        ', 'adapter', '.', 'load', '(', 'JsonStoring', '.', 'intoPrefs', '(', ')', '.', 'getJsonObject', '(', 'PK', '.', 'CUSTOM_OPTIONS', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,52be9d1a0d3d59673a7c91edd4b9bd47a936e054,ConfigEditorActivity.java,save,"    private void save() {
        try {
            JsonStoring.intoPrefs().putJsonObject(PK.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()));",https://www.github.com/devgianlu/aria2android/commit/52be9d1a0d3d59673a7c91edd4b9bd47a936e054,"    private void save() {
        try {
            JsonStoring.intoPrefs().putJsonObject(PK.CUSTOM_OPTIONS, NameValuePair.toJson(adapter.get()));
","['    ', 'private', ' ', 'void', ' ', 'save', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'JsonStoring', '.', 'intoPrefs', '(', ')', '.', 'putJsonObject', '(', 'PK', '.', 'CUSTOM_OPTIONS', ',', ' ', 'NameValuePair', '.', 'toJson', '(', 'adapter', '.', 'get', '(', ')', ')', ')', ';', '\n', '<END>']"
master,52be9d1a0d3d59673a7c91edd4b9bd47a936e054,OptionsAdapter.java,load,"    public void load(@Nullable JSONObject obj) {
        options.clear();

        if (obj != null) {
            Iterator<String> iterator = obj.keys();
            while (iterator.hasNext()) {
                String key = iterator.next();
                options.add(new NameValuePair(key, obj.optString(key, null)));
            }
        }

        notifyDataSetChanged();
        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/52be9d1a0d3d59673a7c91edd4b9bd47a936e054,"    public void load(@Nullable JSONObject obj) {
        options.clear();

        if (obj != null) {
            Iterator<String> iterator = obj.keys();
            while (iterator.hasNext()) {
                String key = iterator.next();
                options.add(new NameValuePair(key, obj.optString(key, null)));
            }
        }

        notifyDataSetChanged();
        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'load', '(', '@Nullable', ' ', 'JSONObject', ' ', 'obj', ')', ' ', '{', '\n', '        ', 'options', '.', 'clear', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'obj', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'Iterator', '<', 'String', '>', ' ', 'iterator', ' ', '=', ' ', 'obj', '.', 'keys', '(', ')', ';', '\n', '            ', 'while', ' ', '(', 'iterator', '.', 'hasNext', '(', ')', ')', ' ', '{', '\n', '                ', 'String', ' ', 'key', ' ', '=', ' ', 'iterator', '.', 'next', '(', ')', ';', '\n', '                ', 'options', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'key', ',', ' ', 'obj', '.', 'optString', '(', 'key', ',', ' ', 'null', ')', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'notifyDataSetChanged', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Ui.java,onDestroy,"    public void onDestroy() {
        try {
            context.unbindService(serviceConnection);",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    public void onDestroy() {
        try {
            context.unbindService(serviceConnection);
","['    ', 'public', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'context', '.', 'unbindService', '(', 'serviceConnection', ')', ';', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,version,"    public String version() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        try {
            Process process = execWithParams(false, ""-v"");",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    public String version() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        try {
            Process process = execWithParams(false, ""-v"");
","['    ', 'public', ' ', 'String', ' ', 'version', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'execWithParams', '(', 'false', ',', ' ', '""', '-v', '""', ')', ';', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,execWithParams,"    private Process execWithParams(boolean redirect, String... params) throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        String[] cmdline = new String[params.length + 1];
        cmdline[0] = env.execPath();
        System.arraycopy(params, 0, cmdline, 1, params.length);
        return new ProcessBuilder(cmdline).redirectErrorStream(redirect).start();
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private Process execWithParams(boolean redirect, String... params) throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        String[] cmdline = new String[params.length + 1];
        cmdline[0] = env.execPath();
        System.arraycopy(params, 0, cmdline, 1, params.length);
        return new ProcessBuilder(cmdline).redirectErrorStream(redirect).start();
    }
","['    ', 'private', ' ', 'Process', ' ', 'execWithParams', '(', 'boolean', ' ', 'redirect', ',', ' ', 'String', '.', '.', '.', ' ', 'params', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'String', '[', ']', ' ', 'cmdline', ' ', '=', ' ', 'new', ' ', 'String', '[', 'params', '.', 'length', ' ', '+', ' ', '1', ']', ';', '\n', '        ', 'cmdline', '[', '0', ']', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'System', '.', 'arraycopy', '(', 'params', ',', ' ', '0', ',', ' ', 'cmdline', ',', ' ', '1', ',', ' ', 'params', '.', 'length', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'ProcessBuilder', '(', 'cmdline', ')', '.', 'redirectErrorStream', '(', 'redirect', ')', '.', 'start', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,start,"    void start() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    void start() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }
","['    ', 'void', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'reloadEnv', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'execPath', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'params', ' ', '=', ' ', 'env', '.', 'startArgs', '(', ')', ';', '\n', '\n', '        ', 'currentProcess', ' ', '=', ' ', 'execWithParams', '(', 'true', ',', ' ', 'params', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Waiter', '(', 'currentProcess', ')', ',', ' ', '""', 'aria2android-waiterThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'monitor', ' ', '=', ' ', 'new', ' ', 'Monitor', '(', ')', ',', ' ', '""', 'aria2android-monitorThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'inputWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getInputStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-inputWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'errorWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getErrorStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-errorWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', 'startCommandForLog', '(', 'execPath', ',', ' ', 'params', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,monitorGotLine,"    private void monitorGotLine(@NonNull String line) {
        Matcher matcher = TOP_PATTERN.matcher(line);
        if (matcher.find()) {
            postMessage(Message.obtain(Message.Type.MONITOR_UPDATE,",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private void monitorGotLine(@NonNull String line) {
        Matcher matcher = TOP_PATTERN.matcher(line);
        if (matcher.find()) {
            postMessage(Message.obtain(Message.Type.MONITOR_UPDATE,
","['    ', 'private', ' ', 'void', ' ', 'monitorGotLine', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Matcher', ' ', 'matcher', ' ', '=', ' ', 'TOP_PATTERN', '.', 'matcher', '(', 'line', ')', ';', '\n', '        ', 'if', ' ', '(', 'matcher', '.', 'find', '(', ')', ')', ' ', '{', '\n', '            ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'MONITOR_UPDATE', ',', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,handleStreamMessage,"    private void handleStreamMessage(@NonNull String line) {
        if (line.startsWith(""WARNING: "")) {
            postMessage(Message.obtain(Message.Type.PROCESS_WARN, line.substring(9)));",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private void handleStreamMessage(@NonNull String line) {
        if (line.startsWith(""WARNING: "")) {
            postMessage(Message.obtain(Message.Type.PROCESS_WARN, line.substring(9)));
","['    ', 'private', ' ', 'void', ' ', 'handleStreamMessage', '(', '@NonNull', ' ', 'String', ' ', 'line', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', 'WARNING: ', '""', ')', ')', ' ', '{', '\n', '            ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_WARN', ',', ' ', 'line', '.', 'substring', '(', '9', ')', ')', ')', ';', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,stop,"    void stop() {
        if (currentProcess != null) {
            currentProcess.destroy();",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    void stop() {
        if (currentProcess != null) {
            currentProcess.destroy();
","['    ', 'void', ' ', 'stop', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'currentProcess', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'currentProcess', '.', 'destroy', '(', ')', ';', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,delete,"        boolean delete() {
            boolean fine = true;
            for (File file : baseDir.listFiles())
                if (!file.delete()) fine = false;
            return fine;
        }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"        boolean delete() {
            boolean fine = true;
            for (File file : baseDir.listFiles())
                if (!file.delete()) fine = false;
            return fine;
        }
","['        ', 'boolean', ' ', 'delete', '(', ')', ' ', '{', '\n', '            ', 'boolean', ' ', 'fine', ' ', '=', ' ', 'true', ';', '\n', '            ', 'for', ' ', '(', 'File', ' ', 'file', ' ', ':', ' ', 'baseDir', '.', 'listFiles', '(', ')', ')', '\n', '                ', 'if', ' ', '(', '!', 'file', '.', 'delete', '(', ')', ')', ' ', 'fine', ' ', '=', ' ', 'false', ';', '\n', '            ', 'return', ' ', 'fine', ';', '\n', '        ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,run,"        public void run() {
            try (Scanner scanner = new Scanner(stream)) {
",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"        public void run() {
            try (Scanner scanner = new Scanner(stream)) {
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'try', ' ', '(', 'Scanner', ' ', 'scanner', ' ', '=', ' ', 'new', ' ', 'Scanner', '(', 'stream', ')', ')', ' ', '{', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2.java,run,"        public void run() {
            Process process = null;
            try {
                process = Runtime.getRuntime().exec(""top -d 1"");",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"        public void run() {
            Process process = null;
            try {
                process = Runtime.getRuntime().exec(""top -d 1"");
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'top -d 1', '""', ')', ';', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,timeFormatter,"    private static String timeFormatter(long sec) {
        int day = (int) TimeUnit.SECONDS.toDays(sec);
        long hours = TimeUnit.SECONDS.toHours(sec) - TimeUnit.DAYS.toHours(day);
        long minute = TimeUnit.SECONDS.toMinutes(sec) - TimeUnit.HOURS.toMinutes(TimeUnit.SECONDS.toHours(sec));
        long second = TimeUnit.SECONDS.toSeconds(sec) - TimeUnit.MINUTES.toSeconds(TimeUnit.SECONDS.toMinutes(sec));

        if (day > 0) {
            if (day > 1000) {",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private static String timeFormatter(long sec) {
        int day = (int) TimeUnit.SECONDS.toDays(sec);
        long hours = TimeUnit.SECONDS.toHours(sec) - TimeUnit.DAYS.toHours(day);
        long minute = TimeUnit.SECONDS.toMinutes(sec) - TimeUnit.HOURS.toMinutes(TimeUnit.SECONDS.toHours(sec));
        long second = TimeUnit.SECONDS.toSeconds(sec) - TimeUnit.MINUTES.toSeconds(TimeUnit.SECONDS.toMinutes(sec));

        if (day > 0) {
            if (day > 1000) {
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'timeFormatter', '(', 'long', ' ', 'sec', ')', ' ', '{', '\n', '        ', 'int', ' ', 'day', ' ', '=', ' ', '(', 'int', ')', ' ', 'TimeUnit', '.', 'SECONDS', '.', 'toDays', '(', 'sec', ')', ';', '\n', '        ', 'long', ' ', 'hours', ' ', '=', ' ', 'TimeUnit', '.', 'SECONDS', '.', 'toHours', '(', 'sec', ')', ' ', '-', ' ', 'TimeUnit', '.', 'DAYS', '.', 'toHours', '(', 'day', ')', ';', '\n', '        ', 'long', ' ', 'minute', ' ', '=', ' ', 'TimeUnit', '.', 'SECONDS', '.', 'toMinutes', '(', 'sec', ')', ' ', '-', ' ', 'TimeUnit', '.', 'HOURS', '.', 'toMinutes', '(', 'TimeUnit', '.', 'SECONDS', '.', 'toHours', '(', 'sec', ')', ')', ';', '\n', '        ', 'long', ' ', 'second', ' ', '=', ' ', 'TimeUnit', '.', 'SECONDS', '.', 'toSeconds', '(', 'sec', ')', ' ', '-', ' ', 'TimeUnit', '.', 'MINUTES', '.', 'toSeconds', '(', 'TimeUnit', '.', 'SECONDS', '.', 'toMinutes', '(', 'sec', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'day', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'day', ' ', '>', ' ', '1000', ')', ' ', '{', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,dimensionFormatter,"    private static String dimensionFormatter(float v) {
        if (v <= 0) {
            return ""0 B"";",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private static String dimensionFormatter(float v) {
        if (v <= 0) {
            return ""0 B"";
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'dimensionFormatter', '(', 'float', ' ', 'v', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'v', ' ', '<', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', '0 B', '""', ';', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
            messenger = new Messenger(new LocalHandler(this));
            aria2 = Aria2.get();
            aria2.addListener(this);

            defaultNotification = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                    .setContentTitle(SERVICE_NAME)
                    .setShowWhen(false)
                    .setAutoCancel(false)
                    .setOngoing(true)
                    .setSmallIcon(android.R.drawable.star_on) // FIXME
                    //   .setContentIntent(PendingIntent.getActivity(this, 2, new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT))
                    .setContentText(""aria2c is currently running"");
        }

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
            messenger = new Messenger(new LocalHandler(this));
            aria2 = Aria2.get();
            aria2.addListener(this);

            defaultNotification = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                    .setContentTitle(SERVICE_NAME)
                    .setShowWhen(false)
                    .setAutoCancel(false)
                    .setOngoing(true)
                    .setSmallIcon(android.R.drawable.star_on) 
                    
                    .setContentText(""aria2c is currently running"");
        }

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '            ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '            ', 'notificationManager', ' ', '=', ' ', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ';', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', 'this', ')', ')', ';', '\n', '            ', 'aria2', ' ', '=', ' ', 'Aria2', '.', 'get', '(', ')', ';', '\n', '            ', 'aria2', '.', 'addListener', '(', 'this', ')', ';', '\n', '\n', '            ', 'defaultNotification', ' ', '=', ' ', 'new', ' ', 'NotificationCompat', '.', 'Builder', '(', 'getBaseContext', '(', ')', ',', ' ', 'CHANNEL_ID', ')', '\n', '                    ', '.', 'setContentTitle', '(', 'SERVICE_NAME', ')', '\n', '                    ', '.', 'setShowWhen', '(', 'false', ')', '\n', '                    ', '.', 'setAutoCancel', '(', 'false', ')', '\n', '                    ', '.', 'setOngoing', '(', 'true', ')', '\n', '                    ', '.', 'setSmallIcon', '(', 'android', '.', 'R', '.', 'drawable', '.', 'star_on', ')', ' ', '\n', '                    ', '\n', '                    ', '.', 'setContentText', '(', '""', 'aria2c is currently running', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,start,"    private void start() throws IOException, BadEnvironmentException {
        aria2.start();
        startTime = System.currentTimeMillis();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) createChannel();
        startForeground(NOTIFICATION_ID, defaultNotification.build());
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private void start() throws IOException, BadEnvironmentException {
        aria2.start();
        startTime = System.currentTimeMillis();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) createChannel();
        startForeground(NOTIFICATION_ID, defaultNotification.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'IOException', ',', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'aria2', '.', 'start', '(', ')', ';', '\n', '        ', 'startTime', ' ', '=', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'O', ')', ' ', 'createChannel', '(', ')', ';', '\n', '        ', 'startForeground', '(', 'NOTIFICATION_ID', ',', ' ', 'defaultNotification', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,onMessage,"    public void onMessage(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        dispatch(msg);

        switch (msg.type()) {
            case MONITOR_UPDATE:",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    public void onMessage(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        dispatch(msg);

        switch (msg.type()) {
            case MONITOR_UPDATE:
","['    ', 'public', ' ', 'void', ' ', 'onMessage', '(', '@NonNull', ' ', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'Internal', '.', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'dispatch', '(', 'msg', ')', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'msg', '.', 'type', '(', ')', ')', ' ', '{', '\n', '            ', 'case', ' ', 'MONITOR_UPDATE', ':', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,updateMonitor,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + dimensionFormatter(Integer.parseInt(update.rss()) * 1024));
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + dimensionFormatter(Integer.parseInt(update.rss()) * 1024));
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }
","['    ', 'private', ' ', 'void', ' ', 'updateMonitor', '(', '@Nullable', ' ', 'MonitorUpdate', ' ', 'update', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'update', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'notificationManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'update', '.', 'pid', '(', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'update', '.', 'cpu', '(', ')', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'update', '.', 'rss', '(', ')', ')', ' ', '*', ' ', '1024', ')', ')', ';', '\n', '        ', 'defaultNotification', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'notificationManager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'defaultNotification', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'update', '.', 'recycle', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,Aria2Service.java,dispatch,"    private void dispatch(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        Intent intent = new Intent(BROADCAST_MESSAGE);
        intent.putExtra(""type"", msg.type());
        intent.putExtra(""i"", msg.integer());
        if (msg.object() instanceof Serializable) intent.putExtra(""o"", (Serializable) msg.object());
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    private void dispatch(@NonNull com.gianlu.aria2lib.Internal.Message msg) {
        Intent intent = new Intent(BROADCAST_MESSAGE);
        intent.putExtra(""type"", msg.type());
        intent.putExtra(""i"", msg.integer());
        if (msg.object() instanceof Serializable) intent.putExtra(""o"", (Serializable) msg.object());
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatch', '(', '@NonNull', ' ', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'Internal', '.', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'BROADCAST_MESSAGE', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'type', '""', ',', ' ', 'msg', '.', 'type', '(', ')', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'i', '""', ',', ' ', 'msg', '.', 'integer', '(', ')', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', '.', 'object', '(', ')', ' ', 'instanceof', ' ', 'Serializable', ')', ' ', 'intent', '.', 'putExtra', '(', '""', 'o', '""', ',', ' ', '(', 'Serializable', ')', ' ', 'msg', '.', 'object', '(', ')', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5af4498106bd8ed34e13d6b7c59ed2914f5b858b,MonitorUpdate.java,obtain,"    public static MonitorUpdate obtain(@NonNull String pid, @NonNull String cpu, @NonNull String rss) {
        MonitorUpdate msg = cache.poll();
        if (msg == null) msg = new MonitorUpdate();
        msg.recycled = false;
        msg.pid = pid;
        msg.cpu = cpu;
        msg.rss = rss;
        return msg;
    }",https://www.github.com/devgianlu/aria2android/commit/5af4498106bd8ed34e13d6b7c59ed2914f5b858b,"    public static MonitorUpdate obtain(@NonNull String pid, @NonNull String cpu, @NonNull String rss) {
        MonitorUpdate msg = cache.poll();
        if (msg == null) msg = new MonitorUpdate();
        msg.recycled = false;
        msg.pid = pid;
        msg.cpu = cpu;
        msg.rss = rss;
        return msg;
    }
","['    ', 'public', ' ', 'static', ' ', 'MonitorUpdate', ' ', 'obtain', '(', '@NonNull', ' ', 'String', ' ', 'pid', ',', ' ', '@NonNull', ' ', 'String', ' ', 'cpu', ',', ' ', '@NonNull', ' ', 'String', ' ', 'rss', ')', ' ', '{', '\n', '        ', 'MonitorUpdate', ' ', 'msg', ' ', '=', ' ', 'cache', '.', 'poll', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'msg', ' ', '=', '=', ' ', 'null', ')', ' ', 'msg', ' ', '=', ' ', 'new', ' ', 'MonitorUpdate', '(', ')', ';', '\n', '        ', 'msg', '.', 'recycled', ' ', '=', ' ', 'false', ';', '\n', '        ', 'msg', '.', 'pid', ' ', '=', ' ', 'pid', ';', '\n', '        ', 'msg', '.', 'cpu', ' ', '=', ' ', 'cpu', ';', '\n', '        ', 'msg', '.', 'rss', ' ', '=', ' ', 'rss', ';', '\n', '        ', 'return', ' ', 'msg', ';', '\n', '    ', '}', '\n', '<END>']"
master,9a54b371b6de913848d78fbd51688f8478326b71,Aria2.java,startCommandForLog,"    private static String startCommandForLog(@NonNull String exec, String... params) {
        StringBuilder builder = new StringBuilder(exec);
        for (String param : params) builder.append(' ').append(param);
        return builder.toString();
    }",https://www.github.com/devgianlu/aria2android/commit/9a54b371b6de913848d78fbd51688f8478326b71,"    private static String startCommandForLog(@NonNull String exec, String... params) {
        StringBuilder builder = new StringBuilder(exec);
        for (String param : params) builder.append(' ').append(param);
        return builder.toString();
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'startCommandForLog', '(', '@NonNull', ' ', 'String', ' ', 'exec', ',', ' ', 'String', '.', '.', '.', ' ', 'params', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', 'exec', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'param', ' ', ':', ' ', 'params', ')', ' ', 'builder', '.', 'append', '(', ""' '"", ')', '.', 'append', '(', 'param', ')', ';', '\n', '        ', 'return', ' ', 'builder', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,9a54b371b6de913848d78fbd51688f8478326b71,Aria2.java,reloadEnv,"    private void reloadEnv() throws BadEnvironmentException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        loadEnv(env.baseDir);
    }",https://www.github.com/devgianlu/aria2android/commit/9a54b371b6de913848d78fbd51688f8478326b71,"    private void reloadEnv() throws BadEnvironmentException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        loadEnv(env.baseDir);
    }
","['    ', 'private', ' ', 'void', ' ', 'reloadEnv', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'loadEnv', '(', 'env', '.', 'baseDir', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,9a54b371b6de913848d78fbd51688f8478326b71,Aria2.java,monitorFailed,"    private void monitorFailed(@NonNull Exception ex) {
        postMessage(Message.obtain(Message.Type.MONITOR_FAILED, ex));
        Logging.log(ex);
    }",https://www.github.com/devgianlu/aria2android/commit/9a54b371b6de913848d78fbd51688f8478326b71,"    private void monitorFailed(@NonNull Exception ex) {
        postMessage(Message.obtain(Message.Type.MONITOR_FAILED, ex));
        Logging.log(ex);
    }
","['    ', 'private', ' ', 'void', ' ', 'monitorFailed', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'MONITOR_FAILED', ',', ' ', 'ex', ')', ')', ';', '\n', '        ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,9a54b371b6de913848d78fbd51688f8478326b71,Aria2Service.java,updateMonitor,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(update.rss()) * 1024, false));
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }",https://www.github.com/devgianlu/aria2android/commit/9a54b371b6de913848d78fbd51688f8478326b71,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(update.rss()) * 1024, false));
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }
","['    ', 'private', ' ', 'void', ' ', 'updateMonitor', '(', '@Nullable', ' ', 'MonitorUpdate', ' ', 'update', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'update', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'notificationManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'update', '.', 'pid', '(', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'update', '.', 'cpu', '(', ')', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'update', '.', 'rss', '(', ')', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'defaultNotification', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'notificationManager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'defaultNotification', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'update', '.', 'recycle', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,BootCompletedReceiver.java,onReceive,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            Utils.createAria2(context, null).startService();",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            Utils.createAria2(context, null).startService();
","['    ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'Intent', '.', 'ACTION_BOOT_COMPLETED', '.', 'equals', '(', 'intent', '.', 'getAction', '(', ')', ')', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_AT_BOOT', ')', ')', '\n', '            ', 'Utils', '.', 'createAria2', '(', 'context', ',', ' ', 'null', ')', '.', 'startService', '(', ')', ';', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,Utils.java,createAria2,"    public static Aria2Ui createAria2(@NonNull Context context, @Nullable Aria2Ui.Listener listener) {
        Aria2Ui ui = new Aria2Ui(context, listener);
        ui.setup(R.mipmap.ic_launcher, R.drawable.ic_notification, MainActivity.class);
        return ui;
    }",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    public static Aria2Ui createAria2(@NonNull Context context, @Nullable Aria2Ui.Listener listener) {
        Aria2Ui ui = new Aria2Ui(context, listener);
        ui.setup(R.mipmap.ic_launcher, R.drawable.ic_notification, MainActivity.class);
        return ui;
    }
","['    ', 'public', ' ', 'static', ' ', 'Aria2Ui', ' ', 'createAria2', '(', '@NonNull', ' ', 'Context', ' ', 'context', ',', ' ', '@Nullable', ' ', 'Aria2Ui', '.', 'Listener', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'Aria2Ui', ' ', 'ui', ' ', '=', ' ', 'new', ' ', 'Aria2Ui', '(', 'context', ',', ' ', 'listener', ')', ';', '\n', '        ', 'ui', '.', 'setup', '(', 'R', '.', 'mipmap', '.', 'ic_launcher', ',', ' ', 'R', '.', 'drawable', '.', 'ic_notification', ',', ' ', 'MainActivity', '.', 'class', ')', ';', '\n', '        ', 'return', ' ', 'ui', ';', '\n', '    ', '}', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,Aria2Ui.java,setup,"    public void setup(@DrawableRes int launcherIcon, @DrawableRes int notificationIcon, @NonNull Class<? extends Activity> actionClass) {
        this.launcherIcon = launcherIcon;
        this.notificationIcon = notificationIcon;
        this.actionClass = actionClass;
    }",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    public void setup(@DrawableRes int launcherIcon, @DrawableRes int notificationIcon, @NonNull Class<? extends Activity> actionClass) {
        this.launcherIcon = launcherIcon;
        this.notificationIcon = notificationIcon;
        this.actionClass = actionClass;
    }
","['    ', 'public', ' ', 'void', ' ', 'setup', '(', '@DrawableRes', ' ', 'int', ' ', 'launcherIcon', ',', ' ', '@DrawableRes', ' ', 'int', ' ', 'notificationIcon', ',', ' ', '@NonNull', ' ', 'Class', '<', '?', ' ', 'extends', ' ', 'Activity', '>', ' ', 'actionClass', ')', ' ', '{', '\n', '        ', 'this', '.', 'launcherIcon', ' ', '=', ' ', 'launcherIcon', ';', '\n', '        ', 'this', '.', 'notificationIcon', ' ', '=', ' ', 'notificationIcon', ';', '\n', '        ', 'this', '.', 'actionClass', ' ', '=', ' ', 'actionClass', ';', '\n', '    ', '}', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,Aria2Ui.java,startService,"    public void startService() {
        bind();
        Aria2Service.startService(context, launcherIcon, notificationIcon, actionClass);
    }",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    public void startService() {
        bind();
        Aria2Service.startService(context, launcherIcon, notificationIcon, actionClass);
    }
","['    ', 'public', ' ', 'void', ' ', 'startService', '(', ')', ' ', '{', '\n', '        ', 'bind', '(', ')', ';', '\n', '        ', 'Aria2Service', '.', 'startService', '(', 'context', ',', ' ', 'launcherIcon', ',', ' ', 'notificationIcon', ',', ' ', 'actionClass', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,Aria2Service.java,startService,"    public static void startService(@NonNull Context context, @DrawableRes int launcher, @DrawableRes int notification, @NonNull Class<? extends Activity> actionClass) {
        ContextCompat.startForegroundService(context, new Intent(context, Aria2Service.class)
                .putExtra(""notification"", notification)",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    public static void startService(@NonNull Context context, @DrawableRes int launcher, @DrawableRes int notification, @NonNull Class<? extends Activity> actionClass) {
        ContextCompat.startForegroundService(context, new Intent(context, Aria2Service.class)
                .putExtra(""notification"", notification)
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'startService', '(', '@NonNull', ' ', 'Context', ' ', 'context', ',', ' ', '@DrawableRes', ' ', 'int', ' ', 'launcher', ',', ' ', '@DrawableRes', ' ', 'int', ' ', 'notification', ',', ' ', '@NonNull', ' ', 'Class', '<', '?', ' ', 'extends', ' ', 'Activity', '>', ' ', 'actionClass', ')', ' ', '{', '\n', '        ', 'ContextCompat', '.', 'startForegroundService', '(', 'context', ',', ' ', 'new', ' ', 'Intent', '(', 'context', ',', ' ', 'Aria2Service', '.', 'class', ')', '\n', '                ', '.', 'putExtra', '(', '""', 'notification', '""', ',', ' ', 'notification', ')', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,Aria2Service.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
            messenger = new Messenger(new LocalHandler(this));
            aria2 = Aria2.get();
            aria2.addListener(this);
        }

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    public IBinder onBind(Intent intent) {
        if (messenger == null) {
            serviceThread.start();
            broadcastManager = LocalBroadcastManager.getInstance(this);
            notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
            messenger = new Messenger(new LocalHandler(this));
            aria2 = Aria2.get();
            aria2.addListener(this);
        }

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '            ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '            ', 'notificationManager', ' ', '=', ' ', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ';', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', 'this', ')', ')', ';', '\n', '            ', 'aria2', ' ', '=', ' ', 'Aria2', '.', 'get', '(', ')', ';', '\n', '            ', 'aria2', '.', 'addListener', '(', 'this', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,14236f0cffb21f15e4358d4ae7daf2299604196a,Aria2Service.java,updateMonitor,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(update.rss()) * 1024, false));
        layout.setImageViewResource(R.id.customNotification_icon, mLauncherIcon);
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }",https://www.github.com/devgianlu/aria2android/commit/14236f0cffb21f15e4358d4ae7daf2299604196a,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(update.rss()) * 1024, false));
        layout.setImageViewResource(R.id.customNotification_icon, mLauncherIcon);
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }
","['    ', 'private', ' ', 'void', ' ', 'updateMonitor', '(', '@Nullable', ' ', 'MonitorUpdate', ' ', 'update', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'update', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'notificationManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'update', '.', 'pid', '(', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'update', '.', 'cpu', '(', ')', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'update', '.', 'rss', '(', ')', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'layout', '.', 'setImageViewResource', '(', 'R', '.', 'id', '.', 'customNotification_icon', ',', ' ', 'mLauncherIcon', ')', ';', '\n', '        ', 'defaultNotification', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'notificationManager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'defaultNotification', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'update', '.', 'recycle', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b40673f43264244eec238ca7c22d16deb97968bb,Utils.java,parseOptions,"    public static List<NameValuePair> parseOptions(@NonNull String str) {
        List<NameValuePair> list = new ArrayList<>();
        String[] lines = str.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0)
                list.add(new NameValuePair(split[0], split.length == 1 ? null : split[1]));
        }

        return list;
    }",https://www.github.com/devgianlu/aria2android/commit/b40673f43264244eec238ca7c22d16deb97968bb,"    public static List<NameValuePair> parseOptions(@NonNull String str) {
        List<NameValuePair> list = new ArrayList<>();
        String[] lines = str.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0)
                list.add(new NameValuePair(split[0], split.length == 1 ? null : split[1]));
        }

        return list;
    }
","['    ', 'public', ' ', 'static', ' ', 'List', '<', 'NameValuePair', '>', ' ', 'parseOptions', '(', '@NonNull', ' ', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'List', '<', 'NameValuePair', '>', ' ', 'list', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'str', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'line', ' ', '=', ' ', 'line', '.', 'trim', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '#', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'split', '.', 'length', ' ', '>', ' ', '0', ')', '\n', '                ', 'list', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'split', '[', '0', ']', ',', ' ', 'split', '.', 'length', ' ', '=', '=', ' ', '1', ' ', '?', ' ', 'null', ' ', ':', ' ', 'split', '[', '1', ']', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'list', ';', '\n', '    ', '}', '\n', '<END>']"
master,b40673f43264244eec238ca7c22d16deb97968bb,Aria2Ui.java,loadEnv,"    public void loadEnv() throws BadEnvironmentException {
        String path = Prefs.getString(Aria2PK.ENV_LOCATION, null);
        if (path == null) throw new BadEnvironmentException(""Environment path not set!"");
        aria2.loadEnv(new File(path));
    }",https://www.github.com/devgianlu/aria2android/commit/b40673f43264244eec238ca7c22d16deb97968bb,"    public void loadEnv() throws BadEnvironmentException {
        String path = Prefs.getString(Aria2PK.ENV_LOCATION, null);
        if (path == null) throw new BadEnvironmentException(""Environment path not set!"");
        aria2.loadEnv(new File(path));
    }
","['    ', 'public', ' ', 'void', ' ', 'loadEnv', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'String', ' ', 'path', ' ', '=', ' ', 'Prefs', '.', 'getString', '(', 'Aria2PK', '.', 'ENV_LOCATION', ',', ' ', 'null', ')', ';', '\n', '        ', 'if', ' ', '(', 'path', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Environment path not set!', '""', ')', ';', '\n', '        ', 'aria2', '.', 'loadEnv', '(', 'new', ' ', 'File', '(', 'path', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b40673f43264244eec238ca7c22d16deb97968bb,Aria2.java,start,"    void start() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        if (Prefs.getBoolean(Aria2PK.SHOW_PERFORMANCE))
            new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }",https://www.github.com/devgianlu/aria2android/commit/b40673f43264244eec238ca7c22d16deb97968bb,"    void start() throws BadEnvironmentException, IOException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        if (Prefs.getBoolean(Aria2PK.SHOW_PERFORMANCE))
            new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }
","['    ', 'void', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'reloadEnv', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'execPath', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'params', ' ', '=', ' ', 'env', '.', 'startArgs', '(', ')', ';', '\n', '\n', '        ', 'currentProcess', ' ', '=', ' ', 'execWithParams', '(', 'true', ',', ' ', 'params', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Waiter', '(', 'currentProcess', ')', ',', ' ', '""', 'aria2android-waiterThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'inputWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getInputStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-inputWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'errorWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getErrorStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-errorWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'Aria2PK', '.', 'SHOW_PERFORMANCE', ')', ')', '\n', '            ', 'new', ' ', 'Thread', '(', 'this', '.', 'monitor', ' ', '=', ' ', 'new', ' ', 'Monitor', '(', ')', ',', ' ', '""', 'aria2android-monitorThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', 'startCommandForLog', '(', 'execPath', ',', ' ', 'params', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,b40673f43264244eec238ca7c22d16deb97968bb,Aria2.java,loadCustomOptions,"        private static void loadCustomOptions(@NonNull Map<String, String> options) {
            try {
                JSONObject obj = JsonStoring.intoPrefs().getJsonObject(Aria2PK.CUSTOM_OPTIONS);",https://www.github.com/devgianlu/aria2android/commit/b40673f43264244eec238ca7c22d16deb97968bb,"        private static void loadCustomOptions(@NonNull Map<String, String> options) {
            try {
                JSONObject obj = JsonStoring.intoPrefs().getJsonObject(Aria2PK.CUSTOM_OPTIONS);
","['        ', 'private', ' ', 'static', ' ', 'void', ' ', 'loadCustomOptions', '(', '@NonNull', ' ', 'Map', '<', 'String', ',', ' ', 'String', '>', ' ', 'options', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'JSONObject', ' ', 'obj', ' ', '=', ' ', 'JsonStoring', '.', 'intoPrefs', '(', ')', '.', 'getJsonObject', '(', 'Aria2PK', '.', 'CUSTOM_OPTIONS', ')', ';', '\n', '<END>']"
master,b40673f43264244eec238ca7c22d16deb97968bb,Aria2.java,run,"        public void run() {
            Process process = null;
            try {
                process = Runtime.getRuntime().exec(""top -d "" + String.valueOf(Prefs.getInt(Aria2PK.NOTIFICATION_UPDATE_DELAY, 1)));",https://www.github.com/devgianlu/aria2android/commit/b40673f43264244eec238ca7c22d16deb97968bb,"        public void run() {
            Process process = null;
            try {
                process = Runtime.getRuntime().exec(""top -d "" + String.valueOf(Prefs.getInt(Aria2PK.NOTIFICATION_UPDATE_DELAY, 1)));
","['        ', 'public', ' ', 'void', ' ', 'run', '(', ')', ' ', '{', '\n', '            ', 'Process', ' ', 'process', ' ', '=', ' ', 'null', ';', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'process', ' ', '=', ' ', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'exec', '(', '""', 'top -d ', '""', ' ', '+', ' ', 'String', '.', 'valueOf', '(', 'Prefs', '.', 'getInt', '(', 'Aria2PK', '.', 'NOTIFICATION_UPDATE_DELAY', ',', ' ', '1', ')', ')', ')', ';', '\n', '<END>']"
master,b40673f43264244eec238ca7c22d16deb97968bb,Aria2Service.java,onDestroy,"    public void onDestroy() {
        super.onDestroy();
        if (aria2 != null) aria2.removeListener(this);
    }",https://www.github.com/devgianlu/aria2android/commit/b40673f43264244eec238ca7c22d16deb97968bb,"    public void onDestroy() {
        super.onDestroy();
        if (aria2 != null) aria2.removeListener(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'removeListener', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fdf840b87aba94e54d0d3e896d5884b1f72690a4,DownloadBinActivity.java,onException,"    public void onException(@NonNull Exception ex) {
        Logging.log(ex);
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        message.setError(R.string.failedRetrievingReleases_reason, ex.getMessage());
    }",https://www.github.com/devgianlu/aria2android/commit/fdf840b87aba94e54d0d3e896d5884b1f72690a4,"    public void onException(@NonNull Exception ex) {
        Logging.log(ex);
        loading.setVisibility(View.GONE);
        list.setVisibility(View.GONE);
        message.setError(R.string.failedRetrievingReleases_reason, ex.getMessage());
    }
","['    ', 'public', ' ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '        ', 'loading', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'list', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', '\n', '        ', 'message', '.', 'setError', '(', 'R', '.', 'string', '.', 'failedRetrievingReleases_reason', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fdf840b87aba94e54d0d3e896d5884b1f72690a4,DownloadBinActivity.java,failedDownload,"    public void failedDownload(@NonNull Exception ex) {
        onException(ex);
    }",https://www.github.com/devgianlu/aria2android/commit/fdf840b87aba94e54d0d3e896d5884b1f72690a4,"    public void failedDownload(@NonNull Exception ex) {
        onException(ex);
    }
","['    ', 'public', ' ', 'void', ' ', 'failedDownload', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'onException', '(', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,fdf840b87aba94e54d0d3e896d5884b1f72690a4,DownloadBinActivity.java,failedExtract,"    public void failedExtract(@NonNull Exception ex) {
        onException(ex);
    }",https://www.github.com/devgianlu/aria2android/commit/fdf840b87aba94e54d0d3e896d5884b1f72690a4,"    public void failedExtract(@NonNull Exception ex) {
        onException(ex);
    }
","['    ', 'public', ' ', 'void', ' ', 'failedExtract', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'onException', '(', 'ex', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f7565db566e38d91d75a8188bffb149a41d1c011,MainActivity.java,addLog,"    private void addLog(@NonNull Logging.LogLine line) {
        Logging.log(line);

        if (logsContainer != null) {
            logsContainer.setVisibility(View.VISIBLE);",https://www.github.com/devgianlu/aria2android/commit/f7565db566e38d91d75a8188bffb149a41d1c011,"    private void addLog(@NonNull Logging.LogLine line) {
        Logging.log(line);

        if (logsContainer != null) {
            logsContainer.setVisibility(View.VISIBLE);
","['    ', 'private', ' ', 'void', ' ', 'addLog', '(', '@NonNull', ' ', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'log', '(', 'line', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'logsContainer', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'logsContainer', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', '\n', '<END>']"
master,f7565db566e38d91d75a8188bffb149a41d1c011,Aria2Ui.java,loadEnv,"    public void loadEnv() throws BadEnvironmentException {
        String envPath = Prefs.getString(Aria2PK.ENV_LOCATION, null);
        if (envPath == null) throw new BadEnvironmentException(""Environment path not set!"");
        aria2.loadEnv(new File(envPath), new File(context.getFilesDir(), ""session""));
    }",https://www.github.com/devgianlu/aria2android/commit/f7565db566e38d91d75a8188bffb149a41d1c011,"    public void loadEnv() throws BadEnvironmentException {
        String envPath = Prefs.getString(Aria2PK.ENV_LOCATION, null);
        if (envPath == null) throw new BadEnvironmentException(""Environment path not set!"");
        aria2.loadEnv(new File(envPath), new File(context.getFilesDir(), ""session""));
    }
","['    ', 'public', ' ', 'void', ' ', 'loadEnv', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'String', ' ', 'envPath', ' ', '=', ' ', 'Prefs', '.', 'getString', '(', 'Aria2PK', '.', 'ENV_LOCATION', ',', ' ', 'null', ')', ';', '\n', '        ', 'if', ' ', '(', 'envPath', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Environment path not set!', '""', ')', ';', '\n', '        ', 'aria2', '.', 'loadEnv', '(', 'new', ' ', 'File', '(', 'envPath', ')', ',', ' ', 'new', ' ', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', ',', ' ', '""', 'session', '""', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f7565db566e38d91d75a8188bffb149a41d1c011,Aria2.java,loadEnv,"    public void loadEnv(@NonNull File env, @NonNull File session) throws BadEnvironmentException {
        if (!env.isDirectory())
            throw new BadEnvironmentException(env.getAbsolutePath() + "" is not a directory!"");

        File exec = new File(env, ""aria2c"");
        if (!exec.exists())
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" doesn't exists!"");

        if (!exec.canExecute() && !exec.setExecutable(true))
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" can't be executed!"");

        if (session.exists()) {
            if (!session.canRead() && !session.setReadable(true))
                throw new BadEnvironmentException(session.getAbsolutePath() + "" can't be read!"");
        } else {
            try {
                if (!session.createNewFile())
                    throw new BadEnvironmentException(session.getAbsolutePath() + "" can't be created!"");
            } catch (IOException ex) {
                throw new BadEnvironmentException(ex);
            }
        }

        this.env = new Env(env, exec, session);
    }",https://www.github.com/devgianlu/aria2android/commit/f7565db566e38d91d75a8188bffb149a41d1c011,"    public void loadEnv(@NonNull File env, @NonNull File session) throws BadEnvironmentException {
        if (!env.isDirectory())
            throw new BadEnvironmentException(env.getAbsolutePath() + "" is not a directory!"");

        File exec = new File(env, ""aria2c"");
        if (!exec.exists())
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" doesn't exists!"");

        if (!exec.canExecute() && !exec.setExecutable(true))
            throw new BadEnvironmentException(exec.getAbsolutePath() + "" can't be executed!"");

        if (session.exists()) {
            if (!session.canRead() && !session.setReadable(true))
                throw new BadEnvironmentException(session.getAbsolutePath() + "" can't be read!"");
        } else {
            try {
                if (!session.createNewFile())
                    throw new BadEnvironmentException(session.getAbsolutePath() + "" can't be created!"");
            } catch (IOException ex) {
                throw new BadEnvironmentException(ex);
            }
        }

        this.env = new Env(env, exec, session);
    }
","['    ', 'public', ' ', 'void', ' ', 'loadEnv', '(', '@NonNull', ' ', 'File', ' ', 'env', ',', ' ', '@NonNull', ' ', 'File', ' ', 'session', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'env', '.', 'isDirectory', '(', ')', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'env', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', ' is not a directory!', '""', ')', ';', '\n', '\n', '        ', 'File', ' ', 'exec', ' ', '=', ' ', 'new', ' ', 'File', '(', 'env', ',', ' ', '""', 'aria2c', '""', ')', ';', '\n', '        ', 'if', ' ', '(', '!', 'exec', '.', 'exists', '(', ')', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'exec', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', "" doesn't exists!"", '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', '!', 'exec', '.', 'canExecute', '(', ')', ' ', '&', '&', ' ', '!', 'exec', '.', 'setExecutable', '(', 'true', ')', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'exec', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', "" can't be executed!"", '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'session', '.', 'exists', '(', ')', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', '!', 'session', '.', 'canRead', '(', ')', ' ', '&', '&', ' ', '!', 'session', '.', 'setReadable', '(', 'true', ')', ')', '\n', '                ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'session', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', "" can't be read!"", '""', ')', ';', '\n', '        ', '}', ' ', 'else', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'if', ' ', '(', '!', 'session', '.', 'createNewFile', '(', ')', ')', '\n', '                    ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'session', '.', 'getAbsolutePath', '(', ')', ' ', '+', ' ', '""', "" can't be created!"", '""', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', 'ex', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'this', '.', 'env', ' ', '=', ' ', 'new', ' ', 'Env', '(', 'env', ',', ' ', 'exec', ',', ' ', 'session', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f7565db566e38d91d75a8188bffb149a41d1c011,Aria2.java,reloadEnv,"    private void reloadEnv() throws BadEnvironmentException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        loadEnv(env.baseDir, env.session);
    }",https://www.github.com/devgianlu/aria2android/commit/f7565db566e38d91d75a8188bffb149a41d1c011,"    private void reloadEnv() throws BadEnvironmentException {
        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        loadEnv(env.baseDir, env.session);
    }
","['    ', 'private', ' ', 'void', ' ', 'reloadEnv', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'loadEnv', '(', 'env', '.', 'baseDir', ',', ' ', 'env', '.', 'session', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f7565db566e38d91d75a8188bffb149a41d1c011,Aria2Service.java,dispatchStatus,"    private void dispatchStatus() {
        // TODO
    }

    private static class LocalHandler extends Handler {

        private final Aria2Service service;

        LocalHandler(@NonNull Aria2Service service) {
            super(service.serviceThread.getLooper());
            this.service = service;
        }

        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MESSAGE_STATUS:
                    service.dispatchStatus();
                    break;
                default:
                    super.handleMessage(msg);
            }
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/f7565db566e38d91d75a8188bffb149a41d1c011,"    private void dispatchStatus() {
        
    }

    private static class LocalHandler extends Handler {

        private final Aria2Service service;

        LocalHandler(@NonNull Aria2Service service) {
            super(service.serviceThread.getLooper());
            this.service = service;
        }

        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MESSAGE_STATUS:
                    service.dispatchStatus();
                    break;
                default:
                    super.handleMessage(msg);
            }
        }
    }
}
","['    ', 'private', ' ', 'void', ' ', 'dispatchStatus', '(', ')', ' ', '{', '\n', '        ', '\n', '    ', '}', '\n', '\n', '    ', 'private', ' ', 'static', ' ', 'class', ' ', 'LocalHandler', ' ', 'extends', ' ', 'Handler', ' ', '{', '\n', '\n', '        ', 'private', ' ', 'final', ' ', 'Aria2Service', ' ', 'service', ';', '\n', '\n', '        ', 'LocalHandler', '(', '@NonNull', ' ', 'Aria2Service', ' ', 'service', ')', ' ', '{', '\n', '            ', 'super', '(', 'service', '.', 'serviceThread', '.', 'getLooper', '(', ')', ')', ';', '\n', '            ', 'this', '.', 'service', ' ', '=', ' ', 'service', ';', '\n', '        ', '}', '\n', '\n', '        ', '@Override', '\n', '        ', 'public', ' ', 'void', ' ', 'handleMessage', '(', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '            ', 'switch', ' ', '(', 'msg', '.', 'what', ')', ' ', '{', '\n', '                ', 'case', ' ', 'MESSAGE_STATUS', ':', '\n', '                    ', 'service', '.', 'dispatchStatus', '(', ')', ';', '\n', '                    ', 'break', ';', '\n', '                ', 'default', ':', '\n', '                    ', 'super', '.', 'handleMessage', '(', 'msg', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,f7565db566e38d91d75a8188bffb149a41d1c011,Aria2Service.java,handleMessage,"        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MESSAGE_STATUS:",https://www.github.com/devgianlu/aria2android/commit/f7565db566e38d91d75a8188bffb149a41d1c011,"        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MESSAGE_STATUS:
","['        ', 'public', ' ', 'void', ' ', 'handleMessage', '(', 'Message', ' ', 'msg', ')', ' ', '{', '\n', '            ', 'switch', ' ', '(', 'msg', '.', 'what', ')', ' ', '{', '\n', '                ', 'case', ' ', 'MESSAGE_STATUS', ':', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        aria2.onResume();
    }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    protected void onResume() {
        super.onResume();
        aria2.onResume();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'aria2', '.', 'onResume', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,MainActivity.java,updateUi,"    public void updateUi(boolean on) {
        updateUiStatus(on);
    }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    public void updateUi(boolean on) {
        updateUiStatus(on);
    }
","['    ', 'public', ' ', 'void', ' ', 'updateUi', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'updateUiStatus', '(', 'on', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,Aria2Ui.java,onServiceConnected,"        public void onServiceConnected(ComponentName name, IBinder service) {
            messenger = new Messenger(service);
            broadcastManager.registerReceiver(receiver = new ServiceBroadcastReceiver(), new IntentFilter(Aria2Service.BROADCAST_MESSAGE));

            askForStatus();
        }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"        public void onServiceConnected(ComponentName name, IBinder service) {
            messenger = new Messenger(service);
            broadcastManager.registerReceiver(receiver = new ServiceBroadcastReceiver(), new IntentFilter(Aria2Service.BROADCAST_MESSAGE));

            askForStatus();
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'name', ',', ' ', 'IBinder', ' ', 'service', ')', ' ', '{', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'service', ')', ';', '\n', '            ', 'broadcastManager', '.', 'registerReceiver', '(', 'receiver', ' ', '=', ' ', 'new', ' ', 'ServiceBroadcastReceiver', '(', ')', ',', ' ', 'new', ' ', 'IntentFilter', '(', 'Aria2Service', '.', 'BROADCAST_MESSAGE', ')', ')', ';', '\n', '\n', '            ', 'askForStatus', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,Aria2Ui.java,askForStatus,"    private void askForStatus() {
        try {
            if (messenger != null)",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    private void askForStatus() {
        try {
            if (messenger != null)
","['    ', 'private', ' ', 'void', ' ', 'askForStatus', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'if', ' ', '(', 'messenger', ' ', '!', '=', ' ', 'null', ')', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,Aria2.java,start,"    void start() throws BadEnvironmentException, IOException {
        if (currentProcess != null) {
            postMessage(Message.obtain(Message.Type.PROCESS_STARTED, ""[already started]""));
            return;
        }

        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        if (Prefs.getBoolean(Aria2PK.SHOW_PERFORMANCE))
            new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    void start() throws BadEnvironmentException, IOException {
        if (currentProcess != null) {
            postMessage(Message.obtain(Message.Type.PROCESS_STARTED, ""[already started]""));
            return;
        }

        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        if (Prefs.getBoolean(Aria2PK.SHOW_PERFORMANCE))
            new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
    }
","['    ', 'void', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'currentProcess', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', '""', '[already started]', '""', ')', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'reloadEnv', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'execPath', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'params', ' ', '=', ' ', 'env', '.', 'startArgs', '(', ')', ';', '\n', '\n', '        ', 'currentProcess', ' ', '=', ' ', 'execWithParams', '(', 'true', ',', ' ', 'params', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Waiter', '(', 'currentProcess', ')', ',', ' ', '""', 'aria2android-waiterThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'inputWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getInputStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-inputWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'errorWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getErrorStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-errorWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'Aria2PK', '.', 'SHOW_PERFORMANCE', ')', ')', '\n', '            ', 'new', ' ', 'Thread', '(', 'this', '.', 'monitor', ' ', '=', ' ', 'new', ' ', 'Monitor', '(', ')', ',', ' ', '""', 'aria2android-monitorThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', 'startCommandForLog', '(', 'execPath', ',', ' ', 'params', ')', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,Aria2.java,processTerminated,"    private void processTerminated(int code) {
        postMessage(Message.obtain(Message.Type.PROCESS_TERMINATED, code));

        if (monitor != null) {
            monitor.close();
            monitor = null;
        }

        if (errorWatcher != null) {
            errorWatcher.close();
            errorWatcher = null;
        }

        if (inputWatcher != null) {
            inputWatcher.close();
            inputWatcher = null;
        }

        stop();
    }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    private void processTerminated(int code) {
        postMessage(Message.obtain(Message.Type.PROCESS_TERMINATED, code));

        if (monitor != null) {
            monitor.close();
            monitor = null;
        }

        if (errorWatcher != null) {
            errorWatcher.close();
            errorWatcher = null;
        }

        if (inputWatcher != null) {
            inputWatcher.close();
            inputWatcher = null;
        }

        stop();
    }
","['    ', 'private', ' ', 'void', ' ', 'processTerminated', '(', 'int', ' ', 'code', ')', ' ', '{', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_TERMINATED', ',', ' ', 'code', ')', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'monitor', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'monitor', '.', 'close', '(', ')', ';', '\n', '            ', 'monitor', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'errorWatcher', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'errorWatcher', '.', 'close', '(', ')', ';', '\n', '            ', 'errorWatcher', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'inputWatcher', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'inputWatcher', '.', 'close', '(', ')', ';', '\n', '            ', 'inputWatcher', ' ', '=', ' ', 'null', ';', '\n', '        ', '}', '\n', '\n', '        ', 'stop', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,Aria2.java,isRunning,"    public boolean isRunning() {
        return currentProcess != null;
    }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    public boolean isRunning() {
        return currentProcess != null;
    }
","['    ', 'public', ' ', 'boolean', ' ', 'isRunning', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'currentProcess', ' ', '!', '=', ' ', 'null', ';', '\n', '    ', '}', '\n', '<END>']"
master,7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,Aria2Service.java,dispatchStatus,"    private void dispatchStatus() {
        if (broadcastManager == null) return;

        Intent intent = new Intent(BROADCAST_STATUS);
        intent.putExtra(""on"", aria2.isRunning());
        broadcastManager.sendBroadcast(intent);
    }",https://www.github.com/devgianlu/aria2android/commit/7b2a9cbfca04f7b38fc41b88350ee687d7a2efd7,"    private void dispatchStatus() {
        if (broadcastManager == null) return;

        Intent intent = new Intent(BROADCAST_STATUS);
        intent.putExtra(""on"", aria2.isRunning());
        broadcastManager.sendBroadcast(intent);
    }
","['    ', 'private', ' ', 'void', ' ', 'dispatchStatus', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'broadcastManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'Intent', ' ', 'intent', ' ', '=', ' ', 'new', ' ', 'Intent', '(', 'BROADCAST_STATUS', ')', ';', '\n', '        ', 'intent', '.', 'putExtra', '(', '""', 'on', '""', ',', ' ', 'aria2', '.', 'isRunning', '(', ')', ')', ';', '\n', '        ', 'broadcastManager', '.', 'sendBroadcast', '(', 'intent', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2BareConfig.java,launcherIcon,"    public int launcherIcon() {
        return R.mipmap.ic_launcher;
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public int launcherIcon() {
        return R.mipmap.ic_launcher;
    }
","['    ', 'public', ' ', 'int', ' ', 'launcherIcon', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'R', '.', 'mipmap', '.', 'ic_launcher', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2BareConfig.java,notificationIcon,"    public int notificationIcon() {
        return R.drawable.ic_notification;
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public int notificationIcon() {
        return R.drawable.ic_notification;
    }
","['    ', 'public', ' ', 'int', ' ', 'notificationIcon', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'R', '.', 'drawable', '.', 'ic_notification', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2BareConfig.java,actionClass,"    public Class<? extends Activity> actionClass() {
        return MainActivity.class;
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public Class<? extends Activity> actionClass() {
        return MainActivity.class;
    }
","['    ', 'public', ' ', 'Class', '<', '?', ' ', 'extends', ' ', 'Activity', '>', ' ', 'actionClass', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'MainActivity', '.', 'class', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Utils.java,createAria2,"    public static Aria2Ui createAria2(@NonNull Context context, @Nullable Aria2Ui.Listener listener) {
        return new Aria2Ui(context, listener); // Useless I'd say
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public static Aria2Ui createAria2(@NonNull Context context, @Nullable Aria2Ui.Listener listener) {
        return new Aria2Ui(context, listener); 
    }
","['    ', 'public', ' ', 'static', ' ', 'Aria2Ui', ' ', 'createAria2', '(', '@NonNull', ' ', 'Context', ' ', 'context', ',', ' ', '@Nullable', ' ', 'Aria2Ui', '.', 'Listener', ' ', 'listener', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'Aria2Ui', '(', 'context', ',', ' ', 'listener', ')', ';', ' ', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Ui.java,onServiceConnected,"        public void onServiceConnected(ComponentName name, IBinder service) {
            messenger = new Messenger(service);

            IntentFilter filter = new IntentFilter();
            filter.addAction(Aria2Service.BROADCAST_MESSAGE);
            filter.addAction(Aria2Service.BROADCAST_STATUS);
            broadcastManager.registerReceiver(receiver = new ServiceBroadcastReceiver(), filter);

            askForStatus();
        }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"        public void onServiceConnected(ComponentName name, IBinder service) {
            messenger = new Messenger(service);

            IntentFilter filter = new IntentFilter();
            filter.addAction(Aria2Service.BROADCAST_MESSAGE);
            filter.addAction(Aria2Service.BROADCAST_STATUS);
            broadcastManager.registerReceiver(receiver = new ServiceBroadcastReceiver(), filter);

            askForStatus();
        }
","['        ', 'public', ' ', 'void', ' ', 'onServiceConnected', '(', 'ComponentName', ' ', 'name', ',', ' ', 'IBinder', ' ', 'service', ')', ' ', '{', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'service', ')', ';', '\n', '\n', '            ', 'IntentFilter', ' ', 'filter', ' ', '=', ' ', 'new', ' ', 'IntentFilter', '(', ')', ';', '\n', '            ', 'filter', '.', 'addAction', '(', 'Aria2Service', '.', 'BROADCAST_MESSAGE', ')', ';', '\n', '            ', 'filter', '.', 'addAction', '(', 'Aria2Service', '.', 'BROADCAST_STATUS', ')', ';', '\n', '            ', 'broadcastManager', '.', 'registerReceiver', '(', 'receiver', ' ', '=', ' ', 'new', ' ', 'ServiceBroadcastReceiver', '(', ')', ',', ' ', 'filter', ')', ';', '\n', '\n', '            ', 'askForStatus', '(', ')', ';', '\n', '        ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Ui.java,provider,"    public static void provider(@NonNull Class<? extends BareConfigProvider> providerClass) {
        Prefs.putString(Aria2PK.BARE_CONFIG_PROVIDER, providerClass.getCanonicalName());
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public static void provider(@NonNull Class<? extends BareConfigProvider> providerClass) {
        Prefs.putString(Aria2PK.BARE_CONFIG_PROVIDER, providerClass.getCanonicalName());
    }
","['    ', 'public', ' ', 'static', ' ', 'void', ' ', 'provider', '(', '@NonNull', ' ', 'Class', '<', '?', ' ', 'extends', ' ', 'BareConfigProvider', '>', ' ', 'providerClass', ')', ' ', '{', '\n', '        ', 'Prefs', '.', 'putString', '(', 'Aria2PK', '.', 'BARE_CONFIG_PROVIDER', ',', ' ', 'providerClass', '.', 'getCanonicalName', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,BareConfigProvider.java,launcherIcon,"    int launcherIcon();

    int notificationIcon();

    @NonNull
    Class<? extends Activity> actionClass();
}",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    int launcherIcon();

    int notificationIcon();

    @NonNull
    Class<? extends Activity> actionClass();
}
","['    ', 'int', ' ', 'launcherIcon', '(', ')', ';', '\n', '\n', '    ', 'int', ' ', 'notificationIcon', '(', ')', ';', '\n', '\n', '    ', '@NonNull', '\n', '    ', 'Class', '<', '?', ' ', 'extends', ' ', 'Activity', '>', ' ', 'actionClass', '(', ')', ';', '\n', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,BareConfigProvider.java,notificationIcon,"    int notificationIcon();

    @NonNull
    Class<? extends Activity> actionClass();
}",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    int notificationIcon();

    @NonNull
    Class<? extends Activity> actionClass();
}
","['    ', 'int', ' ', 'notificationIcon', '(', ')', ';', '\n', '\n', '    ', '@NonNull', '\n', '    ', 'Class', '<', '?', ' ', 'extends', ' ', 'Activity', '>', ' ', 'actionClass', '(', ')', ';', '\n', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2.java,start,"    boolean start() throws BadEnvironmentException, IOException {
        if (currentProcess != null) {
            postMessage(Message.obtain(Message.Type.PROCESS_STARTED, ""[already started]""));
            return false;
        }

        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        if (Prefs.getBoolean(Aria2PK.SHOW_PERFORMANCE))
            new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
        return true;
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    boolean start() throws BadEnvironmentException, IOException {
        if (currentProcess != null) {
            postMessage(Message.obtain(Message.Type.PROCESS_STARTED, ""[already started]""));
            return false;
        }

        if (env == null)
            throw new BadEnvironmentException(""Missing environment!"");

        reloadEnv();

        String execPath = env.execPath();
        String[] params = env.startArgs();

        currentProcess = execWithParams(true, params);
        new Thread(new Waiter(currentProcess), ""aria2android-waiterThread"").start();
        new Thread(this.inputWatcher = new StreamWatcher(currentProcess.getInputStream()), ""aria2-android-inputWatcherThread"").start();
        new Thread(this.errorWatcher = new StreamWatcher(currentProcess.getErrorStream()), ""aria2-android-errorWatcherThread"").start();

        if (Prefs.getBoolean(Aria2PK.SHOW_PERFORMANCE))
            new Thread(this.monitor = new Monitor(), ""aria2android-monitorThread"").start();

        postMessage(Message.obtain(Message.Type.PROCESS_STARTED, startCommandForLog(execPath, params)));
        return true;
    }
","['    ', 'boolean', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'BadEnvironmentException', ',', ' ', 'IOException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'currentProcess', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', '""', '[already started]', '""', ')', ')', ';', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'env', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'throw', ' ', 'new', ' ', 'BadEnvironmentException', '(', '""', 'Missing environment!', '""', ')', ';', '\n', '\n', '        ', 'reloadEnv', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'execPath', ' ', '=', ' ', 'env', '.', 'execPath', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'params', ' ', '=', ' ', 'env', '.', 'startArgs', '(', ')', ';', '\n', '\n', '        ', 'currentProcess', ' ', '=', ' ', 'execWithParams', '(', 'true', ',', ' ', 'params', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'new', ' ', 'Waiter', '(', 'currentProcess', ')', ',', ' ', '""', 'aria2android-waiterThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'inputWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getInputStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-inputWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '        ', 'new', ' ', 'Thread', '(', 'this', '.', 'errorWatcher', ' ', '=', ' ', 'new', ' ', 'StreamWatcher', '(', 'currentProcess', '.', 'getErrorStream', '(', ')', ')', ',', ' ', '""', 'aria2-android-errorWatcherThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'Aria2PK', '.', 'SHOW_PERFORMANCE', ')', ')', '\n', '            ', 'new', ' ', 'Thread', '(', 'this', '.', 'monitor', ' ', '=', ' ', 'new', ' ', 'Monitor', '(', ')', ',', ' ', '""', 'aria2android-monitorThread', '""', ')', '.', 'start', '(', ')', ';', '\n', '\n', '        ', 'postMessage', '(', 'Message', '.', 'obtain', '(', 'Message', '.', 'Type', '.', 'PROCESS_STARTED', ',', ' ', 'startCommandForLog', '(', 'execPath', ',', ' ', 'params', ')', ')', ')', ';', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Service.java,loadProvider,"    private static BareConfigProvider loadProvider() {
        String classStr = Prefs.getString(Aria2PK.BARE_CONFIG_PROVIDER, null);
        if (classStr == null) throw new IllegalStateException(""Provider not initialized!"");

        try {
            Class<?> clazz = Class.forName(classStr);",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    private static BareConfigProvider loadProvider() {
        String classStr = Prefs.getString(Aria2PK.BARE_CONFIG_PROVIDER, null);
        if (classStr == null) throw new IllegalStateException(""Provider not initialized!"");

        try {
            Class<?> clazz = Class.forName(classStr);
","['    ', 'private', ' ', 'static', ' ', 'BareConfigProvider', ' ', 'loadProvider', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'classStr', ' ', '=', ' ', 'Prefs', '.', 'getString', '(', 'Aria2PK', '.', 'BARE_CONFIG_PROVIDER', ',', ' ', 'null', ')', ';', '\n', '        ', 'if', ' ', '(', 'classStr', ' ', '=', '=', ' ', 'null', ')', ' ', 'throw', ' ', 'new', ' ', 'IllegalStateException', '(', '""', 'Provider not initialized!', '""', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Class', '<', '?', '>', ' ', 'clazz', ' ', '=', ' ', 'Class', '.', 'forName', '(', 'classStr', ')', ';', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Service.java,onCreate,"    public void onCreate() {
        super.onCreate();

        aria2 = Aria2.get();
        aria2.addListener(this);
        serviceThread.start();
        broadcastManager = LocalBroadcastManager.getInstance(this);
        notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        provider = loadProvider();

        defaultNotification = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                .setContentTitle(SERVICE_NAME)",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public void onCreate() {
        super.onCreate();

        aria2 = Aria2.get();
        aria2.addListener(this);
        serviceThread.start();
        broadcastManager = LocalBroadcastManager.getInstance(this);
        notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        provider = loadProvider();

        defaultNotification = new NotificationCompat.Builder(getBaseContext(), CHANNEL_ID)
                .setContentTitle(SERVICE_NAME)
","['    ', 'public', ' ', 'void', ' ', 'onCreate', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', ')', ';', '\n', '\n', '        ', 'aria2', ' ', '=', ' ', 'Aria2', '.', 'get', '(', ')', ';', '\n', '        ', 'aria2', '.', 'addListener', '(', 'this', ')', ';', '\n', '        ', 'serviceThread', '.', 'start', '(', ')', ';', '\n', '        ', 'broadcastManager', ' ', '=', ' ', 'LocalBroadcastManager', '.', 'getInstance', '(', 'this', ')', ';', '\n', '        ', 'notificationManager', ' ', '=', ' ', '(', 'NotificationManager', ')', ' ', 'getSystemService', '(', 'NOTIFICATION_SERVICE', ')', ';', '\n', '        ', 'provider', ' ', '=', ' ', 'loadProvider', '(', ')', ';', '\n', '\n', '        ', 'defaultNotification', ' ', '=', ' ', 'new', ' ', 'NotificationCompat', '.', 'Builder', '(', 'getBaseContext', '(', ')', ',', ' ', 'CHANNEL_ID', ')', '\n', '                ', '.', 'setContentTitle', '(', 'SERVICE_NAME', ')', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Service.java,onBind,"    public IBinder onBind(Intent intent) {
        if (messenger == null)
            messenger = new Messenger(new LocalHandler(this));

        return messenger.getBinder();
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    public IBinder onBind(Intent intent) {
        if (messenger == null)
            messenger = new Messenger(new LocalHandler(this));

        return messenger.getBinder();
    }
","['    ', 'public', ' ', 'IBinder', ' ', 'onBind', '(', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'messenger', ' ', '=', '=', ' ', 'null', ')', '\n', '            ', 'messenger', ' ', '=', ' ', 'new', ' ', 'Messenger', '(', 'new', ' ', 'LocalHandler', '(', 'this', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'messenger', '.', 'getBinder', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Service.java,start,"    private void start() throws IOException, BadEnvironmentException {
        if (aria2.start())
            startTime = System.currentTimeMillis();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) createChannel();
        startForeground(NOTIFICATION_ID, defaultNotification.build());
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    private void start() throws IOException, BadEnvironmentException {
        if (aria2.start())
            startTime = System.currentTimeMillis();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) createChannel();
        startForeground(NOTIFICATION_ID, defaultNotification.build());
    }
","['    ', 'private', ' ', 'void', ' ', 'start', '(', ')', ' ', 'throws', ' ', 'IOException', ',', ' ', 'BadEnvironmentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'aria2', '.', 'start', '(', ')', ')', '\n', '            ', 'startTime', ' ', '=', ' ', 'System', '.', 'currentTimeMillis', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', ' ', '>', '=', ' ', 'Build', '.', 'VERSION_CODES', '.', 'O', ')', ' ', 'createChannel', '(', ')', ';', '\n', '        ', 'startForeground', '(', 'NOTIFICATION_ID', ',', ' ', 'defaultNotification', '.', 'build', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,61b2832bf4cfc83e67545d350d42d1bc97a53f1a,Aria2Service.java,updateMonitor,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(update.rss()) * 1024, false));
        layout.setImageViewResource(R.id.customNotification_icon, provider.launcherIcon());
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }",https://www.github.com/devgianlu/aria2android/commit/61b2832bf4cfc83e67545d350d42d1bc97a53f1a,"    private void updateMonitor(@Nullable MonitorUpdate update) {
        if (update == null || notificationManager == null) return;

        RemoteViews layout = new RemoteViews(getPackageName(), R.layout.custom_notification);
        layout.setTextViewText(R.id.customNotification_runningTime, ""Running time: "" + CommonUtils.timeFormatter((System.currentTimeMillis() - startTime) / 1000));
        layout.setTextViewText(R.id.customNotification_pid, ""PID: "" + update.pid());
        layout.setTextViewText(R.id.customNotification_cpu, ""CPU: "" + update.cpu() + ""%"");
        layout.setTextViewText(R.id.customNotification_memory, ""Memory: "" + CommonUtils.dimensionFormatter(Integer.parseInt(update.rss()) * 1024, false));
        layout.setImageViewResource(R.id.customNotification_icon, provider.launcherIcon());
        defaultNotification.setCustomContentView(layout);

        notificationManager.notify(NOTIFICATION_ID, defaultNotification.build());

        update.recycle();
    }
","['    ', 'private', ' ', 'void', ' ', 'updateMonitor', '(', '@Nullable', ' ', 'MonitorUpdate', ' ', 'update', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'update', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'notificationManager', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ';', '\n', '\n', '        ', 'RemoteViews', ' ', 'layout', ' ', '=', ' ', 'new', ' ', 'RemoteViews', '(', 'getPackageName', '(', ')', ',', ' ', 'R', '.', 'layout', '.', 'custom_notification', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_runningTime', ',', ' ', '""', 'Running time: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'timeFormatter', '(', '(', 'System', '.', 'currentTimeMillis', '(', ')', ' ', '-', ' ', 'startTime', ')', ' ', '/', ' ', '1000', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_pid', ',', ' ', '""', 'PID: ', '""', ' ', '+', ' ', 'update', '.', 'pid', '(', ')', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_cpu', ',', ' ', '""', 'CPU: ', '""', ' ', '+', ' ', 'update', '.', 'cpu', '(', ')', ' ', '+', ' ', '""', '%', '""', ')', ';', '\n', '        ', 'layout', '.', 'setTextViewText', '(', 'R', '.', 'id', '.', 'customNotification_memory', ',', ' ', '""', 'Memory: ', '""', ' ', '+', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'Integer', '.', 'parseInt', '(', 'update', '.', 'rss', '(', ')', ')', ' ', '*', ' ', '1024', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'layout', '.', 'setImageViewResource', '(', 'R', '.', 'id', '.', 'customNotification_icon', ',', ' ', 'provider', '.', 'launcherIcon', '(', ')', ')', ';', '\n', '        ', 'defaultNotification', '.', 'setCustomContentView', '(', 'layout', ')', ';', '\n', '\n', '        ', 'notificationManager', '.', 'notify', '(', 'NOTIFICATION_ID', ',', ' ', 'defaultNotification', '.', 'build', '(', ')', ')', ';', '\n', '\n', '        ', 'update', '.', 'recycle', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,adc94a3926d6abeb4ffa48bffc5822ad34bd9631,BootCompletedReceiver.java,onReceive,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            Utils.createAria2(context, null).startServiceFromReceiver();",https://www.github.com/devgianlu/aria2android/commit/adc94a3926d6abeb4ffa48bffc5822ad34bd9631,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            Utils.createAria2(context, null).startServiceFromReceiver();
","['    ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'Intent', '.', 'ACTION_BOOT_COMPLETED', '.', 'equals', '(', 'intent', '.', 'getAction', '(', ')', ')', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_AT_BOOT', ')', ')', '\n', '            ', 'Utils', '.', 'createAria2', '(', 'context', ',', ' ', 'null', ')', '.', 'startServiceFromReceiver', '(', ')', ';', '\n', '<END>']"
master,adc94a3926d6abeb4ffa48bffc5822ad34bd9631,Aria2Ui.java,startServiceFromReceiver,"    public void startServiceFromReceiver() {
        Aria2Service.startService(context);
    }",https://www.github.com/devgianlu/aria2android/commit/adc94a3926d6abeb4ffa48bffc5822ad34bd9631,"    public void startServiceFromReceiver() {
        Aria2Service.startService(context);
    }
","['    ', 'public', ' ', 'void', ' ', 'startServiceFromReceiver', '(', ')', ' ', '{', '\n', '        ', 'Aria2Service', '.', 'startService', '(', 'context', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,c8095dbe93909a956d1ae5881837272480837f20,PreferenceActivity.java,disableOtherDonationsOnGooglePlay,"    protected boolean disableOtherDonationsOnGooglePlay() {
        return false;
    }",https://www.github.com/devgianlu/aria2android/commit/c8095dbe93909a956d1ae5881837272480837f20,"    protected boolean disableOtherDonationsOnGooglePlay() {
        return false;
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'disableOtherDonationsOnGooglePlay', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n', '<END>']"
master,f82892d223e4b9e167e30995bbdaf92026a0f58a,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        if (aria2 != null) aria2.onStart();
    }",https://www.github.com/devgianlu/aria2android/commit/f82892d223e4b9e167e30995bbdaf92026a0f58a,"    protected void onStart() {
        super.onStart();
        if (aria2 != null) aria2.onStart();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'onStart', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f82892d223e4b9e167e30995bbdaf92026a0f58a,MainActivity.java,onDestroy,"    protected void onDestroy() {
        super.onDestroy();
        if (aria2 != null) aria2.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/f82892d223e4b9e167e30995bbdaf92026a0f58a,"    protected void onDestroy() {
        super.onDestroy();
        if (aria2 != null) aria2.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f82892d223e4b9e167e30995bbdaf92026a0f58a,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.onResume();
    }",https://www.github.com/devgianlu/aria2android/commit/f82892d223e4b9e167e30995bbdaf92026a0f58a,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.onResume();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'onResume', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,DownloadBinActivity.java,onResult,"    public void onResult(@NonNull List<GitHubApi.Release> result) {
        layout.loadListData(new ReleasesAdapter(this, result, this));
    }",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"    public void onResult(@NonNull List<GitHubApi.Release> result) {
        layout.loadListData(new ReleasesAdapter(this, result, this));
    }
","['    ', 'public', ' ', 'void', ' ', 'onResult', '(', '@NonNull', ' ', 'List', '<', 'GitHubApi', '.', 'Release', '>', ' ', 'result', ')', ' ', '{', '\n', '        ', 'layout', '.', 'loadListData', '(', 'new', ' ', 'ReleasesAdapter', '(', 'this', ',', ' ', 'result', ',', ' ', 'this', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,DownloadBinActivity.java,onException,"    public void onException(@NonNull Exception ex) {
        Logging.log(ex);
        layout.showError(R.string.failedRetrievingReleases_reason, ex.getMessage());
    }",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"    public void onException(@NonNull Exception ex) {
        Logging.log(ex);
        layout.showError(R.string.failedRetrievingReleases_reason, ex.getMessage());
    }
","['    ', 'public', ' ', 'void', ' ', 'onException', '(', '@NonNull', ' ', 'Exception', ' ', 'ex', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '        ', 'layout', '.', 'showError', '(', 'R', '.', 'string', '.', 'failedRetrievingReleases_reason', ',', ' ', 'ex', '.', 'getMessage', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,DownloadBinActivity.java,onReleaseSelected,"    public void onReleaseSelected(@NonNull GitHubApi.Release release) {
        layout.showInfo(R.string.downloadingBin);

        downloader.setRelease(release);
        downloader.downloadRelease(this);
    }",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"    public void onReleaseSelected(@NonNull GitHubApi.Release release) {
        layout.showInfo(R.string.downloadingBin);

        downloader.setRelease(release);
        downloader.downloadRelease(this);
    }
","['    ', 'public', ' ', 'void', ' ', 'onReleaseSelected', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ' ', '{', '\n', '        ', 'layout', '.', 'showInfo', '(', 'R', '.', 'string', '.', 'downloadingBin', ')', ';', '\n', '\n', '        ', 'downloader', '.', 'setRelease', '(', 'release', ')', ';', '\n', '        ', 'downloader', '.', 'downloadRelease', '(', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,DownloadBinActivity.java,doneDownload,"    public void doneDownload(@NonNull File tmp) {
        layout.showInfo(R.string.extractingBin);
        downloader.extractTo(getEnvDir(), (entry, name) -> name.equals(""aria2c""), this);
    }",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"    public void doneDownload(@NonNull File tmp) {
        layout.showInfo(R.string.extractingBin);
        downloader.extractTo(getEnvDir(), (entry, name) -> name.equals(""aria2c""), this);
    }
","['    ', 'public', ' ', 'void', ' ', 'doneDownload', '(', '@NonNull', ' ', 'File', ' ', 'tmp', ')', ' ', '{', '\n', '        ', 'layout', '.', 'showInfo', '(', 'R', '.', 'string', '.', 'extractingBin', ')', ';', '\n', '        ', 'downloader', '.', 'extractTo', '(', 'getEnvDir', '(', ')', ',', ' ', '(', 'entry', ',', ' ', 'name', ')', ' ', '-', '>', ' ', 'name', '.', 'equals', '(', '""', 'aria2c', '""', ')', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,DownloadBinActivity.java,doneExtract,"    public void doneExtract(@NonNull File dest) {
        layout.showInfo(R.string.binExtracted);

        Prefs.putBoolean(PK.CUSTOM_BIN, false);
        Prefs.putString(PK.ENV_LOCATION, dest.getAbsolutePath());
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"    public void doneExtract(@NonNull File dest) {
        layout.showInfo(R.string.binExtracted);

        Prefs.putBoolean(PK.CUSTOM_BIN, false);
        Prefs.putString(PK.ENV_LOCATION, dest.getAbsolutePath());
        startActivity(new Intent(this, MainActivity.class)
                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));
        finish();
    }
","['    ', 'public', ' ', 'void', ' ', 'doneExtract', '(', '@NonNull', ' ', 'File', ' ', 'dest', ')', ' ', '{', '\n', '        ', 'layout', '.', 'showInfo', '(', 'R', '.', 'string', '.', 'binExtracted', ')', ';', '\n', '\n', '        ', 'Prefs', '.', 'putBoolean', '(', 'PK', '.', 'CUSTOM_BIN', ',', ' ', 'false', ')', ';', '\n', '        ', 'Prefs', '.', 'putString', '(', 'PK', '.', 'ENV_LOCATION', ',', ' ', 'dest', '.', 'getAbsolutePath', '(', ')', ')', ';', '\n', '        ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'MainActivity', '.', 'class', ')', '\n', '                ', '.', 'addFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ' ', '|', ' ', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ')', ';', '\n', '        ', 'finish', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,ReleasesAdapter.java,onBindViewHolder,"    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        GitHubApi.Release release = releases.get(position);
        holder.name.setText(release.name);
        holder.uploadedAt.setHtml(R.string.publishedAt, CommonUtils.getFullDateFormatter().format(new Date(release.publishedAt)));
        holder.size.setHtml(R.string.size, CommonUtils.dimensionFormatter(release.androidAsset.size, false));
        holder.itemView.setOnClickListener(view1 -> {
            if (listener != null) listener.onReleaseSelected(release);",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        GitHubApi.Release release = releases.get(position);
        holder.name.setText(release.name);
        holder.uploadedAt.setHtml(R.string.publishedAt, CommonUtils.getFullDateFormatter().format(new Date(release.publishedAt)));
        holder.size.setHtml(R.string.size, CommonUtils.dimensionFormatter(release.androidAsset.size, false));
        holder.itemView.setOnClickListener(view1 -> {
            if (listener != null) listener.onReleaseSelected(release);
","['    ', 'public', ' ', 'void', ' ', 'onBindViewHolder', '(', '@NonNull', ' ', 'ViewHolder', ' ', 'holder', ',', ' ', 'int', ' ', 'position', ')', ' ', '{', '\n', '        ', 'GitHubApi', '.', 'Release', ' ', 'release', ' ', '=', ' ', 'releases', '.', 'get', '(', 'position', ')', ';', '\n', '        ', 'holder', '.', 'name', '.', 'setText', '(', 'release', '.', 'name', ')', ';', '\n', '        ', 'holder', '.', 'uploadedAt', '.', 'setHtml', '(', 'R', '.', 'string', '.', 'publishedAt', ',', ' ', 'CommonUtils', '.', 'getFullDateFormatter', '(', ')', '.', 'format', '(', 'new', ' ', 'Date', '(', 'release', '.', 'publishedAt', ')', ')', ')', ';', '\n', '        ', 'holder', '.', 'size', '.', 'setHtml', '(', 'R', '.', 'string', '.', 'size', ',', ' ', 'CommonUtils', '.', 'dimensionFormatter', '(', 'release', '.', 'androidAsset', '.', 'size', ',', ' ', 'false', ')', ')', ';', '\n', '        ', 'holder', '.', 'itemView', '.', 'setOnClickListener', '(', 'view1', ' ', '-', '>', ' ', '{', '\n', '            ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onReleaseSelected', '(', 'release', ')', ';', '\n', '<END>']"
master,23806aab2c2e4c2937d00da69ae630037ebf2ebb,ReleasesAdapter.java,onReleaseSelected,"        void onReleaseSelected(@NonNull GitHubApi.Release release);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView name;
        final SuperTextView uploadedAt;
        final SuperTextView size;

        ViewHolder(@NonNull ViewGroup parent) {
            super(inflater.inflate(R.layout.release_item, parent, false));

            name = itemView.findViewById(R.id.releaseItem_name);
            uploadedAt = itemView.findViewById(R.id.releaseItem_publishedAt);
            size = itemView.findViewById(R.id.releaseItem_size);
        }
    }
}",https://www.github.com/devgianlu/aria2android/commit/23806aab2c2e4c2937d00da69ae630037ebf2ebb,"        void onReleaseSelected(@NonNull GitHubApi.Release release);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        final TextView name;
        final SuperTextView uploadedAt;
        final SuperTextView size;

        ViewHolder(@NonNull ViewGroup parent) {
            super(inflater.inflate(R.layout.release_item, parent, false));

            name = itemView.findViewById(R.id.releaseItem_name);
            uploadedAt = itemView.findViewById(R.id.releaseItem_publishedAt);
            size = itemView.findViewById(R.id.releaseItem_size);
        }
    }
}
","['        ', 'void', ' ', 'onReleaseSelected', '(', '@NonNull', ' ', 'GitHubApi', '.', 'Release', ' ', 'release', ')', ';', '\n', '    ', '}', '\n', '\n', '    ', 'public', ' ', 'class', ' ', 'ViewHolder', ' ', 'extends', ' ', 'RecyclerView', '.', 'ViewHolder', ' ', '{', '\n', '        ', 'final', ' ', 'TextView', ' ', 'name', ';', '\n', '        ', 'final', ' ', 'SuperTextView', ' ', 'uploadedAt', ';', '\n', '        ', 'final', ' ', 'SuperTextView', ' ', 'size', ';', '\n', '\n', '        ', 'ViewHolder', '(', '@NonNull', ' ', 'ViewGroup', ' ', 'parent', ')', ' ', '{', '\n', '            ', 'super', '(', 'inflater', '.', 'inflate', '(', 'R', '.', 'layout', '.', 'release_item', ',', ' ', 'parent', ',', ' ', 'false', ')', ')', ';', '\n', '\n', '            ', 'name', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'releaseItem_name', ')', ';', '\n', '            ', 'uploadedAt', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'releaseItem_publishedAt', ')', ';', '\n', '            ', 'size', ' ', '=', ' ', 'itemView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'releaseItem_size', ')', ';', '\n', '        ', '}', '\n', '    ', '}', '\n', '}', '\n', '<END>']"
master,59bd18f335f3bb35f5d747d79880134bc249e64a,BootCompletedReceiver.java,onReceive,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            new Aria2Ui(context, null).startServiceFromReceiver();",https://www.github.com/devgianlu/aria2android/commit/59bd18f335f3bb35f5d747d79880134bc249e64a,"    public void onReceive(Context context, Intent intent) {
        if (!Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction()))
            return;

        if (Prefs.getBoolean(PK.START_AT_BOOT))
            new Aria2Ui(context, null).startServiceFromReceiver();
","['    ', 'public', ' ', 'void', ' ', 'onReceive', '(', 'Context', ' ', 'context', ',', ' ', 'Intent', ' ', 'intent', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', '!', 'Intent', '.', 'ACTION_BOOT_COMPLETED', '.', 'equals', '(', 'intent', '.', 'getAction', '(', ')', ')', ')', '\n', '            ', 'return', ';', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_AT_BOOT', ')', ')', '\n', '            ', 'new', ' ', 'Aria2Ui', '(', 'context', ',', ' ', 'null', ')', '.', 'startServiceFromReceiver', '(', ')', ';', '\n', '<END>']"
master,59bd18f335f3bb35f5d747d79880134bc249e64a,OptionsAdapter.java,parseOptions,"    private static List<NameValuePair> parseOptions(@NonNull String str) {
        List<NameValuePair> list = new ArrayList<>();
        String[] lines = str.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0)
                list.add(new NameValuePair(split[0], split.length == 1 ? null : split[1]));
        }

        return list;
    }",https://www.github.com/devgianlu/aria2android/commit/59bd18f335f3bb35f5d747d79880134bc249e64a,"    private static List<NameValuePair> parseOptions(@NonNull String str) {
        List<NameValuePair> list = new ArrayList<>();
        String[] lines = str.split(""\n"");
        for (String line : lines) {
            line = line.trim();
            if (line.startsWith(""#"")) continue;
            String[] split = line.split(""="");
            if (split.length > 0)
                list.add(new NameValuePair(split[0], split.length == 1 ? null : split[1]));
        }

        return list;
    }
","['    ', 'private', ' ', 'static', ' ', 'List', '<', 'NameValuePair', '>', ' ', 'parseOptions', '(', '@NonNull', ' ', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'List', '<', 'NameValuePair', '>', ' ', 'list', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'lines', ' ', '=', ' ', 'str', '.', 'split', '(', '""', '\\', 'n', '""', ')', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'line', ' ', ':', ' ', 'lines', ')', ' ', '{', '\n', '            ', 'line', ' ', '=', ' ', 'line', '.', 'trim', '(', ')', ';', '\n', '            ', 'if', ' ', '(', 'line', '.', 'startsWith', '(', '""', '#', '""', ')', ')', ' ', 'continue', ';', '\n', '            ', 'String', '[', ']', ' ', 'split', ' ', '=', ' ', 'line', '.', 'split', '(', '""', '=', '""', ')', ';', '\n', '            ', 'if', ' ', '(', 'split', '.', 'length', ' ', '>', ' ', '0', ')', '\n', '                ', 'list', '.', 'add', '(', 'new', ' ', 'NameValuePair', '(', 'split', '[', '0', ']', ',', ' ', 'split', '.', 'length', ' ', '=', '=', ' ', '1', ' ', '?', ' ', 'null', ' ', ':', ' ', 'split', '[', '1', ']', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'list', ';', '\n', '    ', '}', '\n', '<END>']"
master,59bd18f335f3bb35f5d747d79880134bc249e64a,OptionsAdapter.java,parseAndAdd,"    public void parseAndAdd(@NonNull String str) {
        List<NameValuePair> newOptions = parseOptions(str);
        options.addAll(newOptions);
        notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
        changed();

        if (listener != null) listener.onItemsCountChanged(options.size());
    }",https://www.github.com/devgianlu/aria2android/commit/59bd18f335f3bb35f5d747d79880134bc249e64a,"    public void parseAndAdd(@NonNull String str) {
        List<NameValuePair> newOptions = parseOptions(str);
        options.addAll(newOptions);
        notifyItemRangeInserted(options.size() - newOptions.size(), newOptions.size());
        changed();

        if (listener != null) listener.onItemsCountChanged(options.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'parseAndAdd', '(', '@NonNull', ' ', 'String', ' ', 'str', ')', ' ', '{', '\n', '        ', 'List', '<', 'NameValuePair', '>', ' ', 'newOptions', ' ', '=', ' ', 'parseOptions', '(', 'str', ')', ';', '\n', '        ', 'options', '.', 'addAll', '(', 'newOptions', ')', ';', '\n', '        ', 'notifyItemRangeInserted', '(', 'options', '.', 'size', '(', ')', ' ', '-', ' ', 'newOptions', '.', 'size', '(', ')', ',', ' ', 'newOptions', '.', 'size', '(', ')', ')', ';', '\n', '        ', 'changed', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'listener', ' ', '!', '=', ' ', 'null', ')', ' ', 'listener', '.', 'onItemsCountChanged', '(', 'options', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,21345de3565afabae63955cad2c26f249a566eeb,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        if (aria2 != null) aria2.bind();
    }",https://www.github.com/devgianlu/aria2android/commit/21345de3565afabae63955cad2c26f249a566eeb,"    protected void onStart() {
        super.onStart();
        if (aria2 != null) aria2.bind();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'bind', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,21345de3565afabae63955cad2c26f249a566eeb,MainActivity.java,onDestroy,"    protected void onDestroy() {
        super.onDestroy();
        if (aria2 != null) aria2.unbind();
    }",https://www.github.com/devgianlu/aria2android/commit/21345de3565afabae63955cad2c26f249a566eeb,"    protected void onDestroy() {
        super.onDestroy();
        if (aria2 != null) aria2.unbind();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'unbind', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,21345de3565afabae63955cad2c26f249a566eeb,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.askForStatus();
    }",https://www.github.com/devgianlu/aria2android/commit/21345de3565afabae63955cad2c26f249a566eeb,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.askForStatus();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'askForStatus', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,f86ac6052f25b097c328ba3148cb8238f468221e,MainActivity.java,startDownloadBin,"    private void startDownloadBin(boolean importBin) {
        Bundle bundle = new Bundle();
        bundle.putBoolean(""importBin"", importBin);

        DownloadBinActivity.startActivity(this,
                getString(com.gianlu.aria2lib.R.string.downloadBin) + "" - "" + getString(com.gianlu.aria2lib.R.string.app_name),",https://www.github.com/devgianlu/aria2android/commit/f86ac6052f25b097c328ba3148cb8238f468221e,"    private void startDownloadBin(boolean importBin) {
        Bundle bundle = new Bundle();
        bundle.putBoolean(""importBin"", importBin);

        DownloadBinActivity.startActivity(this,
                getString(com.gianlu.aria2lib.R.string.downloadBin) + "" - "" + getString(com.gianlu.aria2lib.R.string.app_name),
","['    ', 'private', ' ', 'void', ' ', 'startDownloadBin', '(', 'boolean', ' ', 'importBin', ')', ' ', '{', '\n', '        ', 'Bundle', ' ', 'bundle', ' ', '=', ' ', 'new', ' ', 'Bundle', '(', ')', ';', '\n', '        ', 'bundle', '.', 'putBoolean', '(', '""', 'importBin', '""', ',', ' ', 'importBin', ')', ';', '\n', '\n', '        ', 'DownloadBinActivity', '.', 'startActivity', '(', 'this', ',', '\n', '                ', 'getString', '(', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'R', '.', 'string', '.', 'downloadBin', ')', ' ', '+', ' ', '""', ' - ', '""', ' ', '+', ' ', 'getString', '(', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'R', '.', 'string', '.', 'app_name', ')', ',', '\n', '<END>']"
master,5ecbeccffcd4edc266ee73b2a1c26e3898c9e881,MainActivity.java,updateUiStatus,"    private void updateUiStatus(boolean on) {
        screen.lockPreferences(on);

        toggleServer.setOnCheckedChangeListener(null);
        toggleServer.setChecked(on);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> toggleService(isChecked));
    }",https://www.github.com/devgianlu/aria2android/commit/5ecbeccffcd4edc266ee73b2a1c26e3898c9e881,"    private void updateUiStatus(boolean on) {
        screen.lockPreferences(on);

        toggleServer.setOnCheckedChangeListener(null);
        toggleServer.setChecked(on);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> toggleService(isChecked));
    }
","['    ', 'private', ' ', 'void', ' ', 'updateUiStatus', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'screen', '.', 'lockPreferences', '(', 'on', ')', ';', '\n', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', 'null', ')', ';', '\n', '        ', 'toggleServer', '.', 'setChecked', '(', 'on', ')', ';', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', '(', 'buttonView', ',', ' ', 'isChecked', ')', ' ', '-', '>', ' ', 'toggleService', '(', 'isChecked', ')', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,5ecbeccffcd4edc266ee73b2a1c26e3898c9e881,MainActivity.java,addLog,"    private void addLog(@NonNull Logging.LogLine line) {
        Logging.log(line);

        if (screen != null)
            screen.appendLogLine(line);",https://www.github.com/devgianlu/aria2android/commit/5ecbeccffcd4edc266ee73b2a1c26e3898c9e881,"    private void addLog(@NonNull Logging.LogLine line) {
        Logging.log(line);

        if (screen != null)
            screen.appendLogLine(line);
","['    ', 'private', ' ', 'void', ' ', 'addLog', '(', '@NonNull', ' ', 'Logging', '.', 'LogLine', ' ', 'line', ')', ' ', '{', '\n', '        ', 'Logging', '.', 'log', '(', 'line', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'screen', '.', 'appendLogLine', '(', 'line', ')', ';', '\n', '<END>']"
master,8e3bd0e621316164a3581aa10daadc51b5b3a083,MainActivity.java,updateUiStatus,"    private void updateUiStatus(boolean on) {
        if (screen != null) screen.lockPreferences(on);

        if (toggleServer != null) {
            toggleServer.setOnCheckedChangeListener(null);
            toggleServer.setChecked(on);
            toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> toggleService(isChecked));
        }

        if ((screen == null || toggleServer == null) && aria2 != null)
            runOnUiThread(aria2::askForStatus);",https://www.github.com/devgianlu/aria2android/commit/8e3bd0e621316164a3581aa10daadc51b5b3a083,"    private void updateUiStatus(boolean on) {
        if (screen != null) screen.lockPreferences(on);

        if (toggleServer != null) {
            toggleServer.setOnCheckedChangeListener(null);
            toggleServer.setChecked(on);
            toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> toggleService(isChecked));
        }

        if ((screen == null || toggleServer == null) && aria2 != null)
            runOnUiThread(aria2::askForStatus);
","['    ', 'private', ' ', 'void', ' ', 'updateUiStatus', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', 'screen', '.', 'lockPreferences', '(', 'on', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'toggleServer', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', 'null', ')', ';', '\n', '            ', 'toggleServer', '.', 'setChecked', '(', 'on', ')', ';', '\n', '            ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', '(', 'buttonView', ',', ' ', 'isChecked', ')', ' ', '-', '>', ' ', 'toggleService', '(', 'isChecked', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'screen', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'toggleServer', ' ', '=', '=', ' ', 'null', ')', ' ', '&', '&', ' ', 'aria2', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'runOnUiThread', '(', 'aria2', ':', ':', 'askForStatus', ')', ';', '\n', '<END>']"
master,fa05e8d91448ed358376fca9c2fc05daa2506c39,MainActivity.java,onUpdateLogs,"    public void onUpdateLogs(@NonNull List<Aria2Ui.LogMessage> list) {
        for (Aria2Ui.LogMessage msg : list) {
            Logging.LogLine line = createLogLine(msg);",https://www.github.com/devgianlu/aria2android/commit/fa05e8d91448ed358376fca9c2fc05daa2506c39,"    public void onUpdateLogs(@NonNull List<Aria2Ui.LogMessage> list) {
        for (Aria2Ui.LogMessage msg : list) {
            Logging.LogLine line = createLogLine(msg);
","['    ', 'public', ' ', 'void', ' ', 'onUpdateLogs', '(', '@NonNull', ' ', 'List', '<', 'Aria2Ui', '.', 'LogMessage', '>', ' ', 'list', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ' ', ':', ' ', 'list', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'LogLine', ' ', 'line', ' ', '=', ' ', 'createLogLine', '(', 'msg', ')', ';', '\n', '<END>']"
master,fa05e8d91448ed358376fca9c2fc05daa2506c39,MainActivity.java,createLogLine,"    private Logging.LogLine createLogLine(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
                return null;
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.INFO, (String) msg.o);
        }

        return null;
    }",https://www.github.com/devgianlu/aria2android/commit/fa05e8d91448ed358376fca9c2fc05daa2506c39,"    private Logging.LogLine createLogLine(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
                return null;
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.INFO, (String) msg.o);
        }

        return null;
    }
","['    ', 'private', ' ', 'Logging', '.', 'LogLine', ' ', 'createLogLine', '(', '@NonNull', ' ', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'msg', '.', 'type', ')', ' ', '{', '\n', '            ', 'case', ' ', 'PROCESS_TERMINATED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'logTerminated', ',', ' ', 'msg', '.', 'i', ')', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_STARTED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'logStarted', ',', ' ', 'msg', '.', 'o', ')', ')', ';', '\n', '            ', 'case', ' ', 'MONITOR_FAILED', ':', '\n', '                ', 'return', ' ', 'null', ';', '\n', '            ', 'case', ' ', 'MONITOR_UPDATE', ':', '\n', '                ', 'return', ' ', 'null', ';', '\n', '            ', 'case', ' ', 'PROCESS_WARN', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'WARNING', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_ERROR', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'ERROR', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_INFO', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'null', ';', '\n', '    ', '}', '\n', '<END>']"
master,fa05e8d91448ed358376fca9c2fc05daa2506c39,MainActivity.java,onMessage,"    public void onMessage(@NonNull Aria2Ui.LogMessage msg) {
        if (msg.type == Message.Type.MONITOR_FAILED) {
            Logging.log(""Monitor failed!"", (Throwable) msg.o);
            return;
        }

        if (msg.type == Message.Type.MONITOR_UPDATE) return;

        Logging.LogLine line = createLogLine(msg);
        if (line != null) addLog(line);
    }",https://www.github.com/devgianlu/aria2android/commit/fa05e8d91448ed358376fca9c2fc05daa2506c39,"    public void onMessage(@NonNull Aria2Ui.LogMessage msg) {
        if (msg.type == Message.Type.MONITOR_FAILED) {
            Logging.log(""Monitor failed!"", (Throwable) msg.o);
            return;
        }

        if (msg.type == Message.Type.MONITOR_UPDATE) return;

        Logging.LogLine line = createLogLine(msg);
        if (line != null) addLog(line);
    }
","['    ', 'public', ' ', 'void', ' ', 'onMessage', '(', '@NonNull', ' ', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'msg', '.', 'type', ' ', '=', '=', ' ', 'Message', '.', 'Type', '.', 'MONITOR_FAILED', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'log', '(', '""', 'Monitor failed!', '""', ',', ' ', '(', 'Throwable', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'msg', '.', 'type', ' ', '=', '=', ' ', 'Message', '.', 'Type', '.', 'MONITOR_UPDATE', ')', ' ', 'return', ';', '\n', '\n', '        ', 'Logging', '.', 'LogLine', ' ', 'line', ' ', '=', ' ', 'createLogLine', '(', 'msg', ')', ';', '\n', '        ', 'if', ' ', '(', 'line', ' ', '!', '=', ' ', 'null', ')', ' ', 'addLog', '(', 'line', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,390bf479b309825cde8e7253c91256e7c9c6902b,MainActivity.java,updateUiStatus,"    private void updateUiStatus(boolean on) {
        if (screen != null) screen.lockPreferences(on);

        if (toggleServer != null) {
            toggleServer.setTag(on);
            if (on) toggleServer.setImageResource(R.drawable.baseline_stop_24);
            else toggleServer.setImageResource(R.drawable.baseline_play_arrow_24);
        }

        if ((screen == null || toggleServer == null) && aria2 != null)
            runOnUiThread(aria2::askForStatus);",https://www.github.com/devgianlu/aria2android/commit/390bf479b309825cde8e7253c91256e7c9c6902b,"    private void updateUiStatus(boolean on) {
        if (screen != null) screen.lockPreferences(on);

        if (toggleServer != null) {
            toggleServer.setTag(on);
            if (on) toggleServer.setImageResource(R.drawable.baseline_stop_24);
            else toggleServer.setImageResource(R.drawable.baseline_play_arrow_24);
        }

        if ((screen == null || toggleServer == null) && aria2 != null)
            runOnUiThread(aria2::askForStatus);
","['    ', 'private', ' ', 'void', ' ', 'updateUiStatus', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', 'screen', '.', 'lockPreferences', '(', 'on', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'toggleServer', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'toggleServer', '.', 'setTag', '(', 'on', ')', ';', '\n', '            ', 'if', ' ', '(', 'on', ')', ' ', 'toggleServer', '.', 'setImageResource', '(', 'R', '.', 'drawable', '.', 'baseline_stop_24', ')', ';', '\n', '            ', 'else', ' ', 'toggleServer', '.', 'setImageResource', '(', 'R', '.', 'drawable', '.', 'baseline_play_arrow_24', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', '(', 'screen', ' ', '=', '=', ' ', 'null', ' ', '|', '|', ' ', 'toggleServer', ' ', '=', '=', ' ', 'null', ')', ' ', '&', '&', ' ', 'aria2', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'runOnUiThread', '(', 'aria2', ':', ':', 'askForStatus', ')', ';', '\n', '<END>']"
master,5db98bec82671fa881861dc4aa69aaf55ee5945c,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.askForStatus();
        screen.refreshCustomOptionsNumber();
    }",https://www.github.com/devgianlu/aria2android/commit/5db98bec82671fa881861dc4aa69aaf55ee5945c,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.askForStatus();
        screen.refreshCustomOptionsNumber();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'askForStatus', '(', ')', ';', '\n', '        ', 'screen', '.', 'refreshCustomOptionsNumber', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3eff7615497df36bb13f5d6d00e19d40017690af,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.askForStatus();
        if (screen != null) screen.refreshCustomOptionsNumber();
    }",https://www.github.com/devgianlu/aria2android/commit/3eff7615497df36bb13f5d6d00e19d40017690af,"    protected void onResume() {
        super.onResume();
        if (aria2 != null) aria2.askForStatus();
        if (screen != null) screen.refreshCustomOptionsNumber();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'askForStatus', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', 'screen', '.', 'refreshCustomOptionsNumber', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,7626eafad4152df367c1a715f8208305a2acadcd,MainActivity.java,startDownloadBin,"    private void startDownloadBin() {
        DownloadBinActivity.startActivity(this,
                getString(com.gianlu.aria2lib.R.string.downloadBin) + "" - "" + getString(com.gianlu.aria2lib.R.string.app_name),",https://www.github.com/devgianlu/aria2android/commit/7626eafad4152df367c1a715f8208305a2acadcd,"    private void startDownloadBin() {
        DownloadBinActivity.startActivity(this,
                getString(com.gianlu.aria2lib.R.string.downloadBin) + "" - "" + getString(com.gianlu.aria2lib.R.string.app_name),
","['    ', 'private', ' ', 'void', ' ', 'startDownloadBin', '(', ')', ' ', '{', '\n', '        ', 'DownloadBinActivity', '.', 'startActivity', '(', 'this', ',', '\n', '                ', 'getString', '(', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'R', '.', 'string', '.', 'downloadBin', ')', ' ', '+', ' ', '""', ' - ', '""', ' ', '+', ' ', 'getString', '(', 'com', '.', 'gianlu', '.', 'aria2lib', '.', 'R', '.', 'string', '.', 'app_name', ')', ',', '\n', '<END>']"
master,7626eafad4152df367c1a715f8208305a2acadcd,MainActivity.java,createLogLine,"    private Logging.LogLine createLogLine(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.INFO, (String) msg.o);
        }

        return null;
    }",https://www.github.com/devgianlu/aria2android/commit/7626eafad4152df367c1a715f8208305a2acadcd,"    private Logging.LogLine createLogLine(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.INFO, (String) msg.o);
        }

        return null;
    }
","['    ', 'private', ' ', 'Logging', '.', 'LogLine', ' ', 'createLogLine', '(', '@NonNull', ' ', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'msg', '.', 'type', ')', ' ', '{', '\n', '            ', 'case', ' ', 'PROCESS_TERMINATED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'logTerminated', ',', ' ', 'msg', '.', 'i', ')', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_STARTED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', 'getString', '(', 'R', '.', 'string', '.', 'logStarted', ',', ' ', 'msg', '.', 'o', ')', ')', ';', '\n', '            ', 'case', ' ', 'MONITOR_FAILED', ':', '\n', '            ', 'case', ' ', 'MONITOR_UPDATE', ':', '\n', '                ', 'return', ' ', 'null', ';', '\n', '            ', 'case', ' ', 'PROCESS_WARN', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'WARNING', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_ERROR', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'ERROR', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_INFO', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'null', ';', '\n', '    ', '}', '\n', '<END>']"
master,5fbd15d529da3cf9f97500f1209d90a17eb2546d,ThisApplication.java,onCreate,"    public void onCreate() {
        super.onCreate();

        Logging.clearLogs(this, 3);

        Aria2Ui.provider(Aria2BareConfig.class);
    }",https://www.github.com/devgianlu/aria2android/commit/5fbd15d529da3cf9f97500f1209d90a17eb2546d,"    public void onCreate() {
        super.onCreate();

        Logging.clearLogs(this, 3);

        Aria2Ui.provider(Aria2BareConfig.class);
    }
","['    ', 'public', ' ', 'void', ' ', 'onCreate', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', ')', ';', '\n', '\n', '        ', 'Logging', '.', 'clearLogs', '(', 'this', ',', ' ', '3', ')', ';', '\n', '\n', '        ', 'Aria2Ui', '.', 'provider', '(', 'Aria2BareConfig', '.', 'class', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,onActivityResult,"    boolean onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == STORAGE_ACCESS_CODE) {
            if (resultCode == Activity.RESULT_OK) {",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    boolean onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == STORAGE_ACCESS_CODE) {
            if (resultCode == Activity.RESULT_OK) {
","['    ', 'boolean', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'requestCode', ' ', '=', '=', ' ', 'STORAGE_ACCESS_CODE', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'resultCode', ' ', '=', '=', ' ', 'Activity', '.', 'RESULT_OK', ')', ' ', '{', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,onDestroy,"    void onDestroy() {
        if (aria2 != null) aria2.unbind();
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    void onDestroy() {
        if (aria2 != null) aria2.unbind();
    }
","['    ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'unbind', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,onResume,"    void onResume() {
        if (aria2 != null) aria2.askForStatus();
        if (screen != null) screen.refreshCustomOptionsNumber();
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    void onResume() {
        if (aria2 != null) aria2.askForStatus();
        if (screen != null) screen.refreshCustomOptionsNumber();
    }
","['    ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'aria2', ' ', '!', '=', ' ', 'null', ')', ' ', 'aria2', '.', 'askForStatus', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', 'screen', '.', 'refreshCustomOptionsNumber', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,toggleService,"    void toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) updateUiStatus(on);
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    void toggleService(boolean on) {
        boolean successful;
        if (on) successful = startService();
        else successful = stopService();

        if (successful) updateUiStatus(on);
    }
","['    ', 'void', ' ', 'toggleService', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'boolean', ' ', 'successful', ';', '\n', '        ', 'if', ' ', '(', 'on', ')', ' ', 'successful', ' ', '=', ' ', 'startService', '(', ')', ';', '\n', '        ', 'else', ' ', 'successful', ' ', '=', ' ', 'stopService', '(', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'successful', ')', ' ', 'updateUiStatus', '(', 'on', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,updateUiStatus,"    private void updateUiStatus(boolean on) {
        if (screen != null) screen.lockPreferences(on);

        updateToggle.setStatus(on);

        if (screen == null && aria2 != null)
            context.runOnUiThread(aria2::askForStatus);",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    private void updateUiStatus(boolean on) {
        if (screen != null) screen.lockPreferences(on);

        updateToggle.setStatus(on);

        if (screen == null && aria2 != null)
            context.runOnUiThread(aria2::askForStatus);
","['    ', 'private', ' ', 'void', ' ', 'updateUiStatus', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', 'screen', '.', 'lockPreferences', '(', 'on', ')', ';', '\n', '\n', '        ', 'updateToggle', '.', 'setStatus', '(', 'on', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '=', '=', ' ', 'null', ' ', '&', '&', ' ', 'aria2', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'context', '.', 'runOnUiThread', '(', 'aria2', ':', ':', 'askForStatus', ')', ';', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,permissionDenied,"                public void permissionDenied(@NonNull String permission) {
                    Toaster.with(context).message(R.string.writePermissionDenied).error(true).show();
                }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"                public void permissionDenied(@NonNull String permission) {
                    Toaster.with(context).message(R.string.writePermissionDenied).error(true).show();
                }
","['                ', 'public', ' ', 'void', ' ', 'permissionDenied', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                    ', 'Toaster', '.', 'with', '(', 'context', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'writePermissionDenied', ')', '.', 'error', '(', 'true', ')', '.', 'show', '(', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,ControlActivityDelegate.java,createLogLine,"    private Logging.LogLine createLogLine(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, context.getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, context.getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.INFO, (String) msg.o);
        }

        return null;
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    private Logging.LogLine createLogLine(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, context.getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new Logging.LogLine(Logging.LogLine.Type.INFO, context.getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new Logging.LogLine(Logging.LogLine.Type.INFO, (String) msg.o);
        }

        return null;
    }
","['    ', 'private', ' ', 'Logging', '.', 'LogLine', ' ', 'createLogLine', '(', '@NonNull', ' ', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'msg', '.', 'type', ')', ' ', '{', '\n', '            ', 'case', ' ', 'PROCESS_TERMINATED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'logTerminated', ',', ' ', 'msg', '.', 'i', ')', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_STARTED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'logStarted', ',', ' ', 'msg', '.', 'o', ')', ')', ';', '\n', '            ', 'case', ' ', 'MONITOR_FAILED', ':', '\n', '            ', 'case', ' ', 'MONITOR_UPDATE', ':', '\n', '                ', 'return', ' ', 'null', ';', '\n', '            ', 'case', ' ', 'PROCESS_WARN', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'WARNING', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_ERROR', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'ERROR', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_INFO', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'Logging', '.', 'LogLine', '(', 'Logging', '.', 'LogLine', '.', 'Type', '.', 'INFO', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'null', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,MainActivity.java,onActivityResult,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (delegate.onActivityResult(requestCode, resultCode, data))
            super.onActivityResult(requestCode, resultCode, data);",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (delegate.onActivityResult(requestCode, resultCode, data))
            super.onActivityResult(requestCode, resultCode, data);
","['    ', 'protected', ' ', 'void', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'delegate', '.', 'onActivityResult', '(', 'requestCode', ',', ' ', 'resultCode', ',', ' ', 'data', ')', ')', '\n', '            ', 'super', '.', 'onActivityResult', '(', 'requestCode', ',', ' ', 'resultCode', ',', ' ', 'data', ')', ';', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        delegate.onStart();
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    protected void onStart() {
        super.onStart();
        delegate.onStart();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'delegate', '.', 'onStart', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,MainActivity.java,onDestroy,"    protected void onDestroy() {
        super.onDestroy();
        delegate.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    protected void onDestroy() {
        super.onDestroy();
        delegate.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'delegate', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        delegate.onResume();
    }",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    protected void onResume() {
        super.onResume();
        delegate.onResume();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'delegate', '.', 'onResume', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,6142908dcc58efa99ed01a483095330acd1bd86c,TvActivity.java,onCreate,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tv_activity_main);

        Button openPrefs = findViewById(R.id.main_openPrefs);
        openPrefs.setOnClickListener((v) -> startActivity(new Intent(this, PreferenceActivity.class)));

        Aria2ConfigurationScreen screen = findViewById(R.id.main_preferences);
        screen.setup(R.style.Theme_MaterialComponents_DayNight_Dialog_Alert,
                new Aria2ConfigurationScreen.OutputPathSelector(this, ControlActivityDelegate.STORAGE_ACCESS_CODE),
                PK.START_AT_BOOT, PK.START_WITH_APP, true);

        toggleServer = findViewById(R.id.main_toggleServer);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> {
            delegate.toggleService(isChecked);
        });

        try {
            delegate = new ControlActivityDelegate(this, this, screen);
        } catch (BadEnvironmentException ex) {
            Logging.log(ex);
            finish();
            return;
        }

        TextView version = findViewById(R.id.main_version);
        try {
            version.setText(delegate.version());
        } catch (BadEnvironmentException | IOException ex) {
            version.setText(R.string.unknown);
            Logging.log(ex);
        }

        if (Prefs.getBoolean(PK.START_WITH_APP, false))
            delegate.toggleService(true);",https://www.github.com/devgianlu/aria2android/commit/6142908dcc58efa99ed01a483095330acd1bd86c,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tv_activity_main);

        Button openPrefs = findViewById(R.id.main_openPrefs);
        openPrefs.setOnClickListener((v) -> startActivity(new Intent(this, PreferenceActivity.class)));

        Aria2ConfigurationScreen screen = findViewById(R.id.main_preferences);
        screen.setup(R.style.Theme_MaterialComponents_DayNight_Dialog_Alert,
                new Aria2ConfigurationScreen.OutputPathSelector(this, ControlActivityDelegate.STORAGE_ACCESS_CODE),
                PK.START_AT_BOOT, PK.START_WITH_APP, true);

        toggleServer = findViewById(R.id.main_toggleServer);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> {
            delegate.toggleService(isChecked);
        });

        try {
            delegate = new ControlActivityDelegate(this, this, screen);
        } catch (BadEnvironmentException ex) {
            Logging.log(ex);
            finish();
            return;
        }

        TextView version = findViewById(R.id.main_version);
        try {
            version.setText(delegate.version());
        } catch (BadEnvironmentException | IOException ex) {
            version.setText(R.string.unknown);
            Logging.log(ex);
        }

        if (Prefs.getBoolean(PK.START_WITH_APP, false))
            delegate.toggleService(true);
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', '@Nullable', ' ', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'tv_activity_main', ')', ';', '\n', '\n', '        ', 'Button', ' ', 'openPrefs', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_openPrefs', ')', ';', '\n', '        ', 'openPrefs', '.', 'setOnClickListener', '(', '(', 'v', ')', ' ', '-', '>', ' ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'PreferenceActivity', '.', 'class', ')', ')', ')', ';', '\n', '\n', '        ', 'Aria2ConfigurationScreen', ' ', 'screen', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_preferences', ')', ';', '\n', '        ', 'screen', '.', 'setup', '(', 'R', '.', 'style', '.', 'Theme_MaterialComponents_DayNight_Dialog_Alert', ',', '\n', '                ', 'new', ' ', 'Aria2ConfigurationScreen', '.', 'OutputPathSelector', '(', 'this', ',', ' ', 'ControlActivityDelegate', '.', 'STORAGE_ACCESS_CODE', ')', ',', '\n', '                ', 'PK', '.', 'START_AT_BOOT', ',', ' ', 'PK', '.', 'START_WITH_APP', ',', ' ', 'true', ')', ';', '\n', '\n', '        ', 'toggleServer', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_toggleServer', ')', ';', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', '(', 'buttonView', ',', ' ', 'isChecked', ')', ' ', '-', '>', ' ', '{', '\n', '            ', 'delegate', '.', 'toggleService', '(', 'isChecked', ')', ';', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'delegate', ' ', '=', ' ', 'new', ' ', 'ControlActivityDelegate', '(', 'this', ',', ' ', 'this', ',', ' ', 'screen', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'TextView', ' ', 'version', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_version', ')', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'version', '.', 'setText', '(', 'delegate', '.', 'version', '(', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', '|', ' ', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'version', '.', 'setText', '(', 'R', '.', 'string', '.', 'unknown', ')', ';', '\n', '            ', 'Logging', '.', 'log', '(', 'ex', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_WITH_APP', ',', ' ', 'false', ')', ')', '\n', '            ', 'delegate', '.', 'toggleService', '(', 'true', ')', ';', '\n', '<END>']"
master,3d7d99922c406b46b53ec6a89d3285293ece06fc,MainActivity.java,onActivityResult,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (delegate != null && delegate.onActivityResult(requestCode, resultCode, data))
            super.onActivityResult(requestCode, resultCode, data);",https://www.github.com/devgianlu/aria2android/commit/3d7d99922c406b46b53ec6a89d3285293ece06fc,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (delegate != null && delegate.onActivityResult(requestCode, resultCode, data))
            super.onActivityResult(requestCode, resultCode, data);
","['    ', 'protected', ' ', 'void', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'delegate', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'delegate', '.', 'onActivityResult', '(', 'requestCode', ',', ' ', 'resultCode', ',', ' ', 'data', ')', ')', '\n', '            ', 'super', '.', 'onActivityResult', '(', 'requestCode', ',', ' ', 'resultCode', ',', ' ', 'data', ')', ';', '\n', '<END>']"
master,3d7d99922c406b46b53ec6a89d3285293ece06fc,MainActivity.java,onStart,"    protected void onStart() {
        super.onStart();
        if (delegate != null) delegate.onStart();
    }",https://www.github.com/devgianlu/aria2android/commit/3d7d99922c406b46b53ec6a89d3285293ece06fc,"    protected void onStart() {
        super.onStart();
        if (delegate != null) delegate.onStart();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onStart', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onStart', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'delegate', ' ', '!', '=', ' ', 'null', ')', ' ', 'delegate', '.', 'onStart', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3d7d99922c406b46b53ec6a89d3285293ece06fc,MainActivity.java,onDestroy,"    protected void onDestroy() {
        super.onDestroy();
        if (delegate != null) delegate.onDestroy();
    }",https://www.github.com/devgianlu/aria2android/commit/3d7d99922c406b46b53ec6a89d3285293ece06fc,"    protected void onDestroy() {
        super.onDestroy();
        if (delegate != null) delegate.onDestroy();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onDestroy', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onDestroy', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'delegate', ' ', '!', '=', ' ', 'null', ')', ' ', 'delegate', '.', 'onDestroy', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,3d7d99922c406b46b53ec6a89d3285293ece06fc,MainActivity.java,onResume,"    protected void onResume() {
        super.onResume();
        if (delegate != null) delegate.onResume();
    }",https://www.github.com/devgianlu/aria2android/commit/3d7d99922c406b46b53ec6a89d3285293ece06fc,"    protected void onResume() {
        super.onResume();
        if (delegate != null) delegate.onResume();
    }
","['    ', 'protected', ' ', 'void', ' ', 'onResume', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onResume', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'delegate', ' ', '!', '=', ' ', 'null', ')', ' ', 'delegate', '.', 'onResume', '(', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,ControlActivityDelegate.java,permissionDenied,"                public void permissionDenied(@NonNull String permission) {
                    Toaster.with(context).message(R.string.writePermissionDenied).show();
                }",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"                public void permissionDenied(@NonNull String permission) {
                    Toaster.with(context).message(R.string.writePermissionDenied).show();
                }
","['                ', 'public', ' ', 'void', ' ', 'permissionDenied', '(', '@NonNull', ' ', 'String', ' ', 'permission', ')', ' ', '{', '\n', '                    ', 'Toaster', '.', 'with', '(', 'context', ')', '.', 'message', '(', 'R', '.', 'string', '.', 'writePermissionDenied', ')', '.', 'show', '(', ')', ';', '\n', '                ', '}', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,ControlActivityDelegate.java,addLog,"    private void addLog(@NonNull LogEntry entry) {
        if (screen != null) screen.appendLogEntry(entry);
    }",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"    private void addLog(@NonNull LogEntry entry) {
        if (screen != null) screen.appendLogEntry(entry);
    }
","['    ', 'private', ' ', 'void', ' ', 'addLog', '(', '@NonNull', ' ', 'LogEntry', ' ', 'entry', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', 'screen', '.', 'appendLogEntry', '(', 'entry', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,ControlActivityDelegate.java,onUpdateLogs,"    public void onUpdateLogs(@NonNull List<Aria2Ui.LogMessage> list) {
        for (Aria2Ui.LogMessage msg : list) {
            LogEntry entry = createLogEntry(msg);",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"    public void onUpdateLogs(@NonNull List<Aria2Ui.LogMessage> list) {
        for (Aria2Ui.LogMessage msg : list) {
            LogEntry entry = createLogEntry(msg);
","['    ', 'public', ' ', 'void', ' ', 'onUpdateLogs', '(', '@NonNull', ' ', 'List', '<', 'Aria2Ui', '.', 'LogMessage', '>', ' ', 'list', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ' ', ':', ' ', 'list', ')', ' ', '{', '\n', '            ', 'LogEntry', ' ', 'entry', ' ', '=', ' ', 'createLogEntry', '(', 'msg', ')', ';', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,ControlActivityDelegate.java,createLogEntry,"    private LogEntry createLogEntry(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new LogEntry(LogEntry.Type.INFO, context.getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new LogEntry(LogEntry.Type.INFO, context.getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new LogEntry(LogEntry.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new LogEntry(LogEntry.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new LogEntry(LogEntry.Type.INFO, (String) msg.o);
        }

        return null;
    }",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"    private LogEntry createLogEntry(@NonNull Aria2Ui.LogMessage msg) {
        switch (msg.type) {
            case PROCESS_TERMINATED:
                return new LogEntry(LogEntry.Type.INFO, context.getString(R.string.logTerminated, msg.i));
            case PROCESS_STARTED:
                return new LogEntry(LogEntry.Type.INFO, context.getString(R.string.logStarted, msg.o));
            case MONITOR_FAILED:
            case MONITOR_UPDATE:
                return null;
            case PROCESS_WARN:
                if (msg.o != null)
                    return new LogEntry(LogEntry.Type.WARNING, (String) msg.o);
            case PROCESS_ERROR:
                if (msg.o != null)
                    return new LogEntry(LogEntry.Type.ERROR, (String) msg.o);
            case PROCESS_INFO:
                if (msg.o != null)
                    return new LogEntry(LogEntry.Type.INFO, (String) msg.o);
        }

        return null;
    }
","['    ', 'private', ' ', 'LogEntry', ' ', 'createLogEntry', '(', '@NonNull', ' ', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'switch', ' ', '(', 'msg', '.', 'type', ')', ' ', '{', '\n', '            ', 'case', ' ', 'PROCESS_TERMINATED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'LogEntry', '(', 'LogEntry', '.', 'Type', '.', 'INFO', ',', ' ', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'logTerminated', ',', ' ', 'msg', '.', 'i', ')', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_STARTED', ':', '\n', '                ', 'return', ' ', 'new', ' ', 'LogEntry', '(', 'LogEntry', '.', 'Type', '.', 'INFO', ',', ' ', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'logStarted', ',', ' ', 'msg', '.', 'o', ')', ')', ';', '\n', '            ', 'case', ' ', 'MONITOR_FAILED', ':', '\n', '            ', 'case', ' ', 'MONITOR_UPDATE', ':', '\n', '                ', 'return', ' ', 'null', ';', '\n', '            ', 'case', ' ', 'PROCESS_WARN', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'LogEntry', '(', 'LogEntry', '.', 'Type', '.', 'WARNING', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_ERROR', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'LogEntry', '(', 'LogEntry', '.', 'Type', '.', 'ERROR', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'case', ' ', 'PROCESS_INFO', ':', '\n', '                ', 'if', ' ', '(', 'msg', '.', 'o', ' ', '!', '=', ' ', 'null', ')', '\n', '                    ', 'return', ' ', 'new', ' ', 'LogEntry', '(', 'LogEntry', '.', 'Type', '.', 'INFO', ',', ' ', '(', 'String', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'null', ';', '\n', '    ', '}', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,ControlActivityDelegate.java,onMessage,"    public void onMessage(@NonNull Aria2Ui.LogMessage msg) {
        if (msg.type == Message.Type.MONITOR_FAILED) {
            Log.e(TAG, ""Monitor failed!"", (Throwable) msg.o);
            return;
        }

        if (msg.type == Message.Type.MONITOR_UPDATE) return;

        LogEntry entry = createLogEntry(msg);
        if (entry != null) addLog(entry);
    }",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"    public void onMessage(@NonNull Aria2Ui.LogMessage msg) {
        if (msg.type == Message.Type.MONITOR_FAILED) {
            Log.e(TAG, ""Monitor failed!"", (Throwable) msg.o);
            return;
        }

        if (msg.type == Message.Type.MONITOR_UPDATE) return;

        LogEntry entry = createLogEntry(msg);
        if (entry != null) addLog(entry);
    }
","['    ', 'public', ' ', 'void', ' ', 'onMessage', '(', '@NonNull', ' ', 'Aria2Ui', '.', 'LogMessage', ' ', 'msg', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'msg', '.', 'type', ' ', '=', '=', ' ', 'Message', '.', 'Type', '.', 'MONITOR_FAILED', ')', ' ', '{', '\n', '            ', 'Log', '.', 'e', '(', 'TAG', ',', ' ', '""', 'Monitor failed!', '""', ',', ' ', '(', 'Throwable', ')', ' ', 'msg', '.', 'o', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'msg', '.', 'type', ' ', '=', '=', ' ', 'Message', '.', 'Type', '.', 'MONITOR_UPDATE', ')', ' ', 'return', ';', '\n', '\n', '        ', 'LogEntry', ' ', 'entry', ' ', '=', ' ', 'createLogEntry', '(', 'msg', ')', ';', '\n', '        ', 'if', ' ', '(', 'entry', ' ', '!', '=', ' ', 'null', ')', ' ', 'addLog', '(', 'entry', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,ThisApplication.java,onCreate,"    public void onCreate() {
        super.onCreate();
        Aria2Ui.provider(Aria2BareConfig.class);
    }",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"    public void onCreate() {
        super.onCreate();
        Aria2Ui.provider(Aria2BareConfig.class);
    }
","['    ', 'public', ' ', 'void', ' ', 'onCreate', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', ')', ';', '\n', '        ', 'Aria2Ui', '.', 'provider', '(', 'Aria2BareConfig', '.', 'class', ')', ';', '\n', '    ', '}', '\n', '<END>']"
master,8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,TvActivity.java,onCreate,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tv_activity_main);

        Button openPrefs = findViewById(R.id.main_openPrefs);
        openPrefs.setOnClickListener((v) -> startActivity(new Intent(this, PreferenceActivity.class)));

        Aria2ConfigurationScreen screen = findViewById(R.id.main_preferences);
        screen.setup(R.style.Theme_MaterialComponents_DayNight_Dialog_Alert,
                new Aria2ConfigurationScreen.OutputPathSelector(this, ControlActivityDelegate.STORAGE_ACCESS_CODE),
                PK.START_AT_BOOT, PK.START_WITH_APP, true);

        toggleServer = findViewById(R.id.main_toggleServer);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> {
            delegate.toggleService(isChecked);
        });

        try {
            delegate = new ControlActivityDelegate(this, this, screen);
        } catch (BadEnvironmentException ex) {
            Log.e(TAG, ""Bad environment."", ex);
            finish();
            return;
        }

        TextView version = findViewById(R.id.main_version);
        try {
            version.setText(delegate.version());
        } catch (BadEnvironmentException | IOException ex) {
            version.setText(R.string.unknown);
        }

        if (Prefs.getBoolean(PK.START_WITH_APP, false))
            delegate.toggleService(true);",https://www.github.com/devgianlu/aria2android/commit/8b64e829737c2a0ee591cf52340dbfe5c1eee8bb,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tv_activity_main);

        Button openPrefs = findViewById(R.id.main_openPrefs);
        openPrefs.setOnClickListener((v) -> startActivity(new Intent(this, PreferenceActivity.class)));

        Aria2ConfigurationScreen screen = findViewById(R.id.main_preferences);
        screen.setup(R.style.Theme_MaterialComponents_DayNight_Dialog_Alert,
                new Aria2ConfigurationScreen.OutputPathSelector(this, ControlActivityDelegate.STORAGE_ACCESS_CODE),
                PK.START_AT_BOOT, PK.START_WITH_APP, true);

        toggleServer = findViewById(R.id.main_toggleServer);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> {
            delegate.toggleService(isChecked);
        });

        try {
            delegate = new ControlActivityDelegate(this, this, screen);
        } catch (BadEnvironmentException ex) {
            Log.e(TAG, ""Bad environment."", ex);
            finish();
            return;
        }

        TextView version = findViewById(R.id.main_version);
        try {
            version.setText(delegate.version());
        } catch (BadEnvironmentException | IOException ex) {
            version.setText(R.string.unknown);
        }

        if (Prefs.getBoolean(PK.START_WITH_APP, false))
            delegate.toggleService(true);
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', '@Nullable', ' ', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'tv_activity_main', ')', ';', '\n', '\n', '        ', 'Button', ' ', 'openPrefs', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_openPrefs', ')', ';', '\n', '        ', 'openPrefs', '.', 'setOnClickListener', '(', '(', 'v', ')', ' ', '-', '>', ' ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'PreferenceActivity', '.', 'class', ')', ')', ')', ';', '\n', '\n', '        ', 'Aria2ConfigurationScreen', ' ', 'screen', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_preferences', ')', ';', '\n', '        ', 'screen', '.', 'setup', '(', 'R', '.', 'style', '.', 'Theme_MaterialComponents_DayNight_Dialog_Alert', ',', '\n', '                ', 'new', ' ', 'Aria2ConfigurationScreen', '.', 'OutputPathSelector', '(', 'this', ',', ' ', 'ControlActivityDelegate', '.', 'STORAGE_ACCESS_CODE', ')', ',', '\n', '                ', 'PK', '.', 'START_AT_BOOT', ',', ' ', 'PK', '.', 'START_WITH_APP', ',', ' ', 'true', ')', ';', '\n', '\n', '        ', 'toggleServer', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_toggleServer', ')', ';', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', '(', 'buttonView', ',', ' ', 'isChecked', ')', ' ', '-', '>', ' ', '{', '\n', '            ', 'delegate', '.', 'toggleService', '(', 'isChecked', ')', ';', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'delegate', ' ', '=', ' ', 'new', ' ', 'ControlActivityDelegate', '(', 'this', ',', ' ', 'this', ',', ' ', 'screen', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Log', '.', 'e', '(', 'TAG', ',', ' ', '""', 'Bad environment.', '""', ',', ' ', 'ex', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'TextView', ' ', 'version', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_version', ')', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'version', '.', 'setText', '(', 'delegate', '.', 'version', '(', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', '|', ' ', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'version', '.', 'setText', '(', 'R', '.', 'string', '.', 'unknown', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_WITH_APP', ',', ' ', 'false', ')', ')', '\n', '            ', 'delegate', '.', 'toggleService', '(', 'true', ')', ';', '\n', '<END>']"
master,5343cc867b29af7a4cafa12abf909c067e2a1bc3,ControlActivityDelegate.java,onActivityResult,"    boolean onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == RC_STORAGE_ACCESS_CODE) {
            if (resultCode == Activity.RESULT_OK) {",https://www.github.com/devgianlu/aria2android/commit/5343cc867b29af7a4cafa12abf909c067e2a1bc3,"    boolean onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == RC_STORAGE_ACCESS_CODE) {
            if (resultCode == Activity.RESULT_OK) {
","['    ', 'boolean', ' ', 'onActivityResult', '(', 'int', ' ', 'requestCode', ',', ' ', 'int', ' ', 'resultCode', ',', ' ', 'Intent', ' ', 'data', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'requestCode', ' ', '=', '=', ' ', 'RC_STORAGE_ACCESS_CODE', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'resultCode', ' ', '=', '=', ' ', 'Activity', '.', 'RESULT_OK', ')', ' ', '{', '\n', '<END>']"
master,5343cc867b29af7a4cafa12abf909c067e2a1bc3,TvActivity.java,onCreate,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tv_activity_main);

        Button openPrefs = findViewById(R.id.main_openPrefs);
        openPrefs.setOnClickListener((v) -> startActivity(new Intent(this, PreferenceActivity.class)));

        Aria2ConfigurationScreen screen = findViewById(R.id.main_preferences);
        screen.setup(R.style.Theme_MaterialComponents_DayNight_Dialog_Alert,
                new Aria2ConfigurationScreen.OutputPathSelector(this, ControlActivityDelegate.RC_STORAGE_ACCESS_CODE),
                PK.START_AT_BOOT, PK.START_WITH_APP, true);

        toggleServer = findViewById(R.id.main_toggleServer);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> {
            delegate.toggleService(isChecked);
        });

        try {
            delegate = new ControlActivityDelegate(this, this, screen);
        } catch (BadEnvironmentException ex) {
            Log.e(TAG, ""Bad environment."", ex);
            finish();
            return;
        }

        TextView version = findViewById(R.id.main_version);
        try {
            version.setText(delegate.version());
        } catch (BadEnvironmentException | IOException ex) {
            version.setText(R.string.unknown);
        }

        if (Prefs.getBoolean(PK.START_WITH_APP, false))
            delegate.toggleService(true);",https://www.github.com/devgianlu/aria2android/commit/5343cc867b29af7a4cafa12abf909c067e2a1bc3,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tv_activity_main);

        Button openPrefs = findViewById(R.id.main_openPrefs);
        openPrefs.setOnClickListener((v) -> startActivity(new Intent(this, PreferenceActivity.class)));

        Aria2ConfigurationScreen screen = findViewById(R.id.main_preferences);
        screen.setup(R.style.Theme_MaterialComponents_DayNight_Dialog_Alert,
                new Aria2ConfigurationScreen.OutputPathSelector(this, ControlActivityDelegate.RC_STORAGE_ACCESS_CODE),
                PK.START_AT_BOOT, PK.START_WITH_APP, true);

        toggleServer = findViewById(R.id.main_toggleServer);
        toggleServer.setOnCheckedChangeListener((buttonView, isChecked) -> {
            delegate.toggleService(isChecked);
        });

        try {
            delegate = new ControlActivityDelegate(this, this, screen);
        } catch (BadEnvironmentException ex) {
            Log.e(TAG, ""Bad environment."", ex);
            finish();
            return;
        }

        TextView version = findViewById(R.id.main_version);
        try {
            version.setText(delegate.version());
        } catch (BadEnvironmentException | IOException ex) {
            version.setText(R.string.unknown);
        }

        if (Prefs.getBoolean(PK.START_WITH_APP, false))
            delegate.toggleService(true);
","['    ', 'protected', ' ', 'void', ' ', 'onCreate', '(', '@Nullable', ' ', 'Bundle', ' ', 'savedInstanceState', ')', ' ', '{', '\n', '        ', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '\n', '        ', 'setContentView', '(', 'R', '.', 'layout', '.', 'tv_activity_main', ')', ';', '\n', '\n', '        ', 'Button', ' ', 'openPrefs', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_openPrefs', ')', ';', '\n', '        ', 'openPrefs', '.', 'setOnClickListener', '(', '(', 'v', ')', ' ', '-', '>', ' ', 'startActivity', '(', 'new', ' ', 'Intent', '(', 'this', ',', ' ', 'PreferenceActivity', '.', 'class', ')', ')', ')', ';', '\n', '\n', '        ', 'Aria2ConfigurationScreen', ' ', 'screen', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_preferences', ')', ';', '\n', '        ', 'screen', '.', 'setup', '(', 'R', '.', 'style', '.', 'Theme_MaterialComponents_DayNight_Dialog_Alert', ',', '\n', '                ', 'new', ' ', 'Aria2ConfigurationScreen', '.', 'OutputPathSelector', '(', 'this', ',', ' ', 'ControlActivityDelegate', '.', 'RC_STORAGE_ACCESS_CODE', ')', ',', '\n', '                ', 'PK', '.', 'START_AT_BOOT', ',', ' ', 'PK', '.', 'START_WITH_APP', ',', ' ', 'true', ')', ';', '\n', '\n', '        ', 'toggleServer', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_toggleServer', ')', ';', '\n', '        ', 'toggleServer', '.', 'setOnCheckedChangeListener', '(', '(', 'buttonView', ',', ' ', 'isChecked', ')', ' ', '-', '>', ' ', '{', '\n', '            ', 'delegate', '.', 'toggleService', '(', 'isChecked', ')', ';', '\n', '        ', '}', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'delegate', ' ', '=', ' ', 'new', ' ', 'ControlActivityDelegate', '(', 'this', ',', ' ', 'this', ',', ' ', 'screen', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'Log', '.', 'e', '(', 'TAG', ',', ' ', '""', 'Bad environment.', '""', ',', ' ', 'ex', ')', ';', '\n', '            ', 'finish', '(', ')', ';', '\n', '            ', 'return', ';', '\n', '        ', '}', '\n', '\n', '        ', 'TextView', ' ', 'version', ' ', '=', ' ', 'findViewById', '(', 'R', '.', 'id', '.', 'main_version', ')', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'version', '.', 'setText', '(', 'delegate', '.', 'version', '(', ')', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'BadEnvironmentException', ' ', '|', ' ', 'IOException', ' ', 'ex', ')', ' ', '{', '\n', '            ', 'version', '.', 'setText', '(', 'R', '.', 'string', '.', 'unknown', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'Prefs', '.', 'getBoolean', '(', 'PK', '.', 'START_WITH_APP', ',', ' ', 'false', ')', ')', '\n', '            ', 'delegate', '.', 'toggleService', '(', 'true', ')', ';', '\n', '<END>']"
master,4e394bc9a0d9596915164dbc8a72f62749080dbc,ControlActivityDelegate.java,updateUiStatus,"    private void updateUiStatus(boolean on) {
        if (screen != null) {
            screen.lockPreferences(on);
            screen.refreshNics();
        }

        updateToggle.setStatus(on);

        if (screen == null && aria2 != null)
            context.runOnUiThread(aria2::askForStatus);",https://www.github.com/devgianlu/aria2android/commit/4e394bc9a0d9596915164dbc8a72f62749080dbc,"    private void updateUiStatus(boolean on) {
        if (screen != null) {
            screen.lockPreferences(on);
            screen.refreshNics();
        }

        updateToggle.setStatus(on);

        if (screen == null && aria2 != null)
            context.runOnUiThread(aria2::askForStatus);
","['    ', 'private', ' ', 'void', ' ', 'updateUiStatus', '(', 'boolean', ' ', 'on', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'screen', '.', 'lockPreferences', '(', 'on', ')', ';', '\n', '            ', 'screen', '.', 'refreshNics', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'updateToggle', '.', 'setStatus', '(', 'on', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'screen', ' ', '=', '=', ' ', 'null', ' ', '&', '&', ' ', 'aria2', ' ', '!', '=', ' ', 'null', ')', '\n', '            ', 'context', '.', 'runOnUiThread', '(', 'aria2', ':', ':', 'askForStatus', ')', ';', '\n', '<END>']"
