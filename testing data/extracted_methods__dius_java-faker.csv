Branch Name,Commit Hash,File Name,Method Name,Method Code,Commit Link,Method Code No Comments,Tokens
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,Faker.java,firstName,"    public String firstName() {
        return fetch(""name.first_name"");
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public String firstName() {
        return fetch(""name.first_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetch', '(', '""', 'name.first_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,Faker.java,lastName,"    public String lastName() {
        return fetch(""name.last_name"");
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public String lastName() {
        return fetch(""name.last_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetch', '(', '""', 'name.last_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,Faker.java,prefix,"    public String prefix() {
        return fetch(""name.prefix"");
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public String prefix() {
        return fetch(""name.prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetch', '(', '""', 'name.prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,Faker.java,phoneNumber,"    public String phoneNumber() {
        return numerify(fetch(""phone_number.formats""));
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public String phoneNumber() {
        return numerify(fetch(""phone_number.formats""));
    }
","['    ', 'public', ' ', 'String', ' ', 'phoneNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'numerify', '(', 'fetch', '(', '""', 'phone_number.formats', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,Faker.java,numerify,"    public String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(RandomUtils.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(RandomUtils.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'numberString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'#'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'RandomUtils', '.', 'nextInt', '(', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,Faker.java,fetch,"    public String fetch(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        List<String> valuesArray = (List<String>) currentValue;
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public String fetch(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        List<String> valuesArray = (List<String>) currentValue;
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'String', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'path', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n', '        ', 'Object', ' ', 'currentValue', ' ', '=', ' ', 'fakeValuesMap', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'pathSection', ' ', ':', ' ', 'path', ')', ' ', '{', '\n', '            ', 'currentValue', ' ', '=', ' ', '(', '(', 'Map', '<', 'String', ',', ' ', 'Object', '>', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'pathSection', ')', ';', '\n', '        ', '}', '\n', '        ', 'List', '<', 'String', '>', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'currentValue', ';', '\n', '        ', 'return', ' ', 'valuesArray', '.', 'get', '(', 'RandomUtils', '.', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a562271ad7aa872f1d46597ebc7667d4fd988a39,FakerTest.java,shouldFetchCorrectValue,"    public void shouldFetchCorrectValue() {
        Faker faker = new Faker();
        String firstName = faker.firstName();
        Assert.assertNotNull(firstName);
        String lastName = faker.lastName();
        Assert.assertNotNull(lastName);
        String prefix = faker.prefix();
        Assert.assertNotNull(prefix);
        String phoneNumber = faker.phoneNumber();
        Assert.assertNotNull(phoneNumber);
    }",https://www.github.com/dius/java-faker/commit/a562271ad7aa872f1d46597ebc7667d4fd988a39,"    public void shouldFetchCorrectValue() {
        Faker faker = new Faker();
        String firstName = faker.firstName();
        Assert.assertNotNull(firstName);
        String lastName = faker.lastName();
        Assert.assertNotNull(lastName);
        String prefix = faker.prefix();
        Assert.assertNotNull(prefix);
        String phoneNumber = faker.phoneNumber();
        Assert.assertNotNull(phoneNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldFetchCorrectValue', '(', ')', ' ', '{', '\n', '        ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'faker', '.', 'firstName', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'firstName', ')', ';', '\n', '        ', 'String', ' ', 'lastName', ' ', '=', ' ', 'faker', '.', 'lastName', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'lastName', ')', ';', '\n', '        ', 'String', ' ', 'prefix', ' ', '=', ' ', 'faker', '.', 'prefix', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'prefix', ')', ';', '\n', '        ', 'String', ' ', 'phoneNumber', ' ', '=', ' ', 'faker', '.', 'phoneNumber', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'phoneNumber', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,firstName,"    public static String firstName() {
        return (String) fetch(""name.first_name"");
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static String firstName() {
        return (String) fetch(""name.first_name"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'name.first_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,lastName,"    public static String lastName() {
        return (String) fetch(""name.last_name"");
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static String lastName() {
        return (String) fetch(""name.last_name"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'name.last_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,prefix,"    public static String prefix() {
        return (String) fetch(""name.prefix"");
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static String prefix() {
        return (String) fetch(""name.prefix"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'name.prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,suffix,"    public static String suffix() {
        return (String) fetch(""name.suffix"");
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static String suffix() {
        return (String) fetch(""name.suffix"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'name.suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,phoneNumber,"    public static String phoneNumber() {
        return numerify((String) fetch(""phone_number.formats""));
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static String phoneNumber() {
        return numerify((String) fetch(""phone_number.formats""));
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'phoneNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'numerify', '(', '(', 'String', ')', ' ', 'fetch', '(', '""', 'phone_number.formats', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,numerify,"    public static String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(RandomUtils.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(RandomUtils.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'numberString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'#'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'RandomUtils', '.', 'nextInt', '(', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,Faker.java,fetch,"    public static Object fetch(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        List valuesArray = (List) currentValue;
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public static Object fetch(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        List valuesArray = (List) currentValue;
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'static', ' ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'path', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n', '        ', 'Object', ' ', 'currentValue', ' ', '=', ' ', 'fakeValuesMap', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'pathSection', ' ', ':', ' ', 'path', ')', ' ', '{', '\n', '            ', 'currentValue', ' ', '=', ' ', '(', '(', 'Map', '<', 'String', ',', ' ', 'Object', '>', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'pathSection', ')', ';', '\n', '        ', '}', '\n', '        ', 'List', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', ')', ' ', 'currentValue', ';', '\n', '        ', 'return', ' ', 'valuesArray', '.', 'get', '(', 'RandomUtils', '.', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4dfe0834db2b87ddd722e26ae9c833e6ef84df44,FakerTest.java,shouldFetchCorrectValue,"    public void shouldFetchCorrectValue() {
        String firstName = Faker.firstName();
        Assert.assertNotNull(firstName);
        String lastName = Faker.lastName();
        Assert.assertNotNull(lastName);
        String prefix = Faker.prefix();
        Assert.assertNotNull(prefix);
        String phoneNumber = Faker.phoneNumber();
        Assert.assertNotNull(phoneNumber);
    }",https://www.github.com/dius/java-faker/commit/4dfe0834db2b87ddd722e26ae9c833e6ef84df44,"    public void shouldFetchCorrectValue() {
        String firstName = Faker.firstName();
        Assert.assertNotNull(firstName);
        String lastName = Faker.lastName();
        Assert.assertNotNull(lastName);
        String prefix = Faker.prefix();
        Assert.assertNotNull(prefix);
        String phoneNumber = Faker.phoneNumber();
        Assert.assertNotNull(phoneNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldFetchCorrectValue', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'Faker', '.', 'firstName', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'firstName', ')', ';', '\n', '        ', 'String', ' ', 'lastName', ' ', '=', ' ', 'Faker', '.', 'lastName', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'lastName', ')', ';', '\n', '        ', 'String', ' ', 'prefix', ' ', '=', ' ', 'Faker', '.', 'prefix', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'prefix', ')', ';', '\n', '        ', 'String', ' ', 'phoneNumber', ' ', '=', ' ', 'Faker', '.', 'phoneNumber', '(', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'phoneNumber', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,streetName,"    public static String streetName() {
        List<String> possibleStreetNames = new ArrayList<String>();
        possibleStreetNames.add(join(new Object[] { lastName(), streetSuffix() }, "" ""));
        possibleStreetNames.add(join(new Object[] { firstName(), streetSuffix() }, "" ""));
        return possibleStreetNames.get(nextInt(possibleStreetNames.size()));
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String streetName() {
        List<String> possibleStreetNames = new ArrayList<String>();
        possibleStreetNames.add(join(new Object[] { lastName(), streetSuffix() }, "" ""));
        possibleStreetNames.add(join(new Object[] { firstName(), streetSuffix() }, "" ""));
        return possibleStreetNames.get(nextInt(possibleStreetNames.size()));
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'possibleStreetNames', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'possibleStreetNames', '.', 'add', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', ' ', '{', ' ', 'lastName', '(', ')', ',', ' ', 'streetSuffix', '(', ')', ' ', '}', ',', ' ', '""', ' ', '""', ')', ')', ';', '\n', '        ', 'possibleStreetNames', '.', 'add', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', ' ', '{', ' ', 'firstName', '(', ')', ',', ' ', 'streetSuffix', '(', ')', ' ', '}', ',', ' ', '""', ' ', '""', ')', ')', ';', '\n', '        ', 'return', ' ', 'possibleStreetNames', '.', 'get', '(', 'nextInt', '(', 'possibleStreetNames', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,streetAddress,"    public static String streetAddress(boolean includeSecondary) {
        String streetAddress = (String) fetch(""address.street_address"") + "" "" + streetName();
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return numerify(streetAddress);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String streetAddress(boolean includeSecondary) {
        String streetAddress = (String) fetch(""address.street_address"") + "" "" + streetName();
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return numerify(streetAddress);
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.street_address', '""', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'streetName', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'includeSecondary', ')', ' ', '{', '\n', '            ', 'streetAddress', ' ', '=', ' ', 'streetAddress', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'secondaryAddress', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'numerify', '(', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,secondaryAddress,"    public static String secondaryAddress() {
        return numerify((String) fetch(""address.secondary_address""));
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String secondaryAddress() {
        return numerify((String) fetch(""address.secondary_address""));
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'secondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'numerify', '(', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.secondary_address', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,zipCode,"    public static String zipCode() {
        return bothify((String) fetch(""address.postcode""));
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String zipCode() {
        return bothify((String) fetch(""address.postcode""));
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'zipCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'bothify', '(', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.postcode', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,streetSuffix,"    public static String streetSuffix() {
        return (String) fetch(""address.street_suffix"");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String streetSuffix() {
        return (String) fetch(""address.street_suffix"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'streetSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.street_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,citySuffix,"    public static String citySuffix() {
        return (String) fetch(""address.city_suffix"");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String citySuffix() {
        return (String) fetch(""address.city_suffix"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'citySuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.city_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,cityPrefix,"    public static String cityPrefix() {
        return (String) fetch(""address.city_prefix"");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String cityPrefix() {
        return (String) fetch(""address.city_prefix"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'cityPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.city_prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,stateAbbr,"    public static String stateAbbr() {
        return (String) fetch(""address.state_abbr"");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String stateAbbr() {
        return (String) fetch(""address.state_abbr"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'stateAbbr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.state_abbr', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFaker.java,country,"    public static String country() {
        return (String) fetch(""address.country"");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String country() {
        return (String) fetch(""address.country"");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', '""', 'address.country', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,Faker.java,letterify,"    public static String letterify(String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (97 + RandomUtils.nextInt(26))); // a-z
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String letterify(String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (97 + RandomUtils.nextInt(26))); 
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'letterString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'?'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', '(', 'char', ')', ' ', '(', '97', ' ', '+', ' ', 'RandomUtils', '.', 'nextInt', '(', '26', ')', ')', ')', ';', ' ', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,Faker.java,bothify,"    public static String bothify(String string) {
        return letterify(numerify(string));
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String bothify(String string) {
        return letterify(numerify(string));
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ' ', '{', '\n', '        ', 'return', ' ', 'letterify', '(', 'numerify', '(', 'string', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,Faker.java,fetch,"    public static Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'static', ' ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'List', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', ')', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'return', ' ', 'valuesArray', '.', 'get', '(', 'RandomUtils', '.', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,Faker.java,fetchObject,"    public static Object fetchObject(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        return currentValue;
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static Object fetchObject(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        return currentValue;
    }
","['    ', 'public', ' ', 'static', ' ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'path', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n', '        ', 'Object', ' ', 'currentValue', ' ', '=', ' ', 'fakeValuesMap', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'pathSection', ' ', ':', ' ', 'path', ')', ' ', '{', '\n', '            ', 'currentValue', ' ', '=', ' ', '(', '(', 'Map', '<', 'String', ',', ' ', 'Object', '>', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'pathSection', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'currentValue', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,words,"    public static List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        Collections.shuffle(words);
        return words.subList(0, num);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        Collections.shuffle(words);
        return words.subList(0, num);
    }
","['    ', 'public', ' ', 'static', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fetchObject', '(', '""', 'lorem.words', '""', ')', ';', '\n', '        ', 'Collections', '.', 'shuffle', '(', 'words', ')', ';', '\n', '        ', 'return', ' ', 'words', '.', 'subList', '(', '0', ',', ' ', 'num', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,words,"    public static List<String> words() {
        return words(3);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static List<String> words() {
        return words(3);
    }
","['    ', 'public', ' ', 'static', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'words', '(', '3', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,sentence,"    public static String sentence(int wordCount) {
        return capitalize(join(words(wordCount + RandomUtils.nextInt(6)), "" "") + ""."");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String sentence(int wordCount) {
        return capitalize(join(words(wordCount + RandomUtils.nextInt(6)), "" "") + ""."");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'capitalize', '(', 'join', '(', 'words', '(', 'wordCount', ' ', '+', ' ', 'RandomUtils', '.', 'nextInt', '(', '6', ')', ')', ',', ' ', '""', ' ', '""', ')', ' ', '+', ' ', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,sentence,"    public static String sentence() {
        return sentence(3);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String sentence() {
        return sentence(3);
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'sentence', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'sentence', '(', '3', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,sentences,"    public static List<String> sentences(int sentenceCount) {
        List<String> sentences = new ArrayList<String>(sentenceCount);
        for (int i = 0; i < sentenceCount; i++) {
            sentences.add(sentence());
        }
        return sentences;
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static List<String> sentences(int sentenceCount) {
        List<String> sentences = new ArrayList<String>(sentenceCount);
        for (int i = 0; i < sentenceCount; i++) {
            sentences.add(sentence());
        }
        return sentences;
    }
","['    ', 'public', ' ', 'static', ' ', 'List', '<', 'String', '>', ' ', 'sentences', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', 'sentenceCount', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'sentenceCount', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'sentences', '.', 'add', '(', 'sentence', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sentences', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,paragraph,"    public static String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + nextInt(3)), "" "");
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + nextInt(3)), "" "");
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'paragraph', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'sentences', '(', 'sentenceCount', ' ', '+', ' ', 'nextInt', '(', '3', ')', ')', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,paragraph,"    public static String paragraph() {
        return paragraph(3);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static String paragraph() {
        return paragraph(3);
    }
","['    ', 'public', ' ', 'static', ' ', 'String', ' ', 'paragraph', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'paragraph', '(', '3', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFaker.java,paragraphs,"    public static List<String> paragraphs(int paragraphCount) {
        List<String> paragraphs = new ArrayList<String>(paragraphCount);
        for (int i = 0; i < paragraphCount; i++) {
            paragraphs.add(paragraph());
        }
        return paragraphs;
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public static List<String> paragraphs(int paragraphCount) {
        List<String> paragraphs = new ArrayList<String>(paragraphCount);
        for (int i = 0; i < paragraphCount; i++) {
            paragraphs.add(paragraph());
        }
        return paragraphs;
    }
","['    ', 'public', ' ', 'static', ' ', 'List', '<', 'String', '>', ' ', 'paragraphs', '(', 'int', ' ', 'paragraphCount', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'paragraphs', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', 'paragraphCount', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'paragraphCount', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'paragraphs', '.', 'add', '(', 'paragraph', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'paragraphs', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testStreetName,"    public void testStreetName() {
        String streetName = AddressFaker.streetName();
        logger.info(""Street name: "" + streetName);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testStreetName() {
        String streetName = AddressFaker.streetName();
        logger.info(""Street name: "" + streetName);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetName', ' ', '=', ' ', 'AddressFaker', '.', 'streetName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street name: ', '""', ' ', '+', ' ', 'streetName', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testStreetAddress,"    public void testStreetAddress() {
        String streetAddress = AddressFaker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testStreetAddress() {
        String streetAddress = AddressFaker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'AddressFaker', '.', 'streetAddress', '(', 'true', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street address: ', '""', ' ', '+', ' ', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testSecondaryAddress,"    public void testSecondaryAddress() {
        String secondaryAddress = AddressFaker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testSecondaryAddress() {
        String secondaryAddress = AddressFaker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSecondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secondaryAddress', ' ', '=', ' ', 'AddressFaker', '.', 'secondaryAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Secondary address: ', '""', ' ', '+', ' ', 'secondaryAddress', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testZipCode,"    public void testZipCode() {
        String zip = AddressFaker.zipCode();
        logger.info(""Address zip code: "" + zip);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testZipCode() {
        String zip = AddressFaker.zipCode();
        logger.info(""Address zip code: "" + zip);
    }
","['    ', 'public', ' ', 'void', ' ', 'testZipCode', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'zip', ' ', '=', ' ', 'AddressFaker', '.', 'zipCode', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address zip code: ', '""', ' ', '+', ' ', 'zip', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testStreetSuffix,"    public void testStreetSuffix() {
        String streetSuffix = AddressFaker.streetSuffix();
        logger.info(""Address suffix: "" + streetSuffix);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testStreetSuffix() {
        String streetSuffix = AddressFaker.streetSuffix();
        logger.info(""Address suffix: "" + streetSuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetSuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetSuffix', ' ', '=', ' ', 'AddressFaker', '.', 'streetSuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address suffix: ', '""', ' ', '+', ' ', 'streetSuffix', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testCitySuffix,"    public void testCitySuffix() {
        String citySuffix = AddressFaker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testCitySuffix() {
        String citySuffix = AddressFaker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCitySuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'citySuffix', ' ', '=', ' ', 'AddressFaker', '.', 'citySuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City suffix: ', '""', ' ', '+', ' ', 'citySuffix', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testCityPrefix,"    public void testCityPrefix() {
        String cityPrefix = AddressFaker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testCityPrefix() {
        String cityPrefix = AddressFaker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCityPrefix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'cityPrefix', ' ', '=', ' ', 'AddressFaker', '.', 'cityPrefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City prefix: ', '""', ' ', '+', ' ', 'cityPrefix', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testStateAbbr,"    public void testStateAbbr() {
        String stateAbbr = AddressFaker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testStateAbbr() {
        String stateAbbr = AddressFaker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStateAbbr', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'stateAbbr', ' ', '=', ' ', 'AddressFaker', '.', 'stateAbbr', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'State abbr: ', '""', ' ', '+', ' ', 'stateAbbr', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,AddressFakerTest.java,testCountry,"    public void testCountry() {
        String country = AddressFaker.country();
        logger.info(""Country: "" + country);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testCountry() {
        String country = AddressFaker.country();
        logger.info(""Country: "" + country);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'country', ' ', '=', ' ', 'AddressFaker', '.', 'country', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Country: ', '""', ' ', '+', ' ', 'country', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,FakerTest.java,shouldFetchCorrectValue,"    public void shouldFetchCorrectValue() {
        // TODO Faker class needs refactor so it can be properly tested
    }
}",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void shouldFetchCorrectValue() {
        
    }
}
","['    ', 'public', ' ', 'void', ' ', 'shouldFetchCorrectValue', '(', ')', ' ', '{', '\n', '        ', '\n', '    ', '}', '\n', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFakerTest.java,shouldReturnSpecifiedNumOfWords,"    public void shouldReturnSpecifiedNumOfWords() {
        List<String> words = LoremFaker.words(4);
        logger.info(""Test words: "" + words.toString());
        Assert.assertEquals(4, words.size());
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void shouldReturnSpecifiedNumOfWords() {
        List<String> words = LoremFaker.words(4);
        logger.info(""Test words: "" + words.toString());
        Assert.assertEquals(4, words.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldReturnSpecifiedNumOfWords', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'LoremFaker', '.', 'words', '(', '4', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test words: ', '""', ' ', '+', ' ', 'words', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '4', ',', ' ', 'words', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFakerTest.java,printFakeSentence,"    public void printFakeSentence() {
        String sentence = LoremFaker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void printFakeSentence() {
        String sentence = LoremFaker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeSentence', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'sentence', ' ', '=', ' ', 'LoremFaker', '.', 'sentence', '(', '7', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentence: ', '""', ' ', '+', ' ', 'sentence', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFakerTest.java,printFakeSentences,"    public void printFakeSentences() {
        List<String> sentences = LoremFaker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void printFakeSentences() {
        List<String> sentences = LoremFaker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeSentences', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'LoremFaker', '.', 'sentences', '(', '3', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentences: ', '""', ' ', '+', ' ', 'sentences', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,LoremFakerTest.java,printFakeParagraph,"    public void printFakeParagraph() {
        String paragraph = LoremFaker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void printFakeParagraph() {
        String paragraph = LoremFaker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeParagraph', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'LoremFaker', '.', 'paragraph', '(', '5', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,NameFakerTest.java,shouldFetchCorrectName,"    public void shouldFetchCorrectName() {
        String firstName = NameFaker.firstName();
        logger.info(""Test first name: "" + firstName);
        Assert.assertNotNull(firstName);

        String lastName = NameFaker.lastName();
        logger.info(""Test last name: "" + lastName);
        Assert.assertNotNull(lastName);

        String prefix = NameFaker.prefix();
        logger.info(""Test prefix: "" + prefix);
        Assert.assertNotNull(prefix);

        String suffix = NameFaker.suffix();
        logger.info(""Test suffix: "" + suffix);
        Assert.assertNotNull(suffix);

        String name = NameFaker.name();
        logger.info(""Test name: "" + name);
        Assert.assertNotNull(name);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void shouldFetchCorrectName() {
        String firstName = NameFaker.firstName();
        logger.info(""Test first name: "" + firstName);
        Assert.assertNotNull(firstName);

        String lastName = NameFaker.lastName();
        logger.info(""Test last name: "" + lastName);
        Assert.assertNotNull(lastName);

        String prefix = NameFaker.prefix();
        logger.info(""Test prefix: "" + prefix);
        Assert.assertNotNull(prefix);

        String suffix = NameFaker.suffix();
        logger.info(""Test suffix: "" + suffix);
        Assert.assertNotNull(suffix);

        String name = NameFaker.name();
        logger.info(""Test name: "" + name);
        Assert.assertNotNull(name);
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldFetchCorrectName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'NameFaker', '.', 'firstName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test first name: ', '""', ' ', '+', ' ', 'firstName', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'firstName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'lastName', ' ', '=', ' ', 'NameFaker', '.', 'lastName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test last name: ', '""', ' ', '+', ' ', 'lastName', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'lastName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'prefix', ' ', '=', ' ', 'NameFaker', '.', 'prefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test prefix: ', '""', ' ', '+', ' ', 'prefix', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'prefix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'suffix', ' ', '=', ' ', 'NameFaker', '.', 'suffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test suffix: ', '""', ' ', '+', ' ', 'suffix', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'suffix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'name', ' ', '=', ' ', 'NameFaker', '.', 'name', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test name: ', '""', ' ', '+', ' ', 'name', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'name', ')', ';', '\n', '    ', '}', '\n']"
master,dd3237e64e691a52d43641a4f3816a230848d76e,PhoneNumberFakerTest.java,testPhoneNumber,"    public void testPhoneNumber() {
        String phoneNumber = PhoneNumberFaker.phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        Assert.assertNotNull(phoneNumber);
    }",https://www.github.com/dius/java-faker/commit/dd3237e64e691a52d43641a4f3816a230848d76e,"    public void testPhoneNumber() {
        String phoneNumber = PhoneNumberFaker.phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        Assert.assertNotNull(phoneNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testPhoneNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'phoneNumber', ' ', '=', ' ', 'PhoneNumberFaker', '.', 'phoneNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Phone number: ', '""', ' ', '+', ' ', 'phoneNumber', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'phoneNumber', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,letterify,"    public String letterify(String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (97 + RandomUtils.nextInt(26))); // a-z
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String letterify(String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (97 + RandomUtils.nextInt(26))); 
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'letterString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'?'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', '(', 'char', ')', ' ', '(', '97', ' ', '+', ' ', 'RandomUtils', '.', 'nextInt', '(', '26', ')', ')', ')', ';', ' ', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,bothify,"    public String bothify(String string) {
        return letterify(numerify(string));
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String bothify(String string) {
        return letterify(numerify(string));
    }
","['    ', 'public', ' ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ' ', '{', '\n', '        ', 'return', ' ', 'letterify', '(', 'numerify', '(', 'string', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,fetch,"    public Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray.get(RandomUtils.nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'List', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', ')', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'return', ' ', 'valuesArray', '.', 'get', '(', 'RandomUtils', '.', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,fetchString,"    public String fetchString(String key) {
        return (String) fetch(key);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String fetchString(String key) {
        return (String) fetch(key);
    }
","['    ', 'public', ' ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'String', ')', ' ', 'fetch', '(', 'key', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,fetchObject,"    public Object fetchObject(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        return currentValue;
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public Object fetchObject(String key) {
        String[] path = key.split(""\\."");
        Object currentValue = fakeValuesMap;
        for (String pathSection : path) {
            currentValue = ((Map<String, Object>) currentValue).get(pathSection);
        }
        return currentValue;
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'path', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n', '        ', 'Object', ' ', 'currentValue', ' ', '=', ' ', 'fakeValuesMap', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'pathSection', ' ', ':', ' ', 'path', ')', ' ', '{', '\n', '            ', 'currentValue', ' ', '=', ' ', '(', '(', 'Map', '<', 'String', ',', ' ', 'Object', '>', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'pathSection', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'currentValue', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,firstName,"    public String firstName() {
        return fetchString(""name.first_name"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String firstName() {
        return fetchString(""name.first_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'name.first_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,lastName,"    public String lastName() {
        return fetchString(""name.last_name"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String lastName() {
        return fetchString(""name.last_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'name.last_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,prefix,"    public String prefix() {
        return fetchString(""name.prefix"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String prefix() {
        return fetchString(""name.prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'name.prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,suffix,"    public String suffix() {
        return fetchString(""name.suffix"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String suffix() {
        return fetchString(""name.suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'name.suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,phoneNumber,"    public String phoneNumber() {
        return numerify(fetchString(""phone_number.formats""));
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String phoneNumber() {
        return numerify(fetchString(""phone_number.formats""));
    }
","['    ', 'public', ' ', 'String', ' ', 'phoneNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'numerify', '(', 'fetchString', '(', '""', 'phone_number.formats', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,words,"    public List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        Collections.shuffle(words);
        return words.subList(0, num);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        Collections.shuffle(words);
        return words.subList(0, num);
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fetchObject', '(', '""', 'lorem.words', '""', ')', ';', '\n', '        ', 'Collections', '.', 'shuffle', '(', 'words', ')', ';', '\n', '        ', 'return', ' ', 'words', '.', 'subList', '(', '0', ',', ' ', 'num', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,sentence,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + RandomUtils.nextInt(6)), "" "") + ""."");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + RandomUtils.nextInt(6)), "" "") + ""."");
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'capitalize', '(', 'join', '(', 'words', '(', 'wordCount', ' ', '+', ' ', 'RandomUtils', '.', 'nextInt', '(', '6', ')', ')', ',', ' ', '""', ' ', '""', ')', ' ', '+', ' ', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,sentences,"    public List<String> sentences(int sentenceCount) {
        List<String> sentences = new ArrayList<String>(sentenceCount);
        for (int i = 0; i < sentenceCount; i++) {
            sentences.add(sentence());
        }
        return sentences;
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public List<String> sentences(int sentenceCount) {
        List<String> sentences = new ArrayList<String>(sentenceCount);
        for (int i = 0; i < sentenceCount; i++) {
            sentences.add(sentence());
        }
        return sentences;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'sentences', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', 'sentenceCount', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'sentenceCount', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'sentences', '.', 'add', '(', 'sentence', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sentences', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,paragraph,"    public String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + nextInt(3)), "" "");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + nextInt(3)), "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'paragraph', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'sentences', '(', 'sentenceCount', ' ', '+', ' ', 'nextInt', '(', '3', ')', ')', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,paragraphs,"    public List<String> paragraphs(int paragraphCount) {
        List<String> paragraphs = new ArrayList<String>(paragraphCount);
        for (int i = 0; i < paragraphCount; i++) {
            paragraphs.add(paragraph());
        }
        return paragraphs;
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public List<String> paragraphs(int paragraphCount) {
        List<String> paragraphs = new ArrayList<String>(paragraphCount);
        for (int i = 0; i < paragraphCount; i++) {
            paragraphs.add(paragraph());
        }
        return paragraphs;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'paragraphs', '(', 'int', ' ', 'paragraphCount', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'paragraphs', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', 'paragraphCount', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'paragraphCount', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'paragraphs', '.', 'add', '(', 'paragraph', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'paragraphs', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,streetName,"    public String streetName() {
        List<String> possibleStreetNames = new ArrayList<String>();
        possibleStreetNames.add(join(new Object[] { lastName(), streetSuffix() }, "" ""));
        possibleStreetNames.add(join(new Object[] { firstName(), streetSuffix() }, "" ""));
        return possibleStreetNames.get(nextInt(possibleStreetNames.size()));
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String streetName() {
        List<String> possibleStreetNames = new ArrayList<String>();
        possibleStreetNames.add(join(new Object[] { lastName(), streetSuffix() }, "" ""));
        possibleStreetNames.add(join(new Object[] { firstName(), streetSuffix() }, "" ""));
        return possibleStreetNames.get(nextInt(possibleStreetNames.size()));
    }
","['    ', 'public', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'possibleStreetNames', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'possibleStreetNames', '.', 'add', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', ' ', '{', ' ', 'lastName', '(', ')', ',', ' ', 'streetSuffix', '(', ')', ' ', '}', ',', ' ', '""', ' ', '""', ')', ')', ';', '\n', '        ', 'possibleStreetNames', '.', 'add', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', ' ', '{', ' ', 'firstName', '(', ')', ',', ' ', 'streetSuffix', '(', ')', ' ', '}', ',', ' ', '""', ' ', '""', ')', ')', ';', '\n', '        ', 'return', ' ', 'possibleStreetNames', '.', 'get', '(', 'nextInt', '(', 'possibleStreetNames', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,streetAddress,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = fetchString(""address.street_address"") + "" "" + streetName();
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return numerify(streetAddress);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = fetchString(""address.street_address"") + "" "" + streetName();
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return numerify(streetAddress);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'fetchString', '(', '""', 'address.street_address', '""', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'streetName', '(', ')', ';', '\n', '        ', 'if', ' ', '(', 'includeSecondary', ')', ' ', '{', '\n', '            ', 'streetAddress', ' ', '=', ' ', 'streetAddress', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'secondaryAddress', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'numerify', '(', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,secondaryAddress,"    public String secondaryAddress() {
        return numerify(fetchString(""address.secondary_address""));
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String secondaryAddress() {
        return numerify(fetchString(""address.secondary_address""));
    }
","['    ', 'public', ' ', 'String', ' ', 'secondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'numerify', '(', 'fetchString', '(', '""', 'address.secondary_address', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,zipCode,"    public String zipCode() {
        return bothify(fetchString(""address.postcode""));
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String zipCode() {
        return bothify(fetchString(""address.postcode""));
    }
","['    ', 'public', ' ', 'String', ' ', 'zipCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'bothify', '(', 'fetchString', '(', '""', 'address.postcode', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,streetSuffix,"    public String streetSuffix() {
        return fetchString(""address.street_suffix"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String streetSuffix() {
        return fetchString(""address.street_suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'address.street_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,citySuffix,"    public String citySuffix() {
        return fetchString(""address.city_suffix"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String citySuffix() {
        return fetchString(""address.city_suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'citySuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'address.city_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,cityPrefix,"    public String cityPrefix() {
        return fetchString(""address.city_prefix"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String cityPrefix() {
        return fetchString(""address.city_prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'cityPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'address.city_prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,stateAbbr,"    public String stateAbbr() {
        return fetchString(""address.state_abbr"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String stateAbbr() {
        return fetchString(""address.state_abbr"");
    }
","['    ', 'public', ' ', 'String', ' ', 'stateAbbr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'address.state_abbr', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,Faker.java,country,"    public String country() {
        return fetchString(""address.country"");
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public String country() {
        return fetchString(""address.country"");
    }
","['    ', 'public', ' ', 'String', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fetchString', '(', '""', 'address.country', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,shouldFetchNames,"    public void shouldFetchNames() {
        String firstName = faker.firstName();
        logger.info(""Test first name: "" + firstName);
        Assert.assertNotNull(firstName);

        String lastName = faker.lastName();
        logger.info(""Test last name: "" + lastName);
        Assert.assertNotNull(lastName);

        String prefix = faker.prefix();
        logger.info(""Test prefix: "" + prefix);
        Assert.assertNotNull(prefix);

        String suffix = faker.suffix();
        logger.info(""Test suffix: "" + suffix);
        Assert.assertNotNull(suffix);

        String name = faker.name();
        logger.info(""Test name: "" + name);
        Assert.assertNotNull(name);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void shouldFetchNames() {
        String firstName = faker.firstName();
        logger.info(""Test first name: "" + firstName);
        Assert.assertNotNull(firstName);

        String lastName = faker.lastName();
        logger.info(""Test last name: "" + lastName);
        Assert.assertNotNull(lastName);

        String prefix = faker.prefix();
        logger.info(""Test prefix: "" + prefix);
        Assert.assertNotNull(prefix);

        String suffix = faker.suffix();
        logger.info(""Test suffix: "" + suffix);
        Assert.assertNotNull(suffix);

        String name = faker.name();
        logger.info(""Test name: "" + name);
        Assert.assertNotNull(name);
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldFetchNames', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'faker', '.', 'firstName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test first name: ', '""', ' ', '+', ' ', 'firstName', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'firstName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'lastName', ' ', '=', ' ', 'faker', '.', 'lastName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test last name: ', '""', ' ', '+', ' ', 'lastName', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'lastName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'prefix', ' ', '=', ' ', 'faker', '.', 'prefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test prefix: ', '""', ' ', '+', ' ', 'prefix', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'prefix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'suffix', ' ', '=', ' ', 'faker', '.', 'suffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test suffix: ', '""', ' ', '+', ' ', 'suffix', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'suffix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'name', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test name: ', '""', ' ', '+', ' ', 'name', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'name', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testPhoneNumber,"    public void testPhoneNumber() {
        String phoneNumber = faker.phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        Assert.assertNotNull(phoneNumber);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testPhoneNumber() {
        String phoneNumber = faker.phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        Assert.assertNotNull(phoneNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testPhoneNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'phoneNumber', ' ', '=', ' ', 'faker', '.', 'phoneNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Phone number: ', '""', ' ', '+', ' ', 'phoneNumber', ')', ';', '\n', '        ', 'Assert', '.', 'assertNotNull', '(', 'phoneNumber', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,shouldReturnSpecifiedNumOfWords,"    public void shouldReturnSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        Assert.assertEquals(4, words.size());
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void shouldReturnSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        Assert.assertEquals(4, words.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldReturnSpecifiedNumOfWords', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'faker', '.', 'words', '(', '4', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test words: ', '""', ' ', '+', ' ', 'words', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '4', ',', ' ', 'words', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,printFakeSentence,"    public void printFakeSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void printFakeSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeSentence', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'sentence', ' ', '=', ' ', 'faker', '.', 'sentence', '(', '7', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentence: ', '""', ' ', '+', ' ', 'sentence', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,printFakeSentences,"    public void printFakeSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void printFakeSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeSentences', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'faker', '.', 'sentences', '(', '3', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentences: ', '""', ' ', '+', ' ', 'sentences', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,printFakeParagraph,"    public void printFakeParagraph() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void printFakeParagraph() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeParagraph', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'paragraph', '(', '5', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testStreetName,"    public void testStreetName() {
        String streetName = faker.streetName();
        logger.info(""Street name: "" + streetName);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testStreetName() {
        String streetName = faker.streetName();
        logger.info(""Street name: "" + streetName);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetName', ' ', '=', ' ', 'faker', '.', 'streetName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street name: ', '""', ' ', '+', ' ', 'streetName', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testStreetAddress,"    public void testStreetAddress() {
        String streetAddress = faker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testStreetAddress() {
        String streetAddress = faker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'faker', '.', 'streetAddress', '(', 'true', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street address: ', '""', ' ', '+', ' ', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testSecondaryAddress,"    public void testSecondaryAddress() {
        String secondaryAddress = faker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testSecondaryAddress() {
        String secondaryAddress = faker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSecondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secondaryAddress', ' ', '=', ' ', 'faker', '.', 'secondaryAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Secondary address: ', '""', ' ', '+', ' ', 'secondaryAddress', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testZipCode,"    public void testZipCode() {
        String zip = faker.zipCode();
        logger.info(""Address zip code: "" + zip);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testZipCode() {
        String zip = faker.zipCode();
        logger.info(""Address zip code: "" + zip);
    }
","['    ', 'public', ' ', 'void', ' ', 'testZipCode', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'zip', ' ', '=', ' ', 'faker', '.', 'zipCode', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address zip code: ', '""', ' ', '+', ' ', 'zip', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testStreetSuffix,"    public void testStreetSuffix() {
        String streetSuffix = faker.streetSuffix();
        logger.info(""Address suffix: "" + streetSuffix);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testStreetSuffix() {
        String streetSuffix = faker.streetSuffix();
        logger.info(""Address suffix: "" + streetSuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetSuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetSuffix', ' ', '=', ' ', 'faker', '.', 'streetSuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address suffix: ', '""', ' ', '+', ' ', 'streetSuffix', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testCitySuffix,"    public void testCitySuffix() {
        String citySuffix = faker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testCitySuffix() {
        String citySuffix = faker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCitySuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'citySuffix', ' ', '=', ' ', 'faker', '.', 'citySuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City suffix: ', '""', ' ', '+', ' ', 'citySuffix', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testCityPrefix,"    public void testCityPrefix() {
        String cityPrefix = faker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testCityPrefix() {
        String cityPrefix = faker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCityPrefix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'cityPrefix', ' ', '=', ' ', 'faker', '.', 'cityPrefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City prefix: ', '""', ' ', '+', ' ', 'cityPrefix', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testStateAbbr,"    public void testStateAbbr() {
        String stateAbbr = faker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testStateAbbr() {
        String stateAbbr = faker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStateAbbr', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'stateAbbr', ' ', '=', ' ', 'faker', '.', 'stateAbbr', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'State abbr: ', '""', ' ', '+', ' ', 'stateAbbr', ')', ';', '\n', '    ', '}', '\n']"
master,c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,FakerTest.java,testCountry,"    public void testCountry() {
        String country = faker.country();
        logger.info(""Country: "" + country);
    }",https://www.github.com/dius/java-faker/commit/c44c09a5a1aa907a6d5f01a52a777564d2e54c6d,"    public void testCountry() {
        String country = faker.country();
        logger.info(""Country: "" + country);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'country', ' ', '=', ' ', 'faker', '.', 'country', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Country: ', '""', ' ', '+', ' ', 'country', ')', ';', '\n', '    ', '}', '\n']"
master,c51f0ef3593abbe6657e9d5aca5cce5b5340b011,Faker.java,words,"    public List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        List<String> returnList = new ArrayList();
        for (int i=0; i< num;i++) {
            returnList.add(words.get(nextInt(words.size())));
        }
        return returnList;
    }",https://www.github.com/dius/java-faker/commit/c51f0ef3593abbe6657e9d5aca5cce5b5340b011,"    public List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        List<String> returnList = new ArrayList();
        for (int i=0; i< num;i++) {
            returnList.add(words.get(nextInt(words.size())));
        }
        return returnList;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fetchObject', '(', '""', 'lorem.words', '""', ')', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'returnList', ' ', '=', ' ', 'new', ' ', 'ArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', ' ', 'i', '<', ' ', 'num', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'returnList', '.', 'add', '(', 'words', '.', 'get', '(', 'nextInt', '(', 'words', '.', 'size', '(', ')', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'returnList', ';', '\n', '    ', '}', '\n']"
master,7bdecac45fbb6831aef324e54f8b87dad51b418f,Faker.java,letters,"    public String letters(int countOfLetters) {
        StringBuilder builder = new StringBuilder();
        while (builder.length() < countOfLetters) {
            builder.append(sentence());
        }
        return StringUtils.substring(builder.toString(), 0, countOfLetters);
    }",https://www.github.com/dius/java-faker/commit/7bdecac45fbb6831aef324e54f8b87dad51b418f,"    public String letters(int countOfLetters) {
        StringBuilder builder = new StringBuilder();
        while (builder.length() < countOfLetters) {
            builder.append(sentence());
        }
        return StringUtils.substring(builder.toString(), 0, countOfLetters);
    }
","['    ', 'public', ' ', 'String', ' ', 'letters', '(', 'int', ' ', 'countOfLetters', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'builder', '.', 'length', '(', ')', ' ', '<', ' ', 'countOfLetters', ')', ' ', '{', '\n', '            ', 'builder', '.', 'append', '(', 'sentence', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'substring', '(', 'builder', '.', 'toString', '(', ')', ',', ' ', '0', ',', ' ', 'countOfLetters', ')', ';', '\n', '    ', '}', '\n']"
master,7bdecac45fbb6831aef324e54f8b87dad51b418f,FakerTest.java,shouldCreateFixedLenghtString,"    public void shouldCreateFixedLenghtString() {
        Assert.assertEquals(10, faker.letters(10).length());
        Assert.assertEquals(50, faker.letters(50).length());
        Assert.assertEquals(0, faker.letters(0).length());
        Assert.assertEquals(0, faker.letters(-1).length());
    }",https://www.github.com/dius/java-faker/commit/7bdecac45fbb6831aef324e54f8b87dad51b418f,"    public void shouldCreateFixedLenghtString() {
        Assert.assertEquals(10, faker.letters(10).length());
        Assert.assertEquals(50, faker.letters(50).length());
        Assert.assertEquals(0, faker.letters(0).length());
        Assert.assertEquals(0, faker.letters(-1).length());
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldCreateFixedLenghtString', '(', ')', ' ', '{', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '10', ',', ' ', 'faker', '.', 'letters', '(', '10', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '50', ',', ' ', 'faker', '.', 'letters', '(', '50', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '0', ',', ' ', 'faker', '.', 'letters', '(', '0', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '0', ',', ' ', 'faker', '.', 'letters', '(', '-', '1', ')', '.', 'length', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,65b2ba2a8565f3e01db86bfc025f2f5826581cd2,Faker.java,findStream,"    private InputStream findStream(String filename) {
      InputStream streamOnClass = getClass().getResourceAsStream(filename);
      if(streamOnClass!=null)
        return streamOnClass;
      return getClass().getClassLoader().getResourceAsStream(filename);
    }",https://www.github.com/dius/java-faker/commit/65b2ba2a8565f3e01db86bfc025f2f5826581cd2,"    private InputStream findStream(String filename) {
      InputStream streamOnClass = getClass().getResourceAsStream(filename);
      if(streamOnClass!=null)
        return streamOnClass;
      return getClass().getClassLoader().getResourceAsStream(filename);
    }
","['    ', 'private', ' ', 'InputStream', ' ', 'findStream', '(', 'String', ' ', 'filename', ')', ' ', '{', '\n', '      ', 'InputStream', ' ', 'streamOnClass', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'filename', ')', ';', '\n', '      ', 'if', '(', 'streamOnClass', '!', '=', 'null', ')', '\n', '        ', 'return', ' ', 'streamOnClass', ';', '\n', '      ', 'return', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', 'filename', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,shouldFetchNames,"    public void shouldFetchNames() {
        String firstName = faker.firstName();
        logger.info(""Test first name: "" + firstName);
        assertNotNull(firstName);

        String lastName = faker.lastName();
        logger.info(""Test last name: "" + lastName);
        assertNotNull(lastName);

        String prefix = faker.prefix();
        logger.info(""Test prefix: "" + prefix);
        assertNotNull(prefix);

        String suffix = faker.suffix();
        logger.info(""Test suffix: "" + suffix);
        assertNotNull(suffix);

        String name = faker.name();
        logger.info(""Test name: "" + name);
        assertNotNull(name);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void shouldFetchNames() {
        String firstName = faker.firstName();
        logger.info(""Test first name: "" + firstName);
        assertNotNull(firstName);

        String lastName = faker.lastName();
        logger.info(""Test last name: "" + lastName);
        assertNotNull(lastName);

        String prefix = faker.prefix();
        logger.info(""Test prefix: "" + prefix);
        assertNotNull(prefix);

        String suffix = faker.suffix();
        logger.info(""Test suffix: "" + suffix);
        assertNotNull(suffix);

        String name = faker.name();
        logger.info(""Test name: "" + name);
        assertNotNull(name);
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldFetchNames', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'faker', '.', 'firstName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test first name: ', '""', ' ', '+', ' ', 'firstName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'firstName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'lastName', ' ', '=', ' ', 'faker', '.', 'lastName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test last name: ', '""', ' ', '+', ' ', 'lastName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'lastName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'prefix', ' ', '=', ' ', 'faker', '.', 'prefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test prefix: ', '""', ' ', '+', ' ', 'prefix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'prefix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'suffix', ' ', '=', ' ', 'faker', '.', 'suffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test suffix: ', '""', ' ', '+', ' ', 'suffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'suffix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'name', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test name: ', '""', ' ', '+', ' ', 'name', ')', ';', '\n', '        ', 'assertNotNull', '(', 'name', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testPhoneNumber,"    public void testPhoneNumber() {
        String phoneNumber = faker.phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        assertNotNull(phoneNumber);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testPhoneNumber() {
        String phoneNumber = faker.phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        assertNotNull(phoneNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testPhoneNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'phoneNumber', ' ', '=', ' ', 'faker', '.', 'phoneNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Phone number: ', '""', ' ', '+', ' ', 'phoneNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'phoneNumber', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,shouldReturnSpecifiedNumOfWords,"    public void shouldReturnSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void shouldReturnSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldReturnSpecifiedNumOfWords', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'faker', '.', 'words', '(', '4', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test words: ', '""', ' ', '+', ' ', 'words', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '4', ',', ' ', 'words', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,printFakeSentence,"    public void printFakeSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void printFakeSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeSentence', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'sentence', ' ', '=', ' ', 'faker', '.', 'sentence', '(', '7', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentence: ', '""', ' ', '+', ' ', 'sentence', ')', ';', '\n', '        ', 'assertNotNull', '(', 'sentence', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,printFakeSentences,"    public void printFakeSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void printFakeSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeSentences', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'faker', '.', 'sentences', '(', '3', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentences: ', '""', ' ', '+', ' ', 'sentences', ')', ';', '\n', '        ', 'assertEquals', '(', '3', ',', ' ', 'sentences', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,printFakeParagraph,"    public void printFakeParagraph() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void printFakeParagraph() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'printFakeParagraph', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'paragraph', '(', '5', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testStreetName,"    public void testStreetName() {
        String streetName = faker.streetName();
        logger.info(""Street name: "" + streetName);
        assertNotNull(streetName);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testStreetName() {
        String streetName = faker.streetName();
        logger.info(""Street name: "" + streetName);
        assertNotNull(streetName);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetName', ' ', '=', ' ', 'faker', '.', 'streetName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street name: ', '""', ' ', '+', ' ', 'streetName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetName', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testStreetAddress,"    public void testStreetAddress() {
        String streetAddress = faker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
        assertNotNull(streetAddress);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testStreetAddress() {
        String streetAddress = faker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
        assertNotNull(streetAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'faker', '.', 'streetAddress', '(', 'true', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street address: ', '""', ' ', '+', ' ', 'streetAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testSecondaryAddress,"    public void testSecondaryAddress() {
        String secondaryAddress = faker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
        assertNotNull(secondaryAddress);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testSecondaryAddress() {
        String secondaryAddress = faker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
        assertNotNull(secondaryAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSecondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secondaryAddress', ' ', '=', ' ', 'faker', '.', 'secondaryAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Secondary address: ', '""', ' ', '+', ' ', 'secondaryAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'secondaryAddress', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testZipCode,"    public void testZipCode() {
        String zip = faker.zipCode();
        logger.info(""Address zip code: "" + zip);
        assertNotNull(zip);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testZipCode() {
        String zip = faker.zipCode();
        logger.info(""Address zip code: "" + zip);
        assertNotNull(zip);
    }
","['    ', 'public', ' ', 'void', ' ', 'testZipCode', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'zip', ' ', '=', ' ', 'faker', '.', 'zipCode', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address zip code: ', '""', ' ', '+', ' ', 'zip', ')', ';', '\n', '        ', 'assertNotNull', '(', 'zip', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testStreetSuffix,"    public void testStreetSuffix() {
        String streetSuffix = faker.streetSuffix();
        logger.info(""Street suffix: "" + streetSuffix);
        assertNotNull(streetSuffix);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testStreetSuffix() {
        String streetSuffix = faker.streetSuffix();
        logger.info(""Street suffix: "" + streetSuffix);
        assertNotNull(streetSuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetSuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetSuffix', ' ', '=', ' ', 'faker', '.', 'streetSuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street suffix: ', '""', ' ', '+', ' ', 'streetSuffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetSuffix', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testCitySuffix,"    public void testCitySuffix() {
        String citySuffix = faker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
        assertNotNull(citySuffix);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testCitySuffix() {
        String citySuffix = faker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
        assertNotNull(citySuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCitySuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'citySuffix', ' ', '=', ' ', 'faker', '.', 'citySuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City suffix: ', '""', ' ', '+', ' ', 'citySuffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'citySuffix', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testCityPrefix,"    public void testCityPrefix() {
        String cityPrefix = faker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
        assertNotNull(cityPrefix);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testCityPrefix() {
        String cityPrefix = faker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
        assertNotNull(cityPrefix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCityPrefix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'cityPrefix', ' ', '=', ' ', 'faker', '.', 'cityPrefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City prefix: ', '""', ' ', '+', ' ', 'cityPrefix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'cityPrefix', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testStateAbbr,"    public void testStateAbbr() {
        String stateAbbr = faker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
        assertNotNull(stateAbbr);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testStateAbbr() {
        String stateAbbr = faker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
        assertNotNull(stateAbbr);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStateAbbr', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'stateAbbr', ' ', '=', ' ', 'faker', '.', 'stateAbbr', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'State abbr: ', '""', ' ', '+', ' ', 'stateAbbr', ')', ';', '\n', '        ', 'assertNotNull', '(', 'stateAbbr', ')', ';', '\n', '    ', '}', '\n']"
master,abfb547d1c8560a29cf36e9461d181cf69705efc,FakerTest.java,testCountry,"    public void testCountry() {
        String country = faker.country();
        logger.info(""Country: "" + country);
        assertNotNull(country);
    }",https://www.github.com/dius/java-faker/commit/abfb547d1c8560a29cf36e9461d181cf69705efc,"    public void testCountry() {
        String country = faker.country();
        logger.info(""Country: "" + country);
        assertNotNull(country);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'country', ' ', '=', ' ', 'faker', '.', 'country', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Country: ', '""', ' ', '+', ' ', 'country', ')', ';', '\n', '        ', 'assertNotNull', '(', 'country', ')', ';', '\n', '    ', '}', '\n']"
master,fc96c7826757ecd7a26b525d8e160896589b411b,FakerTest.java,testParagraph,"    public void testParagraph() {
        String paragraph = faker.paragraph();
        logger.info(""Paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }",https://www.github.com/dius/java-faker/commit/fc96c7826757ecd7a26b525d8e160896589b411b,"    public void testParagraph() {
        String paragraph = faker.paragraph();
        logger.info(""Paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'testParagraph', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'paragraph', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,fc96c7826757ecd7a26b525d8e160896589b411b,FakerTest.java,testParagraphs,"    public void testParagraphs() {
        final int paragraphCount = 10;
        List<String> paragraphs = faker.paragraphs(paragraphCount);
        logger.info(""Paragraphs: "" + paragraphs);
        assertEquals(paragraphCount, paragraphs.size());
    }",https://www.github.com/dius/java-faker/commit/fc96c7826757ecd7a26b525d8e160896589b411b,"    public void testParagraphs() {
        final int paragraphCount = 10;
        List<String> paragraphs = faker.paragraphs(paragraphCount);
        logger.info(""Paragraphs: "" + paragraphs);
        assertEquals(paragraphCount, paragraphs.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'testParagraphs', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'int', ' ', 'paragraphCount', ' ', '=', ' ', '10', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'paragraphs', ' ', '=', ' ', 'faker', '.', 'paragraphs', '(', 'paragraphCount', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Paragraphs: ', '""', ' ', '+', ' ', 'paragraphs', ')', ';', '\n', '        ', 'assertEquals', '(', 'paragraphCount', ',', ' ', 'paragraphs', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1038556ac14819936014a47b03d4c90e85325453,FakerTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{{Locale.ENGLISH}, {Locale.FRENCH}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/1038556ac14819936014a47b03d4c90e85325453,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{{Locale.ENGLISH}, {Locale.FRENCH}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '{', 'Locale', '.', 'ENGLISH', '}', ',', ' ', '{', 'Locale', '.', 'FRENCH', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,1038556ac14819936014a47b03d4c90e85325453,FakerTest.java,testNames,"    public void testNames() {
        String firstName = faker.firstName();
        logger.info(""Test first name: "" + firstName);
        assertNotNull(firstName);

        String lastName = faker.lastName();
        logger.info(""Test last name: "" + lastName);
        assertNotNull(lastName);

        String prefix = faker.prefix();
        logger.info(""Test prefix: "" + prefix);
        assertNotNull(prefix);

        String suffix = faker.suffix();
        logger.info(""Test suffix: "" + suffix);
        assertNotNull(suffix);

        String name = faker.name();
        logger.info(""Test name: "" + name);
        assertNotNull(name);
    }",https://www.github.com/dius/java-faker/commit/1038556ac14819936014a47b03d4c90e85325453,"    public void testNames() {
        String firstName = faker.firstName();
        logger.info(""Test first name: "" + firstName);
        assertNotNull(firstName);

        String lastName = faker.lastName();
        logger.info(""Test last name: "" + lastName);
        assertNotNull(lastName);

        String prefix = faker.prefix();
        logger.info(""Test prefix: "" + prefix);
        assertNotNull(prefix);

        String suffix = faker.suffix();
        logger.info(""Test suffix: "" + suffix);
        assertNotNull(suffix);

        String name = faker.name();
        logger.info(""Test name: "" + name);
        assertNotNull(name);
    }
","['    ', 'public', ' ', 'void', ' ', 'testNames', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'faker', '.', 'firstName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test first name: ', '""', ' ', '+', ' ', 'firstName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'firstName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'lastName', ' ', '=', ' ', 'faker', '.', 'lastName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test last name: ', '""', ' ', '+', ' ', 'lastName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'lastName', ')', ';', '\n', '\n', '        ', 'String', ' ', 'prefix', ' ', '=', ' ', 'faker', '.', 'prefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test prefix: ', '""', ' ', '+', ' ', 'prefix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'prefix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'suffix', ' ', '=', ' ', 'faker', '.', 'suffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test suffix: ', '""', ' ', '+', ' ', 'suffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'suffix', ')', ';', '\n', '\n', '        ', 'String', ' ', 'name', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test name: ', '""', ' ', '+', ' ', 'name', ')', ';', '\n', '        ', 'assertNotNull', '(', 'name', ')', ';', '\n', '    ', '}', '\n']"
master,1038556ac14819936014a47b03d4c90e85325453,FakerTest.java,testSpecifiedNumOfWords,"    public void testSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());
    }",https://www.github.com/dius/java-faker/commit/1038556ac14819936014a47b03d4c90e85325453,"    public void testSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'testSpecifiedNumOfWords', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'faker', '.', 'words', '(', '4', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test words: ', '""', ' ', '+', ' ', 'words', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '4', ',', ' ', 'words', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1038556ac14819936014a47b03d4c90e85325453,FakerTest.java,testSentence,"    public void testSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);
    }",https://www.github.com/dius/java-faker/commit/1038556ac14819936014a47b03d4c90e85325453,"    public void testSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentence', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'sentence', ' ', '=', ' ', 'faker', '.', 'sentence', '(', '7', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentence: ', '""', ' ', '+', ' ', 'sentence', ')', ';', '\n', '        ', 'assertNotNull', '(', 'sentence', ')', ';', '\n', '    ', '}', '\n']"
master,1038556ac14819936014a47b03d4c90e85325453,FakerTest.java,testSentences,"    public void testSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());
    }",https://www.github.com/dius/java-faker/commit/1038556ac14819936014a47b03d4c90e85325453,"    public void testSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentences', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'faker', '.', 'sentences', '(', '3', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentences: ', '""', ' ', '+', ' ', 'sentences', ')', ';', '\n', '        ', 'assertEquals', '(', '3', ',', ' ', 'sentences', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1038556ac14819936014a47b03d4c90e85325453,FakerTest.java,testSpecifiedNumOfParagraphs,"    public void testSpecifiedNumOfParagraphs() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }",https://www.github.com/dius/java-faker/commit/1038556ac14819936014a47b03d4c90e85325453,"    public void testSpecifiedNumOfParagraphs() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSpecifiedNumOfParagraphs', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'paragraph', '(', '5', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,6aab9d1842c99b3a80c432c4aa03ae1cdb40f9a3,BothifyTest.java,shouldGenerateLettersAndNumbers,"    public void shouldGenerateLettersAndNumbers() {
    	Assert.assertTrue(faker.bothify(""????##@gmail.com"").matches(""\\w{4}\\d{2}@gmail.com""));
    }",https://www.github.com/dius/java-faker/commit/6aab9d1842c99b3a80c432c4aa03ae1cdb40f9a3,"    public void shouldGenerateLettersAndNumbers() {
    	Assert.assertTrue(faker.bothify(""????##@gmail.com"").matches(""\\w{4}\\d{2}@gmail.com""));
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldGenerateLettersAndNumbers', '(', ')', ' ', '{', '\n', '    \t', 'Assert', '.', 'assertTrue', '(', 'faker', '.', 'bothify', '(', '""', '????##@gmail.com', '""', ')', '.', 'matches', '(', '""', '\\\\', 'w{4}', '\\\\', 'd{2}@gmail.com', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7fc5e07284ab573e9718ea7747330542959a52f7,WordsTest.java,shouldGenerateWordsFromLorem,"	public void shouldGenerateWordsFromLorem() {
		assertThat(faker.words(10).get(0), notNullValue());
		assertThat(faker.words(10).get(9), notNullValue());
	}",https://www.github.com/dius/java-faker/commit/7fc5e07284ab573e9718ea7747330542959a52f7,"	public void shouldGenerateWordsFromLorem() {
		assertThat(faker.words(10).get(0), notNullValue());
		assertThat(faker.words(10).get(9), notNullValue());
	}
","['\t', 'public', ' ', 'void', ' ', 'shouldGenerateWordsFromLorem', '(', ')', ' ', '{', '\n', '\t\t', 'assertThat', '(', 'faker', '.', 'words', '(', '10', ')', '.', 'get', '(', '0', ')', ',', ' ', 'notNullValue', '(', ')', ')', ';', '\n', '\t\t', 'assertThat', '(', 'faker', '.', 'words', '(', '10', ')', '.', 'get', '(', '9', ')', ',', ' ', 'notNullValue', '(', ')', ')', ';', '\n', '\t', '}', '\n']"
master,ba001e1d2b9c7fdbca061d778bfa64b8720e95de,Faker.java,words,"    public List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        List<String> returnList = new ArrayList();
        for (int i = 0; i < num; i++) {
            returnList.add(words.get(nextInt(words.size())));
        }
        return returnList;
    }",https://www.github.com/dius/java-faker/commit/ba001e1d2b9c7fdbca061d778bfa64b8720e95de,"    public List<String> words(int num) {
        List<String> words = (List<String>) fetchObject(""lorem.words"");
        List<String> returnList = new ArrayList();
        for (int i = 0; i < num; i++) {
            returnList.add(words.get(nextInt(words.size())));
        }
        return returnList;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fetchObject', '(', '""', 'lorem.words', '""', ')', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'returnList', ' ', '=', ' ', 'new', ' ', 'ArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'num', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'returnList', '.', 'add', '(', 'words', '.', 'get', '(', 'nextInt', '(', 'words', '.', 'size', '(', ')', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'returnList', ';', '\n', '    ', '}', '\n']"
master,140915be49c8e7f6b5c180ab2ddf6f31c4df63a3,Faker.java,findStream,"    private InputStream findStream(String filename) {
      InputStream streamOnClass = getClass().getResourceAsStream(filename);
      if (streamOnClass != null) {
          return streamOnClass;
      }
      return getClass().getClassLoader().getResourceAsStream(filename);
    }",https://www.github.com/dius/java-faker/commit/140915be49c8e7f6b5c180ab2ddf6f31c4df63a3,"    private InputStream findStream(String filename) {
      InputStream streamOnClass = getClass().getResourceAsStream(filename);
      if (streamOnClass != null) {
          return streamOnClass;
      }
      return getClass().getClassLoader().getResourceAsStream(filename);
    }
","['    ', 'private', ' ', 'InputStream', ' ', 'findStream', '(', 'String', ' ', 'filename', ')', ' ', '{', '\n', '      ', 'InputStream', ' ', 'streamOnClass', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'filename', ')', ';', '\n', '      ', 'if', ' ', '(', 'streamOnClass', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '          ', 'return', ' ', 'streamOnClass', ';', '\n', '      ', '}', '\n', '      ', 'return', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', 'filename', ')', ';', '\n', '    ', '}', '\n']"
master,20bc102d5ef66970166396a1900c49a3080912f9,Faker.java,emailAddress,"    public String emailAddress() { return join(new Object[] {
            firstName().toLowerCase(),",https://www.github.com/dius/java-faker/commit/20bc102d5ef66970166396a1900c49a3080912f9,"    public String emailAddress() { return join(new Object[] {
            firstName().toLowerCase(),
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', ' ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', ' ', '{', '\n', '            ', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', ',', '\n']"
master,20bc102d5ef66970166396a1900c49a3080912f9,FakerTest.java,testEmailAddress,"    public void testEmailAddress() {
        String emailAddress = faker.emailAddress();
        logger.info(""Test email address: "" + emailAddress);
        assertNotNull(emailAddress);
    }",https://www.github.com/dius/java-faker/commit/20bc102d5ef66970166396a1900c49a3080912f9,"    public void testEmailAddress() {
        String emailAddress = faker.emailAddress();
        logger.info(""Test email address: "" + emailAddress);
        assertNotNull(emailAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'emailAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test email address: ', '""', ' ', '+', ' ', 'emailAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'emailAddress', ')', ';', '\n', '    ', '}', '\n']"
master,0c46c44491381f5cee7673dd030d8efe6feed1b4,Faker.java,name,"    public String name() {
      return composite(""name.formats"", "" "");
    }",https://www.github.com/dius/java-faker/commit/0c46c44491381f5cee7673dd030d8efe6feed1b4,"    public String name() {
      return composite(""name.formats"", "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '      ', 'return', ' ', 'composite', '(', '""', 'name.formats', '""', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0c46c44491381f5cee7673dd030d8efe6feed1b4,Faker.java,streetName,"    public String streetName() {
        return composite(""address.street_name_formats"", (String)fetchObject(""address.street_name_joiner""));
    }",https://www.github.com/dius/java-faker/commit/0c46c44491381f5cee7673dd030d8efe6feed1b4,"    public String streetName() {
        return composite(""address.street_name_formats"", (String)fetchObject(""address.street_name_joiner""));
    }
","['    ', 'public', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'composite', '(', '""', 'address.street_name_formats', '""', ',', ' ', '(', 'String', ')', 'fetchObject', '(', '""', 'address.street_name_joiner', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0c46c44491381f5cee7673dd030d8efe6feed1b4,Faker.java,streetAddressNumber,"    public String streetAddressNumber() {
      return fetchString(""address.street_address"");
    }",https://www.github.com/dius/java-faker/commit/0c46c44491381f5cee7673dd030d8efe6feed1b4,"    public String streetAddressNumber() {
      return fetchString(""address.street_address"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '      ', 'return', ' ', 'fetchString', '(', '""', 'address.street_address', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0c46c44491381f5cee7673dd030d8efe6feed1b4,Faker.java,streetAddress,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = composite(""address.street_formats"", "" "");
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return numerify(streetAddress);
    }",https://www.github.com/dius/java-faker/commit/0c46c44491381f5cee7673dd030d8efe6feed1b4,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = composite(""address.street_formats"", "" "");
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return numerify(streetAddress);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'composite', '(', '""', 'address.street_formats', '""', ',', ' ', '""', ' ', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'includeSecondary', ')', ' ', '{', '\n', '            ', 'streetAddress', ' ', '=', ' ', 'streetAddress', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'secondaryAddress', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'numerify', '(', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,51224e4d240378d03762ecff42d216855c1f61e0,FakerTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{{Locale.ENGLISH}, {Locale.FRENCH}, {Locale.forLanguageTag(""fi"")}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/51224e4d240378d03762ecff42d216855c1f61e0,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{{Locale.ENGLISH}, {Locale.FRENCH}, {Locale.forLanguageTag(""fi"")}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '{', 'Locale', '.', 'ENGLISH', '}', ',', ' ', '{', 'Locale', '.', 'FRENCH', '}', ',', ' ', '{', 'Locale', '.', 'forLanguageTag', '(', '""', 'fi', '""', ')', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,656dcd1c7938c302ba384490b83d9fe9603c80ff,FakerTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{{Locale.ENGLISH}, {Locale.FRENCH}, {new Locale(""fi"", ""FI"")}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/656dcd1c7938c302ba384490b83d9fe9603c80ff,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{{Locale.ENGLISH}, {Locale.FRENCH}, {new Locale(""fi"", ""FI"")}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '{', 'Locale', '.', 'ENGLISH', '}', ',', ' ', '{', 'Locale', '.', 'FRENCH', '}', ',', ' ', '{', 'new', ' ', 'Locale', '(', '""', 'fi', '""', ',', ' ', '""', 'FI', '""', ')', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,502d531e3a1f435ddeda63f67ea4ae7f4bb98aa8,FakerTest.java,testStreetAddressNumber,"    public void testStreetAddressNumber() {
        final String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
    }",https://www.github.com/dius/java-faker/commit/502d531e3a1f435ddeda63f67ea4ae7f4bb98aa8,"    public void testStreetAddressNumber() {
        final String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddressNumber', ')', ';', '\n', '    ', '}', '\n']"
master,cae84eb3893535bcf42b77457bd595d0395cdea4,Faker.java,composite,"    public String composite(String formatKey, String joiner) {
        List<String> format = (List<String>) fetch(formatKey);

        String[] parts = new String[format.size()];
        for (int i = 0; i < parts.length; i++) {
            // remove leading colon
            String methodName = format.get(i).substring(1);
            // convert to camel case
            methodName = WordUtils.capitalizeFully(methodName, METHOD_NAME_DELIMITERS).replaceAll(""_"", """");
            methodName = methodName.substring(0, 1).toLowerCase() + methodName.substring(1);

            try {
                parts[i] = (String) Faker.class.getDeclaredMethod(methodName, (Class[]) null).invoke(this);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }

        return StringUtils.join(parts, joiner);
    }",https://www.github.com/dius/java-faker/commit/cae84eb3893535bcf42b77457bd595d0395cdea4,"    public String composite(String formatKey, String joiner) {
        List<String> format = (List<String>) fetch(formatKey);

        String[] parts = new String[format.size()];
        for (int i = 0; i < parts.length; i++) {
            
            String methodName = format.get(i).substring(1);
            
            methodName = WordUtils.capitalizeFully(methodName, METHOD_NAME_DELIMITERS).replaceAll(""_"", """");
            methodName = methodName.substring(0, 1).toLowerCase() + methodName.substring(1);

            try {
                parts[i] = (String) Faker.class.getDeclaredMethod(methodName, (Class[]) null).invoke(this);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }

        return StringUtils.join(parts, joiner);
    }
","['    ', 'public', ' ', 'String', ' ', 'composite', '(', 'String', ' ', 'formatKey', ',', ' ', 'String', ' ', 'joiner', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'format', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fetch', '(', 'formatKey', ')', ';', '\n', '\n', '        ', 'String', '[', ']', ' ', 'parts', ' ', '=', ' ', 'new', ' ', 'String', '[', 'format', '.', 'size', '(', ')', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'parts', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', '\n', '            ', 'String', ' ', 'methodName', ' ', '=', ' ', 'format', '.', 'get', '(', 'i', ')', '.', 'substring', '(', '1', ')', ';', '\n', '            ', '\n', '            ', 'methodName', ' ', '=', ' ', 'WordUtils', '.', 'capitalizeFully', '(', 'methodName', ',', ' ', 'METHOD_NAME_DELIMITERS', ')', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ';', '\n', '            ', 'methodName', ' ', '=', ' ', 'methodName', '.', 'substring', '(', '0', ',', ' ', '1', ')', '.', 'toLowerCase', '(', ')', ' ', '+', ' ', 'methodName', '.', 'substring', '(', '1', ')', ';', '\n', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'parts', '[', 'i', ']', ' ', '=', ' ', '(', 'String', ')', ' ', 'Faker', '.', 'class', '.', 'getDeclaredMethod', '(', 'methodName', ',', ' ', '(', 'Class', '[', ']', ')', ' ', 'null', ')', '.', 'invoke', '(', 'this', ')', ';', '\n', '            ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'e', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'RuntimeException', '(', 'e', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'parts', ',', ' ', 'joiner', ')', ';', '\n', '    ', '}', '\n']"
master,cae84eb3893535bcf42b77457bd595d0395cdea4,Faker.java,emailAddress,"    public String emailAddress() {
        return join(new Object[]{
            firstName().toLowerCase(),",https://www.github.com/dius/java-faker/commit/cae84eb3893535bcf42b77457bd595d0395cdea4,"    public String emailAddress() {
        return join(new Object[]{
            firstName().toLowerCase(),
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '            ', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', ',', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,Faker.java,numerify,"    public String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'numberString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'#'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'nextInt', '(', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,Faker.java,letterify,"    public String letterify(String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (97 + nextInt(26))); // a-z
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public String letterify(String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (97 + nextInt(26))); 
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'letterString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'?'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', '(', 'char', ')', ' ', '(', '97', ' ', '+', ' ', 'nextInt', '(', '26', ')', ')', ')', ';', ' ', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,Faker.java,fetch,"    public Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray.get(nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray.get(nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'List', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', ')', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'return', ' ', 'valuesArray', '.', 'get', '(', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,Faker.java,sentence,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + nextInt(6)), "" "") + ""."");
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + nextInt(6)), "" "") + ""."");
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'capitalize', '(', 'join', '(', 'words', '(', 'wordCount', ' ', '+', ' ', 'nextInt', '(', '6', ')', ')', ',', ' ', '""', ' ', '""', ')', ' ', '+', ' ', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,Faker.java,nextInt,"    private int nextInt(int n) {
        return randomService.nextInt(n);
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    private int nextInt(int n) {
        return randomService.nextInt(n);
    }
","['    ', 'private', ' ', 'int', ' ', 'nextInt', '(', 'int', ' ', 'n', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextInt', '(', 'n', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,RandomService.java,nextInt,"    public int nextInt(int n) {
        return RandomUtils.nextInt(random, n);
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public int nextInt(int n) {
        return RandomUtils.nextInt(random, n);
    }
","['    ', 'public', ' ', 'int', ' ', 'nextInt', '(', 'int', ' ', 'n', ')', ' ', '{', '\n', '        ', 'return', ' ', 'RandomUtils', '.', 'nextInt', '(', 'random', ',', ' ', 'n', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,FakerTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {new Locale(""fi"", ""FI""), null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {new Locale(""fi"", ""FI""), null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'fi', '""', ',', ' ', '""', 'FI', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,RandomFakerTest.java,before,"    public void before() {
        random = new Random();
        faker = new Faker(random);
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public void before() {
        random = new Random();
        faker = new Faker(random);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'random', ' ', '=', ' ', 'new', ' ', 'Random', '(', ')', ';', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,RandomFakerTest.java,testNumerifyRandomnessCanBeControlled,"    public void testNumerifyRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.numerify(""###"");

        resetRandomSeed();
        final String secondInvocation = faker.numerify(""###"");
        assertThat(firstInvocation, is(secondInvocation));
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public void testNumerifyRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.numerify(""###"");

        resetRandomSeed();
        final String secondInvocation = faker.numerify(""###"");
        assertThat(firstInvocation, is(secondInvocation));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNumerifyRandomnessCanBeControlled', '(', ')', ' ', '{', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'firstInvocation', ' ', '=', ' ', 'faker', '.', 'numerify', '(', '""', '###', '""', ')', ';', '\n', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'secondInvocation', ' ', '=', ' ', 'faker', '.', 'numerify', '(', '""', '###', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'firstInvocation', ',', ' ', 'is', '(', 'secondInvocation', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,RandomFakerTest.java,testLetterifyRandomnessCanBeControlled,"    public void testLetterifyRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.letterify(""???"");

        resetRandomSeed();
        final String secondInvocation = faker.letterify(""???"");
        assertThat(firstInvocation, is(secondInvocation));
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public void testLetterifyRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.letterify(""???"");

        resetRandomSeed();
        final String secondInvocation = faker.letterify(""???"");
        assertThat(firstInvocation, is(secondInvocation));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLetterifyRandomnessCanBeControlled', '(', ')', ' ', '{', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'firstInvocation', ' ', '=', ' ', 'faker', '.', 'letterify', '(', '""', '???', '""', ')', ';', '\n', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'secondInvocation', ' ', '=', ' ', 'faker', '.', 'letterify', '(', '""', '???', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'firstInvocation', ',', ' ', 'is', '(', 'secondInvocation', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,RandomFakerTest.java,testNameRandomnessCanBeControlled,"    public void testNameRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.name();

        resetRandomSeed();
        final String secondInvocation = faker.name();
        assertThat(firstInvocation, is(secondInvocation));
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    public void testNameRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.name();

        resetRandomSeed();
        final String secondInvocation = faker.name();
        assertThat(firstInvocation, is(secondInvocation));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNameRandomnessCanBeControlled', '(', ')', ' ', '{', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'firstInvocation', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', ';', '\n', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'secondInvocation', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'firstInvocation', ',', ' ', 'is', '(', 'secondInvocation', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e90c17aa8bec8619ead586277f5fb20b9609d767,RandomFakerTest.java,resetRandomSeed,"    private void resetRandomSeed() {
        random.setSeed(CONSTANT_SEED_VALUE);
    }",https://www.github.com/dius/java-faker/commit/e90c17aa8bec8619ead586277f5fb20b9609d767,"    private void resetRandomSeed() {
        random.setSeed(CONSTANT_SEED_VALUE);
    }
","['    ', 'private', ' ', 'void', ' ', 'resetRandomSeed', '(', ')', ' ', '{', '\n', '        ', 'random', '.', 'setSeed', '(', 'CONSTANT_SEED_VALUE', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,streetName,"    public String streetName() {
        return fakeValuesService.composite(""address.street_name_formats"",
                (String) fakeValuesService.fetchObject(""address.street_name_joiner""),",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetName() {
        return fakeValuesService.composite(""address.street_name_formats"",
                (String) fakeValuesService.fetchObject(""address.street_name_joiner""),
","['    ', 'public', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'composite', '(', '""', 'address.street_name_formats', '""', ',', '\n', '                ', '(', 'String', ')', ' ', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'address.street_name_joiner', '""', ')', ',', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,streetAddressNumber,"    public String streetAddressNumber() {
        return fakeValuesService.fetchString(""address.street_address"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetAddressNumber() {
        return fakeValuesService.fetchString(""address.street_address"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.street_address', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,streetAddress,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = fakeValuesService.composite(""address.street_formats"", "" "", this);
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return fakeValuesService.numerify(streetAddress);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = fakeValuesService.composite(""address.street_formats"", "" "", this);
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return fakeValuesService.numerify(streetAddress);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'fakeValuesService', '.', 'composite', '(', '""', 'address.street_formats', '""', ',', ' ', '""', ' ', '""', ',', ' ', 'this', ')', ';', '\n', '        ', 'if', ' ', '(', 'includeSecondary', ')', ' ', '{', '\n', '            ', 'streetAddress', ' ', '=', ' ', 'streetAddress', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'secondaryAddress', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,secondaryAddress,"    public String secondaryAddress() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""address.secondary_address""));
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String secondaryAddress() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""address.secondary_address""));
    }
","['    ', 'public', ' ', 'String', ' ', 'secondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.secondary_address', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,zipCode,"    public String zipCode() {
        return fakeValuesService.bothify(fakeValuesService.fetchString(""address.postcode""));
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String zipCode() {
        return fakeValuesService.bothify(fakeValuesService.fetchString(""address.postcode""));
    }
","['    ', 'public', ' ', 'String', ' ', 'zipCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'bothify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.postcode', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,streetSuffix,"    public String streetSuffix() {
        return fakeValuesService.fetchString(""address.street_suffix"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetSuffix() {
        return fakeValuesService.fetchString(""address.street_suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.street_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,citySuffix,"    public String citySuffix() {
        return fakeValuesService.fetchString(""address.city_suffix"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String citySuffix() {
        return fakeValuesService.fetchString(""address.city_suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'citySuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.city_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,cityPrefix,"    public String cityPrefix() {
        return fakeValuesService.fetchString(""address.city_prefix"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String cityPrefix() {
        return fakeValuesService.fetchString(""address.city_prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'cityPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.city_prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,stateAbbr,"    public String stateAbbr() {
        return fakeValuesService.fetchString(""address.state_abbr"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String stateAbbr() {
        return fakeValuesService.fetchString(""address.state_abbr"");
    }
","['    ', 'public', ' ', 'String', ' ', 'stateAbbr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.state_abbr', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,country,"    public String country() {
        return fakeValuesService.fetchString(""address.country"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String country() {
        return fakeValuesService.fetchString(""address.country"");
    }
","['    ', 'public', ' ', 'String', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.country', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Address.java,firstName,"    public String firstName() {
        return name.firstName();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String firstName() {
        return name.firstName();
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'name', '.', 'firstName', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,FakeValuesService.java,findStream,"    private InputStream findStream(String filename) {
        InputStream streamOnClass = getClass().getResourceAsStream(filename);
        if (streamOnClass != null) {
            return streamOnClass;
        }
        return getClass().getClassLoader().getResourceAsStream(filename);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    private InputStream findStream(String filename) {
        InputStream streamOnClass = getClass().getResourceAsStream(filename);
        if (streamOnClass != null) {
            return streamOnClass;
        }
        return getClass().getClassLoader().getResourceAsStream(filename);
    }
","['    ', 'private', ' ', 'InputStream', ' ', 'findStream', '(', 'String', ' ', 'filename', ')', ' ', '{', '\n', '        ', 'InputStream', ' ', 'streamOnClass', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'filename', ')', ';', '\n', '        ', 'if', ' ', '(', 'streamOnClass', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'streamOnClass', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', 'filename', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,numerify,"    public String numerify(String numberString) {
        return fakeValuesService.numerify(numberString);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String numerify(String numberString) {
        return fakeValuesService.numerify(numberString);
    }
","['    ', 'public', ' ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'numberString', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,letterify,"    public String letterify(String letterString) {
        return fakeValuesService.letterify(letterString);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String letterify(String letterString) {
        return fakeValuesService.letterify(letterString);
    }
","['    ', 'public', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'letterify', '(', 'letterString', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,bothify,"    public String bothify(String string) {
        return fakeValuesService.bothify(string);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String bothify(String string) {
        return fakeValuesService.bothify(string);
    }
","['    ', 'public', ' ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'bothify', '(', 'string', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,emailAddress,"    public String emailAddress() {
        return internet.emailAddress();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String emailAddress() {
        return internet.emailAddress();
    }
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'internet', '.', 'emailAddress', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,phoneNumber,"    public PhoneNumber phoneNumber() {
        return phoneNumber;
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public PhoneNumber phoneNumber() {
        return phoneNumber;
    }
","['    ', 'public', ' ', 'PhoneNumber', ' ', 'phoneNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'phoneNumber', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,words,"    public List<String> words(int num) {
        return lorem.words(num);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public List<String> words(int num) {
        return lorem.words(num);
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'words', '(', 'num', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,words,"    public List<String> words() {
        return lorem.words();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public List<String> words() {
        return lorem.words();
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'words', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,sentence,"    public String sentence(int wordCount) {
        return lorem.sentence(wordCount);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String sentence(int wordCount) {
        return lorem.sentence(wordCount);
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'sentence', '(', 'wordCount', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,sentence,"    public String sentence() {
        return lorem.sentence();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String sentence() {
        return lorem.sentence();
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'sentence', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,sentences,"    public List<String> sentences(int sentenceCount) {
        return lorem.sentences(sentenceCount);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public List<String> sentences(int sentenceCount) {
        return lorem.sentences(sentenceCount);
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'sentences', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'sentences', '(', 'sentenceCount', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,paragraph,"    public String paragraph(int sentenceCount) {
        return lorem.paragraph(sentenceCount);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String paragraph(int sentenceCount) {
        return lorem.paragraph(sentenceCount);
    }
","['    ', 'public', ' ', 'String', ' ', 'paragraph', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'paragraph', '(', 'sentenceCount', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,paragraph,"    public String paragraph() {
        return lorem.paragraph();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String paragraph() {
        return lorem.paragraph();
    }
","['    ', 'public', ' ', 'String', ' ', 'paragraph', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'paragraph', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,paragraphs,"    public List<String> paragraphs(int paragraphCount) {
        return lorem.paragraphs(paragraphCount);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public List<String> paragraphs(int paragraphCount) {
        return lorem.paragraphs(paragraphCount);
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'paragraphs', '(', 'int', ' ', 'paragraphCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lorem', '.', 'paragraphs', '(', 'paragraphCount', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,streetName,"    public String streetName() {
        return address.streetName();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetName() {
        return address.streetName();
    }
","['    ', 'public', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'streetName', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,streetAddressNumber,"    public String streetAddressNumber() {
        return address.streetAddressNumber();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetAddressNumber() {
        return address.streetAddressNumber();
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'streetAddressNumber', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,streetAddress,"    public String streetAddress(boolean includeSecondary) {
        return address.streetAddress(includeSecondary);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetAddress(boolean includeSecondary) {
        return address.streetAddress(includeSecondary);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'streetAddress', '(', 'includeSecondary', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,secondaryAddress,"    public String secondaryAddress() {
        return address.secondaryAddress();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String secondaryAddress() {
        return address.secondaryAddress();
    }
","['    ', 'public', ' ', 'String', ' ', 'secondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'secondaryAddress', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,zipCode,"    public String zipCode() {
        return address.zipCode();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String zipCode() {
        return address.zipCode();
    }
","['    ', 'public', ' ', 'String', ' ', 'zipCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'zipCode', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,streetSuffix,"    public String streetSuffix() {
        return address.streetSuffix();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String streetSuffix() {
        return address.streetSuffix();
    }
","['    ', 'public', ' ', 'String', ' ', 'streetSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'streetSuffix', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,citySuffix,"    public String citySuffix() {
        return address.citySuffix();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String citySuffix() {
        return address.citySuffix();
    }
","['    ', 'public', ' ', 'String', ' ', 'citySuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'citySuffix', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,cityPrefix,"    public String cityPrefix() {
        return address.cityPrefix();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String cityPrefix() {
        return address.cityPrefix();
    }
","['    ', 'public', ' ', 'String', ' ', 'cityPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'cityPrefix', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,stateAbbr,"    public String stateAbbr() {
        return address.stateAbbr();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String stateAbbr() {
        return address.stateAbbr();
    }
","['    ', 'public', ' ', 'String', ' ', 'stateAbbr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'stateAbbr', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Faker.java,country,"    public String country() {
        return address.country();
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String country() {
        return address.country();
    }
","['    ', 'public', ' ', 'String', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'address', '.', 'country', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Internet.java,emailAddress,"    public String emailAddress() {
        return join(new Object[]{
                name.firstName().toLowerCase(),",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String emailAddress() {
        return join(new Object[]{
                name.firstName().toLowerCase(),
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'name', '.', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', ',', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Lorem.java,words,"    public List<String> words(int num) {
        List<String> words = (List<String>) fakeValuesService.fetchObject(""lorem.words"");
        List<String> returnList = new ArrayList();
        for (int i = 0; i < num; i++) {
            returnList.add(words.get(randomService.nextInt(words.size())));
        }
        return returnList;
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public List<String> words(int num) {
        List<String> words = (List<String>) fakeValuesService.fetchObject(""lorem.words"");
        List<String> returnList = new ArrayList();
        for (int i = 0; i < num; i++) {
            returnList.add(words.get(randomService.nextInt(words.size())));
        }
        return returnList;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'lorem.words', '""', ')', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'returnList', ' ', '=', ' ', 'new', ' ', 'ArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'num', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'returnList', '.', 'add', '(', 'words', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'words', '.', 'size', '(', ')', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'returnList', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Lorem.java,sentence,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + randomService.nextInt(6)), "" "") + ""."");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + randomService.nextInt(6)), "" "") + ""."");
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'capitalize', '(', 'join', '(', 'words', '(', 'wordCount', ' ', '+', ' ', 'randomService', '.', 'nextInt', '(', '6', ')', ')', ',', ' ', '""', ' ', '""', ')', ' ', '+', ' ', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Lorem.java,paragraph,"    public String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + randomService.nextInt(3)), "" "");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + randomService.nextInt(3)), "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'paragraph', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'sentences', '(', 'sentenceCount', ' ', '+', ' ', 'randomService', '.', 'nextInt', '(', '3', ')', ')', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Name.java,name,"    public String name() {
        return fakeValuesService.composite(""name.formats"", "" "", this);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String name() {
        return fakeValuesService.composite(""name.formats"", "" "", this);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'composite', '(', '""', 'name.formats', '""', ',', ' ', '""', ' ', '""', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Name.java,firstName,"    public String firstName() {
        return fakeValuesService.fetchString(""name.first_name"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String firstName() {
        return fakeValuesService.fetchString(""name.first_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.first_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Name.java,lastName,"    public String lastName() {
        return fakeValuesService.fetchString(""name.last_name"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String lastName() {
        return fakeValuesService.fetchString(""name.last_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.last_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Name.java,prefix,"    public String prefix() {
        return fakeValuesService.fetchString(""name.prefix"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String prefix() {
        return fakeValuesService.fetchString(""name.prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,Name.java,suffix,"    public String suffix() {
        return fakeValuesService.fetchString(""name.suffix"");
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String suffix() {
        return fakeValuesService.fetchString(""name.suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,PhoneNumber.java,phoneNumber,"    public String phoneNumber() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""phone_number.formats""));
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public String phoneNumber() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""phone_number.formats""));
    }
","['    ', 'public', ' ', 'String', ' ', 'phoneNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'phone_number.formats', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AbstractFakerTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {FINISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {FINISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'FINISH_LOCALE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testStreetName,"    public void testStreetName() {
        String streetName = faker.streetName();
        logger.info(""Street name: "" + streetName);
        assertNotNull(streetName);

        streetName = faker.address().streetName();
        logger.info(""Street name: "" + streetName);
        assertNotNull(streetName);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testStreetName() {
        String streetName = faker.streetName();
        logger.info(""Street name: "" + streetName);
        assertNotNull(streetName);

        streetName = faker.address().streetName();
        logger.info(""Street name: "" + streetName);
        assertNotNull(streetName);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetName', ' ', '=', ' ', 'faker', '.', 'streetName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street name: ', '""', ' ', '+', ' ', 'streetName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetName', ')', ';', '\n', '\n', '        ', 'streetName', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetName', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street name: ', '""', ' ', '+', ' ', 'streetName', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetName', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testStreetAddress,"    public void testStreetAddress() {
        String streetAddress = faker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
        assertNotNull(streetAddress);

        streetAddress = faker.address().streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
        assertNotNull(streetAddress);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testStreetAddress() {
        String streetAddress = faker.streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
        assertNotNull(streetAddress);

        streetAddress = faker.address().streetAddress(true);
        logger.info(""Street address: "" + streetAddress);
        assertNotNull(streetAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'faker', '.', 'streetAddress', '(', 'true', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street address: ', '""', ' ', '+', ' ', 'streetAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddress', ')', ';', '\n', '\n', '        ', 'streetAddress', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddress', '(', 'true', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street address: ', '""', ' ', '+', ' ', 'streetAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddress', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testSecondaryAddress,"    public void testSecondaryAddress() {
        String secondaryAddress = faker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
        assertNotNull(secondaryAddress);

        secondaryAddress = faker.address().secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
        assertNotNull(secondaryAddress);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testSecondaryAddress() {
        String secondaryAddress = faker.secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
        assertNotNull(secondaryAddress);

        secondaryAddress = faker.address().secondaryAddress();
        logger.info(""Secondary address: "" + secondaryAddress);
        assertNotNull(secondaryAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSecondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'secondaryAddress', ' ', '=', ' ', 'faker', '.', 'secondaryAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Secondary address: ', '""', ' ', '+', ' ', 'secondaryAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'secondaryAddress', ')', ';', '\n', '\n', '        ', 'secondaryAddress', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'secondaryAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Secondary address: ', '""', ' ', '+', ' ', 'secondaryAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'secondaryAddress', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testZipCode,"    public void testZipCode() {
        String zip = faker.zipCode();
        logger.info(""Address zip code: "" + zip);
        assertNotNull(zip);

        zip = faker.address().zipCode();
        logger.info(""Address zip code: "" + zip);
        assertNotNull(zip);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testZipCode() {
        String zip = faker.zipCode();
        logger.info(""Address zip code: "" + zip);
        assertNotNull(zip);

        zip = faker.address().zipCode();
        logger.info(""Address zip code: "" + zip);
        assertNotNull(zip);
    }
","['    ', 'public', ' ', 'void', ' ', 'testZipCode', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'zip', ' ', '=', ' ', 'faker', '.', 'zipCode', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address zip code: ', '""', ' ', '+', ' ', 'zip', ')', ';', '\n', '        ', 'assertNotNull', '(', 'zip', ')', ';', '\n', '\n', '        ', 'zip', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'zipCode', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Address zip code: ', '""', ' ', '+', ' ', 'zip', ')', ';', '\n', '        ', 'assertNotNull', '(', 'zip', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testStreetSuffix,"    public void testStreetSuffix() {
        String streetSuffix = faker.streetSuffix();
        logger.info(""Street suffix: "" + streetSuffix);
        assertNotNull(streetSuffix);

        streetSuffix = faker.address().streetSuffix();
        logger.info(""Street suffix: "" + streetSuffix);
        assertNotNull(streetSuffix);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testStreetSuffix() {
        String streetSuffix = faker.streetSuffix();
        logger.info(""Street suffix: "" + streetSuffix);
        assertNotNull(streetSuffix);

        streetSuffix = faker.address().streetSuffix();
        logger.info(""Street suffix: "" + streetSuffix);
        assertNotNull(streetSuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetSuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetSuffix', ' ', '=', ' ', 'faker', '.', 'streetSuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street suffix: ', '""', ' ', '+', ' ', 'streetSuffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetSuffix', ')', ';', '\n', '\n', '        ', 'streetSuffix', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetSuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street suffix: ', '""', ' ', '+', ' ', 'streetSuffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetSuffix', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testCitySuffix,"    public void testCitySuffix() {
        String citySuffix = faker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
        assertNotNull(citySuffix);

        citySuffix = faker.address().citySuffix();
        logger.info(""City suffix: "" + citySuffix);
        assertNotNull(citySuffix);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testCitySuffix() {
        String citySuffix = faker.citySuffix();
        logger.info(""City suffix: "" + citySuffix);
        assertNotNull(citySuffix);

        citySuffix = faker.address().citySuffix();
        logger.info(""City suffix: "" + citySuffix);
        assertNotNull(citySuffix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCitySuffix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'citySuffix', ' ', '=', ' ', 'faker', '.', 'citySuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City suffix: ', '""', ' ', '+', ' ', 'citySuffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'citySuffix', ')', ';', '\n', '\n', '        ', 'citySuffix', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'citySuffix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City suffix: ', '""', ' ', '+', ' ', 'citySuffix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'citySuffix', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testCityPrefix,"    public void testCityPrefix() {
        String cityPrefix = faker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
        assertNotNull(cityPrefix);

        cityPrefix = faker.address().cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
        assertNotNull(cityPrefix);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testCityPrefix() {
        String cityPrefix = faker.cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
        assertNotNull(cityPrefix);

        cityPrefix = faker.address().cityPrefix();
        logger.info(""City prefix: "" + cityPrefix);
        assertNotNull(cityPrefix);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCityPrefix', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'cityPrefix', ' ', '=', ' ', 'faker', '.', 'cityPrefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City prefix: ', '""', ' ', '+', ' ', 'cityPrefix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'cityPrefix', ')', ';', '\n', '\n', '        ', 'cityPrefix', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'cityPrefix', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'City prefix: ', '""', ' ', '+', ' ', 'cityPrefix', ')', ';', '\n', '        ', 'assertNotNull', '(', 'cityPrefix', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testStateAbbr,"    public void testStateAbbr() {
        String stateAbbr = faker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
        assertNotNull(stateAbbr);

        stateAbbr = faker.address().stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
        assertNotNull(stateAbbr);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testStateAbbr() {
        String stateAbbr = faker.stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
        assertNotNull(stateAbbr);

        stateAbbr = faker.address().stateAbbr();
        logger.info(""State abbr: "" + stateAbbr);
        assertNotNull(stateAbbr);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStateAbbr', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'stateAbbr', ' ', '=', ' ', 'faker', '.', 'stateAbbr', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'State abbr: ', '""', ' ', '+', ' ', 'stateAbbr', ')', ';', '\n', '        ', 'assertNotNull', '(', 'stateAbbr', ')', ';', '\n', '\n', '        ', 'stateAbbr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'stateAbbr', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'State abbr: ', '""', ' ', '+', ' ', 'stateAbbr', ')', ';', '\n', '        ', 'assertNotNull', '(', 'stateAbbr', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testCountry,"    public void testCountry() {
        String country = faker.country();
        logger.info(""Country: "" + country);
        assertNotNull(country);

        country = faker.address().country();
        logger.info(""Country: "" + country);
        assertNotNull(country);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testCountry() {
        String country = faker.country();
        logger.info(""Country: "" + country);
        assertNotNull(country);

        country = faker.address().country();
        logger.info(""Country: "" + country);
        assertNotNull(country);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'country', ' ', '=', ' ', 'faker', '.', 'country', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Country: ', '""', ' ', '+', ' ', 'country', ')', ';', '\n', '        ', 'assertNotNull', '(', 'country', ')', ';', '\n', '\n', '        ', 'country', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'country', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Country: ', '""', ' ', '+', ' ', 'country', ')', ';', '\n', '        ', 'assertNotNull', '(', 'country', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,AddressTest.java,testStreetAddressNumber,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);

        streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);

        streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddressNumber', ')', ';', '\n', '\n', '        ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddressNumber', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,InternetTest.java,testEmailAddress,"    public void testEmailAddress() {
        String emailAddress = faker.emailAddress();
        logger.info(""Test email address: "" + emailAddress);
        assertNotNull(emailAddress);

        emailAddress = faker.internet().emailAddress();
        logger.info(""Test email address: "" + emailAddress);
        assertNotNull(emailAddress);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testEmailAddress() {
        String emailAddress = faker.emailAddress();
        logger.info(""Test email address: "" + emailAddress);
        assertNotNull(emailAddress);

        emailAddress = faker.internet().emailAddress();
        logger.info(""Test email address: "" + emailAddress);
        assertNotNull(emailAddress);
    }
","['    ', 'public', ' ', 'void', ' ', 'testEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'emailAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test email address: ', '""', ' ', '+', ' ', 'emailAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'emailAddress', ')', ';', '\n', '\n', '        ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'emailAddress', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test email address: ', '""', ' ', '+', ' ', 'emailAddress', ')', ';', '\n', '        ', 'assertNotNull', '(', 'emailAddress', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,LoremTest.java,testSpecifiedNumOfWords,"    public void testSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());

        words = faker.lorem().words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testSpecifiedNumOfWords() {
        List<String> words = faker.words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());

        words = faker.lorem().words(4);
        logger.info(""Test words: "" + words.toString());
        assertEquals(4, words.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'testSpecifiedNumOfWords', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'faker', '.', 'words', '(', '4', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test words: ', '""', ' ', '+', ' ', 'words', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '4', ',', ' ', 'words', '.', 'size', '(', ')', ')', ';', '\n', '\n', '        ', 'words', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', '4', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test words: ', '""', ' ', '+', ' ', 'words', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '4', ',', ' ', 'words', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,LoremTest.java,testSentence,"    public void testSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);

        sentence = faker.lorem().sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testSentence() {
        String sentence = faker.sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);

        sentence = faker.lorem().sentence(7);
        logger.info(""Test sentence: "" + sentence);
        assertNotNull(sentence);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentence', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'sentence', ' ', '=', ' ', 'faker', '.', 'sentence', '(', '7', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentence: ', '""', ' ', '+', ' ', 'sentence', ')', ';', '\n', '        ', 'assertNotNull', '(', 'sentence', ')', ';', '\n', '\n', '        ', 'sentence', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '7', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentence: ', '""', ' ', '+', ' ', 'sentence', ')', ';', '\n', '        ', 'assertNotNull', '(', 'sentence', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,LoremTest.java,testSentences,"    public void testSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());

        sentences = faker.lorem().sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testSentences() {
        List<String> sentences = faker.sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());

        sentences = faker.lorem().sentences(3);
        logger.info(""Test sentences: "" + sentences);
        assertEquals(3, sentences.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentences', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'sentences', ' ', '=', ' ', 'faker', '.', 'sentences', '(', '3', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentences: ', '""', ' ', '+', ' ', 'sentences', ')', ';', '\n', '        ', 'assertEquals', '(', '3', ',', ' ', 'sentences', '.', 'size', '(', ')', ')', ';', '\n', '\n', '        ', 'sentences', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'sentences', '(', '3', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test sentences: ', '""', ' ', '+', ' ', 'sentences', ')', ';', '\n', '        ', 'assertEquals', '(', '3', ',', ' ', 'sentences', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,LoremTest.java,testSpecifiedNumOfParagraphs,"    public void testSpecifiedNumOfParagraphs() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);

        paragraph = faker.lorem().paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testSpecifiedNumOfParagraphs() {
        String paragraph = faker.paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);

        paragraph = faker.lorem().paragraph(5);
        logger.info(""Test paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'testSpecifiedNumOfParagraphs', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'paragraph', '(', '5', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '\n', '        ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'paragraph', '(', '5', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Test paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,LoremTest.java,testParagraph,"    public void testParagraph() {
        String paragraph = faker.paragraph();
        logger.info(""Paragraph: "" + paragraph);
        assertNotNull(paragraph);

        paragraph = faker.lorem().paragraph();
        logger.info(""Paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testParagraph() {
        String paragraph = faker.paragraph();
        logger.info(""Paragraph: "" + paragraph);
        assertNotNull(paragraph);

        paragraph = faker.lorem().paragraph();
        logger.info(""Paragraph: "" + paragraph);
        assertNotNull(paragraph);
    }
","['    ', 'public', ' ', 'void', ' ', 'testParagraph', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'paragraph', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '\n', '        ', 'paragraph', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'paragraph', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Paragraph: ', '""', ' ', '+', ' ', 'paragraph', ')', ';', '\n', '        ', 'assertNotNull', '(', 'paragraph', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,LoremTest.java,testParagraphs,"    public void testParagraphs() {
        final int paragraphCount = 10;
        List<String> paragraphs = faker.paragraphs(paragraphCount);
        logger.info(""Paragraphs: "" + paragraphs);
        assertEquals(paragraphCount, paragraphs.size());

        paragraphs = faker.lorem().paragraphs(paragraphCount);
        logger.info(""Paragraphs: "" + paragraphs);
        assertEquals(paragraphCount, paragraphs.size());
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testParagraphs() {
        final int paragraphCount = 10;
        List<String> paragraphs = faker.paragraphs(paragraphCount);
        logger.info(""Paragraphs: "" + paragraphs);
        assertEquals(paragraphCount, paragraphs.size());

        paragraphs = faker.lorem().paragraphs(paragraphCount);
        logger.info(""Paragraphs: "" + paragraphs);
        assertEquals(paragraphCount, paragraphs.size());
    }
","['    ', 'public', ' ', 'void', ' ', 'testParagraphs', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'int', ' ', 'paragraphCount', ' ', '=', ' ', '10', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'paragraphs', ' ', '=', ' ', 'faker', '.', 'paragraphs', '(', 'paragraphCount', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Paragraphs: ', '""', ' ', '+', ' ', 'paragraphs', ')', ';', '\n', '        ', 'assertEquals', '(', 'paragraphCount', ',', ' ', 'paragraphs', '.', 'size', '(', ')', ')', ';', '\n', '\n', '        ', 'paragraphs', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'paragraphs', '(', 'paragraphCount', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Paragraphs: ', '""', ' ', '+', ' ', 'paragraphs', ')', ';', '\n', '        ', 'assertEquals', '(', 'paragraphCount', ',', ' ', 'paragraphs', '.', 'size', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,PhoneNumberTest.java,testPhoneNumber,"    public void testPhoneNumber() {
        String phoneNumber = faker.phoneNumber().phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        assertNotNull(phoneNumber);
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testPhoneNumber() {
        String phoneNumber = faker.phoneNumber().phoneNumber();
        logger.info(""Phone number: "" + phoneNumber);
        assertNotNull(phoneNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testPhoneNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'phoneNumber', ' ', '=', ' ', 'faker', '.', 'phoneNumber', '(', ')', '.', 'phoneNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Phone number: ', '""', ' ', '+', ' ', 'phoneNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'phoneNumber', ')', ';', '\n', '    ', '}', '\n']"
master,f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,RandomFakerTest.java,testNameRandomnessCanBeControlled,"    public void testNameRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.name().name();

        resetRandomSeed();
        final String secondInvocation = faker.name().name();
        assertThat(firstInvocation, is(secondInvocation));
    }",https://www.github.com/dius/java-faker/commit/f663405c0ef431f4d63fac6d9cd6825c8ed1f28c,"    public void testNameRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.name().name();

        resetRandomSeed();
        final String secondInvocation = faker.name().name();
        assertThat(firstInvocation, is(secondInvocation));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNameRandomnessCanBeControlled', '(', ')', ' ', '{', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'firstInvocation', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', '.', 'name', '(', ')', ';', '\n', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'secondInvocation', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', '.', 'name', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'firstInvocation', ',', ' ', 'is', '(', 'secondInvocation', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1d74a343a193dee0e2e7b4e7e03f64d2114fb6ed,Faker.java,fixedString,"    public String fixedString(int numberOfLetters) {
        StringBuilder builder = new StringBuilder();
        while (builder.length() < numberOfLetters) {
            builder.append(sentence());
        }
        return StringUtils.substring(builder.toString(), 0, numberOfLetters);
    }",https://www.github.com/dius/java-faker/commit/1d74a343a193dee0e2e7b4e7e03f64d2114fb6ed,"    public String fixedString(int numberOfLetters) {
        StringBuilder builder = new StringBuilder();
        while (builder.length() < numberOfLetters) {
            builder.append(sentence());
        }
        return StringUtils.substring(builder.toString(), 0, numberOfLetters);
    }
","['    ', 'public', ' ', 'String', ' ', 'fixedString', '(', 'int', ' ', 'numberOfLetters', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'builder', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'builder', '.', 'length', '(', ')', ' ', '<', ' ', 'numberOfLetters', ')', ' ', '{', '\n', '            ', 'builder', '.', 'append', '(', 'sentence', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'substring', '(', 'builder', '.', 'toString', '(', ')', ',', ' ', '0', ',', ' ', 'numberOfLetters', ')', ';', '\n', '    ', '}', '\n']"
master,1d74a343a193dee0e2e7b4e7e03f64d2114fb6ed,FakerTest.java,shouldCreateFixedLenghtString,"    public void shouldCreateFixedLenghtString() {
        Assert.assertEquals(10, faker.fixedString(10).length());
        Assert.assertEquals(50, faker.fixedString(50).length());
        Assert.assertEquals(0, faker.fixedString(0).length());
        Assert.assertEquals(0, faker.fixedString(-1).length());
    }",https://www.github.com/dius/java-faker/commit/1d74a343a193dee0e2e7b4e7e03f64d2114fb6ed,"    public void shouldCreateFixedLenghtString() {
        Assert.assertEquals(10, faker.fixedString(10).length());
        Assert.assertEquals(50, faker.fixedString(50).length());
        Assert.assertEquals(0, faker.fixedString(0).length());
        Assert.assertEquals(0, faker.fixedString(-1).length());
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldCreateFixedLenghtString', '(', ')', ' ', '{', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '10', ',', ' ', 'faker', '.', 'fixedString', '(', '10', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '50', ',', ' ', 'faker', '.', 'fixedString', '(', '50', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '0', ',', ' ', 'faker', '.', 'fixedString', '(', '0', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'Assert', '.', 'assertEquals', '(', '0', ',', ' ', 'faker', '.', 'fixedString', '(', '-', '1', ')', '.', 'length', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2a9d77c51c2ad1eb955cf8dde03ffde0416d99c7,RandomFakerTest.java,testEmailRandomnessCanBeControlled,"    public void testEmailRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.internet().emailAddress();

        resetRandomSeed();
        final String secondInvocation = faker.internet().emailAddress();
        assertThat(firstInvocation, is(secondInvocation));
    }",https://www.github.com/dius/java-faker/commit/2a9d77c51c2ad1eb955cf8dde03ffde0416d99c7,"    public void testEmailRandomnessCanBeControlled() {
        resetRandomSeed();
        final String firstInvocation = faker.internet().emailAddress();

        resetRandomSeed();
        final String secondInvocation = faker.internet().emailAddress();
        assertThat(firstInvocation, is(secondInvocation));
    }
","['    ', 'public', ' ', 'void', ' ', 'testEmailRandomnessCanBeControlled', '(', ')', ' ', '{', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'firstInvocation', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'emailAddress', '(', ')', ';', '\n', '\n', '        ', 'resetRandomSeed', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'secondInvocation', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'emailAddress', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'firstInvocation', ',', ' ', 'is', '(', 'secondInvocation', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a88c7d41a15dfabcd708cf63008799666c5c0cae,Business.java,creditCardNumber,"    public String creditCardNumber() {
        return fakeValuesService.fetchString(""business.credit_card_numbers"");
    }",https://www.github.com/dius/java-faker/commit/a88c7d41a15dfabcd708cf63008799666c5c0cae,"    public String creditCardNumber() {
        return fakeValuesService.fetchString(""business.credit_card_numbers"");
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCardNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'business.credit_card_numbers', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a88c7d41a15dfabcd708cf63008799666c5c0cae,Business.java,creditCardType,"    public String creditCardType() {
        return fakeValuesService.fetchString(""business.credit_card_types"");
    }",https://www.github.com/dius/java-faker/commit/a88c7d41a15dfabcd708cf63008799666c5c0cae,"    public String creditCardType() {
        return fakeValuesService.fetchString(""business.credit_card_types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCardType', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'business.credit_card_types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a88c7d41a15dfabcd708cf63008799666c5c0cae,Business.java,creditCardExpiry,"    public String creditCardExpiry() {
        return fakeValuesService.fetchString(""business.credit_card_expiry_dates"");
    }",https://www.github.com/dius/java-faker/commit/a88c7d41a15dfabcd708cf63008799666c5c0cae,"    public String creditCardExpiry() {
        return fakeValuesService.fetchString(""business.credit_card_expiry_dates"");
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCardExpiry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'business.credit_card_expiry_dates', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a88c7d41a15dfabcd708cf63008799666c5c0cae,BusinessTest.java,testCreditCardNumber,"    public void testCreditCardNumber() {
        final String creditCardNumber = faker.business().creditCardNumber();
        logger.info(""Credit card number is "" + creditCardNumber);
        assertNotNull(creditCardNumber);
    }",https://www.github.com/dius/java-faker/commit/a88c7d41a15dfabcd708cf63008799666c5c0cae,"    public void testCreditCardNumber() {
        final String creditCardNumber = faker.business().creditCardNumber();
        logger.info(""Credit card number is "" + creditCardNumber);
        assertNotNull(creditCardNumber);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCreditCardNumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'creditCardNumber', ' ', '=', ' ', 'faker', '.', 'business', '(', ')', '.', 'creditCardNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Credit card number is ', '""', ' ', '+', ' ', 'creditCardNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'creditCardNumber', ')', ';', '\n', '    ', '}', '\n']"
master,a88c7d41a15dfabcd708cf63008799666c5c0cae,BusinessTest.java,testCreditCardExpiry,"    public void testCreditCardExpiry() {
        final String creditCardExpiry = faker.business().creditCardExpiry();
        logger.info(""Credit card expiry is "" + creditCardExpiry);
        assertNotNull(creditCardExpiry);
    }",https://www.github.com/dius/java-faker/commit/a88c7d41a15dfabcd708cf63008799666c5c0cae,"    public void testCreditCardExpiry() {
        final String creditCardExpiry = faker.business().creditCardExpiry();
        logger.info(""Credit card expiry is "" + creditCardExpiry);
        assertNotNull(creditCardExpiry);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCreditCardExpiry', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'creditCardExpiry', ' ', '=', ' ', 'faker', '.', 'business', '(', ')', '.', 'creditCardExpiry', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Credit card expiry is ', '""', ' ', '+', ' ', 'creditCardExpiry', ')', ';', '\n', '        ', 'assertNotNull', '(', 'creditCardExpiry', ')', ';', '\n', '    ', '}', '\n']"
master,a88c7d41a15dfabcd708cf63008799666c5c0cae,BusinessTest.java,testCreditCardTypes,"    public void testCreditCardTypes() {
        final String creditCardType = faker.business().creditCardType();
        logger.info(""Credit card type is "" + creditCardType);
        assertNotNull(creditCardType);
    }",https://www.github.com/dius/java-faker/commit/a88c7d41a15dfabcd708cf63008799666c5c0cae,"    public void testCreditCardTypes() {
        final String creditCardType = faker.business().creditCardType();
        logger.info(""Credit card type is "" + creditCardType);
        assertNotNull(creditCardType);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCreditCardTypes', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'creditCardType', ' ', '=', ' ', 'faker', '.', 'business', '(', ')', '.', 'creditCardType', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Credit card type is ', '""', ' ', '+', ' ', 'creditCardType', ')', ';', '\n', '        ', 'assertNotNull', '(', 'creditCardType', ')', ';', '\n', '    ', '}', '\n']"
master,004f4bbb9703f704183a738c9d6258d11f18733e,Address.java,streetAddressNumber,"    public String streetAddressNumber() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""address.street_address""));
    }",https://www.github.com/dius/java-faker/commit/004f4bbb9703f704183a738c9d6258d11f18733e,"    public String streetAddressNumber() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""address.street_address""));
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.street_address', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,004f4bbb9703f704183a738c9d6258d11f18733e,AddressTest.java,testStreetAddressNumber,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));


        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));
    }",https://www.github.com/dius/java-faker/commit/004f4bbb9703f704183a738c9d6258d11f18733e,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));


        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertNotNull(streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertTrue', '(', '""', 'street address is not a number ', '""', ' ', '+', ' ', 'streetAddressNumber', ',', ' ', 'streetAddressNumber', '.', 'matches', '(', '""', '\\\\', 'd+', '""', ')', ')', ';', '\n', '\n', '\n', '        ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertNotNull', '(', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertTrue', '(', '""', 'street address is not a number ', '""', ' ', '+', ' ', 'streetAddressNumber', ',', ' ', 'streetAddressNumber', '.', 'matches', '(', '""', '\\\\', 'd+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2a55628085268f063398d1dbc924d8e03cc3a420,AddressTest.java,testDataReturnedIsNotNull,"    public void testDataReturnedIsNotNull() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        for (String methodName : METHODS) {
            final Method method = faker.getClass().getMethod(methodName);",https://www.github.com/dius/java-faker/commit/2a55628085268f063398d1dbc924d8e03cc3a420,"    public void testDataReturnedIsNotNull() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        for (String methodName : METHODS) {
            final Method method = faker.getClass().getMethod(methodName);
","['    ', 'public', ' ', 'void', ' ', 'testDataReturnedIsNotNull', '(', ')', ' ', 'throws', ' ', 'NoSuchMethodException', ',', ' ', 'InvocationTargetException', ',', ' ', 'IllegalAccessException', ' ', '{', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'methodName', ' ', ':', ' ', 'METHODS', ')', ' ', '{', '\n', '            ', 'final', ' ', 'Method', ' ', 'method', ' ', '=', ' ', 'faker', '.', 'getClass', '(', ')', '.', 'getMethod', '(', 'methodName', ')', ';', '\n']"
master,2a55628085268f063398d1dbc924d8e03cc3a420,AddressTest.java,testDataFromAddressIsNotNull,"    public void testDataFromAddressIsNotNull() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        for (String methodName : METHODS) {
            final Method method = faker.address().getClass().getMethod(methodName);",https://www.github.com/dius/java-faker/commit/2a55628085268f063398d1dbc924d8e03cc3a420,"    public void testDataFromAddressIsNotNull() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        for (String methodName : METHODS) {
            final Method method = faker.address().getClass().getMethod(methodName);
","['    ', 'public', ' ', 'void', ' ', 'testDataFromAddressIsNotNull', '(', ')', ' ', 'throws', ' ', 'NoSuchMethodException', ',', ' ', 'InvocationTargetException', ',', ' ', 'IllegalAccessException', ' ', '{', '\n', '        ', 'for', ' ', '(', 'String', ' ', 'methodName', ' ', ':', ' ', 'METHODS', ')', ' ', '{', '\n', '            ', 'final', ' ', 'Method', ' ', 'method', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'getClass', '(', ')', '.', 'getMethod', '(', 'methodName', ')', ';', '\n']"
master,2a55628085268f063398d1dbc924d8e03cc3a420,AddressTest.java,testStreetAddressNumber,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));


        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));
    }",https://www.github.com/dius/java-faker/commit/2a55628085268f063398d1dbc924d8e03cc3a420,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));


        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertTrue(""street address is not a number "" + streetAddressNumber, streetAddressNumber.matches(""\\d+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertTrue', '(', '""', 'street address is not a number ', '""', ' ', '+', ' ', 'streetAddressNumber', ',', ' ', 'streetAddressNumber', '.', 'matches', '(', '""', '\\\\', 'd+', '""', ')', ')', ';', '\n', '\n', '\n', '        ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertTrue', '(', '""', 'street address is not a number ', '""', ' ', '+', ' ', 'streetAddressNumber', ',', ' ', 'streetAddressNumber', '.', 'matches', '(', '""', '\\\\', 'd+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,07703e9400a29b3a18170071bdc043efc0162f93,AddressTest.java,testStreetAddressNumber,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());

        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());
    }",https://www.github.com/dius/java-faker/commit/07703e9400a29b3a18170071bdc043efc0162f93,"    public void testStreetAddressNumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());

        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'isANumber', '(', ')', ')', ';', '\n', '\n', '        ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'isANumber', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,07703e9400a29b3a18170071bdc043efc0162f93,IsANumber.java,matchesSafely,"    protected boolean matchesSafely(String item) {
        return item.matches(""\\d+"");
    }",https://www.github.com/dius/java-faker/commit/07703e9400a29b3a18170071bdc043efc0162f93,"    protected boolean matchesSafely(String item) {
        return item.matches(""\\d+"");
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'matchesSafely', '(', 'String', ' ', 'item', ')', ' ', '{', '\n', '        ', 'return', ' ', 'item', '.', 'matches', '(', '""', '\\\\', 'd+', '""', ')', ';', '\n', '    ', '}', '\n']"
master,07703e9400a29b3a18170071bdc043efc0162f93,IsANumber.java,describeTo,"    public void describeTo(Description description) {
        description.appendText(""is a number"");
    }",https://www.github.com/dius/java-faker/commit/07703e9400a29b3a18170071bdc043efc0162f93,"    public void describeTo(Description description) {
        description.appendText(""is a number"");
    }
","['    ', 'public', ' ', 'void', ' ', 'describeTo', '(', 'Description', ' ', 'description', ')', ' ', '{', '\n', '        ', 'description', '.', 'appendText', '(', '""', 'is a number', '""', ')', ';', '\n', '    ', '}', '\n']"
master,07703e9400a29b3a18170071bdc043efc0162f93,IsANumber.java,isANumber,"    public static <T> Matcher<String> isANumber() {
        return new IsANumber();
    }",https://www.github.com/dius/java-faker/commit/07703e9400a29b3a18170071bdc043efc0162f93,"    public static <T> Matcher<String> isANumber() {
        return new IsANumber();
    }
","['    ', 'public', ' ', 'static', ' ', '<', 'T', '>', ' ', 'Matcher', '<', 'String', '>', ' ', 'isANumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'IsANumber', '(', ')', ';', '\n', '    ', '}', '\n']"
master,d2b4a6830aab7e59c2c364ce62ea1ce10c92d581,AbstractFakerTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/d2b4a6830aab7e59c2c364ce62ea1ce10c92d581,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'FINNISH_LOCALE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,7dfba4261b7041e6e26d1a7c5f550fe0261b6e7b,AddressTest.java,testStreetAddressIsANumber,"    public void testStreetAddressIsANumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());

        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());
    }",https://www.github.com/dius/java-faker/commit/7dfba4261b7041e6e26d1a7c5f550fe0261b6e7b,"    public void testStreetAddressIsANumber() {
        String streetAddressNumber = faker.streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());

        streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIsANumber', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'isANumber', '(', ')', ')', ';', '\n', '\n', '        ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'isANumber', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,449419e8bd42f487ba07f99e2ffb709a8af5db8d,IsANumberTest.java,testNumberShouldBeANumber,"    public void testNumberShouldBeANumber() {
        assertThat(new IsANumber().matchesSafely(""34""), is(true));
    }",https://www.github.com/dius/java-faker/commit/449419e8bd42f487ba07f99e2ffb709a8af5db8d,"    public void testNumberShouldBeANumber() {
        assertThat(new IsANumber().matchesSafely(""34""), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNumberShouldBeANumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'new', ' ', 'IsANumber', '(', ')', '.', 'matchesSafely', '(', '""', '34', '""', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,449419e8bd42f487ba07f99e2ffb709a8af5db8d,IsANumberTest.java,testBlankIsNotANumber,"    public void testBlankIsNotANumber() {
        assertThat(new IsANumber().matchesSafely(""""), is(false));
    }",https://www.github.com/dius/java-faker/commit/449419e8bd42f487ba07f99e2ffb709a8af5db8d,"    public void testBlankIsNotANumber() {
        assertThat(new IsANumber().matchesSafely(""""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBlankIsNotANumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'new', ' ', 'IsANumber', '(', ')', '.', 'matchesSafely', '(', '""', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,449419e8bd42f487ba07f99e2ffb709a8af5db8d,IsANumberTest.java,testOtherCharsIsNotANumber,"    public void testOtherCharsIsNotANumber() {
        assertThat(new IsANumber().matchesSafely(""df3DF-=""), is(false));
    }",https://www.github.com/dius/java-faker/commit/449419e8bd42f487ba07f99e2ffb709a8af5db8d,"    public void testOtherCharsIsNotANumber() {
        assertThat(new IsANumber().matchesSafely(""df3DF-=""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOtherCharsIsNotANumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'new', ' ', 'IsANumber', '(', ')', '.', 'matchesSafely', '(', '""', 'df3DF-=', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,449419e8bd42f487ba07f99e2ffb709a8af5db8d,IsANumberTest.java,testEmptyStringIsNotANumber,"    public void testEmptyStringIsNotANumber() {
        assertThat(new IsANumber().matchesSafely(""   ""), is(false));
    }",https://www.github.com/dius/java-faker/commit/449419e8bd42f487ba07f99e2ffb709a8af5db8d,"    public void testEmptyStringIsNotANumber() {
        assertThat(new IsANumber().matchesSafely(""   ""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'testEmptyStringIsNotANumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'new', ' ', 'IsANumber', '(', ')', '.', 'matchesSafely', '(', '""', '   ', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8fe2a69eb3260f71011d2cdddc41c9a5cac98117,LoremTest.java,shouldCreateFixedLengthString,"    public void shouldCreateFixedLengthString() {
        assertEquals(10, faker.lorem().fixedString(10).length());
        assertEquals(50, faker.lorem().fixedString(50).length());
        assertEquals(0, faker.lorem().fixedString(0).length());
        assertEquals(0, faker.lorem().fixedString(-1).length());
    }",https://www.github.com/dius/java-faker/commit/8fe2a69eb3260f71011d2cdddc41c9a5cac98117,"    public void shouldCreateFixedLengthString() {
        assertEquals(10, faker.lorem().fixedString(10).length());
        assertEquals(50, faker.lorem().fixedString(50).length());
        assertEquals(0, faker.lorem().fixedString(0).length());
        assertEquals(0, faker.lorem().fixedString(-1).length());
    }
","['    ', 'public', ' ', 'void', ' ', 'shouldCreateFixedLengthString', '(', ')', ' ', '{', '\n', '        ', 'assertEquals', '(', '10', ',', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'fixedString', '(', '10', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '50', ',', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'fixedString', '(', '50', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '0', ',', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'fixedString', '(', '0', ')', '.', 'length', '(', ')', ')', ';', '\n', '        ', 'assertEquals', '(', '0', ',', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'fixedString', '(', '-', '1', ')', '.', 'length', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8fe2a69eb3260f71011d2cdddc41c9a5cac98117,FakerIntegrationTest.java,testAllFakerMethodsThatReturnStrings,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
    }",https://www.github.com/dius/java-faker/commit/8fe2a69eb3260f71011d2cdddc41c9a5cac98117,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
    }
","['    ', 'public', ' ', 'void', ' ', 'testAllFakerMethodsThatReturnStrings', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'address', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'business', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'internet', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'lorem', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'phoneNumber', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'name', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8fe2a69eb3260f71011d2cdddc41c9a5cac98117,FakerIntegrationTest.java,testAllMethodsThatReturnStringsActuallyReturnStrings,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws IllegalAccessException, InvocationTargetException {
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            final Object returnValue = method.invoke(object);",https://www.github.com/dius/java-faker/commit/8fe2a69eb3260f71011d2cdddc41c9a5cac98117,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws IllegalAccessException, InvocationTargetException {
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            final Object returnValue = method.invoke(object);
","['    ', 'private', ' ', 'void', ' ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'Object', ' ', 'object', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'InvocationTargetException', ' ', '{', '\n', '        ', 'Set', '<', 'Method', '>', ' ', 'methodsThatReturnStrings', ' ', '=', ' ', 'getAllMethods', '(', 'object', '.', 'getClass', '(', ')', ',', '\n', '                ', 'withModifier', '(', 'Modifier', '.', 'PUBLIC', ')', ',', '\n', '                ', 'withReturnType', '(', 'String', '.', 'class', ')', ',', '\n', '                ', 'withParametersCount', '(', '0', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Method', ' ', 'method', ' ', ':', ' ', 'methodsThatReturnStrings', ')', ' ', '{', '\n', '            ', 'final', ' ', 'Object', ' ', 'returnValue', ' ', '=', ' ', 'method', '.', 'invoke', '(', 'object', ')', ';', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,FakerTest.java,bothifyShouldGenerateLettersAndNumbers,"    public void bothifyShouldGenerateLettersAndNumbers() {
        assertThat(faker.bothify(""????##@gmail.com""), matchesRegularExpression(""\\w{4}\\d{2}@gmail.com""));
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public void bothifyShouldGenerateLettersAndNumbers() {
        assertThat(faker.bothify(""????##@gmail.com""), matchesRegularExpression(""\\w{4}\\d{2}@gmail.com""));
    }
","['    ', 'public', ' ', 'void', ' ', 'bothifyShouldGenerateLettersAndNumbers', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', '????##@gmail.com', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w{4}', '\\\\', 'd{2}@gmail.com', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,FakerTest.java,letterifyShouldGenerateLetters,"    public void letterifyShouldGenerateLetters() {
        assertThat(faker.bothify(""????""), matchesRegularExpression(""\\w{4}""));
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public void letterifyShouldGenerateLetters() {
        assertThat(faker.bothify(""????""), matchesRegularExpression(""\\w{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'letterifyShouldGenerateLetters', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', '????', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,FakerTest.java,letterifyShouldLeaveNonSpecialCharactersAlone,"    public void letterifyShouldLeaveNonSpecialCharactersAlone() {
        assertThat(faker.bothify(""ABC????DEF""), matchesRegularExpression(""ABC\\w{4}DEF""));
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public void letterifyShouldLeaveNonSpecialCharactersAlone() {
        assertThat(faker.bothify(""ABC????DEF""), matchesRegularExpression(""ABC\\w{4}DEF""));
    }
","['    ', 'public', ' ', 'void', ' ', 'letterifyShouldLeaveNonSpecialCharactersAlone', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', 'ABC????DEF', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'ABC', '\\\\', 'w{4}DEF', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,FakerTest.java,numerifyShouldGenerateNumbers,"    public void numerifyShouldGenerateNumbers() {
        assertThat(faker.numerify(""####""), matchesRegularExpression(""\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public void numerifyShouldGenerateNumbers() {
        assertThat(faker.numerify(""####""), matchesRegularExpression(""\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'numerifyShouldGenerateNumbers', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'numerify', '(', '""', '####', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,FakerTest.java,numerifyShouldLeaveNonSpecialCharactersAlone,"    public void numerifyShouldLeaveNonSpecialCharactersAlone() {
        assertThat(faker.numerify(""####123""), matchesRegularExpression(""\\d{4}123""));
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public void numerifyShouldLeaveNonSpecialCharactersAlone() {
        assertThat(faker.numerify(""####123""), matchesRegularExpression(""\\d{4}123""));
    }
","['    ', 'public', ' ', 'void', ' ', 'numerifyShouldLeaveNonSpecialCharactersAlone', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'numerify', '(', '""', '####123', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{4}123', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,MatchesRegularExpression.java,matchesSafely,"    protected boolean matchesSafely(String item) {
        return item.matches(regularExpression);
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    protected boolean matchesSafely(String item) {
        return item.matches(regularExpression);
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'matchesSafely', '(', 'String', ' ', 'item', ')', ' ', '{', '\n', '        ', 'return', ' ', 'item', '.', 'matches', '(', 'regularExpression', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,MatchesRegularExpression.java,describeTo,"    public void describeTo(Description description) {
        description.appendText(""to match the regular expression "" + regularExpression);
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public void describeTo(Description description) {
        description.appendText(""to match the regular expression "" + regularExpression);
    }
","['    ', 'public', ' ', 'void', ' ', 'describeTo', '(', 'Description', ' ', 'description', ')', ' ', '{', '\n', '        ', 'description', '.', 'appendText', '(', '""', 'to match the regular expression ', '""', ' ', '+', ' ', 'regularExpression', ')', ';', '\n', '    ', '}', '\n']"
master,0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,MatchesRegularExpression.java,matchesRegularExpression,"    public static <T> Matcher<String> matchesRegularExpression(String regularExpression) {
        return new MatchesRegularExpression(regularExpression);
    }",https://www.github.com/dius/java-faker/commit/0dffd2c2cd1a6c6cbc4a6a0a018161a53aa48291,"    public static <T> Matcher<String> matchesRegularExpression(String regularExpression) {
        return new MatchesRegularExpression(regularExpression);
    }
","['    ', 'public', ' ', 'static', ' ', '<', 'T', '>', ' ', 'Matcher', '<', 'String', '>', ' ', 'matchesRegularExpression', '(', 'String', ' ', 'regularExpression', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'MatchesRegularExpression', '(', 'regularExpression', ')', ';', '\n', '    ', '}', '\n']"
master,d800a425446b1518b8c86d327919155d7eced7ae,FakeValuesServiceTest.java,before,"    public void before() {
        MockitoAnnotations.initMocks(this);
        when(randomService.nextInt(anyInt())).thenReturn(0);
    }",https://www.github.com/dius/java-faker/commit/d800a425446b1518b8c86d327919155d7eced7ae,"    public void before() {
        MockitoAnnotations.initMocks(this);
        when(randomService.nextInt(anyInt())).thenReturn(0);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '        ', 'when', '(', 'randomService', '.', 'nextInt', '(', 'anyInt', '(', ')', ')', ')', '.', 'thenReturn', '(', '0', ')', ';', '\n', '    ', '}', '\n']"
master,d800a425446b1518b8c86d327919155d7eced7ae,FakeValuesServiceTest.java,localeShouldLoadWhenItExists,"    public void localeShouldLoadWhenItExists() {
        new FakeValuesService(new Locale(""test""), randomService);
    }",https://www.github.com/dius/java-faker/commit/d800a425446b1518b8c86d327919155d7eced7ae,"    public void localeShouldLoadWhenItExists() {
        new FakeValuesService(new Locale(""test""), randomService);
    }
","['    ', 'public', ' ', 'void', ' ', 'localeShouldLoadWhenItExists', '(', ')', ' ', '{', '\n', '        ', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ',', ' ', 'randomService', ')', ';', '\n', '    ', '}', '\n']"
master,d800a425446b1518b8c86d327919155d7eced7ae,FakeValuesServiceTest.java,localeShouldThrowException,"    public void localeShouldThrowException() {
        new FakeValuesService(new Locale(""Does not exist""), randomService);
    }",https://www.github.com/dius/java-faker/commit/d800a425446b1518b8c86d327919155d7eced7ae,"    public void localeShouldThrowException() {
        new FakeValuesService(new Locale(""Does not exist""), randomService);
    }
","['    ', 'public', ' ', 'void', ' ', 'localeShouldThrowException', '(', ')', ' ', '{', '\n', '        ', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'Does not exist', '""', ')', ',', ' ', 'randomService', ')', ';', '\n', '    ', '}', '\n']"
master,d800a425446b1518b8c86d327919155d7eced7ae,FakeValuesServiceTest.java,fetchStringShouldReturnValue,"    public void fetchStringShouldReturnValue() {
        final FakeValuesService fakeValueService = new FakeValuesService(new Locale(""test""), randomService);
        assertThat(fakeValueService.fetchString(""property.dummy""), is(""x""));
    }",https://www.github.com/dius/java-faker/commit/d800a425446b1518b8c86d327919155d7eced7ae,"    public void fetchStringShouldReturnValue() {
        final FakeValuesService fakeValueService = new FakeValuesService(new Locale(""test""), randomService);
        assertThat(fakeValueService.fetchString(""property.dummy""), is(""x""));
    }
","['    ', 'public', ' ', 'void', ' ', 'fetchStringShouldReturnValue', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'FakeValuesService', ' ', 'fakeValueService', ' ', '=', ' ', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ',', ' ', 'randomService', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValueService', '.', 'fetchString', '(', '""', 'property.dummy', '""', ')', ',', ' ', 'is', '(', '""', 'x', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2ea3da57af22d710711d1f13539cc5576d247abc,FakeValuesServiceTest.java,before,"    public void before() {
        MockitoAnnotations.initMocks(this);
        // always return the first element
        when(randomService.nextInt(anyInt())).thenReturn(0);
        fakeValuesService = new FakeValuesService(new Locale(""test""), randomService);
    }",https://www.github.com/dius/java-faker/commit/2ea3da57af22d710711d1f13539cc5576d247abc,"    public void before() {
        MockitoAnnotations.initMocks(this);
        
        when(randomService.nextInt(anyInt())).thenReturn(0);
        fakeValuesService = new FakeValuesService(new Locale(""test""), randomService);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '        ', '\n', '        ', 'when', '(', 'randomService', '.', 'nextInt', '(', 'anyInt', '(', ')', ')', ')', '.', 'thenReturn', '(', '0', ')', ';', '\n', '        ', 'fakeValuesService', ' ', '=', ' ', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ',', ' ', 'randomService', ')', ';', '\n', '    ', '}', '\n']"
master,2ea3da57af22d710711d1f13539cc5576d247abc,FakeValuesServiceTest.java,fetchStringShouldReturnValue,"    public void fetchStringShouldReturnValue() {
        assertThat(fakeValuesService.fetchString(""property.dummy""), is(""x""));
    }",https://www.github.com/dius/java-faker/commit/2ea3da57af22d710711d1f13539cc5576d247abc,"    public void fetchStringShouldReturnValue() {
        assertThat(fakeValuesService.fetchString(""property.dummy""), is(""x""));
    }
","['    ', 'public', ' ', 'void', ' ', 'fetchStringShouldReturnValue', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'property.dummy', '""', ')', ',', ' ', 'is', '(', '""', 'x', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2ea3da57af22d710711d1f13539cc5576d247abc,FakeValuesServiceTest.java,fetchShouldReturnValue,"    public void fetchShouldReturnValue() {
        assertThat(fakeValuesService.fetch(""property.dummy""), Is.<Object>is(""x""));
    }",https://www.github.com/dius/java-faker/commit/2ea3da57af22d710711d1f13539cc5576d247abc,"    public void fetchShouldReturnValue() {
        assertThat(fakeValuesService.fetch(""property.dummy""), Is.<Object>is(""x""));
    }
","['    ', 'public', ' ', 'void', ' ', 'fetchShouldReturnValue', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'fetch', '(', '""', 'property.dummy', '""', ')', ',', ' ', 'Is', '.', '<', 'Object', '>', 'is', '(', '""', 'x', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2ea3da57af22d710711d1f13539cc5576d247abc,FakeValuesServiceTest.java,fetchObjectShouldReturnValue,"    public void fetchObjectShouldReturnValue() {
        assertThat(fakeValuesService.fetchObject(""property.dummy""), Is.<Object>is(Arrays.asList(""x"", ""y"", ""z"")));
    }",https://www.github.com/dius/java-faker/commit/2ea3da57af22d710711d1f13539cc5576d247abc,"    public void fetchObjectShouldReturnValue() {
        assertThat(fakeValuesService.fetchObject(""property.dummy""), Is.<Object>is(Arrays.asList(""x"", ""y"", ""z"")));
    }
","['    ', 'public', ' ', 'void', ' ', 'fetchObjectShouldReturnValue', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'property.dummy', '""', ')', ',', ' ', 'Is', '.', '<', 'Object', '>', 'is', '(', 'Arrays', '.', 'asList', '(', '""', 'x', '""', ',', ' ', '""', 'y', '""', ',', ' ', '""', 'z', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f826c252ea62becb80b97dafcb2b1b2599d46e18,FakeValuesServiceTest.java,compositeShouldComposeMultipleProperties,"    public void compositeShouldComposeMultipleProperties() {
        final String composedProperty = fakeValuesService.composite(""property.composite"", "" "", new DummyService());
        assertThat(composedProperty, is(""John Smith""));
    }",https://www.github.com/dius/java-faker/commit/f826c252ea62becb80b97dafcb2b1b2599d46e18,"    public void compositeShouldComposeMultipleProperties() {
        final String composedProperty = fakeValuesService.composite(""property.composite"", "" "", new DummyService());
        assertThat(composedProperty, is(""John Smith""));
    }
","['    ', 'public', ' ', 'void', ' ', 'compositeShouldComposeMultipleProperties', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'composedProperty', ' ', '=', ' ', 'fakeValuesService', '.', 'composite', '(', '""', 'property.composite', '""', ',', ' ', '""', ' ', '""', ',', ' ', 'new', ' ', 'DummyService', '(', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'composedProperty', ',', ' ', 'is', '(', '""', 'John Smith', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f826c252ea62becb80b97dafcb2b1b2599d46e18,FakeValuesServiceTest.java,compositeShouldThrowExceptionWhenMethodsDoNotExist,"    public void compositeShouldThrowExceptionWhenMethodsDoNotExist() {
        fakeValuesService.composite(""property.composite"", "" "", new AnotherDummyService());
    }",https://www.github.com/dius/java-faker/commit/f826c252ea62becb80b97dafcb2b1b2599d46e18,"    public void compositeShouldThrowExceptionWhenMethodsDoNotExist() {
        fakeValuesService.composite(""property.composite"", "" "", new AnotherDummyService());
    }
","['    ', 'public', ' ', 'void', ' ', 'compositeShouldThrowExceptionWhenMethodsDoNotExist', '(', ')', ' ', '{', '\n', '        ', 'fakeValuesService', '.', 'composite', '(', '""', 'property.composite', '""', ',', ' ', '""', ' ', '""', ',', ' ', 'new', ' ', 'AnotherDummyService', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f826c252ea62becb80b97dafcb2b1b2599d46e18,FakeValuesServiceTest.java,firstName,"        public String firstName() {
            return ""John"";
        }",https://www.github.com/dius/java-faker/commit/f826c252ea62becb80b97dafcb2b1b2599d46e18,"        public String firstName() {
            return ""John"";
        }
","['        ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', 'John', '""', ';', '\n', '        ', '}', '\n']"
master,f826c252ea62becb80b97dafcb2b1b2599d46e18,FakeValuesServiceTest.java,lastName,"        public String lastName() {
            return ""Smith"";
        }",https://www.github.com/dius/java-faker/commit/f826c252ea62becb80b97dafcb2b1b2599d46e18,"        public String lastName() {
            return ""Smith"";
        }
","['        ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', 'Smith', '""', ';', '\n', '        ', '}', '\n']"
master,7a08409f0cbaa7ece561ce2535ba7d4b881f37c7,AddressTest.java,testStreetAddressIsANumber,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());
    }",https://www.github.com/dius/java-faker/commit/7a08409f0cbaa7ece561ce2535ba7d4b881f37c7,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, isANumber());
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIsANumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'isANumber', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7a08409f0cbaa7ece561ce2535ba7d4b881f37c7,FakerIntegrationTest.java,testExceptionsNotCoveredInAboveTest,"    public void testExceptionsNotCoveredInAboveTest() throws Exception {
        assertThat(faker.bothify(""####???""), is(notNullValue()));
        assertThat(faker.letterify(""????""), is(notNullValue()));
        assertThat(faker.numerify(""####""), is(notNullValue()));

        assertThat(faker.lorem().paragraph(1), is(notNullValue()));
        assertThat(faker.lorem().paragraphs(1), is(notNullValue()));

        assertThat(faker.lorem().sentence(1), is(notNullValue()));
        assertThat(faker.lorem().sentences(1), is(notNullValue()));

        assertThat(faker.address().streetAddress(true), is(notNullValue()));

        assertThat(faker.lorem().words(), is(notNullValue()));
        assertThat(faker.lorem().words(1), is(notNullValue()));
    }",https://www.github.com/dius/java-faker/commit/7a08409f0cbaa7ece561ce2535ba7d4b881f37c7,"    public void testExceptionsNotCoveredInAboveTest() throws Exception {
        assertThat(faker.bothify(""####???""), is(notNullValue()));
        assertThat(faker.letterify(""????""), is(notNullValue()));
        assertThat(faker.numerify(""####""), is(notNullValue()));

        assertThat(faker.lorem().paragraph(1), is(notNullValue()));
        assertThat(faker.lorem().paragraphs(1), is(notNullValue()));

        assertThat(faker.lorem().sentence(1), is(notNullValue()));
        assertThat(faker.lorem().sentences(1), is(notNullValue()));

        assertThat(faker.address().streetAddress(true), is(notNullValue()));

        assertThat(faker.lorem().words(), is(notNullValue()));
        assertThat(faker.lorem().words(1), is(notNullValue()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testExceptionsNotCoveredInAboveTest', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', '####???', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'letterify', '(', '""', '????', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'numerify', '(', '""', '####', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'paragraph', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'paragraphs', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentences', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'streetAddress', '(', 'true', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c9c8d81360a71262c5834320a8e9afbb78cf7fda,Address.java,latitude,"    public String latitude() {
        return String.format(""%.8g"", (random.nextDouble() * 180) - 90);
    }",https://www.github.com/dius/java-faker/commit/c9c8d81360a71262c5834320a8e9afbb78cf7fda,"    public String latitude() {
        return String.format(""%.8g"", (random.nextDouble() * 180) - 90);
    }
","['    ', 'public', ' ', 'String', ' ', 'latitude', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%.8g', '""', ',', ' ', '(', 'random', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '180', ')', ' ', '-', ' ', '90', ')', ';', '\n', '    ', '}', '\n']"
master,c9c8d81360a71262c5834320a8e9afbb78cf7fda,Address.java,longitude,"    public String longitude() {
        return String.format(""%.8g"", (random.nextDouble() * 360) - 180);
    }",https://www.github.com/dius/java-faker/commit/c9c8d81360a71262c5834320a8e9afbb78cf7fda,"    public String longitude() {
        return String.format(""%.8g"", (random.nextDouble() * 360) - 180);
    }
","['    ', 'public', ' ', 'String', ' ', 'longitude', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%.8g', '""', ',', ' ', '(', 'random', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '360', ')', ' ', '-', ' ', '180', ')', ';', '\n', '    ', '}', '\n']"
master,03f60d080950aa760176adda3ec33452e8966758,AddressTest.java,testLatitude,"    public void testLatitude() {
        try {
            String latStr = faker.address().latitude();",https://www.github.com/dius/java-faker/commit/03f60d080950aa760176adda3ec33452e8966758,"    public void testLatitude() {
        try {
            String latStr = faker.address().latitude();
","['    ', 'public', ' ', 'void', ' ', 'testLatitude', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'latStr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'latitude', '(', ')', ';', '\n']"
master,03f60d080950aa760176adda3ec33452e8966758,AddressTest.java,testLongitude,"    public void testLongitude() {
        try {
            String longStr = faker.address().longitude();",https://www.github.com/dius/java-faker/commit/03f60d080950aa760176adda3ec33452e8966758,"    public void testLongitude() {
        try {
            String longStr = faker.address().longitude();
","['    ', 'public', ' ', 'void', ' ', 'testLongitude', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'longStr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'longitude', '(', ')', ';', '\n']"
master,655164ee44058bf915ab5ae95147aa902b8d685d,AddressTest.java,testLatitude,"    public void testLatitude() {
        try {
            String latStr;",https://www.github.com/dius/java-faker/commit/655164ee44058bf915ab5ae95147aa902b8d685d,"    public void testLatitude() {
        try {
            String latStr;
","['    ', 'public', ' ', 'void', ' ', 'testLatitude', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'latStr', ';', '\n']"
master,655164ee44058bf915ab5ae95147aa902b8d685d,AddressTest.java,testLongitude,"    public void testLongitude() {
        try {
            String longStr;",https://www.github.com/dius/java-faker/commit/655164ee44058bf915ab5ae95147aa902b8d685d,"    public void testLongitude() {
        try {
            String longStr;
","['    ', 'public', ' ', 'void', ' ', 'testLongitude', '(', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'longStr', ';', '\n']"
master,3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,Code.java,isbn10,"    public String isbn10() {
        StringBuilder isbn10 = new StringBuilder();
        int sum = 0;
        for (int i = 10; i > 1; i--) {
            int n = random.nextInt(10);
            sum += i * n;
            isbn10.append(n);
        }
        int check = (11 - sum % 11) % 11;
        isbn10.append('-');
        isbn10.append(check != 10 ? check : ""X"");
        return isbn10.toString();
    }",https://www.github.com/dius/java-faker/commit/3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,"    public String isbn10() {
        StringBuilder isbn10 = new StringBuilder();
        int sum = 0;
        for (int i = 10; i > 1; i--) {
            int n = random.nextInt(10);
            sum += i * n;
            isbn10.append(n);
        }
        int check = (11 - sum % 11) % 11;
        isbn10.append('-');
        isbn10.append(check != 10 ? check : ""X"");
        return isbn10.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn10', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'isbn10', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '10', ';', ' ', 'i', ' ', '>', ' ', '1', ';', ' ', 'i', '-', '-', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'random', '.', 'nextInt', '(', '10', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'i', ' ', '*', ' ', 'n', ';', '\n', '            ', 'isbn10', '.', 'append', '(', 'n', ')', ';', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'check', ' ', '=', ' ', '(', '11', ' ', '-', ' ', 'sum', ' ', '%', ' ', '11', ')', ' ', '%', ' ', '11', ';', '\n', '        ', 'isbn10', '.', 'append', '(', ""'-'"", ')', ';', '\n', '        ', 'isbn10', '.', 'append', '(', 'check', ' ', '!', '=', ' ', '10', ' ', '?', ' ', 'check', ' ', ':', ' ', '""', 'X', '""', ')', ';', '\n', '        ', 'return', ' ', 'isbn10', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,Code.java,isbn13,"    public String isbn13() {
        StringBuilder isbn13 = new StringBuilder();
        int sum = 0;
        int multiplier = 1;
        int a = 1;
        int b = 2;
        for (int i = 0; i < 12; i++) {
            int n = random.nextInt(10);
            sum += multiplier * n;
            multiplier = multiplier == 1 ? 3 : 1;
            isbn13.append(n);
            if (i == b) {
                isbn13.append('-');
                int t = b;
                b += a;
                a = t;
            }
        }
        int check = (10 - sum % 10) % 10;
        isbn13.append(check);
        return isbn13.toString();
    }",https://www.github.com/dius/java-faker/commit/3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,"    public String isbn13() {
        StringBuilder isbn13 = new StringBuilder();
        int sum = 0;
        int multiplier = 1;
        int a = 1;
        int b = 2;
        for (int i = 0; i < 12; i++) {
            int n = random.nextInt(10);
            sum += multiplier * n;
            multiplier = multiplier == 1 ? 3 : 1;
            isbn13.append(n);
            if (i == b) {
                isbn13.append('-');
                int t = b;
                b += a;
                a = t;
            }
        }
        int check = (10 - sum % 10) % 10;
        isbn13.append(check);
        return isbn13.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn13', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'isbn13', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'int', ' ', 'multiplier', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'a', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'b', ' ', '=', ' ', '2', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '12', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'random', '.', 'nextInt', '(', '10', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'multiplier', ' ', '*', ' ', 'n', ';', '\n', '            ', 'multiplier', ' ', '=', ' ', 'multiplier', ' ', '=', '=', ' ', '1', ' ', '?', ' ', '3', ' ', ':', ' ', '1', ';', '\n', '            ', 'isbn13', '.', 'append', '(', 'n', ')', ';', '\n', '            ', 'if', ' ', '(', 'i', ' ', '=', '=', ' ', 'b', ')', ' ', '{', '\n', '                ', 'isbn13', '.', 'append', '(', ""'-'"", ')', ';', '\n', '                ', 'int', ' ', 't', ' ', '=', ' ', 'b', ';', '\n', '                ', 'b', ' ', '+', '=', ' ', 'a', ';', '\n', '                ', 'a', ' ', '=', ' ', 't', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'check', ' ', '=', ' ', '(', '10', ' ', '-', ' ', 'sum', ' ', '%', ' ', '10', ')', ' ', '%', ' ', '10', ';', '\n', '        ', 'isbn13', '.', 'append', '(', 'check', ')', ';', '\n', '        ', 'return', ' ', 'isbn13', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,CodeTest.java,testIsbn10,"    public void testIsbn10() {
        String isbn10;
        long sum;
        int i, n;
        for (int j = 0; j < 1000; j++) {
            isbn10 = faker.code().isbn10();",https://www.github.com/dius/java-faker/commit/3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,"    public void testIsbn10() {
        String isbn10;
        long sum;
        int i, n;
        for (int j = 0; j < 1000; j++) {
            isbn10 = faker.code().isbn10();
","['    ', 'public', ' ', 'void', ' ', 'testIsbn10', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'isbn10', ';', '\n', '        ', 'long', ' ', 'sum', ';', '\n', '        ', 'int', ' ', 'i', ',', ' ', 'n', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'j', ' ', '=', ' ', '0', ';', ' ', 'j', ' ', '<', ' ', '1000', ';', ' ', 'j', '+', '+', ')', ' ', '{', '\n', '            ', 'isbn10', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', ')', ';', '\n']"
master,3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,CodeTest.java,testIsbn13,"    public void testIsbn13() {
        String isbn13;
        long sum;
        for (int j = 0; j < 1000; j++) {
            isbn13 = faker.code().isbn13();",https://www.github.com/dius/java-faker/commit/3e5f9877b19f5b33bc3b255aa9d40bce54ba73ff,"    public void testIsbn13() {
        String isbn13;
        long sum;
        for (int j = 0; j < 1000; j++) {
            isbn13 = faker.code().isbn13();
","['    ', 'public', ' ', 'void', ' ', 'testIsbn13', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'isbn13', ';', '\n', '        ', 'long', ' ', 'sum', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'j', ' ', '=', ' ', '0', ';', ' ', 'j', ' ', '<', ' ', '1000', ';', ' ', 'j', '+', '+', ')', ' ', '{', '\n', '            ', 'isbn13', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', ')', ';', '\n']"
master,2daa967f9c540858db58804caa505706d2116371,Options.java,option,"    public String option(String[] options) {
        return options[randomService.nextInt(options.length)];
    }",https://www.github.com/dius/java-faker/commit/2daa967f9c540858db58804caa505706d2116371,"    public String option(String[] options) {
        return options[randomService.nextInt(options.length)];
    }
","['    ', 'public', ' ', 'String', ' ', 'option', '(', 'String', '[', ']', ' ', 'options', ')', ' ', '{', '\n', '        ', 'return', ' ', 'options', '[', 'randomService', '.', 'nextInt', '(', 'options', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,d6a0671634f371921a55dae82416f092fa5a9c16,Code.java,isbn10,"    public String isbn10() {
        StringBuilder isbn10 = new StringBuilder();
        int sum = 0;
        for (int i = 10; i > 1; i--) {
            int n = randomService.nextInt(10);
            sum += i * n;
            isbn10.append(n);
        }
        int check = (11 - sum % 11) % 11;
        isbn10.append('-');
        isbn10.append(check != 10 ? check : ""X"");
        return isbn10.toString();
    }",https://www.github.com/dius/java-faker/commit/d6a0671634f371921a55dae82416f092fa5a9c16,"    public String isbn10() {
        StringBuilder isbn10 = new StringBuilder();
        int sum = 0;
        for (int i = 10; i > 1; i--) {
            int n = randomService.nextInt(10);
            sum += i * n;
            isbn10.append(n);
        }
        int check = (11 - sum % 11) % 11;
        isbn10.append('-');
        isbn10.append(check != 10 ? check : ""X"");
        return isbn10.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn10', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'isbn10', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '10', ';', ' ', 'i', ' ', '>', ' ', '1', ';', ' ', 'i', '-', '-', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'randomService', '.', 'nextInt', '(', '10', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'i', ' ', '*', ' ', 'n', ';', '\n', '            ', 'isbn10', '.', 'append', '(', 'n', ')', ';', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'check', ' ', '=', ' ', '(', '11', ' ', '-', ' ', 'sum', ' ', '%', ' ', '11', ')', ' ', '%', ' ', '11', ';', '\n', '        ', 'isbn10', '.', 'append', '(', ""'-'"", ')', ';', '\n', '        ', 'isbn10', '.', 'append', '(', 'check', ' ', '!', '=', ' ', '10', ' ', '?', ' ', 'check', ' ', ':', ' ', '""', 'X', '""', ')', ';', '\n', '        ', 'return', ' ', 'isbn10', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,d6a0671634f371921a55dae82416f092fa5a9c16,Code.java,isbn13,"    public String isbn13() {
        StringBuilder isbn13 = new StringBuilder();
        int sum = 0;
        int multiplier = 1;
        int a = 1;
        int b = 2;
        for (int i = 0; i < 12; i++) {
            int n = randomService.nextInt(10);
            sum += multiplier * n;
            multiplier = multiplier == 1 ? 3 : 1;
            isbn13.append(n);
            if (i == b) {
                isbn13.append('-');
                int t = b;
                b += a;
                a = t;
            }
        }
        int check = (10 - sum % 10) % 10;
        isbn13.append(check);
        return isbn13.toString();
    }",https://www.github.com/dius/java-faker/commit/d6a0671634f371921a55dae82416f092fa5a9c16,"    public String isbn13() {
        StringBuilder isbn13 = new StringBuilder();
        int sum = 0;
        int multiplier = 1;
        int a = 1;
        int b = 2;
        for (int i = 0; i < 12; i++) {
            int n = randomService.nextInt(10);
            sum += multiplier * n;
            multiplier = multiplier == 1 ? 3 : 1;
            isbn13.append(n);
            if (i == b) {
                isbn13.append('-');
                int t = b;
                b += a;
                a = t;
            }
        }
        int check = (10 - sum % 10) % 10;
        isbn13.append(check);
        return isbn13.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn13', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'isbn13', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'int', ' ', 'multiplier', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'a', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'b', ' ', '=', ' ', '2', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '12', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'randomService', '.', 'nextInt', '(', '10', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'multiplier', ' ', '*', ' ', 'n', ';', '\n', '            ', 'multiplier', ' ', '=', ' ', 'multiplier', ' ', '=', '=', ' ', '1', ' ', '?', ' ', '3', ' ', ':', ' ', '1', ';', '\n', '            ', 'isbn13', '.', 'append', '(', 'n', ')', ';', '\n', '            ', 'if', ' ', '(', 'i', ' ', '=', '=', ' ', 'b', ')', ' ', '{', '\n', '                ', 'isbn13', '.', 'append', '(', ""'-'"", ')', ';', '\n', '                ', 'int', ' ', 't', ' ', '=', ' ', 'b', ';', '\n', '                ', 'b', ' ', '+', '=', ' ', 'a', ';', '\n', '                ', 'a', ' ', '=', ' ', 't', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'check', ' ', '=', ' ', '(', '10', ' ', '-', ' ', 'sum', ' ', '%', ' ', '10', ')', ' ', '%', ' ', '10', ';', '\n', '        ', 'isbn13', '.', 'append', '(', 'check', ')', ';', '\n', '        ', 'return', ' ', 'isbn13', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,6fa700678b47d9472f934809e593eb205942c62b,Internet.java,url,"    public String url() {
        return join(new Object[]{
                ""www"",",https://www.github.com/dius/java-faker/commit/6fa700678b47d9472f934809e593eb205942c62b,"    public String url() {
        return join(new Object[]{
                ""www"",
","['    ', 'public', ' ', 'String', ' ', 'url', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', '""', 'www', '""', ',', '\n']"
master,0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,Address.java,latitude,"    public String latitude() {
        return String.format(""%.8g"", (randomService.nextDouble() * 180) - 90);
    }",https://www.github.com/dius/java-faker/commit/0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,"    public String latitude() {
        return String.format(""%.8g"", (randomService.nextDouble() * 180) - 90);
    }
","['    ', 'public', ' ', 'String', ' ', 'latitude', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%.8g', '""', ',', ' ', '(', 'randomService', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '180', ')', ' ', '-', ' ', '90', ')', ';', '\n', '    ', '}', '\n']"
master,0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,Address.java,longitude,"    public String longitude() {
        return String.format(""%.8g"", (randomService.nextDouble() * 360) - 180);
    }",https://www.github.com/dius/java-faker/commit/0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,"    public String longitude() {
        return String.format(""%.8g"", (randomService.nextDouble() * 360) - 180);
    }
","['    ', 'public', ' ', 'String', ' ', 'longitude', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%.8g', '""', ',', ' ', '(', 'randomService', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '360', ')', ' ', '-', ' ', '180', ')', ';', '\n', '    ', '}', '\n']"
master,0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,RandomService.java,nextDouble,"    public double nextDouble() {
        return RandomUtils.nextDouble(random);
    }",https://www.github.com/dius/java-faker/commit/0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,"    public double nextDouble() {
        return RandomUtils.nextDouble(random);
    }
","['    ', 'public', ' ', 'double', ' ', 'nextDouble', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'RandomUtils', '.', 'nextDouble', '(', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,AddressTest.java,testLatitude,"    public void testLatitude() {
        String latStr;
        Double lat;
        for (int i = 0; i < 100; i++) {
            latStr = faker.address().latitude();",https://www.github.com/dius/java-faker/commit/0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,"    public void testLatitude() {
        String latStr;
        Double lat;
        for (int i = 0; i < 100; i++) {
            latStr = faker.address().latitude();
","['    ', 'public', ' ', 'void', ' ', 'testLatitude', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'latStr', ';', '\n', '        ', 'Double', ' ', 'lat', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'latStr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'latitude', '(', ')', ';', '\n']"
master,0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,AddressTest.java,testLongitude,"    public void testLongitude() {
        String longStr;
        Double lon;
        for (int i = 0; i < 100; i++) {
            longStr = faker.address().longitude();",https://www.github.com/dius/java-faker/commit/0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,"    public void testLongitude() {
        String longStr;
        Double lon;
        for (int i = 0; i < 100; i++) {
            longStr = faker.address().longitude();
","['    ', 'public', ' ', 'void', ' ', 'testLongitude', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'longStr', ';', '\n', '        ', 'Double', ' ', 'lon', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'longStr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'longitude', '(', ')', ';', '\n']"
master,0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,IsANumber.java,matchesSafely,"    protected boolean matchesSafely(String item) {
        try {
            new Double(item);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }",https://www.github.com/dius/java-faker/commit/0bcfc26b2cb1a9f45381d550b9eae71c7c617be8,"    protected boolean matchesSafely(String item) {
        try {
            new Double(item);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'matchesSafely', '(', 'String', ' ', 'item', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'new', ' ', 'Double', '(', 'item', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'NumberFormatException', ' ', 'nfe', ')', ' ', '{', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'true', ';', '\n', '    ', '}', '\n']"
master,1eff4b678fb7f9dfbd089a11d01cea5c002162bb,InternetTest.java,testUrl,"    public void testUrl() {
        assertThat(faker.internet().url(), matchesRegularExpression(""www\\.(\\w|-)+\\.\\w+""));
    }",https://www.github.com/dius/java-faker/commit/1eff4b678fb7f9dfbd089a11d01cea5c002162bb,"    public void testUrl() {
        assertThat(faker.internet().url(), matchesRegularExpression(""www\\.(\\w|-)+\\.\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUrl', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'url', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'www', '\\\\', '.(', '\\\\', 'w|-)+', '\\\\', '.', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1eff4b678fb7f9dfbd089a11d01cea5c002162bb,OptionsTest.java,before,"    public void before() {
        faker = new Faker();
        options = new String[]{""A"", ""B"", ""C""};
    }",https://www.github.com/dius/java-faker/commit/1eff4b678fb7f9dfbd089a11d01cea5c002162bb,"    public void before() {
        faker = new Faker();
        options = new String[]{""A"", ""B"", ""C""};
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'options', ' ', '=', ' ', 'new', ' ', 'String', '[', ']', '{', '""', 'A', '""', ',', ' ', '""', 'B', '""', ',', ' ', '""', 'C', '""', '}', ';', '\n', '    ', '}', '\n']"
master,1eff4b678fb7f9dfbd089a11d01cea5c002162bb,OptionsTest.java,testOption,"    public void testOption() {
        List<String> helper = Arrays.asList(options);
        assertTrue(helper.contains(faker.options().option(options)));
    }",https://www.github.com/dius/java-faker/commit/1eff4b678fb7f9dfbd089a11d01cea5c002162bb,"    public void testOption() {
        List<String> helper = Arrays.asList(options);
        assertTrue(helper.contains(faker.options().option(options)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOption', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'helper', ' ', '=', ' ', 'Arrays', '.', 'asList', '(', 'options', ')', ';', '\n', '        ', 'assertTrue', '(', 'helper', '.', 'contains', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'options', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8620072b5ffa1c584053a0b885e571a18ee843d0,Address.java,timeZone,"    public String timeZone() {
        return fakeValuesService.fetchString(""address.time_zone"");
    }",https://www.github.com/dius/java-faker/commit/8620072b5ffa1c584053a0b885e571a18ee843d0,"    public String timeZone() {
        return fakeValuesService.fetchString(""address.time_zone"");
    }
","['    ', 'public', ' ', 'String', ' ', 'timeZone', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.time_zone', '""', ')', ';', '\n', '    ', '}', '\n']"
master,8620072b5ffa1c584053a0b885e571a18ee843d0,AddressTest.java,testTimeZone,"    public void testTimeZone() {
        assertThat(faker.address().timeZone(), matchesRegularExpression(""[A-Za-z_]+/[A-Za-z_]+[/A-Za-z_]*""));
    }",https://www.github.com/dius/java-faker/commit/8620072b5ffa1c584053a0b885e571a18ee843d0,"    public void testTimeZone() {
        assertThat(faker.address().timeZone(), matchesRegularExpression(""[A-Za-z_]+/[A-Za-z_]+[/A-Za-z_]*""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testTimeZone', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'timeZone', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z_]+/[A-Za-z_]+[/A-Za-z_]*', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fce12ababf998fef556c4bf39324ef5d0520e7b8,Finance.java,randomCreditCardType,"    private CreditCardType randomCreditCardType() {
        return CreditCardType.values()[this.randomService.nextInt(CreditCardType.values().length)];
    }",https://www.github.com/dius/java-faker/commit/fce12ababf998fef556c4bf39324ef5d0520e7b8,"    private CreditCardType randomCreditCardType() {
        return CreditCardType.values()[this.randomService.nextInt(CreditCardType.values().length)];
    }
","['    ', 'private', ' ', 'CreditCardType', ' ', 'randomCreditCardType', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'CreditCardType', '.', 'values', '(', ')', '[', 'this', '.', 'randomService', '.', 'nextInt', '(', 'CreditCardType', '.', 'values', '(', ')', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,fce12ababf998fef556c4bf39324ef5d0520e7b8,Finance.java,sum,"    private static int sum(String[] string) {
        int sum = 0;
        for (String s : string) {
            if (!s.isEmpty()) {
                sum += Integer.valueOf(s);
            }
        }
        return sum;
    }",https://www.github.com/dius/java-faker/commit/fce12ababf998fef556c4bf39324ef5d0520e7b8,"    private static int sum(String[] string) {
        int sum = 0;
        for (String s : string) {
            if (!s.isEmpty()) {
                sum += Integer.valueOf(s);
            }
        }
        return sum;
    }
","['    ', 'private', ' ', 'static', ' ', 'int', ' ', 'sum', '(', 'String', '[', ']', ' ', 'string', ')', ' ', '{', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'String', ' ', 's', ' ', ':', ' ', 'string', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', '!', 's', '.', 'isEmpty', '(', ')', ')', ' ', '{', '\n', '                ', 'sum', ' ', '+', '=', ' ', 'Integer', '.', 'valueOf', '(', 's', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sum', ';', '\n', '    ', '}', '\n']"
master,fce12ababf998fef556c4bf39324ef5d0520e7b8,FinanceTest.java,creditCard,"    public void creditCard() {
        for (int i = 0; i < 100; i++) {
            final String creditCard = faker.finance().creditCard();",https://www.github.com/dius/java-faker/commit/fce12ababf998fef556c4bf39324ef5d0520e7b8,"    public void creditCard() {
        for (int i = 0; i < 100; i++) {
            final String creditCard = faker.finance().creditCard();
","['    ', 'public', ' ', 'void', ' ', 'creditCard', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'final', ' ', 'String', ' ', 'creditCard', ' ', '=', ' ', 'faker', '.', 'finance', '(', ')', '.', 'creditCard', '(', ')', ';', '\n']"
master,fce12ababf998fef556c4bf39324ef5d0520e7b8,FakerIntegrationTest.java,testAllFakerMethodsThatReturnStrings,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
    }",https://www.github.com/dius/java-faker/commit/fce12ababf998fef556c4bf39324ef5d0520e7b8,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
    }
","['    ', 'public', ' ', 'void', ' ', 'testAllFakerMethodsThatReturnStrings', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'address', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'business', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'internet', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'lorem', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'phoneNumber', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'name', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'finance', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5afbc54fe951217fab16d683bb96551740307bad,Faker.java,country,"    public Country country() {
        return countryService.country();
    }",https://www.github.com/dius/java-faker/commit/5afbc54fe951217fab16d683bb96551740307bad,"    public Country country() {
        return countryService.country();
    }
","['    ', 'public', ' ', 'Country', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'countryService', '.', 'country', '(', ')', ';', '\n', '    ', '}', '\n']"
master,5afbc54fe951217fab16d683bb96551740307bad,CountryService.java,country,"    public Country country() {
        int countryIndex = randomService.nextInt(isoCodes.size());
        return new Country(names.get(countryIndex), isoCodes.get(countryIndex));
    }",https://www.github.com/dius/java-faker/commit/5afbc54fe951217fab16d683bb96551740307bad,"    public Country country() {
        int countryIndex = randomService.nextInt(isoCodes.size());
        return new Country(names.get(countryIndex), isoCodes.get(countryIndex));
    }
","['    ', 'public', ' ', 'Country', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'countryIndex', ' ', '=', ' ', 'randomService', '.', 'nextInt', '(', 'isoCodes', '.', 'size', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'Country', '(', 'names', '.', 'get', '(', 'countryIndex', ')', ',', ' ', 'isoCodes', '.', 'get', '(', 'countryIndex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5afbc54fe951217fab16d683bb96551740307bad,CountryServiceTest.java,testCountryIsoHasValidLength,"    public void testCountryIsoHasValidLength() {
        for (int i = 0; i < 500; i++) {
            final String countryIsoValue = nextRandomCountry().iso();",https://www.github.com/dius/java-faker/commit/5afbc54fe951217fab16d683bb96551740307bad,"    public void testCountryIsoHasValidLength() {
        for (int i = 0; i < 500; i++) {
            final String countryIsoValue = nextRandomCountry().iso();
","['    ', 'public', ' ', 'void', ' ', 'testCountryIsoHasValidLength', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '500', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'final', ' ', 'String', ' ', 'countryIsoValue', ' ', '=', ' ', 'nextRandomCountry', '(', ')', '.', 'iso', '(', ')', ';', '\n']"
master,5afbc54fe951217fab16d683bb96551740307bad,CountryServiceTest.java,testNameAndIsoReferToSameCountry,"    public void testNameAndIsoReferToSameCountry() {
        List<String> testCountries = Arrays.asList(""US"", ""PL"", ""PY"", ""AF"", ""CC"");
        Country randomCountry = nextRandomCountry();
        while (!testCountries.contains(randomCountry.iso())) {
            randomCountry = nextRandomCountry();
        }

        countryNameMatchIso(randomCountry, ""US"", ""United States"");
        countryNameMatchIso(randomCountry, ""PL"", ""Poland"");
        countryNameMatchIso(randomCountry, ""PY"", ""Paraguay"");
        countryNameMatchIso(randomCountry, ""AF"", ""Afghanistan"");
        countryNameMatchIso(randomCountry, ""CC"", ""Cocos [Keeling] Islands"");
    }",https://www.github.com/dius/java-faker/commit/5afbc54fe951217fab16d683bb96551740307bad,"    public void testNameAndIsoReferToSameCountry() {
        List<String> testCountries = Arrays.asList(""US"", ""PL"", ""PY"", ""AF"", ""CC"");
        Country randomCountry = nextRandomCountry();
        while (!testCountries.contains(randomCountry.iso())) {
            randomCountry = nextRandomCountry();
        }

        countryNameMatchIso(randomCountry, ""US"", ""United States"");
        countryNameMatchIso(randomCountry, ""PL"", ""Poland"");
        countryNameMatchIso(randomCountry, ""PY"", ""Paraguay"");
        countryNameMatchIso(randomCountry, ""AF"", ""Afghanistan"");
        countryNameMatchIso(randomCountry, ""CC"", ""Cocos [Keeling] Islands"");
    }
","['    ', 'public', ' ', 'void', ' ', 'testNameAndIsoReferToSameCountry', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'testCountries', ' ', '=', ' ', 'Arrays', '.', 'asList', '(', '""', 'US', '""', ',', ' ', '""', 'PL', '""', ',', ' ', '""', 'PY', '""', ',', ' ', '""', 'AF', '""', ',', ' ', '""', 'CC', '""', ')', ';', '\n', '        ', 'Country', ' ', 'randomCountry', ' ', '=', ' ', 'nextRandomCountry', '(', ')', ';', '\n', '        ', 'while', ' ', '(', '!', 'testCountries', '.', 'contains', '(', 'randomCountry', '.', 'iso', '(', ')', ')', ')', ' ', '{', '\n', '            ', 'randomCountry', ' ', '=', ' ', 'nextRandomCountry', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'countryNameMatchIso', '(', 'randomCountry', ',', ' ', '""', 'US', '""', ',', ' ', '""', 'United States', '""', ')', ';', '\n', '        ', 'countryNameMatchIso', '(', 'randomCountry', ',', ' ', '""', 'PL', '""', ',', ' ', '""', 'Poland', '""', ')', ';', '\n', '        ', 'countryNameMatchIso', '(', 'randomCountry', ',', ' ', '""', 'PY', '""', ',', ' ', '""', 'Paraguay', '""', ')', ';', '\n', '        ', 'countryNameMatchIso', '(', 'randomCountry', ',', ' ', '""', 'AF', '""', ',', ' ', '""', 'Afghanistan', '""', ')', ';', '\n', '        ', 'countryNameMatchIso', '(', 'randomCountry', ',', ' ', '""', 'CC', '""', ',', ' ', '""', 'Cocos [Keeling] Islands', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5afbc54fe951217fab16d683bb96551740307bad,CountryServiceTest.java,countryNameMatchIso,"    private void countryNameMatchIso(Country country, String iso, String countryName) {
        if (country.iso().equals(iso)) {
            assertThat(""Country with iso code : "" + iso + "" should match"", country.name(), is(equalTo(countryName)));",https://www.github.com/dius/java-faker/commit/5afbc54fe951217fab16d683bb96551740307bad,"    private void countryNameMatchIso(Country country, String iso, String countryName) {
        if (country.iso().equals(iso)) {
            assertThat(""Country with iso code : "" + iso + "" should match"", country.name(), is(equalTo(countryName)));
","['    ', 'private', ' ', 'void', ' ', 'countryNameMatchIso', '(', 'Country', ' ', 'country', ',', ' ', 'String', ' ', 'iso', ',', ' ', 'String', ' ', 'countryName', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'country', '.', 'iso', '(', ')', '.', 'equals', '(', 'iso', ')', ')', ' ', '{', '\n', '            ', 'assertThat', '(', '""', 'Country with iso code : ', '""', ' ', '+', ' ', 'iso', ' ', '+', ' ', '""', ' should match', '""', ',', ' ', 'country', '.', 'name', '(', ')', ',', ' ', 'is', '(', 'equalTo', '(', 'countryName', ')', ')', ')', ';', '\n']"
master,5afbc54fe951217fab16d683bb96551740307bad,CountryServiceTest.java,nextRandomCountry,"    private Country nextRandomCountry() {
        return faker.country();
    }",https://www.github.com/dius/java-faker/commit/5afbc54fe951217fab16d683bb96551740307bad,"    private Country nextRandomCountry() {
        return faker.country();
    }
","['    ', 'private', ' ', 'Country', ' ', 'nextRandomCountry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'country', '(', ')', ';', '\n', '    ', '}', '\n']"
master,640acb9f7a4094b4a10576684d1e76e206cbc572,FakerIT.java,testAllFakerMethodsThatReturnStrings,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.country());
    }",https://www.github.com/dius/java-faker/commit/640acb9f7a4094b4a10576684d1e76e206cbc572,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.country());
    }
","['    ', 'public', ' ', 'void', ' ', 'testAllFakerMethodsThatReturnStrings', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'address', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'business', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'internet', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'lorem', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'phoneNumber', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'name', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'finance', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'country', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bc28204f7b990653991545552a668eb718bc4d51,Internet.java,avatar,"    public String avatar() {
        return ""https://s3.amazonaws.com/uifaces/faces/twitter/"" + fakeValuesService.fetchString(""internet.avatar"");
    }",https://www.github.com/dius/java-faker/commit/bc28204f7b990653991545552a668eb718bc4d51,"    public String avatar() {
        return ""https://s3.amazonaws.com/uifaces/faces/twitter/"" + fakeValuesService.fetchString(""internet.avatar"");
    }
","['    ', 'public', ' ', 'String', ' ', 'avatar', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', 'https://s3.amazonaws.com/uifaces/faces/twitter/', '""', ' ', '+', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.avatar', '""', ')', ';', '\n', '    ', '}', '\n']"
master,bc28204f7b990653991545552a668eb718bc4d51,InternetTest.java,testAvatar,"    public void testAvatar() {
        assertThat(faker.internet().avatar(), matchesRegularExpression(""http.*/[^/]+/128.jpg$""));
    }",https://www.github.com/dius/java-faker/commit/bc28204f7b990653991545552a668eb718bc4d51,"    public void testAvatar() {
        assertThat(faker.internet().avatar(), matchesRegularExpression(""http.*/[^/]+/128.jpg$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAvatar', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'avatar', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'http.*/[^/]+/128.jpg$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,DateAndTime.java,future,"    public Date future(int atMost, TimeUnit unit) {
        Date now = new Date();
        Date aBitLaterThanNow = new Date(now.getTime() + 1000);
        return future(atMost, unit, aBitLaterThanNow);
    }",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public Date future(int atMost, TimeUnit unit) {
        Date now = new Date();
        Date aBitLaterThanNow = new Date(now.getTime() + 1000);
        return future(atMost, unit, aBitLaterThanNow);
    }
","['    ', 'public', ' ', 'Date', ' ', 'future', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'aBitLaterThanNow', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '+', ' ', '1000', ')', ';', '\n', '        ', 'return', ' ', 'future', '(', 'atMost', ',', ' ', 'unit', ',', ' ', 'aBitLaterThanNow', ')', ';', '\n', '    ', '}', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,DateAndTime.java,future,"    public Date future(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis += 1 + randomService.nextLong(upperBound - 1);

        return new Date(futureMillis);
    }",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public Date future(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis += 1 + randomService.nextLong(upperBound - 1);

        return new Date(futureMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'future', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ',', ' ', 'Date', ' ', 'referenceDate', ')', ' ', '{', '\n', '        ', 'long', ' ', 'upperBound', ' ', '=', ' ', 'unit', '.', 'toMillis', '(', 'atMost', ')', ';', '\n', '\n', '        ', 'long', ' ', 'futureMillis', ' ', '=', ' ', 'referenceDate', '.', 'getTime', '(', ')', ';', '\n', '        ', 'futureMillis', ' ', '+', '=', ' ', '1', ' ', '+', ' ', 'randomService', '.', 'nextLong', '(', 'upperBound', ' ', '-', ' ', '1', ')', ';', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'futureMillis', ')', ';', '\n', '    ', '}', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,RandomService.java,nextLong,"    public long nextLong(long n) {
        if (n <= 0) {
            throw new IllegalArgumentException(""bound must be positive"");
        }

        long bits, val;
        do {
            long randomLong = RandomUtils.nextLong(random);
            bits = (randomLong << 1) >>> 1;
            val = bits % n;
        } while (bits - val + (n - 1) < 0L);
        return val;
    }",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public long nextLong(long n) {
        if (n <= 0) {
            throw new IllegalArgumentException(""bound must be positive"");
        }

        long bits, val;
        do {
            long randomLong = RandomUtils.nextLong(random);
            bits = (randomLong << 1) >>> 1;
            val = bits % n;
        } while (bits - val + (n - 1) < 0L);
        return val;
    }
","['    ', 'public', ' ', 'long', ' ', 'nextLong', '(', 'long', ' ', 'n', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'n', ' ', '<', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'bound must be positive', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'long', ' ', 'bits', ',', ' ', 'val', ';', '\n', '        ', 'do', ' ', '{', '\n', '            ', 'long', ' ', 'randomLong', ' ', '=', ' ', 'RandomUtils', '.', 'nextLong', '(', 'random', ')', ';', '\n', '            ', 'bits', ' ', '=', ' ', '(', 'randomLong', ' ', '<', '<', ' ', '1', ')', ' ', '>', '>', '>', ' ', '1', ';', '\n', '            ', 'val', ' ', '=', ' ', 'bits', ' ', '%', ' ', 'n', ';', '\n', '        ', '}', ' ', 'while', ' ', '(', 'bits', ' ', '-', ' ', 'val', ' ', '+', ' ', '(', 'n', ' ', '-', ' ', '1', ')', ' ', '<', ' ', '0', 'L', ')', ';', '\n', '        ', 'return', ' ', 'val', ';', '\n', '    ', '}', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,DateAndTimeTest.java,testFutureDate,"    public void testFutureDate() {
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date future = faker.date().future(1, TimeUnit.SECONDS, now);",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public void testFutureDate() {
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date future = faker.date().future(1, TimeUnit.SECONDS, now);
","['    ', 'public', ' ', 'void', ' ', 'testFutureDate', '(', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'future', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'future', '(', '1', ',', ' ', 'TimeUnit', '.', 'SECONDS', ',', ' ', 'now', ')', ';', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,RandomServiceTest.java,before,"    public void before() {
        randomService = new RandomService(new Random());
    }",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public void before() {
        randomService = new RandomService(new Random());
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'randomService', ' ', '=', ' ', 'new', ' ', 'RandomService', '(', 'new', ' ', 'Random', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,RandomServiceTest.java,testPositiveBoundariesOnly,"    public void testPositiveBoundariesOnly() {
        randomService.nextLong(0L);
    }",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public void testPositiveBoundariesOnly() {
        randomService.nextLong(0L);
    }
","['    ', 'public', ' ', 'void', ' ', 'testPositiveBoundariesOnly', '(', ')', ' ', '{', '\n', '        ', 'randomService', '.', 'nextLong', '(', '0', 'L', ')', ';', '\n', '    ', '}', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,RandomServiceTest.java,testLongWithinBoundary,"    public void testLongWithinBoundary() {
        assertThat(randomService.nextLong(1), is(0L));

        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextLong(2), lessThan(2L));",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public void testLongWithinBoundary() {
        assertThat(randomService.nextLong(1), is(0L));

        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextLong(2), lessThan(2L));
","['    ', 'public', ' ', 'void', ' ', 'testLongWithinBoundary', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'randomService', '.', 'nextLong', '(', '1', ')', ',', ' ', 'is', '(', '0', 'L', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'randomService', '.', 'nextLong', '(', '2', ')', ',', ' ', 'lessThan', '(', '2L', ')', ')', ';', '\n']"
master,7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,RandomServiceTest.java,testLongMaxBoundary,"    public void testLongMaxBoundary() {
        assertThat(randomService.nextLong(Long.MAX_VALUE), greaterThan(0L));
        assertThat(randomService.nextLong(Long.MAX_VALUE), lessThan(Long.MAX_VALUE));
    }",https://www.github.com/dius/java-faker/commit/7e4a80664a1e7a501f39eab4bf37dce0f5b01ac7,"    public void testLongMaxBoundary() {
        assertThat(randomService.nextLong(Long.MAX_VALUE), greaterThan(0L));
        assertThat(randomService.nextLong(Long.MAX_VALUE), lessThan(Long.MAX_VALUE));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLongMaxBoundary', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'randomService', '.', 'nextLong', '(', 'Long', '.', 'MAX_VALUE', ')', ',', ' ', 'greaterThan', '(', '0', 'L', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'randomService', '.', 'nextLong', '(', 'Long', '.', 'MAX_VALUE', ')', ',', ' ', 'lessThan', '(', 'Long', '.', 'MAX_VALUE', ')', ')', ';', '\n', '    ', '}', '\n']"
master,43ee8d5be88e2a83903a0d8e06160d814018691a,DateAndTime.java,past,"    public Date past(int atMost, TimeUnit unit) {
        Date now = new Date();
        Date aBitEarlierThanNow = new Date(now.getTime() - 1000);
        return future(atMost, unit, aBitEarlierThanNow);
    }",https://www.github.com/dius/java-faker/commit/43ee8d5be88e2a83903a0d8e06160d814018691a,"    public Date past(int atMost, TimeUnit unit) {
        Date now = new Date();
        Date aBitEarlierThanNow = new Date(now.getTime() - 1000);
        return future(atMost, unit, aBitEarlierThanNow);
    }
","['    ', 'public', ' ', 'Date', ' ', 'past', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'aBitEarlierThanNow', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '-', ' ', '1000', ')', ';', '\n', '        ', 'return', ' ', 'future', '(', 'atMost', ',', ' ', 'unit', ',', ' ', 'aBitEarlierThanNow', ')', ';', '\n', '    ', '}', '\n']"
master,43ee8d5be88e2a83903a0d8e06160d814018691a,DateAndTime.java,past,"    public Date past(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis -= 1 + randomService.nextLong(upperBound - 1);

        return new Date(futureMillis);
    }",https://www.github.com/dius/java-faker/commit/43ee8d5be88e2a83903a0d8e06160d814018691a,"    public Date past(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis -= 1 + randomService.nextLong(upperBound - 1);

        return new Date(futureMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'past', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ',', ' ', 'Date', ' ', 'referenceDate', ')', ' ', '{', '\n', '        ', 'long', ' ', 'upperBound', ' ', '=', ' ', 'unit', '.', 'toMillis', '(', 'atMost', ')', ';', '\n', '\n', '        ', 'long', ' ', 'futureMillis', ' ', '=', ' ', 'referenceDate', '.', 'getTime', '(', ')', ';', '\n', '        ', 'futureMillis', ' ', '-', '=', ' ', '1', ' ', '+', ' ', 'randomService', '.', 'nextLong', '(', 'upperBound', ' ', '-', ' ', '1', ')', ';', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'futureMillis', ')', ';', '\n', '    ', '}', '\n']"
master,43ee8d5be88e2a83903a0d8e06160d814018691a,DateAndTimeTest.java,testPastDate,"    public void testPastDate() {
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date future = faker.date().past(1, TimeUnit.SECONDS, now);",https://www.github.com/dius/java-faker/commit/43ee8d5be88e2a83903a0d8e06160d814018691a,"    public void testPastDate() {
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date future = faker.date().past(1, TimeUnit.SECONDS, now);
","['    ', 'public', ' ', 'void', ' ', 'testPastDate', '(', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'future', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'past', '(', '1', ',', ' ', 'TimeUnit', '.', 'SECONDS', ',', ' ', 'now', ')', ';', '\n']"
master,47ce64b4bc927f82261000caa9ddda9b408f8eb3,DateAndTime.java,between,"    public Date between(Date from, Date to) throws IllegalArgumentException {
        if (to.before(from)) {
            throw new IllegalArgumentException(""Invalid date range, the upper bound date is before the lower bound."");
        }

        long offsetMillis = randomService.nextLong(to.getTime() - from.getTime());
        return new Date(from.getTime() + offsetMillis);
    }",https://www.github.com/dius/java-faker/commit/47ce64b4bc927f82261000caa9ddda9b408f8eb3,"    public Date between(Date from, Date to) throws IllegalArgumentException {
        if (to.before(from)) {
            throw new IllegalArgumentException(""Invalid date range, the upper bound date is before the lower bound."");
        }

        long offsetMillis = randomService.nextLong(to.getTime() - from.getTime());
        return new Date(from.getTime() + offsetMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'between', '(', 'Date', ' ', 'from', ',', ' ', 'Date', ' ', 'to', ')', ' ', 'throws', ' ', 'IllegalArgumentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'to', '.', 'before', '(', 'from', ')', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Invalid date range, the upper bound date is before the lower bound.', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'long', ' ', 'offsetMillis', ' ', '=', ' ', 'randomService', '.', 'nextLong', '(', 'to', '.', 'getTime', '(', ')', ' ', '-', ' ', 'from', '.', 'getTime', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'from', '.', 'getTime', '(', ')', ' ', '+', ' ', 'offsetMillis', ')', ';', '\n', '    ', '}', '\n']"
master,47ce64b4bc927f82261000caa9ddda9b408f8eb3,DateAndTimeTest.java,testBetween,"    public void testBetween() {
        Date now = new Date();
        Date then = new Date(now.getTime() + 1000);

        for (int i = 0; i < 1000; i++) {
            Date date = faker.date().between(now, then);",https://www.github.com/dius/java-faker/commit/47ce64b4bc927f82261000caa9ddda9b408f8eb3,"    public void testBetween() {
        Date now = new Date();
        Date then = new Date(now.getTime() + 1000);

        for (int i = 0; i < 1000; i++) {
            Date date = faker.date().between(now, then);
","['    ', 'public', ' ', 'void', ' ', 'testBetween', '(', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'then', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '+', ' ', '1000', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'date', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'between', '(', 'now', ',', ' ', 'then', ')', ';', '\n']"
master,4a9de8ae46e64059f5830bf0ddcccdc46c42f786,Company.java,name,"    public String name() {
        return fakeValuesService.fetchString(""company.name"");
    }",https://www.github.com/dius/java-faker/commit/4a9de8ae46e64059f5830bf0ddcccdc46c42f786,"    public String name() {
        return fakeValuesService.fetchString(""company.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'company.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1650a5b5404ecc7b8ae3348aa305c6b8430de573,Internet.java,image,"    public String image(Integer width, Integer height, Boolean gray, String text) {
        return String.format(""https://ssl.webpack.de/lorempixel.com/%s%s/%s/%s/%s"",
                gray ? ""g/"" : StringUtils.EMPTY, width, height, fakeValuesService.fetchString(""internet.image_category""),",https://www.github.com/dius/java-faker/commit/1650a5b5404ecc7b8ae3348aa305c6b8430de573,"    public String image(Integer width, Integer height, Boolean gray, String text) {
        return String.format(""https://ssl.webpack.de/lorempixel.com/%s%s/%s/%s/%s"",
                gray ? ""g/"" : StringUtils.EMPTY, width, height, fakeValuesService.fetchString(""internet.image_category""),
","['    ', 'public', ' ', 'String', ' ', 'image', '(', 'Integer', ' ', 'width', ',', ' ', 'Integer', ' ', 'height', ',', ' ', 'Boolean', ' ', 'gray', ',', ' ', 'String', ' ', 'text', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', 'https://ssl.webpack.de/lorempixel.com/%s%s/%s/%s/%s', '""', ',', '\n', '                ', 'gray', ' ', '?', ' ', '""', 'g/', '""', ' ', ':', ' ', 'StringUtils', '.', 'EMPTY', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.image_category', '""', ')', ',', '\n']"
master,1650a5b5404ecc7b8ae3348aa305c6b8430de573,Internet.java,image,"    public String image() {
        String[] dimension = StringUtils.split(fakeValuesService.fetchString(""internet.image_dimension""), 'x');
        return image(
                Integer.valueOf(StringUtils.trim(dimension[0])), Integer.valueOf(StringUtils.trim(dimension[1])),",https://www.github.com/dius/java-faker/commit/1650a5b5404ecc7b8ae3348aa305c6b8430de573,"    public String image() {
        String[] dimension = StringUtils.split(fakeValuesService.fetchString(""internet.image_dimension""), 'x');
        return image(
                Integer.valueOf(StringUtils.trim(dimension[0])), Integer.valueOf(StringUtils.trim(dimension[1])),
","['    ', 'public', ' ', 'String', ' ', 'image', '(', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'dimension', ' ', '=', ' ', 'StringUtils', '.', 'split', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.image_dimension', '""', ')', ',', ' ', ""'x'"", ')', ';', '\n', '        ', 'return', ' ', 'image', '(', '\n', '                ', 'Integer', '.', 'valueOf', '(', 'StringUtils', '.', 'trim', '(', 'dimension', '[', '0', ']', ')', ')', ',', ' ', 'Integer', '.', 'valueOf', '(', 'StringUtils', '.', 'trim', '(', 'dimension', '[', '1', ']', ')', ')', ',', '\n']"
master,1650a5b5404ecc7b8ae3348aa305c6b8430de573,RandomService.java,nextBoolean,"    public Boolean nextBoolean() {
        return RandomUtils.nextBoolean(random);
    }",https://www.github.com/dius/java-faker/commit/1650a5b5404ecc7b8ae3348aa305c6b8430de573,"    public Boolean nextBoolean() {
        return RandomUtils.nextBoolean(random);
    }
","['    ', 'public', ' ', 'Boolean', ' ', 'nextBoolean', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'RandomUtils', '.', 'nextBoolean', '(', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,1650a5b5404ecc7b8ae3348aa305c6b8430de573,InternetTest.java,testImage,"    public void testImage() {
        String imageUrl = faker.internet().image();
        assertThat(imageUrl, matchesRegularExpression(""^https:\\/\\/ssl\\.webpack\\.de/lorempixel\\.com(/g)?/\\d{1,4}/\\d{1,4}/\\w+/$""));
    }",https://www.github.com/dius/java-faker/commit/1650a5b5404ecc7b8ae3348aa305c6b8430de573,"    public void testImage() {
        String imageUrl = faker.internet().image();
        assertThat(imageUrl, matchesRegularExpression(""^https:\\/\\/ssl\\.webpack\\.de/lorempixel\\.com(/g)?/\\d{1,4}/\\d{1,4}/\\w+/$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testImage', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'imageUrl', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'image', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'imageUrl', ',', ' ', 'matchesRegularExpression', '(', '""', '^https:', '\\\\', '/', '\\\\', '/ssl', '\\\\', '.webpack', '\\\\', '.de/lorempixel', '\\\\', '.com(/g)?/', '\\\\', 'd{1,4}/', '\\\\', 'd{1,4}/', '\\\\', 'w+/$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1650a5b5404ecc7b8ae3348aa305c6b8430de573,InternetTest.java,testImageWithExplicitParams,"    public void testImageWithExplicitParams() {
        String imageUrl = faker.internet().image(800, 600, false, ""bugs"");
        assertThat(imageUrl, matchesRegularExpression(""^https:\\/\\/ssl\\.webpack\\.de/lorempixel\\.com/800/600/\\w+/bugs$""));
    }",https://www.github.com/dius/java-faker/commit/1650a5b5404ecc7b8ae3348aa305c6b8430de573,"    public void testImageWithExplicitParams() {
        String imageUrl = faker.internet().image(800, 600, false, ""bugs"");
        assertThat(imageUrl, matchesRegularExpression(""^https:\\/\\/ssl\\.webpack\\.de/lorempixel\\.com/800/600/\\w+/bugs$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testImageWithExplicitParams', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'imageUrl', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'image', '(', '800', ',', ' ', '600', ',', ' ', 'false', ',', ' ', '""', 'bugs', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'imageUrl', ',', ' ', 'matchesRegularExpression', '(', '""', '^https:', '\\\\', '/', '\\\\', '/ssl', '\\\\', '.webpack', '\\\\', '.de/lorempixel', '\\\\', '.com/800/600/', '\\\\', 'w+/bugs$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e5981c0889725ac0dbbacd565fd982cda9d50d23,FakerIT.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {new Locale(""pt""), null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/e5981c0889725ac0dbbacd565fd982cda9d50d23,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {new Locale(""pt""), null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'FINNISH_LOCALE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,1f4114100b10c3291ebfaebeee0a556cbb0a33a0,Lorem.java,word,"    public String word() {
        List<String> words = (List<String>) fakeValuesService.fetchObject(""lorem.words"");
        return words.get(randomService.nextInt(words.size()));
    }",https://www.github.com/dius/java-faker/commit/1f4114100b10c3291ebfaebeee0a556cbb0a33a0,"    public String word() {
        List<String> words = (List<String>) fakeValuesService.fetchObject(""lorem.words"");
        return words.get(randomService.nextInt(words.size()));
    }
","['    ', 'public', ' ', 'String', ' ', 'word', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'lorem.words', '""', ')', ';', '\n', '        ', 'return', ' ', 'words', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'words', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1f4114100b10c3291ebfaebeee0a556cbb0a33a0,LoremTest.java,wordShouldNotBeNull,"    public void wordShouldNotBeNull() {
        assertNotNull(faker.lorem().word());
    }",https://www.github.com/dius/java-faker/commit/1f4114100b10c3291ebfaebeee0a556cbb0a33a0,"    public void wordShouldNotBeNull() {
        assertNotNull(faker.lorem().word());
    }
","['    ', 'public', ' ', 'void', ' ', 'wordShouldNotBeNull', '(', ')', ' ', '{', '\n', '        ', 'assertNotNull', '(', 'faker', '.', 'lorem', '(', ')', '.', 'word', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,05a7e6a85a8179a7c765be233e8c4ad8990a4ab7,Address.java,state,"    public String state() {
        return fakeValuesService.fetchString(""address.state"");
    }",https://www.github.com/dius/java-faker/commit/05a7e6a85a8179a7c765be233e8c4ad8990a4ab7,"    public String state() {
        return fakeValuesService.fetchString(""address.state"");
    }
","['    ', 'public', ' ', 'String', ' ', 'state', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.state', '""', ')', ';', '\n', '    ', '}', '\n']"
master,966a693f7c1d0e9f4658d0f53f46daefdaee09ea,AddressTest.java,testState,"    public void testState() {
        assertThat(faker.address().state(), matchesRegularExpression(""[A-Za-z]+""));
    }",https://www.github.com/dius/java-faker/commit/966a693f7c1d0e9f4658d0f53f46daefdaee09ea,"    public void testState() {
        assertThat(faker.address().state(), matchesRegularExpression(""[A-Za-z]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testState', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'state', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bc77bb533ed0d6a9634120d8dc13a0aaa11779b2,AddressTest.java,testState,"    public void testState() {
        assertThat(faker.address().state(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/bc77bb533ed0d6a9634120d8dc13a0aaa11779b2,"    public void testState() {
        assertThat(faker.address().state(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testState', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'state', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dbd8b634351136166e3c43888ca4861f3b8fa7b7,Address.java,city,"    public String city() {
        return fakeValuesService.composite(""address.city"",
                """",",https://www.github.com/dius/java-faker/commit/dbd8b634351136166e3c43888ca4861f3b8fa7b7,"    public String city() {
        return fakeValuesService.composite(""address.city"",
                """",
","['    ', 'public', ' ', 'String', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'composite', '(', '""', 'address.city', '""', ',', '\n', '                ', '""', '""', ',', '\n']"
master,dbd8b634351136166e3c43888ca4861f3b8fa7b7,AddressTest.java,testCity,"    public void testCity() {
        assertThat(faker.address().city(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/dbd8b634351136166e3c43888ca4861f3b8fa7b7,"    public void testCity() {
        assertThat(faker.address().city(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'city', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5fb7ce0f4eb91434fe366eef1c658d3fd9d9f95a,AddressTest.java,testLatitude,"    public void testLatitude() {
        String latStr;
        Double lat;
        for (int i = 0; i < 100; i++) {
            latStr = faker.address().latitude().replace(decimalSeparator, '.');",https://www.github.com/dius/java-faker/commit/5fb7ce0f4eb91434fe366eef1c658d3fd9d9f95a,"    public void testLatitude() {
        String latStr;
        Double lat;
        for (int i = 0; i < 100; i++) {
            latStr = faker.address().latitude().replace(decimalSeparator, '.');
","['    ', 'public', ' ', 'void', ' ', 'testLatitude', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'latStr', ';', '\n', '        ', 'Double', ' ', 'lat', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'latStr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'latitude', '(', ')', '.', 'replace', '(', 'decimalSeparator', ',', ' ', ""'.'"", ')', ';', '\n']"
master,5fb7ce0f4eb91434fe366eef1c658d3fd9d9f95a,AddressTest.java,testLongitude,"    public void testLongitude() {
        String longStr;
        Double lon;
        for (int i = 0; i < 100; i++) {
            longStr = faker.address().longitude().replace(decimalSeparator, '.');",https://www.github.com/dius/java-faker/commit/5fb7ce0f4eb91434fe366eef1c658d3fd9d9f95a,"    public void testLongitude() {
        String longStr;
        Double lon;
        for (int i = 0; i < 100; i++) {
            longStr = faker.address().longitude().replace(decimalSeparator, '.');
","['    ', 'public', ' ', 'void', ' ', 'testLongitude', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'longStr', ';', '\n', '        ', 'Double', ' ', 'lon', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'longStr', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'longitude', '(', ')', '.', 'replace', '(', 'decimalSeparator', ',', ' ', ""'.'"", ')', ';', '\n']"
master,a31c4e345b34eec8c3b281a9dd34ce1126c38026,FakerIT.java,testAllFakerMethodsThatReturnStrings,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.company());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.country());
    }",https://www.github.com/dius/java-faker/commit/a31c4e345b34eec8c3b281a9dd34ce1126c38026,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.company());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.country());
    }
","['    ', 'public', ' ', 'void', ' ', 'testAllFakerMethodsThatReturnStrings', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'address', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'business', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'company', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'internet', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'lorem', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'phoneNumber', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'name', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'finance', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'country', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d40ff20fc937f6ab948a837c3e75f908bcfc7842,Internet.java,emailAddress,"    public String emailAddress() {
        return emailAddress(join(new Object[]{
                name.firstName().toLowerCase(),",https://www.github.com/dius/java-faker/commit/d40ff20fc937f6ab948a837c3e75f908bcfc7842,"    public String emailAddress() {
        return emailAddress(join(new Object[]{
                name.firstName().toLowerCase(),
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'name', '.', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', ',', '\n']"
master,d40ff20fc937f6ab948a837c3e75f908bcfc7842,Internet.java,emailAddress,"    public String emailAddress(String localPart) {
        return join(new Object[]{
                localPart,",https://www.github.com/dius/java-faker/commit/d40ff20fc937f6ab948a837c3e75f908bcfc7842,"    public String emailAddress(String localPart) {
        return join(new Object[]{
                localPart,
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', 'String', ' ', 'localPart', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'localPart', ',', '\n']"
master,d40ff20fc937f6ab948a837c3e75f908bcfc7842,InternetTest.java,testEmailAddress,"    public void testEmailAddress() {
        String emailAddress = faker.internet().emailAddress();
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }",https://www.github.com/dius/java-faker/commit/d40ff20fc937f6ab948a837c3e75f908bcfc7842,"    public void testEmailAddress() {
        String emailAddress = faker.internet().emailAddress();
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'emailAddress', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d40ff20fc937f6ab948a837c3e75f908bcfc7842,InternetTest.java,testEmailAddressWithLocalPartParameter,"    public void testEmailAddressWithLocalPartParameter() {
        String emailAddress = faker.internet().emailAddress(""john"");
        assertThat(emailAddress, startsWith(""john@""));
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }",https://www.github.com/dius/java-faker/commit/d40ff20fc937f6ab948a837c3e75f908bcfc7842,"    public void testEmailAddressWithLocalPartParameter() {
        String emailAddress = faker.internet().emailAddress(""john"");
        assertThat(emailAddress, startsWith(""john@""));
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testEmailAddressWithLocalPartParameter', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'emailAddress', '(', '""', 'john', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'emailAddress', ',', ' ', 'startsWith', '(', '""', 'john@', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,streetName,"    public String streetName() {
        return resolve(""address.street_name"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String streetName() {
        return resolve(""address.street_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'resolve', '(', '""', 'address.street_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,streetAddressNumber,"    public String streetAddressNumber() {
        return resolve(""address.street_address"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String streetAddressNumber() {
        return resolve(""address.street_address"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'resolve', '(', '""', 'address.street_address', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,streetAddress,"    public String streetAddress() {
        return resolve(""address.street_address"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String streetAddress() {
        return resolve(""address.street_address"");
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'resolve', '(', '""', 'address.street_address', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,streetAddress,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = resolve(""address.street_address"");
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return streetAddress;
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = resolve(""address.street_address"");
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return streetAddress;
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'resolve', '(', '""', 'address.street_address', '""', ')', ';', '\n', '        ', 'if', ' ', '(', 'includeSecondary', ')', ' ', '{', '\n', '            ', 'streetAddress', ' ', '=', ' ', 'streetAddress', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'secondaryAddress', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'streetAddress', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,citySuffix,"    public String citySuffix() {
        return fakeValuesService.safeFetch(""address.city_suffix"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String citySuffix() {
        return fakeValuesService.safeFetch(""address.city_suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'citySuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'address.city_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,cityPrefix,"    public String cityPrefix() {
        return fakeValuesService.safeFetch(""address.city_prefix"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String cityPrefix() {
        return fakeValuesService.safeFetch(""address.city_prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'cityPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'address.city_prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,city,"    public String city() {
        return resolve(""address.city"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String city() {
        return resolve(""address.city"");
    }
","['    ', 'public', ' ', 'String', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'resolve', '(', '""', 'address.city', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,country,"    public String country() { return fakeValuesService.fetchString(""address.country""); }
",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String country() { return fakeValuesService.fetchString(""address.country""); }
","['    ', 'public', ' ', 'String', ' ', 'country', '(', ')', ' ', '{', ' ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.country', '""', ')', ';', ' ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,countryCode,"    public String countryCode() { return fakeValuesService.fetchString(""address.country_code""); }
",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String countryCode() { return fakeValuesService.fetchString(""address.country_code""); }
","['    ', 'public', ' ', 'String', ' ', 'countryCode', '(', ')', ' ', '{', ' ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.country_code', '""', ')', ';', ' ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,buildingNumber,"    public String buildingNumber() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""address.building_number""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String buildingNumber() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""address.building_number""));
    }
","['    ', 'public', ' ', 'String', ' ', 'buildingNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'address.building_number', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Address.java,resolve,"    private String resolve(String key) {
        return fakeValuesService.resolve(key, this, resolver);
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    private String resolve(String key) {
        return fakeValuesService.resolve(key, this, resolver);
    }
","['    ', 'private', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', 'key', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Company.java,name,"    public String name() {
        return fakeValuesService.resolve(""company.name"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String name() {
        return fakeValuesService.resolve(""company.name"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'company.name', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Company.java,suffix,"    public String suffix() {
        return fakeValuesService.safeFetch(""company.suffix"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String suffix() {
        return fakeValuesService.safeFetch(""company.suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'company.suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Faker.java,createProxiedFakeValuesService,"    private static FakeValuesServiceInterface createProxiedFakeValuesService(FakeValuesServiceInterface fakeValuesServiceInterface,
                                                                                      FakeValuesServiceInterface defaultFakeValuesServiceInterface) {
        return (FakeValuesServiceInterface) Proxy.newProxyInstance(Faker.class.getClassLoader(),
                new Class[]{FakeValuesServiceInterface.class},",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    private static FakeValuesServiceInterface createProxiedFakeValuesService(FakeValuesServiceInterface fakeValuesServiceInterface,
                                                                                      FakeValuesServiceInterface defaultFakeValuesServiceInterface) {
        return (FakeValuesServiceInterface) Proxy.newProxyInstance(Faker.class.getClassLoader(),
                new Class[]{FakeValuesServiceInterface.class},
","['    ', 'private', ' ', 'static', ' ', 'FakeValuesServiceInterface', ' ', 'createProxiedFakeValuesService', '(', 'FakeValuesServiceInterface', ' ', 'fakeValuesServiceInterface', ',', '\n', '                                                                                      ', 'FakeValuesServiceInterface', ' ', 'defaultFakeValuesServiceInterface', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'FakeValuesServiceInterface', ')', ' ', 'Proxy', '.', 'newProxyInstance', '(', 'Faker', '.', 'class', '.', 'getClassLoader', '(', ')', ',', '\n', '                ', 'new', ' ', 'Class', '[', ']', '{', 'FakeValuesServiceInterface', '.', 'class', '}', ',', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Faker.java,resolve,"    public String resolve(String key) {
        String[] keySplit = key.split(""\\."", 2);
        String object = keySplit[0].toLowerCase();
        String methodName = keySplit[1];

        char[] METHOD_NAME_REPLACEMENT = {'_'};
        methodName = WordUtils.capitalizeFully(methodName, METHOD_NAME_REPLACEMENT).replaceAll(""_"", """");
        methodName = methodName.substring(0, 1).toLowerCase() + methodName.substring(1);
        try {
            Object objectWithMethodToInvoke = MethodUtils.invokeMethod(this, object, null);",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String resolve(String key) {
        String[] keySplit = key.split(""\\."", 2);
        String object = keySplit[0].toLowerCase();
        String methodName = keySplit[1];

        char[] METHOD_NAME_REPLACEMENT = {'_'};
        methodName = WordUtils.capitalizeFully(methodName, METHOD_NAME_REPLACEMENT).replaceAll(""_"", """");
        methodName = methodName.substring(0, 1).toLowerCase() + methodName.substring(1);
        try {
            Object objectWithMethodToInvoke = MethodUtils.invokeMethod(this, object, null);
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'keySplit', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ',', ' ', '2', ')', ';', '\n', '        ', 'String', ' ', 'object', ' ', '=', ' ', 'keySplit', '[', '0', ']', '.', 'toLowerCase', '(', ')', ';', '\n', '        ', 'String', ' ', 'methodName', ' ', '=', ' ', 'keySplit', '[', '1', ']', ';', '\n', '\n', '        ', 'char', '[', ']', ' ', 'METHOD_NAME_REPLACEMENT', ' ', '=', ' ', '{', ""'_'"", '}', ';', '\n', '        ', 'methodName', ' ', '=', ' ', 'WordUtils', '.', 'capitalizeFully', '(', 'methodName', ',', ' ', 'METHOD_NAME_REPLACEMENT', ')', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ';', '\n', '        ', 'methodName', ' ', '=', ' ', 'methodName', '.', 'substring', '(', '0', ',', ' ', '1', ')', '.', 'toLowerCase', '(', ')', ' ', '+', ' ', 'methodName', '.', 'substring', '(', '1', ')', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Object', ' ', 'objectWithMethodToInvoke', ' ', '=', ' ', 'MethodUtils', '.', 'invokeMethod', '(', 'this', ',', ' ', 'object', ',', ' ', 'null', ')', ';', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Internet.java,image,"    public String image() {
        String[] dimension = StringUtils.split(fakeValuesService.fetchString(""internet.image_dimension""), 'x');
        if (dimension .length == 0) return """";
        return image(
                Integer.valueOf(StringUtils.trim(dimension[0])), Integer.valueOf(StringUtils.trim(dimension[1])),",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String image() {
        String[] dimension = StringUtils.split(fakeValuesService.fetchString(""internet.image_dimension""), 'x');
        if (dimension .length == 0) return """";
        return image(
                Integer.valueOf(StringUtils.trim(dimension[0])), Integer.valueOf(StringUtils.trim(dimension[1])),
","['    ', 'public', ' ', 'String', ' ', 'image', '(', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'dimension', ' ', '=', ' ', 'StringUtils', '.', 'split', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.image_dimension', '""', ')', ',', ' ', ""'x'"", ')', ';', '\n', '        ', 'if', ' ', '(', 'dimension', ' ', '.', 'length', ' ', '=', '=', ' ', '0', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '        ', 'return', ' ', 'image', '(', '\n', '                ', 'Integer', '.', 'valueOf', '(', 'StringUtils', '.', 'trim', '(', 'dimension', '[', '0', ']', ')', ')', ',', ' ', 'Integer', '.', 'valueOf', '(', 'StringUtils', '.', 'trim', '(', 'dimension', '[', '1', ']', ')', ')', ',', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Lorem.java,words,"    public List<String> words(int num) {
        List<String> returnList = new ArrayList();
        for (int i = 0; i < num; i++) {
            returnList.add(word());
        }
        return returnList;
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public List<String> words(int num) {
        List<String> returnList = new ArrayList();
        for (int i = 0; i < num; i++) {
            returnList.add(word());
        }
        return returnList;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'returnList', ' ', '=', ' ', 'new', ' ', 'ArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'num', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'returnList', '.', 'add', '(', 'word', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'returnList', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Lorem.java,word,"    public String word() {
        return fakeValuesService.safeFetch(""lorem.words"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String word() {
        return fakeValuesService.safeFetch(""lorem.words"");
    }
","['    ', 'public', ' ', 'String', ' ', 'word', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'lorem.words', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,Name.java,name,"    public String name() {
        return fakeValuesService.resolve(""name.name"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String name() {
        return fakeValuesService.resolve(""name.name"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'name.name', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,DefaultingFakeValuesService.java,invoke,"    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        try {
            Object value = method.invoke(fakeValuesServiceInterface, args);",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        try {
            Object value = method.invoke(fakeValuesServiceInterface, args);
","['    ', 'public', ' ', 'Object', ' ', 'invoke', '(', 'Object', ' ', 'proxy', ',', ' ', 'Method', ' ', 'method', ',', ' ', 'Object', '[', ']', ' ', 'args', ')', ' ', 'throws', ' ', 'Throwable', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Object', ' ', 'value', ' ', '=', ' ', 'method', '.', 'invoke', '(', 'fakeValuesServiceInterface', ',', ' ', 'args', ')', ';', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,DefaultingFakeValuesService.java,isEmptyString,"    private static boolean isEmptyString(Object value) {
        return (value instanceof String) && ((String) value).isEmpty();
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    private static boolean isEmptyString(Object value) {
        return (value instanceof String) && ((String) value).isEmpty();
    }
","['    ', 'private', ' ', 'static', ' ', 'boolean', ' ', 'isEmptyString', '(', 'Object', ' ', 'value', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'value', ' ', 'instanceof', ' ', 'String', ')', ' ', '&', '&', ' ', '(', '(', 'String', ')', ' ', 'value', ')', '.', 'isEmpty', '(', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,DefaultingFakeValuesService.java,defaultValue,"    private Object defaultValue(Method method, Object[] args) throws IllegalAccessException, InvocationTargetException {
        return method.invoke(defaultFakeValuesService, args);
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    private Object defaultValue(Method method, Object[] args) throws IllegalAccessException, InvocationTargetException {
        return method.invoke(defaultFakeValuesService, args);
    }
","['    ', 'private', ' ', 'Object', ' ', 'defaultValue', '(', 'Method', ' ', 'method', ',', ' ', 'Object', '[', ']', ' ', 'args', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'InvocationTargetException', ' ', '{', '\n', '        ', 'return', ' ', 'method', '.', 'invoke', '(', 'defaultFakeValuesService', ',', ' ', 'args', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesService.java,findStream,"    private InputStream findStream(String filename) {
        String filenameWithExtension =  ""/"" + filename + "".yml"";
        InputStream streamOnClass = getClass().getResourceAsStream(filenameWithExtension);
        if (streamOnClass != null) {
            return streamOnClass;
        }
        return getClass().getClassLoader().getResourceAsStream(filenameWithExtension);
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    private InputStream findStream(String filename) {
        String filenameWithExtension =  ""/"" + filename + "".yml"";
        InputStream streamOnClass = getClass().getResourceAsStream(filenameWithExtension);
        if (streamOnClass != null) {
            return streamOnClass;
        }
        return getClass().getClassLoader().getResourceAsStream(filenameWithExtension);
    }
","['    ', 'private', ' ', 'InputStream', ' ', 'findStream', '(', 'String', ' ', 'filename', ')', ' ', '{', '\n', '        ', 'String', ' ', 'filenameWithExtension', ' ', '=', '  ', '""', '/', '""', ' ', '+', ' ', 'filename', ' ', '+', ' ', '""', '.yml', '""', ';', '\n', '        ', 'InputStream', ' ', 'streamOnClass', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'filenameWithExtension', ')', ';', '\n', '        ', 'if', ' ', '(', 'streamOnClass', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'streamOnClass', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', 'filenameWithExtension', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesService.java,safeFetch,"    public String safeFetch(String key) {
        Object o = fetchObject(key);
        if (o == null) return """";
        if (o instanceof List) {
            List<String> values = (List<String>) o;",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String safeFetch(String key) {
        Object o = fetchObject(key);
        if (o == null) return """";
        if (o instanceof List) {
            List<String> values = (List<String>) o;
","['    ', 'public', ' ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'Object', ' ', 'o', ' ', '=', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'if', ' ', '(', 'o', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '        ', 'if', ' ', '(', 'o', ' ', 'instanceof', ' ', 'List', ')', ' ', '{', '\n', '            ', 'List', '<', 'String', '>', ' ', 'values', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'o', ';', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesService.java,resolve,"    public String resolve(String key, Object current, Resolver resolver) {
        String unresolvedString = safeFetch(key);
        String regex = ""#\\{[A-Za-z_.]+\\}"";
        Matcher matcher = Pattern.compile(regex).matcher(unresolvedString);
        while (matcher.find()) {
            String matched = matcher.group();
            String strippedMatched = matched.replace('#', ' ').replace('{', ' ').replace('}', ' ').trim();
            boolean isFirstLetterCapital = Character.isUpperCase(strippedMatched.charAt(0));
            String objectWithMethodToResolve = isFirstLetterCapital ? strippedMatched : current.getClass().getSimpleName() + ""."" + strippedMatched;
            String resolvedValue = resolver.resolve(objectWithMethodToResolve);
            unresolvedString = unresolvedString.replace(matched, resolvedValue);
        }
        return unresolvedString;
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public String resolve(String key, Object current, Resolver resolver) {
        String unresolvedString = safeFetch(key);
        String regex = ""#\\{[A-Za-z_.]+\\}"";
        Matcher matcher = Pattern.compile(regex).matcher(unresolvedString);
        while (matcher.find()) {
            String matched = matcher.group();
            String strippedMatched = matched.replace('#', ' ').replace('{', ' ').replace('}', ' ').trim();
            boolean isFirstLetterCapital = Character.isUpperCase(strippedMatched.charAt(0));
            String objectWithMethodToResolve = isFirstLetterCapital ? strippedMatched : current.getClass().getSimpleName() + ""."" + strippedMatched;
            String resolvedValue = resolver.resolve(objectWithMethodToResolve);
            unresolvedString = unresolvedString.replace(matched, resolvedValue);
        }
        return unresolvedString;
    }
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ' ', '{', '\n', '        ', 'String', ' ', 'unresolvedString', ' ', '=', ' ', 'safeFetch', '(', 'key', ')', ';', '\n', '        ', 'String', ' ', 'regex', ' ', '=', ' ', '""', '#', '\\\\', '{[A-Za-z_.]+', '\\\\', '}', '""', ';', '\n', '        ', 'Matcher', ' ', 'matcher', ' ', '=', ' ', 'Pattern', '.', 'compile', '(', 'regex', ')', '.', 'matcher', '(', 'unresolvedString', ')', ';', '\n', '        ', 'while', ' ', '(', 'matcher', '.', 'find', '(', ')', ')', ' ', '{', '\n', '            ', 'String', ' ', 'matched', ' ', '=', ' ', 'matcher', '.', 'group', '(', ')', ';', '\n', '            ', 'String', ' ', 'strippedMatched', ' ', '=', ' ', 'matched', '.', 'replace', '(', ""'#'"", ',', ' ', ""' '"", ')', '.', 'replace', '(', ""'{'"", ',', ' ', ""' '"", ')', '.', 'replace', '(', ""'}'"", ',', ' ', ""' '"", ')', '.', 'trim', '(', ')', ';', '\n', '            ', 'boolean', ' ', 'isFirstLetterCapital', ' ', '=', ' ', 'Character', '.', 'isUpperCase', '(', 'strippedMatched', '.', 'charAt', '(', '0', ')', ')', ';', '\n', '            ', 'String', ' ', 'objectWithMethodToResolve', ' ', '=', ' ', 'isFirstLetterCapital', ' ', '?', ' ', 'strippedMatched', ' ', ':', ' ', 'current', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ' ', '+', ' ', '""', '.', '""', ' ', '+', ' ', 'strippedMatched', ';', '\n', '            ', 'String', ' ', 'resolvedValue', ' ', '=', ' ', 'resolver', '.', 'resolve', '(', 'objectWithMethodToResolve', ')', ';', '\n', '            ', 'unresolvedString', ' ', '=', ' ', 'unresolvedString', '.', 'replace', '(', 'matched', ',', ' ', 'resolvedValue', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'unresolvedString', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,fetch,"    Object fetch(String key);

    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    Object fetch(String key);

    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,fetchString,"    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,safeFetch,"    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,fetchObject,"    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,numerify,"    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,bothify,"    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    String bothify(String string);

    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceInterface.java,letterify,"    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    String letterify(String letterString);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,AddressTest.java,testStreetAddressIsANumber,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ [A-Za-z0-9 ]+""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ [A-Za-z0-9 ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIsANumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]+ [A-Za-z0-9 ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,AddressTest.java,testCountry,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'country', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,AddressTest.java,testCountryCode,"    public void testCountryCode() {
        assertThat(faker.address().countryCode(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void testCountryCode() {
        assertThat(faker.address().countryCode(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountryCode', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'countryCode', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,AddressTest.java,testStreetAddressIncludeSecondary,"    public void testStreetAddressIncludeSecondary() {
        assertThat(faker.address().streetAddress(true), not(isEmptyString()));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void testStreetAddressIncludeSecondary() {
        assertThat(faker.address().streetAddress(true), not(isEmptyString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIncludeSecondary', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'streetAddress', '(', 'true', ')', ',', ' ', 'not', '(', 'isEmptyString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakerTest.java,resolveShouldReturnValueThatExists,"    public void resolveShouldReturnValueThatExists() {
        assertThat(faker.resolve(""address.city_prefix""), not(isEmptyString()));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void resolveShouldReturnValueThatExists() {
        assertThat(faker.resolve(""address.city_prefix""), not(isEmptyString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveShouldReturnValueThatExists', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'resolve', '(', '""', 'address.city_prefix', '""', ')', ',', ' ', 'not', '(', 'isEmptyString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakerTest.java,resolveShouldThrowExceptionWhenPropertyDoesntExist,"    public void resolveShouldThrowExceptionWhenPropertyDoesntExist() {
        faker.resolve(""address.nothing"");
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void resolveShouldThrowExceptionWhenPropertyDoesntExist() {
        faker.resolve(""address.nothing"");
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveShouldThrowExceptionWhenPropertyDoesntExist', '(', ')', ' ', '{', '\n', '        ', 'faker', '.', 'resolve', '(', '""', 'address.nothing', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakerIT.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {Locale.CANADA_FRENCH, null},
                {Locale.TRADITIONAL_CHINESE, null},
                {new Locale(""pt""), null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {Locale.CANADA_FRENCH, null},
                {Locale.TRADITIONAL_CHINESE, null},
                {new Locale(""pt""), null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'CANADA_FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'TRADITIONAL_CHINESE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'FINNISH_LOCALE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakerIT.java,testAllFakerMethodsThatReturnStrings,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.company());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.company());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
    }
","['    ', 'public', ' ', 'void', ' ', 'testAllFakerMethodsThatReturnStrings', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'address', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'business', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'company', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'internet', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'lorem', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'phoneNumber', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'name', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'finance', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakerIT.java,testExceptionsNotCoveredInAboveTest,"    public void testExceptionsNotCoveredInAboveTest() throws Exception {
        assertThat(faker.bothify(""####???""), is(notNullValue()));
        assertThat(faker.letterify(""????""), is(notNullValue()));
        assertThat(faker.numerify(""####""), is(notNullValue()));

        assertThat(faker.lorem().paragraph(1), is(notNullValue()));
        assertThat(faker.lorem().paragraphs(1), is(notNullValue()));

        assertThat(faker.lorem().sentence(1), is(notNullValue()));
        assertThat(faker.lorem().sentences(1), is(notNullValue()));

        assertThat(faker.address().streetAddress(), is(notNullValue()));

        assertThat(faker.lorem().words(), is(notNullValue()));
        assertThat(faker.lorem().words(1), is(notNullValue()));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void testExceptionsNotCoveredInAboveTest() throws Exception {
        assertThat(faker.bothify(""####???""), is(notNullValue()));
        assertThat(faker.letterify(""????""), is(notNullValue()));
        assertThat(faker.numerify(""####""), is(notNullValue()));

        assertThat(faker.lorem().paragraph(1), is(notNullValue()));
        assertThat(faker.lorem().paragraphs(1), is(notNullValue()));

        assertThat(faker.lorem().sentence(1), is(notNullValue()));
        assertThat(faker.lorem().sentences(1), is(notNullValue()));

        assertThat(faker.address().streetAddress(), is(notNullValue()));

        assertThat(faker.lorem().words(), is(notNullValue()));
        assertThat(faker.lorem().words(1), is(notNullValue()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testExceptionsNotCoveredInAboveTest', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', '####???', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'letterify', '(', '""', '????', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'numerify', '(', '""', '####', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'paragraph', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'paragraphs', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentences', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'streetAddress', '(', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,safeFetchShouldReturnValueInList,"    public void safeFetchShouldReturnValueInList() {
        assertThat(fakeValuesService.safeFetch(""property.dummy""), is(""x""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void safeFetchShouldReturnValueInList() {
        assertThat(fakeValuesService.safeFetch(""property.dummy""), is(""x""));
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnValueInList', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.dummy', '""', ')', ',', ' ', 'is', '(', '""', 'x', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,safeFetchShouldReturnSimpleList,"    public void safeFetchShouldReturnSimpleList() {
        assertThat(fakeValuesService.safeFetch(""property.simple""), is(""hello""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void safeFetchShouldReturnSimpleList() {
        assertThat(fakeValuesService.safeFetch(""property.simple""), is(""hello""));
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnSimpleList', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.simple', '""', ')', ',', ' ', 'is', '(', '""', 'hello', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist,"    public void safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist() {
        assertThat(fakeValuesService.safeFetch(""property.dummy2""), isEmptyString());
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist() {
        assertThat(fakeValuesService.safeFetch(""property.dummy2""), isEmptyString());
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.dummy2', '""', ')', ',', ' ', 'isEmptyString', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,resolveKeyToPropertyWithAPropertyWithoutAnObject,"    public void resolveKeyToPropertyWithAPropertyWithoutAnObject() {
        // #{hello} -> DummyService.hello
        when(resolver.resolve(anyString())).thenReturn("""");

        fakeValuesService.resolve(""property.simpleResolution"", new DummyService(), resolver);

        verify(resolver).resolve(eq(""DummyService.hello""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void resolveKeyToPropertyWithAPropertyWithoutAnObject() {
        
        when(resolver.resolve(anyString())).thenReturn("""");

        fakeValuesService.resolve(""property.simpleResolution"", new DummyService(), resolver);

        verify(resolver).resolve(eq(""DummyService.hello""));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAPropertyWithoutAnObject', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'when', '(', 'resolver', '.', 'resolve', '(', 'anyString', '(', ')', ')', ')', '.', 'thenReturn', '(', '""', '""', ')', ';', '\n', '\n', '        ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.simpleResolution', '""', ',', ' ', 'new', ' ', 'DummyService', '(', ')', ',', ' ', 'resolver', ')', ';', '\n', '\n', '        ', 'verify', '(', 'resolver', ')', '.', 'resolve', '(', 'eq', '(', '""', 'DummyService.hello', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,resolveKeyToPropertyWithAPropertyWithAnObject,"    public void resolveKeyToPropertyWithAPropertyWithAnObject() {
        // #{person.hello} -> Person.hello
        when(resolver.resolve(anyString())).thenReturn("""");

        fakeValuesService.resolve(""property.advancedResolution"", new DummyService(), resolver);

        verify(resolver).resolve(eq(""Person.hello""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void resolveKeyToPropertyWithAPropertyWithAnObject() {
        
        when(resolver.resolve(anyString())).thenReturn("""");

        fakeValuesService.resolve(""property.advancedResolution"", new DummyService(), resolver);

        verify(resolver).resolve(eq(""Person.hello""));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAPropertyWithAnObject', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'when', '(', 'resolver', '.', 'resolve', '(', 'anyString', '(', ')', ')', ')', '.', 'thenReturn', '(', '""', '""', ')', ';', '\n', '\n', '        ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.advancedResolution', '""', ',', ' ', 'new', ' ', 'DummyService', '(', ')', ',', ' ', 'resolver', ')', ';', '\n', '\n', '        ', 'verify', '(', 'resolver', ')', '.', 'resolve', '(', 'eq', '(', '""', 'Person.hello', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,resolveKeyToPropertyWithAList,"    public void resolveKeyToPropertyWithAList() {
        // #{hello} -> DummyService.hello
        when(resolver.resolve(anyString())).thenReturn("""");

        fakeValuesService.resolve(""property.resolutionWithList"", new DummyService(), resolver);

        verify(resolver).resolve(eq(""DummyService.hello""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void resolveKeyToPropertyWithAList() {
        
        when(resolver.resolve(anyString())).thenReturn("""");

        fakeValuesService.resolve(""property.resolutionWithList"", new DummyService(), resolver);

        verify(resolver).resolve(eq(""DummyService.hello""));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAList', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'when', '(', 'resolver', '.', 'resolve', '(', 'anyString', '(', ')', ')', ')', '.', 'thenReturn', '(', '""', '""', ')', ';', '\n', '\n', '        ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.resolutionWithList', '""', ',', ' ', 'new', ' ', 'DummyService', '(', ')', ',', ' ', 'resolver', ')', ';', '\n', '\n', '        ', 'verify', '(', 'resolver', ')', '.', 'resolve', '(', 'eq', '(', '""', 'DummyService.hello', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ecba78d9994f949d28fceb179af3a55dc0791c20,FakeValuesServiceTest.java,resolveKeyWithMultiplePropertiesShouldJoinResults,"    public void resolveKeyWithMultiplePropertiesShouldJoinResults() {
        when(resolver.resolve(""DummyService.hello"")).thenReturn(""1"");
        when(resolver.resolve(""Person.hello"")).thenReturn(""2"");

        String resolved = fakeValuesService.resolve(""property.multipleResolution"", new DummyService(), resolver);
        assertThat(resolved, is(""1 2""));
    }",https://www.github.com/dius/java-faker/commit/ecba78d9994f949d28fceb179af3a55dc0791c20,"    public void resolveKeyWithMultiplePropertiesShouldJoinResults() {
        when(resolver.resolve(""DummyService.hello"")).thenReturn(""1"");
        when(resolver.resolve(""Person.hello"")).thenReturn(""2"");

        String resolved = fakeValuesService.resolve(""property.multipleResolution"", new DummyService(), resolver);
        assertThat(resolved, is(""1 2""));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyWithMultiplePropertiesShouldJoinResults', '(', ')', ' ', '{', '\n', '        ', 'when', '(', 'resolver', '.', 'resolve', '(', '""', 'DummyService.hello', '""', ')', ')', '.', 'thenReturn', '(', '""', '1', '""', ')', ';', '\n', '        ', 'when', '(', 'resolver', '.', 'resolve', '(', '""', 'Person.hello', '""', ')', ')', '.', 'thenReturn', '(', '""', '2', '""', ')', ';', '\n', '\n', '        ', 'String', ' ', 'resolved', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.multipleResolution', '""', ',', ' ', 'new', ' ', 'DummyService', '(', ')', ',', ' ', 'resolver', ')', ';', '\n', '        ', 'assertThat', '(', 'resolved', ',', ' ', 'is', '(', '""', '1 2', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a91ed042857e56c8e20fbe8c9769f0e0d8a38777,AddressTest.java,testCity,"    public void testCity() {
        assertThat(faker.address().city(), matchesRegularExpression(""[A-Za-z'() ]+""));
    }",https://www.github.com/dius/java-faker/commit/a91ed042857e56c8e20fbe8c9769f0e0d8a38777,"    public void testCity() {
        assertThat(faker.address().city(), matchesRegularExpression(""[A-Za-z'() ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'city', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a91ed042857e56c8e20fbe8c9769f0e0d8a38777,AddressTest.java,testCountry,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\- ]+""));
    }",https://www.github.com/dius/java-faker/commit/a91ed042857e56c8e20fbe8c9769f0e0d8a38777,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'country', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z', '\\\\', '- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d98849eb738809269cb1164ddfdc69069c8e0743,DateAndTime.java,past,"    public Date past(int atMost, TimeUnit unit) {
        Date now = new Date();
        Date aBitEarlierThanNow = new Date(now.getTime() - 1000);
        return past(atMost, unit, aBitEarlierThanNow);
    }",https://www.github.com/dius/java-faker/commit/d98849eb738809269cb1164ddfdc69069c8e0743,"    public Date past(int atMost, TimeUnit unit) {
        Date now = new Date();
        Date aBitEarlierThanNow = new Date(now.getTime() - 1000);
        return past(atMost, unit, aBitEarlierThanNow);
    }
","['    ', 'public', ' ', 'Date', ' ', 'past', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'aBitEarlierThanNow', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '-', ' ', '1000', ')', ';', '\n', '        ', 'return', ' ', 'past', '(', 'atMost', ',', ' ', 'unit', ',', ' ', 'aBitEarlierThanNow', ')', ';', '\n', '    ', '}', '\n']"
master,d98849eb738809269cb1164ddfdc69069c8e0743,DateAndTimeTest.java,testPastDateWithReferenceDate,"    public void testPastDateWithReferenceDate() {
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date past = faker.date().past(1, TimeUnit.SECONDS, now);",https://www.github.com/dius/java-faker/commit/d98849eb738809269cb1164ddfdc69069c8e0743,"    public void testPastDateWithReferenceDate() {
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date past = faker.date().past(1, TimeUnit.SECONDS, now);
","['    ', 'public', ' ', 'void', ' ', 'testPastDateWithReferenceDate', '(', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'past', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'past', '(', '1', ',', ' ', 'TimeUnit', '.', 'SECONDS', ',', ' ', 'now', ')', ';', '\n']"
master,d98849eb738809269cb1164ddfdc69069c8e0743,DateAndTimeTest.java,testPastDate,"    public void testPastDate() {
        Date now = new Date();
        Date past = faker.date().past(100, TimeUnit.SECONDS);
        assertThat(""past date is in the past"", past.getTime(), lessThan(now.getTime()));
    }",https://www.github.com/dius/java-faker/commit/d98849eb738809269cb1164ddfdc69069c8e0743,"    public void testPastDate() {
        Date now = new Date();
        Date past = faker.date().past(100, TimeUnit.SECONDS);
        assertThat(""past date is in the past"", past.getTime(), lessThan(now.getTime()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPastDate', '(', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'past', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'past', '(', '100', ',', ' ', 'TimeUnit', '.', 'SECONDS', ')', ';', '\n', '        ', 'assertThat', '(', '""', 'past date is in the past', '""', ',', ' ', 'past', '.', 'getTime', '(', ')', ',', ' ', 'lessThan', '(', 'now', '.', 'getTime', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,66aa3c6c7816e07af825a3e6a7896e64605ddaa3,Address.java,cityName,"    public String cityName() {
        return resolve(""address.city_name"");
    }",https://www.github.com/dius/java-faker/commit/66aa3c6c7816e07af825a3e6a7896e64605ddaa3,"    public String cityName() {
        return resolve(""address.city_name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'cityName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'resolve', '(', '""', 'address.city_name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,66aa3c6c7816e07af825a3e6a7896e64605ddaa3,AddressTest.java,testCityName,"    public void testCityName() {
        assertThat(faker.address().cityName(), matchesRegularExpression(""[A-Za-z'() ]+""));
    }",https://www.github.com/dius/java-faker/commit/66aa3c6c7816e07af825a3e6a7896e64605ddaa3,"    public void testCityName() {
        assertThat(faker.address().cityName(), matchesRegularExpression(""[A-Za-z'() ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCityName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'cityName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,66aa3c6c7816e07af825a3e6a7896e64605ddaa3,AddressTest.java,testCityWithLocaleFranceAndSeed,"    public void testCityWithLocaleFranceAndSeed() {
        long seed = 1L;
        Faker firstFaker = new Faker(Locale.FRANCE, new Random(seed));
        Faker secondFaker = new Faker(Locale.FRANCE, new Random(seed));
        assertThat(firstFaker.address().city(), is(secondFaker.address().city()));
    }",https://www.github.com/dius/java-faker/commit/66aa3c6c7816e07af825a3e6a7896e64605ddaa3,"    public void testCityWithLocaleFranceAndSeed() {
        long seed = 1L;
        Faker firstFaker = new Faker(Locale.FRANCE, new Random(seed));
        Faker secondFaker = new Faker(Locale.FRANCE, new Random(seed));
        assertThat(firstFaker.address().city(), is(secondFaker.address().city()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCityWithLocaleFranceAndSeed', '(', ')', ' ', '{', '\n', '        ', 'long', ' ', 'seed', ' ', '=', ' ', '1L', ';', '\n', '        ', 'Faker', ' ', 'firstFaker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'Locale', '.', 'FRANCE', ',', ' ', 'new', ' ', 'Random', '(', 'seed', ')', ')', ';', '\n', '        ', 'Faker', ' ', 'secondFaker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'Locale', '.', 'FRANCE', ',', ' ', 'new', ' ', 'Random', '(', 'seed', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'firstFaker', '.', 'address', '(', ')', '.', 'city', '(', ')', ',', ' ', 'is', '(', 'secondFaker', '.', 'address', '(', ')', '.', 'city', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b75995a0c327ef8da0e304128a0a74c9a8d8495b,AddressTest.java,testCountry,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\-  &]+""));
    }",https://www.github.com/dius/java-faker/commit/b75995a0c327ef8da0e304128a0a74c9a8d8495b,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\-  &]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'country', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z', '\\\\', '-  &]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3956349ecdb7a38ef4dec745e1485533afa48df1,CompanyTest.java,testName,"    public void testName() {
        assertThat(faker.company().name(), matchesRegularExpression(""[A-Za-z\\-&', ]+""));
    }",https://www.github.com/dius/java-faker/commit/3956349ecdb7a38ef4dec745e1485533afa48df1,"    public void testName() {
        assertThat(faker.company().name(), matchesRegularExpression(""[A-Za-z\\-&', ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z', '\\\\', ""-&', ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3956349ecdb7a38ef4dec745e1485533afa48df1,CompanyTest.java,testSuffix,"    public void testSuffix() {
        assertThat(faker.company().suffix(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/3956349ecdb7a38ef4dec745e1485533afa48df1,"    public void testSuffix() {
        assertThat(faker.company().suffix(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSuffix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'suffix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fc81faf7bb813ca367efeb6aec926c52c944c977,Company.java,industry,"    public String industry() {
        return fakeValuesService.safeFetch(""company.industry"");
    }",https://www.github.com/dius/java-faker/commit/fc81faf7bb813ca367efeb6aec926c52c944c977,"    public String industry() {
        return fakeValuesService.safeFetch(""company.industry"");
    }
","['    ', 'public', ' ', 'String', ' ', 'industry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'company.industry', '""', ')', ';', '\n', '    ', '}', '\n']"
master,fc81faf7bb813ca367efeb6aec926c52c944c977,Company.java,profession,"    public String profession() {
        return fakeValuesService.safeFetch(""company.profession"");
    }",https://www.github.com/dius/java-faker/commit/fc81faf7bb813ca367efeb6aec926c52c944c977,"    public String profession() {
        return fakeValuesService.safeFetch(""company.profession"");
    }
","['    ', 'public', ' ', 'String', ' ', 'profession', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'company.profession', '""', ')', ';', '\n', '    ', '}', '\n']"
master,fc81faf7bb813ca367efeb6aec926c52c944c977,CompanyTest.java,testIndustry,"    public void testIndustry() {
        assertThat(faker.company().industry(), matchesRegularExpression(""[A-Za-z\\-/& ]+""));
    }",https://www.github.com/dius/java-faker/commit/fc81faf7bb813ca367efeb6aec926c52c944c977,"    public void testIndustry() {
        assertThat(faker.company().industry(), matchesRegularExpression(""[A-Za-z\\-/& ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testIndustry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'industry', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z', '\\\\', '-/& ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fc81faf7bb813ca367efeb6aec926c52c944c977,CompanyTest.java,testProfession,"    public void testProfession() {
        assertThat(faker.company().profession(), matchesRegularExpression(""[a-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/fc81faf7bb813ca367efeb6aec926c52c944c977,"    public void testProfession() {
        assertThat(faker.company().profession(), matchesRegularExpression(""[a-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testProfession', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'profession', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0704d8a53847d1eccd389172282527f877fc1cd0,AddressTest.java,testStreetAddressIsANumber,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ [A-Za-z0-9' ]+""));
    }",https://www.github.com/dius/java-faker/commit/0704d8a53847d1eccd389172282527f877fc1cd0,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        logger.info(""Street Address Number: "" + streetAddressNumber);
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ [A-Za-z0-9' ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIsANumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'logger', '.', 'info', '(', '""', 'Street Address Number: ', '""', ' ', '+', ' ', 'streetAddressNumber', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'matchesRegularExpression', '(', '""', ""[0-9]+ [A-Za-z0-9' ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,Book.java,author,"    public String author() {
        return fakeValuesService.resolve(""book.author"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public String author() {
        return fakeValuesService.resolve(""book.author"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'author', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'book.author', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,Book.java,title,"    public String title() {
        return fakeValuesService.fetchString(""book.title"");
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public String title() {
        return fakeValuesService.fetchString(""book.title"");
    }
","['    ', 'public', ' ', 'String', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'book.title', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,Book.java,publisher,"    public String publisher() {
        return fakeValuesService.fetchString(""book.publisher"");
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public String publisher() {
        return fakeValuesService.fetchString(""book.publisher"");
    }
","['    ', 'public', ' ', 'String', ' ', 'publisher', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'book.publisher', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,Book.java,genre,"    public String genre() {
        return fakeValuesService.fetchString(""book.genre"");
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public String genre() {
        return fakeValuesService.fetchString(""book.genre"");
    }
","['    ', 'public', ' ', 'String', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'book.genre', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,BookTest.java,testTitle,"    public void testTitle() {
        assertThat(faker.book().title(), matchesRegularExpression(""([\\p{L}'\\-\\?]+[!,]? ?){2,9}""));
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public void testTitle() {
        assertThat(faker.book().title(), matchesRegularExpression(""([\\p{L}'\\-\\?]+[!,]? ?){2,9}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testTitle', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'book', '(', ')', '.', 'title', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""p{L}'"", '\\\\', '-', '\\\\', '?]+[!,]? ?){2,9}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,BookTest.java,testAuthor,"    public void testAuthor() {
        assertThat(faker.book().author(), matchesRegularExpression(""([\\w']+\\.? ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public void testAuthor() {
        assertThat(faker.book().author(), matchesRegularExpression(""([\\w']+\\.? ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAuthor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'book', '(', ')', '.', 'author', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.? ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,BookTest.java,testPublisher,"    public void testPublisher() {
        assertThat(faker.book().publisher(), matchesRegularExpression(""([\\p{L}'&\\-]+[,.]? ?){1,5}""));
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public void testPublisher() {
        assertThat(faker.book().publisher(), matchesRegularExpression(""([\\p{L}'&\\-]+[,.]? ?){1,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPublisher', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'book', '(', ')', '.', 'publisher', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""p{L}'&"", '\\\\', '-]+[,.]? ?){1,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,BookTest.java,testGenre,"    public void testGenre() {
        assertThat(faker.book().genre(), matchesRegularExpression(""([\\w/]+ ?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public void testGenre() {
        assertThat(faker.book().genre(), matchesRegularExpression(""([\\w/]+ ?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testGenre', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'book', '(', ')', '.', 'genre', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w/]+ ?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a42fdeb0746c735479c0ac6b6bac35a0387a8e10,FakerIT.java,testAllFakerMethodsThatReturnStrings,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.book());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.company());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
    }",https://www.github.com/dius/java-faker/commit/a42fdeb0746c735479c0ac6b6bac35a0387a8e10,"    public void testAllFakerMethodsThatReturnStrings() throws Exception {
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker);
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.address());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.business());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.book());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.company());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.internet());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.lorem());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.phoneNumber());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.name());
        testAllMethodsThatReturnStringsActuallyReturnStrings(faker.finance());
    }
","['    ', 'public', ' ', 'void', ' ', 'testAllFakerMethodsThatReturnStrings', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'address', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'business', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'book', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'company', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'internet', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'lorem', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'phoneNumber', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'name', '(', ')', ')', ';', '\n', '        ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'faker', '.', 'finance', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8197ee042d263ea637ddee3a727ac258e11f2461,Color.java,name,"    public String name() {
        return fakeValuesService.fetchString(""color.name"");
    }",https://www.github.com/dius/java-faker/commit/8197ee042d263ea637ddee3a727ac258e11f2461,"    public String name() {
        return fakeValuesService.fetchString(""color.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'color.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,8197ee042d263ea637ddee3a727ac258e11f2461,ColorTest.java,testName,"    public void testName() {
        assertThat(faker.color().name(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/8197ee042d263ea637ddee3a727ac258e11f2461,"    public void testName() {
        assertThat(faker.color().name(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'color', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,50518a4de8fe2653289a7384c9d82c2473f10b5a,AddressTest.java,testStreetAddressIsANumber,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ [A-Za-z0-9' ]+""));
    }",https://www.github.com/dius/java-faker/commit/50518a4de8fe2653289a7384c9d82c2473f10b5a,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ [A-Za-z0-9' ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIsANumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'matchesRegularExpression', '(', '""', ""[0-9]+ [A-Za-z0-9' ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,50518a4de8fe2653289a7384c9d82c2473f10b5a,AddressTest.java,testCountry,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\-  &.]+""));
    }",https://www.github.com/dius/java-faker/commit/50518a4de8fe2653289a7384c9d82c2473f10b5a,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\-  &.]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'country', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z', '\\\\', '-  &.]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3432539bf1fb9d2098bddd051e2a2ab614923987,AddressTest.java,testCountry,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\- &.,'()\\d]+""));
    }",https://www.github.com/dius/java-faker/commit/3432539bf1fb9d2098bddd051e2a2ab614923987,"    public void testCountry() {
        assertThat(faker.address().country(), matchesRegularExpression(""[A-Za-z\\- &.,'()\\d]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'country', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z', '\\\\', ""- &.,'()"", '\\\\', 'd]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3432539bf1fb9d2098bddd051e2a2ab614923987,CompanyTest.java,testIndustry,"    public void testIndustry() {
        assertThat(faker.company().industry(), matchesRegularExpression(""(\\w+([ ,&/-]{1,3})?){1,4}+""));
    }",https://www.github.com/dius/java-faker/commit/3432539bf1fb9d2098bddd051e2a2ab614923987,"    public void testIndustry() {
        assertThat(faker.company().industry(), matchesRegularExpression(""(\\w+([ ,&/-]{1,3})?){1,4}+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testIndustry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'industry', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+([ ,&/-]{1,3})?){1,4}+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,be80fe56f02907a4d1d0da672080c23ddc733682,PhoneNumber.java,cellPhone,"    public String cellPhone() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""cell_phone.formats""));
    }",https://www.github.com/dius/java-faker/commit/be80fe56f02907a4d1d0da672080c23ddc733682,"    public String cellPhone() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""cell_phone.formats""));
    }
","['    ', 'public', ' ', 'String', ' ', 'cellPhone', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'cell_phone.formats', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,be80fe56f02907a4d1d0da672080c23ddc733682,PhoneNumerTest.java,testCellPhone,"    public void testCellPhone() {
        assertThat(faker.phoneNumber().cellPhone(), matchesRegularExpression(""\\(?\\d+\\)?([- .]\\d+){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/be80fe56f02907a4d1d0da672080c23ddc733682,"    public void testCellPhone() {
        assertThat(faker.phoneNumber().cellPhone(), matchesRegularExpression(""\\(?\\d+\\)?([- .]\\d+){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCellPhone', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'phoneNumber', '(', ')', '.', 'cellPhone', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', '(?', '\\\\', 'd+', '\\\\', ')?([- .]', '\\\\', 'd+){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,be80fe56f02907a4d1d0da672080c23ddc733682,PhoneNumerTest.java,testPhoneNumber,"    public void testPhoneNumber() {
        assertThat(faker.phoneNumber().phoneNumber(), matchesRegularExpression(""\\(?\\d+\\)?([- .]x?\\d+){1,5}""));
    }",https://www.github.com/dius/java-faker/commit/be80fe56f02907a4d1d0da672080c23ddc733682,"    public void testPhoneNumber() {
        assertThat(faker.phoneNumber().phoneNumber(), matchesRegularExpression(""\\(?\\d+\\)?([- .]x?\\d+){1,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPhoneNumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'phoneNumber', '(', ')', '.', 'phoneNumber', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', '(?', '\\\\', 'd+', '\\\\', ')?([- .]x?', '\\\\', 'd+){1,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,randomDigit,"    public int randomDigit() {
        return randomService.nextInt(9);
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public int randomDigit() {
        return randomService.nextInt(9);
    }
","['    ', 'public', ' ', 'int', ' ', 'randomDigit', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextInt', '(', '9', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,randomDigitNotZero,"    public int randomDigitNotZero() {
        return randomService.nextInt(8) + 1;
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public int randomDigitNotZero() {
        return randomService.nextInt(8) + 1;
    }
","['    ', 'public', ' ', 'int', ' ', 'randomDigitNotZero', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextInt', '(', '8', ')', ' ', '+', ' ', '1', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,numberBetween,"    public long numberBetween(int min, long max) {
        return numberBetween((long) min, max);
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public long numberBetween(int min, long max) {
        return numberBetween((long) min, max);
    }
","['    ', 'public', ' ', 'long', ' ', 'numberBetween', '(', 'int', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'numberBetween', '(', '(', 'long', ')', ' ', 'min', ',', ' ', 'max', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,numberBetween,"    public int numberBetween(int min, int max) {
        return randomService.nextInt(max - min) + min;
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public int numberBetween(int min, int max) {
        return randomService.nextInt(max - min) + min;
    }
","['    ', 'public', ' ', 'int', ' ', 'numberBetween', '(', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextInt', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', 'min', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,numberBetween,"    public long numberBetween(long min, long max) {
        return randomService.nextLong(max - min) + min;
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public long numberBetween(long min, long max) {
        return randomService.nextLong(max - min) + min;
    }
","['    ', 'public', ' ', 'long', ' ', 'numberBetween', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextLong', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', 'min', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,randomNumber,"    public long randomNumber(int numberOfDigits, boolean strict) {
        long max = (long) Math.pow(10, numberOfDigits);
        if (strict) {
            long min = (long) Math.pow(10, numberOfDigits-1);
            return randomService.nextLong(max - min) + min;
        }

        return randomService.nextLong(max);
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public long randomNumber(int numberOfDigits, boolean strict) {
        long max = (long) Math.pow(10, numberOfDigits);
        if (strict) {
            long min = (long) Math.pow(10, numberOfDigits-1);
            return randomService.nextLong(max - min) + min;
        }

        return randomService.nextLong(max);
    }
","['    ', 'public', ' ', 'long', ' ', 'randomNumber', '(', 'int', ' ', 'numberOfDigits', ',', ' ', 'boolean', ' ', 'strict', ')', ' ', '{', '\n', '        ', 'long', ' ', 'max', ' ', '=', ' ', '(', 'long', ')', ' ', 'Math', '.', 'pow', '(', '10', ',', ' ', 'numberOfDigits', ')', ';', '\n', '        ', 'if', ' ', '(', 'strict', ')', ' ', '{', '\n', '            ', 'long', ' ', 'min', ' ', '=', ' ', '(', 'long', ')', ' ', 'Math', '.', 'pow', '(', '10', ',', ' ', 'numberOfDigits', '-', '1', ')', ';', '\n', '            ', 'return', ' ', 'randomService', '.', 'nextLong', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', 'min', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextLong', '(', 'max', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,randomNumber,"    public long randomNumber() {
        int numberOfDigits = randomService.nextInt(8) + 1;

        return randomNumber(numberOfDigits, false);
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public long randomNumber() {
        int numberOfDigits = randomService.nextInt(8) + 1;

        return randomNumber(numberOfDigits, false);
    }
","['    ', 'public', ' ', 'long', ' ', 'randomNumber', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'numberOfDigits', ' ', '=', ' ', 'randomService', '.', 'nextInt', '(', '8', ')', ' ', '+', ' ', '1', ';', '\n', '\n', '        ', 'return', ' ', 'randomNumber', '(', 'numberOfDigits', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,Number.java,randomDouble,"    public double randomDouble(int maxNumberOfDecimals, int min, int max) {
        double value = min + (max - min) * randomService.nextDouble();

        return new BigDecimal(value).setScale(maxNumberOfDecimals, BigDecimal.ROUND_HALF_EVEN).doubleValue();
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public double randomDouble(int maxNumberOfDecimals, int min, int max) {
        double value = min + (max - min) * randomService.nextDouble();

        return new BigDecimal(value).setScale(maxNumberOfDecimals, BigDecimal.ROUND_HALF_EVEN).doubleValue();
    }
","['    ', 'public', ' ', 'double', ' ', 'randomDouble', '(', 'int', ' ', 'maxNumberOfDecimals', ',', ' ', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'double', ' ', 'value', ' ', '=', ' ', 'min', ' ', '+', ' ', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '*', ' ', 'randomService', '.', 'nextDouble', '(', ')', ';', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'BigDecimal', '(', 'value', ')', '.', 'setScale', '(', 'maxNumberOfDecimals', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_EVEN', ')', '.', 'doubleValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testRandomDigit,"    public void testRandomDigit() {
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigit();",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testRandomDigit() {
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigit();
","['    ', 'public', ' ', 'void', ' ', 'testRandomDigit', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDigit', '(', ')', ';', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testRandomDigitNotZero,"    public void testRandomDigitNotZero() {
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigitNotZero();",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testRandomDigitNotZero() {
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigitNotZero();
","['    ', 'public', ' ', 'void', ' ', 'testRandomDigitNotZero', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDigitNotZero', '(', ')', ';', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testRandomNumber,"    public void testRandomNumber() {
        long value = faker.number().randomNumber();
        assertThat(value, is(lessThan(Long.MAX_VALUE)));
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testRandomNumber() {
        long value = faker.number().randomNumber();
        assertThat(value, is(lessThan(Long.MAX_VALUE)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRandomNumber', '(', ')', ' ', '{', '\n', '        ', 'long', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomNumber', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThan', '(', 'Long', '.', 'MAX_VALUE', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testRandomNumberWithSingleDigitStrict,"    public void testRandomNumberWithSingleDigitStrict() {
        for (int i = 0; i < 100; ++i) {
            long value = faker.number().randomNumber(1, true);",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testRandomNumberWithSingleDigitStrict() {
        for (int i = 0; i < 100; ++i) {
            long value = faker.number().randomNumber(1, true);
","['    ', 'public', ' ', 'void', ' ', 'testRandomNumberWithSingleDigitStrict', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'long', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomNumber', '(', '1', ',', ' ', 'true', ')', ';', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testRandomNumberWithGivenDigitsStrict,"    public void testRandomNumberWithGivenDigitsStrict() {
        for (int i = 1; i < 9; ++i) {
            for (int x = 0; x < 100; ++x) {",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testRandomNumberWithGivenDigitsStrict() {
        for (int i = 1; i < 9; ++i) {
            for (int x = 0; x < 100; ++x) {
","['    ', 'public', ' ', 'void', ' ', 'testRandomNumberWithGivenDigitsStrict', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '9', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'x', ' ', '=', ' ', '0', ';', ' ', 'x', ' ', '<', ' ', '100', ';', ' ', '+', '+', 'x', ')', ' ', '{', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testRandomDouble,"    public void testRandomDouble() {
        for (int i = 1; i < 5; ++i) {
            for (int x = 0; x < 100; ++x) {",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testRandomDouble() {
        for (int i = 1; i < 5; ++i) {
            for (int x = 0; x < 100; ++x) {
","['    ', 'public', ' ', 'void', ' ', 'testRandomDouble', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '5', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'x', ' ', '=', ' ', '0', ';', ' ', 'x', ' ', '<', ' ', '100', ';', ' ', '+', '+', 'x', ')', ' ', '{', '\n']"
master,e7a96c65e7791afc4834368ad28955ef7a1b4ce7,NumberTest.java,testNumberBetween,"    public void testNumberBetween() {
        for (int i = 1; i < 100; ++i) {
            int v = faker.number().numberBetween(0, i);
            assertThat(v, is(lessThanOrEqualTo(i)));
            assertThat(v, is(greaterThanOrEqualTo(0)));
        }

        for (long i = 1L; i < 100L; ++i) {
            long v = faker.number().numberBetween(0, i);
            assertThat(v, is(lessThanOrEqualTo(i)));
            assertThat(v, is(greaterThanOrEqualTo(0L)));
        }

        int min1 = 1;
        long v1 = faker.number().numberBetween(min1, 980000000L);
        assertThat(v1, is(greaterThan((long) min1)));
        assertThat(v1, is(lessThan(980000000L)));
    }",https://www.github.com/dius/java-faker/commit/e7a96c65e7791afc4834368ad28955ef7a1b4ce7,"    public void testNumberBetween() {
        for (int i = 1; i < 100; ++i) {
            int v = faker.number().numberBetween(0, i);
            assertThat(v, is(lessThanOrEqualTo(i)));
            assertThat(v, is(greaterThanOrEqualTo(0)));
        }

        for (long i = 1L; i < 100L; ++i) {
            long v = faker.number().numberBetween(0, i);
            assertThat(v, is(lessThanOrEqualTo(i)));
            assertThat(v, is(greaterThanOrEqualTo(0L)));
        }

        int min1 = 1;
        long v1 = faker.number().numberBetween(min1, 980000000L);
        assertThat(v1, is(greaterThan((long) min1)));
        assertThat(v1, is(lessThan(980000000L)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNumberBetween', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'v', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '0', ',', ' ', 'i', ')', ';', '\n', '            ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'lessThanOrEqualTo', '(', 'i', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', '0', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'for', ' ', '(', 'long', ' ', 'i', ' ', '=', ' ', '1L', ';', ' ', 'i', ' ', '<', ' ', '100L', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'long', ' ', 'v', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '0', ',', ' ', 'i', ')', ';', '\n', '            ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'lessThanOrEqualTo', '(', 'i', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', '0', 'L', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'int', ' ', 'min1', ' ', '=', ' ', '1', ';', '\n', '        ', 'long', ' ', 'v1', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'min1', ',', ' ', '980000000L', ')', ';', '\n', '        ', 'assertThat', '(', 'v1', ',', ' ', 'is', '(', 'greaterThan', '(', '(', 'long', ')', ' ', 'min1', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'v1', ',', ' ', 'is', '(', 'lessThan', '(', '980000000L', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a15e9a97ee4c5d6f1ff2a56e30fc093de2d4770d,Options.java,option,"    public String option(String... options) {
        return options[randomService.nextInt(options.length)];
    }",https://www.github.com/dius/java-faker/commit/a15e9a97ee4c5d6f1ff2a56e30fc093de2d4770d,"    public String option(String... options) {
        return options[randomService.nextInt(options.length)];
    }
","['    ', 'public', ' ', 'String', ' ', 'option', '(', 'String', '.', '.', '.', ' ', 'options', ')', ' ', '{', '\n', '        ', 'return', ' ', 'options', '[', 'randomService', '.', 'nextInt', '(', 'options', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,a15e9a97ee4c5d6f1ff2a56e30fc093de2d4770d,OptionsTest.java,testOptionWithArray,"    public void testOptionWithArray() {
        assertThat(faker.options().option(options), isOneOf(options));
    }",https://www.github.com/dius/java-faker/commit/a15e9a97ee4c5d6f1ff2a56e30fc093de2d4770d,"    public void testOptionWithArray() {
        assertThat(faker.options().option(options), isOneOf(options));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOptionWithArray', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'options', ')', ',', ' ', 'isOneOf', '(', 'options', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a15e9a97ee4c5d6f1ff2a56e30fc093de2d4770d,OptionsTest.java,testOptionWithVarargs,"    public void testOptionWithVarargs() {
        assertThat(faker.options().option(""A"", ""B"", ""C""), isOneOf(options));
    }",https://www.github.com/dius/java-faker/commit/a15e9a97ee4c5d6f1ff2a56e30fc093de2d4770d,"    public void testOptionWithVarargs() {
        assertThat(faker.options().option(""A"", ""B"", ""C""), isOneOf(options));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOptionWithVarargs', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', '""', 'A', '""', ',', ' ', '""', 'B', '""', ',', ' ', '""', 'C', '""', ')', ',', ' ', 'isOneOf', '(', 'options', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,Company.java,buzzword,"    public String buzzword() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) fakeValuesService.fetchObject(""company.buzzwords"");
        List<String> buzzwords = new ArrayList<String>();
        for (List<String> buzzwordList : buzzwordLists) {
            buzzwords.addAll(buzzwordList);
        }
        return buzzwords.get(randomService.nextInt(buzzwords.size()));
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public String buzzword() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) fakeValuesService.fetchObject(""company.buzzwords"");
        List<String> buzzwords = new ArrayList<String>();
        for (List<String> buzzwordList : buzzwordLists) {
            buzzwords.addAll(buzzwordList);
        }
        return buzzwords.get(randomService.nextInt(buzzwords.size()));
    }
","['    ', 'public', ' ', 'String', ' ', 'buzzword', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'buzzwordLists', ' ', '=', ' ', '(', 'List', '<', 'List', '<', 'String', '>', '>', ')', ' ', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'company.buzzwords', '""', ')', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'buzzwords', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'List', '<', 'String', '>', ' ', 'buzzwordList', ' ', ':', ' ', 'buzzwordLists', ')', ' ', '{', '\n', '            ', 'buzzwords', '.', 'addAll', '(', 'buzzwordList', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'buzzwords', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'buzzwords', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,Company.java,catchPhrase,"    public String catchPhrase() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> catchPhraseLists = (List<List<String>>) fakeValuesService.fetchObject(""company.buzzwords"");
        return joinSampleOfEachList(catchPhraseLists, "" "");
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public String catchPhrase() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> catchPhraseLists = (List<List<String>>) fakeValuesService.fetchObject(""company.buzzwords"");
        return joinSampleOfEachList(catchPhraseLists, "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'catchPhrase', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'catchPhraseLists', ' ', '=', ' ', '(', 'List', '<', 'List', '<', 'String', '>', '>', ')', ' ', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'company.buzzwords', '""', ')', ';', '\n', '        ', 'return', ' ', 'joinSampleOfEachList', '(', 'catchPhraseLists', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,Company.java,bs,"    public String bs() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) fakeValuesService.fetchObject(""company.bs"");
        return joinSampleOfEachList(buzzwordLists, "" "");
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public String bs() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) fakeValuesService.fetchObject(""company.bs"");
        return joinSampleOfEachList(buzzwordLists, "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'bs', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'buzzwordLists', ' ', '=', ' ', '(', 'List', '<', 'List', '<', 'String', '>', '>', ')', ' ', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'company.bs', '""', ')', ';', '\n', '        ', 'return', ' ', 'joinSampleOfEachList', '(', 'buzzwordLists', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,Company.java,logo,"    public String logo() {
        int number = randomService.nextInt(13) + 1;
        return ""https://pigment.github.io/fake-logos/logos/medium/color/"" + number + "".png"";
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public String logo() {
        int number = randomService.nextInt(13) + 1;
        return ""https://pigment.github.io/fake-logos/logos/medium/color/"" + number + "".png"";
    }
","['    ', 'public', ' ', 'String', ' ', 'logo', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'number', ' ', '=', ' ', 'randomService', '.', 'nextInt', '(', '13', ')', ' ', '+', ' ', '1', ';', '\n', '        ', 'return', ' ', '""', 'https://pigment.github.io/fake-logos/logos/medium/color/', '""', ' ', '+', ' ', 'number', ' ', '+', ' ', '""', '.png', '""', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,Company.java,joinSampleOfEachList,"    private String joinSampleOfEachList(List<List<String>> listOfLists, String separator) {
        List<String> words = new ArrayList<String>();
        for (List<String> list : listOfLists) {
           words.add(list.get(randomService.nextInt(list.size())));
        }
        return StringUtils.join(words, separator);
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    private String joinSampleOfEachList(List<List<String>> listOfLists, String separator) {
        List<String> words = new ArrayList<String>();
        for (List<String> list : listOfLists) {
           words.add(list.get(randomService.nextInt(list.size())));
        }
        return StringUtils.join(words, separator);
    }
","['    ', 'private', ' ', 'String', ' ', 'joinSampleOfEachList', '(', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'listOfLists', ',', ' ', 'String', ' ', 'separator', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'List', '<', 'String', '>', ' ', 'list', ' ', ':', ' ', 'listOfLists', ')', ' ', '{', '\n', '           ', 'words', '.', 'add', '(', 'list', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'list', '.', 'size', '(', ')', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'words', ',', ' ', 'separator', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,CompanyTest.java,testBuzzword,"    public void testBuzzword() {
        assertThat(faker.company().buzzword(), matchesRegularExpression(""(\\w+[ /-]?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public void testBuzzword() {
        assertThat(faker.company().buzzword(), matchesRegularExpression(""(\\w+[ /-]?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBuzzword', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'buzzword', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ /-]?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,CompanyTest.java,testCatchPhrase,"    public void testCatchPhrase() {
        assertThat(faker.company().catchPhrase(), matchesRegularExpression(""(\\w+[ /-]?){1,9}""));
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public void testCatchPhrase() {
        assertThat(faker.company().catchPhrase(), matchesRegularExpression(""(\\w+[ /-]?){1,9}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCatchPhrase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'catchPhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ /-]?){1,9}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,CompanyTest.java,testBs,"    public void testBs() {
        assertThat(faker.company().bs(), matchesRegularExpression(""(\\w+[ /-]?){1,9}""));
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public void testBs() {
        assertThat(faker.company().bs(), matchesRegularExpression(""(\\w+[ /-]?){1,9}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBs', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'bs', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ /-]?){1,9}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9a178bbc525dcdef8be27009e72023376171ef35,CompanyTest.java,testLogo,"    public void testLogo() {
        assertThat(faker.company().logo(), matchesRegularExpression(""https://pigment.github.io/fake-logos/logos/medium/color/\\d+\\.png""));
    }",https://www.github.com/dius/java-faker/commit/9a178bbc525dcdef8be27009e72023376171ef35,"    public void testLogo() {
        assertThat(faker.company().logo(), matchesRegularExpression(""https://pigment.github.io/fake-logos/logos/medium/color/\\d+\\.png""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLogo', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'logo', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'https://pigment.github.io/fake-logos/logos/medium/color/', '\\\\', 'd+', '\\\\', '.png', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,733d0b01eee84214f2c5536a29a712b65a5c6d89,App.java,name,"    public String name() {
        return fakeValuesService.fetchString(""app.name"");
    }",https://www.github.com/dius/java-faker/commit/733d0b01eee84214f2c5536a29a712b65a5c6d89,"    public String name() {
        return fakeValuesService.fetchString(""app.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'app.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,733d0b01eee84214f2c5536a29a712b65a5c6d89,App.java,version,"    public String version() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""app.version""));
    }",https://www.github.com/dius/java-faker/commit/733d0b01eee84214f2c5536a29a712b65a5c6d89,"    public String version() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""app.version""));
    }
","['    ', 'public', ' ', 'String', ' ', 'version', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'app.version', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,733d0b01eee84214f2c5536a29a712b65a5c6d89,App.java,author,"    public String author() {
        return fakeValuesService.resolve(""app.name"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/733d0b01eee84214f2c5536a29a712b65a5c6d89,"    public String author() {
        return fakeValuesService.resolve(""app.name"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'author', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'app.name', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,733d0b01eee84214f2c5536a29a712b65a5c6d89,AppTest.java,testName,"    public void testName() {
        assertThat(faker.app().name(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/733d0b01eee84214f2c5536a29a712b65a5c6d89,"    public void testName() {
        assertThat(faker.app().name(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'app', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,733d0b01eee84214f2c5536a29a712b65a5c6d89,AppTest.java,testVersion,"    public void testVersion() {
        assertThat(faker.app().version(), matchesRegularExpression(""\\d\\.(\\d){1,2}(\\.\\d)?""));
    }",https://www.github.com/dius/java-faker/commit/733d0b01eee84214f2c5536a29a712b65a5c6d89,"    public void testVersion() {
        assertThat(faker.app().version(), matchesRegularExpression(""\\d\\.(\\d){1,2}(\\.\\d)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testVersion', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'app', '(', ')', '.', 'version', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd', '\\\\', '.(', '\\\\', 'd){1,2}(', '\\\\', '.', '\\\\', 'd)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,733d0b01eee84214f2c5536a29a712b65a5c6d89,AppTest.java,testAuthor,"    public void testAuthor() {
        assertThat(faker.app().author(), matchesRegularExpression(""([\\w']+[-& ]?){2,9}""));
    }",https://www.github.com/dius/java-faker/commit/733d0b01eee84214f2c5536a29a712b65a5c6d89,"    public void testAuthor() {
        assertThat(faker.app().author(), matchesRegularExpression(""([\\w']+[-& ]?){2,9}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAuthor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'app', '(', ')', '.', 'author', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+[-& ]?){2,9}"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,Commerce.java,color,"    public String color() {
        return fakeValuesService.fetchString(""color.name"");
    }",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public String color() {
        return fakeValuesService.fetchString(""color.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'color', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'color.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,Commerce.java,department,"    public String department() {
        int numberOfDepartments = Math.max(randomService.nextInt(4), 1);
        SortedSet<String> departments = new TreeSet<String>();
        while (departments.size() < numberOfDepartments) {
            departments.add(fakeValuesService.fetchString(""commerce.department""));
        }
        if (departments.size() > 1) {
            String lastDepartment = departments.last();",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public String department() {
        int numberOfDepartments = Math.max(randomService.nextInt(4), 1);
        SortedSet<String> departments = new TreeSet<String>();
        while (departments.size() < numberOfDepartments) {
            departments.add(fakeValuesService.fetchString(""commerce.department""));
        }
        if (departments.size() > 1) {
            String lastDepartment = departments.last();
","['    ', 'public', ' ', 'String', ' ', 'department', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'numberOfDepartments', ' ', '=', ' ', 'Math', '.', 'max', '(', 'randomService', '.', 'nextInt', '(', '4', ')', ',', ' ', '1', ')', ';', '\n', '        ', 'SortedSet', '<', 'String', '>', ' ', 'departments', ' ', '=', ' ', 'new', ' ', 'TreeSet', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'departments', '.', 'size', '(', ')', ' ', '<', ' ', 'numberOfDepartments', ')', ' ', '{', '\n', '            ', 'departments', '.', 'add', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'commerce.department', '""', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'departments', '.', 'size', '(', ')', ' ', '>', ' ', '1', ')', ' ', '{', '\n', '            ', 'String', ' ', 'lastDepartment', ' ', '=', ' ', 'departments', '.', 'last', '(', ')', ';', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,Commerce.java,productName,"    public String productName() {
        return StringUtils.join(new String[] { fakeValuesService.fetchString(""commerce.product_name.adjective""),
                fakeValuesService.fetchString(""commerce.product_name.material""),",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public String productName() {
        return StringUtils.join(new String[] { fakeValuesService.fetchString(""commerce.product_name.adjective""),
                fakeValuesService.fetchString(""commerce.product_name.material""),
","['    ', 'public', ' ', 'String', ' ', 'productName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'new', ' ', 'String', '[', ']', ' ', '{', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'commerce.product_name.adjective', '""', ')', ',', '\n', '                ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'commerce.product_name.material', '""', ')', ',', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,Commerce.java,material,"    public String material() {
        return fakeValuesService.fetchString(""commerce.product_name.material"");
    }",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public String material() {
        return fakeValuesService.fetchString(""commerce.product_name.material"");
    }
","['    ', 'public', ' ', 'String', ' ', 'material', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'commerce.product_name.material', '""', ')', ';', '\n', '    ', '}', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,CommerceTest.java,testColor,"    public void testColor() {
        assertThat(faker.commerce().color(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public void testColor() {
        assertThat(faker.commerce().color(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testColor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'color', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,CommerceTest.java,testDepartment,"    public void testDepartment() {
        assertThat(faker.commerce().department(), matchesRegularExpression(""(\\w+(, | & )?){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public void testDepartment() {
        assertThat(faker.commerce().department(), matchesRegularExpression(""(\\w+(, | & )?){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDepartment', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'department', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+(, | & )?){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,CommerceTest.java,testProductName,"    public void testProductName() {
        assertThat(faker.commerce().productName(), matchesRegularExpression(""(\\w+ ?){3,4}""));
    }",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public void testProductName() {
        assertThat(faker.commerce().productName(), matchesRegularExpression(""(\\w+ ?){3,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testProductName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'productName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){3,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10bcf44dee88cb3febd428935d0606d25a92ac90,CommerceTest.java,testMaterial,"    public void testMaterial() {
        assertThat(faker.commerce().material(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/10bcf44dee88cb3febd428935d0606d25a92ac90,"    public void testMaterial() {
        assertThat(faker.commerce().material(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMaterial', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'material', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,Faker.java,regexify,"    public String regexify(String regex) {
        return fakeValuesService.regexify(regex);
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public String regexify(String regex) {
        return fakeValuesService.regexify(regex);
    }
","['    ', 'public', ' ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'regexify', '(', 'regex', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,Finance.java,bic,"    public String bic() {
        return fakeValuesService.regexify(""([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?"");
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public String bic() {
        return fakeValuesService.regexify(""([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?"");
    }
","['    ', 'public', ' ', 'String', ' ', 'bic', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'regexify', '(', '""', '([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?', '""', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesService.java,regexify,"    public String regexify(String regex) {
        return new Generex(regex).random();
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public String regexify(String regex) {
        return new Generex(regex).random();
    }
","['    ', 'public', ' ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'Generex', '(', 'regex', ')', '.', 'random', '(', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,fetch,"    Object fetch(String key);

    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    Object fetch(String key);

    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,fetchString,"    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,safeFetch,"    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,fetchObject,"    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,numerify,"    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    String numerify(String numberString);

    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,bothify,"    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    String bothify(String string);

    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,letterify,"    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    String letterify(String letterString);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakeValuesServiceInterface.java,regexify,"    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateNumbers,"    public void regexifyShouldGenerateNumbers() {
        assertThat(faker.regexify(""\\d""), matchesRegularExpression(""\\d""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateNumbers() {
        assertThat(faker.regexify(""\\d""), matchesRegularExpression(""\\d""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateNumbers', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '\\\\', 'd', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateLetters,"    public void regexifyShouldGenerateLetters() {
        assertThat(faker.regexify(""\\w""), matchesRegularExpression(""\\w""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateLetters() {
        assertThat(faker.regexify(""\\w""), matchesRegularExpression(""\\w""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateLetters', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '\\\\', 'w', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateAlternations,"    public void regexifyShouldGenerateAlternations() {
        assertThat(faker.regexify(""(a|b)""), matchesRegularExpression(""(a|b)""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateAlternations() {
        assertThat(faker.regexify(""(a|b)""), matchesRegularExpression(""(a|b)""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateAlternations', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '(a|b)', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(a|b)', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateBasicCharacterClasses,"    public void regexifyShouldGenerateBasicCharacterClasses() {
        assertThat(faker.regexify(""(aeiou)""), matchesRegularExpression(""(aeiou)""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateBasicCharacterClasses() {
        assertThat(faker.regexify(""(aeiou)""), matchesRegularExpression(""(aeiou)""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateBasicCharacterClasses', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '(aeiou)', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(aeiou)', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateCharacterClassRanges,"    public void regexifyShouldGenerateCharacterClassRanges() {
        assertThat(faker.regexify(""[a-z]""), matchesRegularExpression(""[a-z]""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateCharacterClassRanges() {
        assertThat(faker.regexify(""[a-z]""), matchesRegularExpression(""[a-z]""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateCharacterClassRanges', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '[a-z]', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z]', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateMultipleCharacterClassRanges,"    public void regexifyShouldGenerateMultipleCharacterClassRanges() {
        assertThat(faker.regexify(""[a-z1-9]""), matchesRegularExpression(""[a-z1-9]""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateMultipleCharacterClassRanges() {
        assertThat(faker.regexify(""[a-z1-9]""), matchesRegularExpression(""[a-z1-9]""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateMultipleCharacterClassRanges', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '[a-z1-9]', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z1-9]', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateSingleCharacterQuantifiers,"    public void regexifyShouldGenerateSingleCharacterQuantifiers() {
        assertThat(faker.regexify(""a*b+c?""), matchesRegularExpression(""a*b+c?""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateSingleCharacterQuantifiers() {
        assertThat(faker.regexify(""a*b+c?""), matchesRegularExpression(""a*b+c?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateSingleCharacterQuantifiers', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', 'a*b+c?', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'a*b+c?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateBracketsQuantifiers,"    public void regexifyShouldGenerateBracketsQuantifiers() {
        assertThat(faker.regexify(""a{2}""), matchesRegularExpression(""a{2}""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateBracketsQuantifiers() {
        assertThat(faker.regexify(""a{2}""), matchesRegularExpression(""a{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateBracketsQuantifiers', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', 'a{2}', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'a{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateMinMaxQuantifiers,"    public void regexifyShouldGenerateMinMaxQuantifiers() {
        assertThat(faker.regexify(""a{2,3}""), matchesRegularExpression(""a{2,3}""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateMinMaxQuantifiers() {
        assertThat(faker.regexify(""a{2,3}""), matchesRegularExpression(""a{2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateMinMaxQuantifiers', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', 'a{2,3}', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'a{2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateBracketsQuantifiersOnBasicCharacterClasses,"    public void regexifyShouldGenerateBracketsQuantifiersOnBasicCharacterClasses() {
        assertThat(faker.regexify(""[aeiou]{2,3}""), matchesRegularExpression(""[aeiou]{2,3}""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateBracketsQuantifiersOnBasicCharacterClasses() {
        assertThat(faker.regexify(""[aeiou]{2,3}""), matchesRegularExpression(""[aeiou]{2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateBracketsQuantifiersOnBasicCharacterClasses', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '[aeiou]{2,3}', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[aeiou]{2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateBracketsQuantifiersOnCharacterClassRanges,"    public void regexifyShouldGenerateBracketsQuantifiersOnCharacterClassRanges() {
        assertThat(faker.regexify(""[a-z]{2,3}""), matchesRegularExpression(""[a-z]{2,3}""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateBracketsQuantifiersOnCharacterClassRanges() {
        assertThat(faker.regexify(""[a-z]{2,3}""), matchesRegularExpression(""[a-z]{2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateBracketsQuantifiersOnCharacterClassRanges', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '[a-z]{2,3}', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z]{2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateBracketsQuantifiersOnAlternations,"    public void regexifyShouldGenerateBracketsQuantifiersOnAlternations() {
        assertThat(faker.regexify(""(a|b){2,3}""), matchesRegularExpression(""(a|b){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateBracketsQuantifiersOnAlternations() {
        assertThat(faker.regexify(""(a|b){2,3}""), matchesRegularExpression(""(a|b){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateBracketsQuantifiersOnAlternations', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '(a|b){2,3}', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(a|b){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FakerTest.java,regexifyShouldGenerateEscapedCharacters,"    public void regexifyShouldGenerateEscapedCharacters() {
        assertThat(faker.regexify(""\\.\\*\\?\\+""), matchesRegularExpression(""\\.\\*\\?\\+""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void regexifyShouldGenerateEscapedCharacters() {
        assertThat(faker.regexify(""\\.\\*\\?\\+""), matchesRegularExpression(""\\.\\*\\?\\+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateEscapedCharacters', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'regexify', '(', '""', '\\\\', '.', '\\\\', '*', '\\\\', '?', '\\\\', '+', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', '.', '\\\\', '*', '\\\\', '?', '\\\\', '+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d78849986d1ab1c69df6e512a4ecd167626327d4,FinanceTest.java,bic,"    public void bic() {
        assertThat(faker.finance().bic(), matchesRegularExpression(""([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?""));
    }",https://www.github.com/dius/java-faker/commit/d78849986d1ab1c69df6e512a4ecd167626327d4,"    public void bic() {
        assertThat(faker.finance().bic(), matchesRegularExpression(""([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'bic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'finance', '(', ')', '.', 'bic', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,Hacker.java,abbreviation,"    public String abbreviation() {
        return fakeValuesService.fetchString(""hacker.abbreviation"");
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public String abbreviation() {
        return fakeValuesService.fetchString(""hacker.abbreviation"");
    }
","['    ', 'public', ' ', 'String', ' ', 'abbreviation', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'hacker.abbreviation', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,Hacker.java,adjective,"    public String adjective() {
        return fakeValuesService.fetchString(""hacker.adjective"");
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public String adjective() {
        return fakeValuesService.fetchString(""hacker.adjective"");
    }
","['    ', 'public', ' ', 'String', ' ', 'adjective', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'hacker.adjective', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,Hacker.java,noun,"    public String noun() {
        return fakeValuesService.fetchString(""hacker.noun"");
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public String noun() {
        return fakeValuesService.fetchString(""hacker.noun"");
    }
","['    ', 'public', ' ', 'String', ' ', 'noun', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'hacker.noun', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,Hacker.java,verb,"    public String verb() {
        return fakeValuesService.fetchString(""hacker.verb"");
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public String verb() {
        return fakeValuesService.fetchString(""hacker.verb"");
    }
","['    ', 'public', ' ', 'String', ' ', 'verb', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'hacker.verb', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,Hacker.java,ingverb,"    public String ingverb() {
        return fakeValuesService.fetchString(""hacker.ingverb"");
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public String ingverb() {
        return fakeValuesService.fetchString(""hacker.ingverb"");
    }
","['    ', 'public', ' ', 'String', ' ', 'ingverb', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'hacker.ingverb', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,HackerTest.java,testAbbreviation,"    public void testAbbreviation() {
        assertThat(faker.hacker().abbreviation(), matchesRegularExpression(""[A-Z]{2,4}""));
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public void testAbbreviation() {
        assertThat(faker.hacker().abbreviation(), matchesRegularExpression(""[A-Z]{2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAbbreviation', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hacker', '(', ')', '.', 'abbreviation', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z]{2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,HackerTest.java,testAdjective,"    public void testAdjective() {
        assertThat(faker.hacker().adjective(), matchesRegularExpression(""(\\w+[- ]?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public void testAdjective() {
        assertThat(faker.hacker().adjective(), matchesRegularExpression(""(\\w+[- ]?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAdjective', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hacker', '(', ')', '.', 'adjective', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[- ]?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,HackerTest.java,testNoun,"    public void testNoun() {
        assertThat(faker.hacker().noun(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public void testNoun() {
        assertThat(faker.hacker().noun(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNoun', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hacker', '(', ')', '.', 'noun', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,HackerTest.java,testVerb,"    public void testVerb() {
        assertThat(faker.hacker().verb(), matchesRegularExpression(""\\w+( \\w+)?""));
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public void testVerb() {
        assertThat(faker.hacker().verb(), matchesRegularExpression(""\\w+( \\w+)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testVerb', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hacker', '(', ')', '.', 'verb', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+( ', '\\\\', 'w+)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d68335a1881e1abc4286598c53bc481c3810306,HackerTest.java,testIngverb,"    public void testIngverb() {
        assertThat(faker.hacker().ingverb(), matchesRegularExpression(""\\w+ing( \\w+)?""));
    }",https://www.github.com/dius/java-faker/commit/6d68335a1881e1abc4286598c53bc481c3810306,"    public void testIngverb() {
        assertThat(faker.hacker().ingverb(), matchesRegularExpression(""\\w+ing( \\w+)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testIngverb', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hacker', '(', ')', '.', 'ingverb', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+ing( ', '\\\\', 'w+)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a7dfa649eb87b9fac05bb2d136febbcf91c58f33,AppTest.java,testName,"    public void testName() {
        assertThat(faker.app().name(), matchesRegularExpression(""[\\w-]+""));
    }",https://www.github.com/dius/java-faker/commit/a7dfa649eb87b9fac05bb2d136febbcf91c58f33,"    public void testName() {
        assertThat(faker.app().name(), matchesRegularExpression(""[\\w-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'app', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', 'w-]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,Superhero.java,name,"    public String name() {
        return fakeValueService.resolve(""superhero.name"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public String name() {
        return fakeValueService.resolve(""superhero.name"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'resolve', '(', '""', 'superhero.name', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,Superhero.java,prefix,"    public String prefix() {
        return fakeValueService.fetchString(""superhero.prefix"");
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public String prefix() {
        return fakeValueService.fetchString(""superhero.prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'fetchString', '(', '""', 'superhero.prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,Superhero.java,suffix,"    public String suffix() {
        return fakeValueService.fetchString(""superhero.suffix"");
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public String suffix() {
        return fakeValueService.fetchString(""superhero.suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'fetchString', '(', '""', 'superhero.suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,Superhero.java,power,"    public String power() {
        return fakeValueService.fetchString(""superhero.power"");
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public String power() {
        return fakeValueService.fetchString(""superhero.power"");
    }
","['    ', 'public', ' ', 'String', ' ', 'power', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'fetchString', '(', '""', 'superhero.power', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,Superhero.java,descriptor,"    public String descriptor() {
        return fakeValueService.fetchString(""superhero.descriptor"");
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public String descriptor() {
        return fakeValueService.fetchString(""superhero.descriptor"");
    }
","['    ', 'public', ' ', 'String', ' ', 'descriptor', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'fetchString', '(', '""', 'superhero.descriptor', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,SuperheroTest.java,testName,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z -]+""));
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,SuperheroTest.java,testPrefix,"    public void testPrefix() {
        assertThat(faker.superhero().prefix(), matchesRegularExpression(""[A-Za-z -]+""));
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public void testPrefix() {
        assertThat(faker.superhero().prefix(), matchesRegularExpression(""[A-Za-z -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPrefix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'prefix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,SuperheroTest.java,testSuffix,"    public void testSuffix() {
        assertThat(faker.superhero().suffix(), matchesRegularExpression(""[A-Za-z -]+""));
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public void testSuffix() {
        assertThat(faker.superhero().suffix(), matchesRegularExpression(""[A-Za-z -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSuffix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'suffix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,SuperheroTest.java,testPower,"    public void testPower() {
        assertThat(faker.superhero().power(), matchesRegularExpression(""[A-Za-z -]+""));
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public void testPower() {
        assertThat(faker.superhero().power(), matchesRegularExpression(""[A-Za-z -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPower', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'power', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e890e8be1a8afa48435b020b520e2443a0e18d37,SuperheroTest.java,testDescriptor,"    public void testDescriptor() {
        assertThat(faker.superhero().descriptor(), matchesRegularExpression(""[A-Za-z -]+""));
    }",https://www.github.com/dius/java-faker/commit/e890e8be1a8afa48435b020b520e2443a0e18d37,"    public void testDescriptor() {
        assertThat(faker.superhero().descriptor(), matchesRegularExpression(""[A-Za-z -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDescriptor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'descriptor', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,Team.java,name,"    public String name() {
        return fakeValuesService.resolve(""team.name"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public String name() {
        return fakeValuesService.resolve(""team.name"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'team.name', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,Team.java,creature,"    public String creature() {
        return fakeValuesService.fetchString(""team.creature"");
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public String creature() {
        return fakeValuesService.fetchString(""team.creature"");
    }
","['    ', 'public', ' ', 'String', ' ', 'creature', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'team.creature', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,AppTest.java,testName,"    public void testName() {
        assertThat(faker.app().name(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public void testName() {
        assertThat(faker.app().name(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'app', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,HackerTest.java,testNoun,"    public void testNoun() {
        assertThat(faker.hacker().noun(), matchesRegularExpression(""\\w+( \\w+)?""));
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public void testNoun() {
        assertThat(faker.hacker().noun(), matchesRegularExpression(""\\w+( \\w+)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNoun', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hacker', '(', ')', '.', 'noun', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+( ', '\\\\', 'w+)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,TeamTest.java,testName,"    public void testName() {
        assertThat(faker.team().name(), matchesRegularExpression(""(\\w+( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public void testName() {
        assertThat(faker.team().name(), matchesRegularExpression(""(\\w+( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'team', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,TeamTest.java,testCreature,"    public void testCreature() {
        assertThat(faker.team().creature(), matchesRegularExpression(""\\w+( \\w+)?""));
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public void testCreature() {
        assertThat(faker.team().creature(), matchesRegularExpression(""\\w+( \\w+)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCreature', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'team', '(', ')', '.', 'creature', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+( ', '\\\\', 'w+)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,TeamTest.java,testState,"    public void testState() {
        assertThat(faker.team().state(), matchesRegularExpression(""(\\w+( )?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    public void testState() {
        assertThat(faker.team().state(), matchesRegularExpression(""(\\w+( )?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testState', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'team', '(', ')', '.', 'state', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+( )?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4fe03485c850e556c90b80ce555433d4b715b8d6,FakerIT.java,testAllMethodsThatReturnStringsActuallyReturnStrings,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws IllegalAccessException, InvocationTargetException {
        @SuppressWarnings(""unchecked"")
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            final Object returnValue = method.invoke(object);",https://www.github.com/dius/java-faker/commit/4fe03485c850e556c90b80ce555433d4b715b8d6,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws IllegalAccessException, InvocationTargetException {
        @SuppressWarnings(""unchecked"")
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            final Object returnValue = method.invoke(object);
","['    ', 'private', ' ', 'void', ' ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'Object', ' ', 'object', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'InvocationTargetException', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'Set', '<', 'Method', '>', ' ', 'methodsThatReturnStrings', ' ', '=', ' ', 'getAllMethods', '(', 'object', '.', 'getClass', '(', ')', ',', '\n', '                ', 'withModifier', '(', 'Modifier', '.', 'PUBLIC', ')', ',', '\n', '                ', 'withReturnType', '(', 'String', '.', 'class', ')', ',', '\n', '                ', 'withParametersCount', '(', '0', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Method', ' ', 'method', ' ', ':', ' ', 'methodsThatReturnStrings', ')', ' ', '{', '\n', '            ', 'final', ' ', 'Object', ' ', 'returnValue', ' ', '=', ' ', 'method', '.', 'invoke', '(', 'object', ')', ';', '\n']"
master,4cda6064e5f1acb952463302545667c9b0ffda51,Bool.java,bool,"    public boolean bool() {
        return randomService.nextBoolean();
    }",https://www.github.com/dius/java-faker/commit/4cda6064e5f1acb952463302545667c9b0ffda51,"    public boolean bool() {
        return randomService.nextBoolean();
    }
","['    ', 'public', ' ', 'boolean', ' ', 'bool', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomService', '.', 'nextBoolean', '(', ')', ';', '\n', '    ', '}', '\n']"
master,4cda6064e5f1acb952463302545667c9b0ffda51,BoolTest.java,testBool,"    public void testBool() {
        assertThat(faker.bool().bool(), isOneOf(true, false));
    }",https://www.github.com/dius/java-faker/commit/4cda6064e5f1acb952463302545667c9b0ffda51,"    public void testBool() {
        assertThat(faker.bool().bool(), isOneOf(true, false));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBool', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bool', '(', ')', '.', 'bool', '(', ')', ',', ' ', 'isOneOf', '(', 'true', ',', ' ', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0342da671c07976d3e8995ae1f8c2fb6255b98f4,Commerce.java,price,"    public String price(double min, double max) {
        double price =  min + (randomService.nextDouble() * (max - min));
        return new DecimalFormat(""#0.00"").format(price);
    }",https://www.github.com/dius/java-faker/commit/0342da671c07976d3e8995ae1f8c2fb6255b98f4,"    public String price(double min, double max) {
        double price =  min + (randomService.nextDouble() * (max - min));
        return new DecimalFormat(""#0.00"").format(price);
    }
","['    ', 'public', ' ', 'String', ' ', 'price', '(', 'double', ' ', 'min', ',', ' ', 'double', ' ', 'max', ')', ' ', '{', '\n', '        ', 'double', ' ', 'price', ' ', '=', '  ', 'min', ' ', '+', ' ', '(', 'randomService', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '(', 'max', ' ', '-', ' ', 'min', ')', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'DecimalFormat', '(', '""', '#0.00', '""', ')', '.', 'format', '(', 'price', ')', ';', '\n', '    ', '}', '\n']"
master,0342da671c07976d3e8995ae1f8c2fb6255b98f4,CommerceTest.java,testPrice,"    public void testPrice() {
        assertThat(faker.commerce().price(), matchesRegularExpression(""\\d{1,3}\\"" + decimalSeparator + ""\\d{2}""));
    }",https://www.github.com/dius/java-faker/commit/0342da671c07976d3e8995ae1f8c2fb6255b98f4,"    public void testPrice() {
        assertThat(faker.commerce().price(), matchesRegularExpression(""\\d{1,3}\\"" + decimalSeparator + ""\\d{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPrice', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'price', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{1,3}', '\\\\', '""', ' ', '+', ' ', 'decimalSeparator', ' ', '+', ' ', '""', '\\\\', 'd{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0342da671c07976d3e8995ae1f8c2fb6255b98f4,CommerceTest.java,testPriceMinMax,"    public void testPriceMinMax() {
        assertThat(faker.commerce().price(100, 1000), matchesRegularExpression(""\\d{3,4}\\"" + decimalSeparator + ""\\d{2}""));
    }",https://www.github.com/dius/java-faker/commit/0342da671c07976d3e8995ae1f8c2fb6255b98f4,"    public void testPriceMinMax() {
        assertThat(faker.commerce().price(100, 1000), matchesRegularExpression(""\\d{3,4}\\"" + decimalSeparator + ""\\d{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPriceMinMax', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'price', '(', '100', ',', ' ', '1000', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{3,4}', '\\\\', '""', ' ', '+', ' ', 'decimalSeparator', ' ', '+', ' ', '""', '\\\\', 'd{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,Beer.java,name,"    public String name() {
        return fakeValuesService.fetchString(""beer.name"");
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public String name() {
        return fakeValuesService.fetchString(""beer.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'beer.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,Beer.java,style,"    public String style() {
        return fakeValuesService.fetchString(""beer.style"");
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public String style() {
        return fakeValuesService.fetchString(""beer.style"");
    }
","['    ', 'public', ' ', 'String', ' ', 'style', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'beer.style', '""', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,Beer.java,hop,"    public String hop() {
        return fakeValuesService.fetchString(""beer.hop"");
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public String hop() {
        return fakeValuesService.fetchString(""beer.hop"");
    }
","['    ', 'public', ' ', 'String', ' ', 'hop', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'beer.hop', '""', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,Beer.java,yeast,"    public String yeast() {
        return fakeValuesService.fetchString(""beer.yeast"");
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public String yeast() {
        return fakeValuesService.fetchString(""beer.yeast"");
    }
","['    ', 'public', ' ', 'String', ' ', 'yeast', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'beer.yeast', '""', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,Beer.java,malt,"    public String malt() {
        return fakeValuesService.fetchString(""beer.malt"");
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public String malt() {
        return fakeValuesService.fetchString(""beer.malt"");
    }
","['    ', 'public', ' ', 'String', ' ', 'malt', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'beer.malt', '""', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,BeerTest.java,testStyle,"    public void testStyle() {
        assertThat(faker.beer().style(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public void testStyle() {
        assertThat(faker.beer().style(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStyle', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'beer', '(', ')', '.', 'style', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,BeerTest.java,testHop,"    public void testHop() {
        assertThat(faker.beer().hop(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public void testHop() {
        assertThat(faker.beer().hop(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHop', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'beer', '(', ')', '.', 'hop', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,BeerTest.java,testMalt,"    public void testMalt() {
        assertThat(faker.beer().malt(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public void testMalt() {
        assertThat(faker.beer().malt(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMalt', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'beer', '(', ')', '.', 'malt', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,81c672db239007595d88094236016e38d7d18385,BeerTest.java,testYeast,"    public void testYeast() {
        assertThat(faker.beer().yeast(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/81c672db239007595d88094236016e38d7d18385,"    public void testYeast() {
        assertThat(faker.beer().yeast(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testYeast', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'beer', '(', ')', '.', 'yeast', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,762d963480e260e596f885805ce42cd9767e5fa1,Options.java,option,"    public <E extends Enum<E>> E option(Class<E> enumeration) {
        E[] enumConstants = enumeration.getEnumConstants();
        return enumConstants[randomService.nextInt(enumConstants.length)];
    }",https://www.github.com/dius/java-faker/commit/762d963480e260e596f885805ce42cd9767e5fa1,"    public <E extends Enum<E>> E option(Class<E> enumeration) {
        E[] enumConstants = enumeration.getEnumConstants();
        return enumConstants[randomService.nextInt(enumConstants.length)];
    }
","['    ', 'public', ' ', '<', 'E', ' ', 'extends', ' ', 'Enum', '<', 'E', '>', '>', ' ', 'E', ' ', 'option', '(', 'Class', '<', 'E', '>', ' ', 'enumeration', ')', ' ', '{', '\n', '        ', 'E', '[', ']', ' ', 'enumConstants', ' ', '=', ' ', 'enumeration', '.', 'getEnumConstants', '(', ')', ';', '\n', '        ', 'return', ' ', 'enumConstants', '[', 'randomService', '.', 'nextInt', '(', 'enumConstants', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,762d963480e260e596f885805ce42cd9767e5fa1,OptionsTest.java,testOptionWithEnum,"    public void testOptionWithEnum() {
        assertThat(faker.options().option(Day.class), isOneOf(Day.values()));
    }",https://www.github.com/dius/java-faker/commit/762d963480e260e596f885805ce42cd9767e5fa1,"    public void testOptionWithEnum() {
        assertThat(faker.options().option(Day.class), isOneOf(Day.values()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOptionWithEnum', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'Day', '.', 'class', ')', ',', ' ', 'isOneOf', '(', 'Day', '.', 'values', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9c9e92b05c1c3335ffc936066b940c1bfe367ace,Team.java,sport,"    public String sport() {
        return fakeValuesService.fetchString(""team.sport"");
    }",https://www.github.com/dius/java-faker/commit/9c9e92b05c1c3335ffc936066b940c1bfe367ace,"    public String sport() {
        return fakeValuesService.fetchString(""team.sport"");
    }
","['    ', 'public', ' ', 'String', ' ', 'sport', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'team.sport', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9c9e92b05c1c3335ffc936066b940c1bfe367ace,TeamTest.java,testSport,"    public void testSport() {
        assertThat(faker.team().sport(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/9c9e92b05c1c3335ffc936066b940c1bfe367ace,"    public void testSport() {
        assertThat(faker.team().sport(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSport', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'team', '(', ')', '.', 'sport', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,Name.java,nameWithMiddle,"    public String nameWithMiddle() {
        return fakeValuesService.resolve(""name.name_with_middle"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public String nameWithMiddle() {
        return fakeValuesService.resolve(""name.name_with_middle"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'nameWithMiddle', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'name.name_with_middle', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,Name.java,title,"    public String title() {
        return StringUtils.join(new String[] { fakeValuesService.fetchString(""name.title.descriptor""),
                fakeValuesService.fetchString(""name.title.level""), fakeValuesService.fetchString(""name.title.job"") }, "" "");",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public String title() {
        return StringUtils.join(new String[] { fakeValuesService.fetchString(""name.title.descriptor""),
                fakeValuesService.fetchString(""name.title.level""), fakeValuesService.fetchString(""name.title.job"") }, "" "");
","['    ', 'public', ' ', 'String', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'new', ' ', 'String', '[', ']', ' ', '{', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.title.descriptor', '""', ')', ',', '\n', '                ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.title.level', '""', ')', ',', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'name.title.job', '""', ')', ' ', '}', ',', ' ', '""', ' ', '""', ')', ';', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testName,"    public void testName() {
        assertThat(faker.name().name(), matchesRegularExpression(""(\\w+\\.?( )?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testName() {
        assertThat(faker.name().name(), matchesRegularExpression(""(\\w+\\.?( )?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.?( )?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testNameWithMiddle,"    public void testNameWithMiddle() {
        assertThat(faker.name().nameWithMiddle(), matchesRegularExpression(""(\\w+\\.?( )?){3,4}""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testNameWithMiddle() {
        assertThat(faker.name().nameWithMiddle(), matchesRegularExpression(""(\\w+\\.?( )?){3,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNameWithMiddle', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'nameWithMiddle', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.?( )?){3,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testFullName,"    public void testFullName() {
        assertThat(faker.name().fullName(), matchesRegularExpression(""(\\w+\\.?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testFullName() {
        assertThat(faker.name().fullName(), matchesRegularExpression(""(\\w+\\.?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFullName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'fullName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testFirstName,"    public void testFirstName() {
        assertThat(faker.name().firstName(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testFirstName() {
        assertThat(faker.name().firstName(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFirstName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'firstName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testLastName,"    public void testLastName() {
        assertThat(faker.name().lastName(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testLastName() {
        assertThat(faker.name().lastName(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLastName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'lastName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testPrefix,"    public void testPrefix() {
        assertThat(faker.name().prefix(), matchesRegularExpression(""\\w+\\.?""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testPrefix() {
        assertThat(faker.name().prefix(), matchesRegularExpression(""\\w+\\.?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPrefix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'prefix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '\\\\', '.?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testSuffix,"    public void testSuffix() {
        assertThat(faker.name().suffix(), matchesRegularExpression(""\\w+\\.?""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testSuffix() {
        assertThat(faker.name().suffix(), matchesRegularExpression(""\\w+\\.?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSuffix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'suffix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '\\\\', '.?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1488435f7ccaec433606219e11e41ff91b19baba,NameTest.java,testTitle,"    public void testTitle() {
        assertThat(faker.name().title(), matchesRegularExpression(""(\\w+\\.?( )?){3}""));
    }",https://www.github.com/dius/java-faker/commit/1488435f7ccaec433606219e11e41ff91b19baba,"    public void testTitle() {
        assertThat(faker.name().title(), matchesRegularExpression(""(\\w+\\.?( )?){3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testTitle', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'title', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.?( )?){3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3fd9b22dbf7562931b30fde589fb2169205140b0,ChuckNorris.java,fact,"    public String fact() {
        return fakeValuesService.fetchString(""chuck_norris.fact"");
    }",https://www.github.com/dius/java-faker/commit/3fd9b22dbf7562931b30fde589fb2169205140b0,"    public String fact() {
        return fakeValuesService.fetchString(""chuck_norris.fact"");
    }
","['    ', 'public', ' ', 'String', ' ', 'fact', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'chuck_norris.fact', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3fd9b22dbf7562931b30fde589fb2169205140b0,Faker.java,chuckNorris,"    public ChuckNorris chuckNorris() {
        return chuckNorris;
    }",https://www.github.com/dius/java-faker/commit/3fd9b22dbf7562931b30fde589fb2169205140b0,"    public ChuckNorris chuckNorris() {
        return chuckNorris;
    }
","['    ', 'public', ' ', 'ChuckNorris', ' ', 'chuckNorris', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'chuckNorris', ';', '\n', '    ', '}', '\n']"
master,3fd9b22dbf7562931b30fde589fb2169205140b0,ChuckNorrisTest.java,testFact,"    public void testFact() {
        assertThat(faker.chuckNorris().fact(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/3fd9b22dbf7562931b30fde589fb2169205140b0,"    public void testFact() {
        assertThat(faker.chuckNorris().fact(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFact', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'chuckNorris', '(', ')', '.', 'fact', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,Lorem.java,character,"    public char character() {
        return characters(1).charAt(0);
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public char character() {
        return characters(1).charAt(0);
    }
","['    ', 'public', ' ', 'char', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '1', ')', '.', 'charAt', '(', '0', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,Lorem.java,characters,"    public String characters() {
        return characters(255);
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public String characters() {
        return characters(255);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '255', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,Lorem.java,characters,"    public String characters(int fixedNumberOfCharacters) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            buffer[i] = characters[randomService.nextInt(characters.length)];
        }
        return new String(buffer);
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public String characters(int fixedNumberOfCharacters) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            buffer[i] = characters[randomService.nextInt(characters.length)];
        }
        return new String(buffer);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'fixedNumberOfCharacters', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'fixedNumberOfCharacters', ' ', '<', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', '""', ';', '\n', '        ', '}', '\n', '        ', 'char', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'char', '[', 'fixedNumberOfCharacters', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'buffer', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'buffer', '[', 'i', ']', ' ', '=', ' ', 'characters', '[', 'randomService', '.', 'nextInt', '(', 'characters', '.', 'length', ')', ']', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'buffer', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,BeerTest.java,testHop,"    public void testHop() {
        assertThat(faker.beer().hop(), matchesRegularExpression(""[A-Za-z'()\\. 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testHop() {
        assertThat(faker.beer().hop(), matchesRegularExpression(""[A-Za-z'()\\. 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHop', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'beer', '(', ')', '.', 'hop', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'()"", '\\\\', '. 0-9-]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,LoremTest.java,wordShouldNotBeNullOrEmpty,"    public void wordShouldNotBeNullOrEmpty() {
        assertThat(faker.lorem().word(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void wordShouldNotBeNullOrEmpty() {
        assertThat(faker.lorem().word(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'wordShouldNotBeNullOrEmpty', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'word', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,LoremTest.java,testCharacter,"    public void testCharacter() {
        assertThat(String.valueOf(faker.lorem().character()), matchesRegularExpression(""[a-z\\d]{1}""));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testCharacter() {
        assertThat(String.valueOf(faker.lorem().character()), matchesRegularExpression(""[a-z\\d]{1}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharacter', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'String', '.', 'valueOf', '(', 'faker', '.', 'lorem', '(', ')', '.', 'character', '(', ')', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{1}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,LoremTest.java,testCharacters,"    public void testCharacters() {
        assertThat(faker.lorem().characters(), matchesRegularExpression(""[a-z\\d]{255}""));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testCharacters() {
        assertThat(faker.lorem().characters(), matchesRegularExpression(""[a-z\\d]{255}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharacters', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{255}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,LoremTest.java,testCharactersWithLength,"    public void testCharactersWithLength() {
        assertThat(faker.lorem().characters(2), matchesRegularExpression(""[a-z\\d]{2}""));
        assertThat(faker.lorem().characters(500), matchesRegularExpression(""[a-z\\d]{500}""));
        assertThat(faker.lorem().characters(0), isEmptyString());
        assertThat(faker.lorem().characters(-1), isEmptyString());
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testCharactersWithLength() {
        assertThat(faker.lorem().characters(2), matchesRegularExpression(""[a-z\\d]{2}""));
        assertThat(faker.lorem().characters(500), matchesRegularExpression(""[a-z\\d]{500}""));
        assertThat(faker.lorem().characters(0), isEmptyString());
        assertThat(faker.lorem().characters(-1), isEmptyString());
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersWithLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '2', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{2}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '500', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{500}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '0', ')', ',', ' ', 'isEmptyString', '(', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '-', '1', ')', ',', ' ', 'isEmptyString', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,NameTest.java,testName,"    public void testName() {
        assertThat(faker.name().name(), matchesRegularExpression(""([\\w']+\\.?( )?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testName() {
        assertThat(faker.name().name(), matchesRegularExpression(""([\\w']+\\.?( )?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,NameTest.java,testNameWithMiddle,"    public void testNameWithMiddle() {
        assertThat(faker.name().nameWithMiddle(), matchesRegularExpression(""([\\w']+\\.?( )?){3,4}""));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testNameWithMiddle() {
        assertThat(faker.name().nameWithMiddle(), matchesRegularExpression(""([\\w']+\\.?( )?){3,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNameWithMiddle', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'nameWithMiddle', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){3,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,24c84094f55a466c23c16e8604a53935c02bae0c,NameTest.java,testFullName,"    public void testFullName() {
        assertThat(faker.name().fullName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/24c84094f55a466c23c16e8604a53935c02bae0c,"    public void testFullName() {
        assertThat(faker.name().fullName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFullName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'fullName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,Faker.java,shakespeare,"    public Shakespeare shakespeare() {
        return shakespeare;
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public Shakespeare shakespeare() {
        return shakespeare;
    }
","['    ', 'public', ' ', 'Shakespeare', ' ', 'shakespeare', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'shakespeare', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,Shakespeare.java,hamletQuote,"    public String hamletQuote() {
        return randomElement(hamletQuotes);
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public String hamletQuote() {
        return randomElement(hamletQuotes);
    }
","['    ', 'public', ' ', 'String', ' ', 'hamletQuote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomElement', '(', 'hamletQuotes', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,Shakespeare.java,asYouLikeItQuote,"    public String asYouLikeItQuote() {
        return randomElement(asYouLikeItQuotes);
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public String asYouLikeItQuote() {
        return randomElement(asYouLikeItQuotes);
    }
","['    ', 'public', ' ', 'String', ' ', 'asYouLikeItQuote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomElement', '(', 'asYouLikeItQuotes', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,Shakespeare.java,kingRichardIIIQuote,"    public String kingRichardIIIQuote() {
        return randomElement(kingRichardIIIQuotes);
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public String kingRichardIIIQuote() {
        return randomElement(kingRichardIIIQuotes);
    }
","['    ', 'public', ' ', 'String', ' ', 'kingRichardIIIQuote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomElement', '(', 'kingRichardIIIQuotes', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,Shakespeare.java,romeoAndJulietQuote,"    public String romeoAndJulietQuote() {
        return randomElement(romeoAndJulietQuotes);
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public String romeoAndJulietQuote() {
        return randomElement(romeoAndJulietQuotes);
    }
","['    ', 'public', ' ', 'String', ' ', 'romeoAndJulietQuote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomElement', '(', 'romeoAndJulietQuotes', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,Shakespeare.java,randomElement,"    private String randomElement(String[] values) {
        return values[randomService.nextInt(values.length)];
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    private String randomElement(String[] values) {
        return values[randomService.nextInt(values.length)];
    }
","['    ', 'private', ' ', 'String', ' ', 'randomElement', '(', 'String', '[', ']', ' ', 'values', ')', ' ', '{', '\n', '        ', 'return', ' ', 'values', '[', 'randomService', '.', 'nextInt', '(', 'values', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,ShakespeareTest.java,testHamletQuote,"    public void testHamletQuote() {
        assertThat(faker.shakespeare().hamletQuote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public void testHamletQuote() {
        assertThat(faker.shakespeare().hamletQuote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHamletQuote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'shakespeare', '(', ')', '.', 'hamletQuote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,ShakespeareTest.java,testAsYouLikeItQuote,"    public void testAsYouLikeItQuote() {
        assertThat(faker.shakespeare().asYouLikeItQuote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public void testAsYouLikeItQuote() {
        assertThat(faker.shakespeare().asYouLikeItQuote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAsYouLikeItQuote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'shakespeare', '(', ')', '.', 'asYouLikeItQuote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,ShakespeareTest.java,testKingRichardIIIQuote,"    public void testKingRichardIIIQuote() {
        assertThat(faker.shakespeare().kingRichardIIIQuote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public void testKingRichardIIIQuote() {
        assertThat(faker.shakespeare().kingRichardIIIQuote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testKingRichardIIIQuote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'shakespeare', '(', ')', '.', 'kingRichardIIIQuote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,677a39ffceea457556b4bb2ee558cb335381f8e2,ShakespeareTest.java,testRomeoAndJulietQuote,"    public void testRomeoAndJulietQuote() {
        assertThat(faker.shakespeare().romeoAndJulietQuote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/677a39ffceea457556b4bb2ee558cb335381f8e2,"    public void testRomeoAndJulietQuote() {
        assertThat(faker.shakespeare().romeoAndJulietQuote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRomeoAndJulietQuote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'shakespeare', '(', ')', '.', 'romeoAndJulietQuote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,Crypto.java,md5,"    public String md5() {
        return generateString(""MD5"");
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public String md5() {
        return generateString(""MD5"");
    }
","['    ', 'public', ' ', 'String', ' ', 'md5', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'generateString', '(', '""', 'MD5', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,Crypto.java,sha1,"    public String sha1() {
        return generateString(""SHA-1"");
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public String sha1() {
        return generateString(""SHA-1"");
    }
","['    ', 'public', ' ', 'String', ' ', 'sha1', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'generateString', '(', '""', 'SHA-1', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,Crypto.java,sha256,"    public String sha256() {
        return generateString(""SHA-256"");
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public String sha256() {
        return generateString(""SHA-256"");
    }
","['    ', 'public', ' ', 'String', ' ', 'sha256', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'generateString', '(', '""', 'SHA-256', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,Crypto.java,sha512,"    public String sha512() {
        return generateString(""SHA-512"");
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public String sha512() {
        return generateString(""SHA-512"");
    }
","['    ', 'public', ' ', 'String', ' ', 'sha512', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'generateString', '(', '""', 'SHA-512', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,Crypto.java,generateString,"    private String generateString(String algorithm) {
        try {
            MessageDigest messageDigest = MessageDigest.getInstance(algorithm);",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    private String generateString(String algorithm) {
        try {
            MessageDigest messageDigest = MessageDigest.getInstance(algorithm);
","['    ', 'private', ' ', 'String', ' ', 'generateString', '(', 'String', ' ', 'algorithm', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'MessageDigest', ' ', 'messageDigest', ' ', '=', ' ', 'MessageDigest', '.', 'getInstance', '(', 'algorithm', ')', ';', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,CryptoTest.java,testMd5,"    public void testMd5() {
        assertThat(faker.crypto().md5(), matchesRegularExpression(""[a-z\\d]+""));
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public void testMd5() {
        assertThat(faker.crypto().md5(), matchesRegularExpression(""[a-z\\d]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMd5', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'crypto', '(', ')', '.', 'md5', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,CryptoTest.java,testSha1,"    public void testSha1() {
        assertThat(faker.crypto().sha1(), matchesRegularExpression(""[a-z\\d]+""));
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public void testSha1() {
        assertThat(faker.crypto().sha1(), matchesRegularExpression(""[a-z\\d]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSha1', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'crypto', '(', ')', '.', 'sha1', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,CryptoTest.java,testSha256,"    public void testSha256() {
        assertThat(faker.crypto().sha256(), matchesRegularExpression(""[a-z\\d]+""));
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public void testSha256() {
        assertThat(faker.crypto().sha256(), matchesRegularExpression(""[a-z\\d]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSha256', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'crypto', '(', ')', '.', 'sha256', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5948d7055cf900091b752d9eabab669562ab640c,CryptoTest.java,testSha512,"    public void testSha512() {
        assertThat(faker.crypto().sha512(), matchesRegularExpression(""[a-z\\d]+""));
    }",https://www.github.com/dius/java-faker/commit/5948d7055cf900091b752d9eabab669562ab640c,"    public void testSha512() {
        assertThat(faker.crypto().sha512(), matchesRegularExpression(""[a-z\\d]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSha512', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'crypto', '(', ')', '.', 'sha512', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,Educator.java,university,"    public String university() {
        return fakeValuesService.fetchString(""educator.name"") + "" "" + fakeValuesService.fetchString(""educator.tertiary.type"");
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public String university() {
        return fakeValuesService.fetchString(""educator.name"") + "" "" + fakeValuesService.fetchString(""educator.tertiary.type"");
    }
","['    ', 'public', ' ', 'String', ' ', 'university', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.name', '""', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.tertiary.type', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,Educator.java,course,"    public String course() {
        return fakeValuesService.fetchString(""educator.tertiary.course.type"") + "" ""
                + fakeValuesService.fetchString(""educator.tertiary.course.subject"");",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public String course() {
        return fakeValuesService.fetchString(""educator.tertiary.course.type"") + "" ""
                + fakeValuesService.fetchString(""educator.tertiary.course.subject"");
","['    ', 'public', ' ', 'String', ' ', 'course', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.tertiary.course.type', '""', ')', ' ', '+', ' ', '""', ' ', '""', '\n', '                ', '+', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.tertiary.course.subject', '""', ')', ';', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,Educator.java,secondarySchool,"    public String secondarySchool() {
        return fakeValuesService.fetchString(""educator.name"") + "" "" + fakeValuesService.fetchString(""educator.secondary"");
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public String secondarySchool() {
        return fakeValuesService.fetchString(""educator.name"") + "" "" + fakeValuesService.fetchString(""educator.secondary"");
    }
","['    ', 'public', ' ', 'String', ' ', 'secondarySchool', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.name', '""', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.secondary', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,Educator.java,campus,"    public String campus() {
        return fakeValuesService.fetchString(""educator.name"") + "" Campus"";
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public String campus() {
        return fakeValuesService.fetchString(""educator.name"") + "" Campus"";
    }
","['    ', 'public', ' ', 'String', ' ', 'campus', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'educator.name', '""', ')', ' ', '+', ' ', '""', ' Campus', '""', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,EducatorTest.java,testUniversity,"    public void testUniversity() {
        assertThat(faker.educator().university(), matchesRegularExpression(""(\\w+\\.? ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public void testUniversity() {
        assertThat(faker.educator().university(), matchesRegularExpression(""(\\w+\\.? ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUniversity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'university', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.? ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,EducatorTest.java,testCourse,"    public void testCourse() {
        assertThat(faker.educator().course(), matchesRegularExpression(""(\\w+\\.? ?){3,6}""));
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public void testCourse() {
        assertThat(faker.educator().course(), matchesRegularExpression(""(\\w+\\.? ?){3,6}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCourse', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'course', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.? ?){3,6}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,EducatorTest.java,testSecondarySchool,"    public void testSecondarySchool() {
        assertThat(faker.educator().secondarySchool(), matchesRegularExpression(""(\\w+\\.? ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public void testSecondarySchool() {
        assertThat(faker.educator().secondarySchool(), matchesRegularExpression(""(\\w+\\.? ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSecondarySchool', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'secondarySchool', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.? ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4d27b00fa9fef910cc6775a566abdad0fbc04fdc,EducatorTest.java,testCampus,"    public void testCampus() {
        assertThat(faker.educator().campus(), matchesRegularExpression(""(\\w+\\.? ?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/4d27b00fa9fef910cc6775a566abdad0fbc04fdc,"    public void testCampus() {
        assertThat(faker.educator().campus(), matchesRegularExpression(""(\\w+\\.? ?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCampus', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'campus', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', '.? ?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,38d0c57fb70b686bd5653b8dd4ab78a57b1e78e3,Lorem.java,characters,"    public String characters(int minimumLength, int maximumLength) {
        return characters(randomService.nextInt(maximumLength - minimumLength) + minimumLength);
    }",https://www.github.com/dius/java-faker/commit/38d0c57fb70b686bd5653b8dd4ab78a57b1e78e3,"    public String characters(int minimumLength, int maximumLength) {
        return characters(randomService.nextInt(maximumLength - minimumLength) + minimumLength);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'randomService', '.', 'nextInt', '(', 'maximumLength', ' ', '-', ' ', 'minimumLength', ')', ' ', '+', ' ', 'minimumLength', ')', ';', '\n', '    ', '}', '\n']"
master,38d0c57fb70b686bd5653b8dd4ab78a57b1e78e3,LoremTest.java,testCharactersMinimumMaximumLength,"    public void testCharactersMinimumMaximumLength() {
        assertThat(faker.lorem().characters(1, 10).length(), allOf(greaterThanOrEqualTo(1), lessThanOrEqualTo(10)));
    }",https://www.github.com/dius/java-faker/commit/38d0c57fb70b686bd5653b8dd4ab78a57b1e78e3,"    public void testCharactersMinimumMaximumLength() {
        assertThat(faker.lorem().characters(1, 10).length(), allOf(greaterThanOrEqualTo(1), lessThanOrEqualTo(10)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersMinimumMaximumLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '1', ',', ' ', '10', ')', '.', 'length', '(', ')', ',', ' ', 'allOf', '(', 'greaterThanOrEqualTo', '(', '1', ')', ',', ' ', 'lessThanOrEqualTo', '(', '10', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e49488a3d5dfbc16a8f170b36107b8d67b6b2b3f,SuperheroTest.java,testName,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z' -]+""));
    }",https://www.github.com/dius/java-faker/commit/e49488a3d5dfbc16a8f170b36107b8d67b6b2b3f,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z' -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z' -]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e49488a3d5dfbc16a8f170b36107b8d67b6b2b3f,SuperheroTest.java,testPower,"    public void testPower() {
        assertThat(faker.superhero().power(), matchesRegularExpression(""[A-Za-z/ -]+""));
    }",https://www.github.com/dius/java-faker/commit/e49488a3d5dfbc16a8f170b36107b8d67b6b2b3f,"    public void testPower() {
        assertThat(faker.superhero().power(), matchesRegularExpression(""[A-Za-z/ -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPower', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'power', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z/ -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e49488a3d5dfbc16a8f170b36107b8d67b6b2b3f,SuperheroTest.java,testDescriptor,"    public void testDescriptor() {
        assertThat(faker.superhero().descriptor(), matchesRegularExpression(""[A-Za-z' -]+""));
    }",https://www.github.com/dius/java-faker/commit/e49488a3d5dfbc16a8f170b36107b8d67b6b2b3f,"    public void testDescriptor() {
        assertThat(faker.superhero().descriptor(), matchesRegularExpression(""[A-Za-z' -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDescriptor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'descriptor', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z' -]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0e3c128d380fe9e3fb1798359b5ab02c3cd299e5,BeerTest.java,testYeast,"    public void testYeast() {
        assertThat(faker.beer().yeast(), matchesRegularExpression(""[\\p{L}'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/0e3c128d380fe9e3fb1798359b5ab02c3cd299e5,"    public void testYeast() {
        assertThat(faker.beer().yeast(), matchesRegularExpression(""[\\p{L}'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testYeast', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'beer', '(', ')', '.', 'yeast', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', ""p{L}'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9e21b6a21f390f20309601cfb90cf35b5f16b686,SuperheroTest.java,testName,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z -/]+""));
    }",https://www.github.com/dius/java-faker/commit/9e21b6a21f390f20309601cfb90cf35b5f16b686,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z -/]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -/]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c4de5eb5af7dc1119fc2335a92694edc85ef2cb0,CompanyTest.java,testBuzzword,"    public void testBuzzword() {
        assertThat(faker.company().buzzword(), matchesRegularExpression(""(\\w+[ /-]?){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/c4de5eb5af7dc1119fc2335a92694edc85ef2cb0,"    public void testBuzzword() {
        assertThat(faker.company().buzzword(), matchesRegularExpression(""(\\w+[ /-]?){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBuzzword', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'buzzword', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ /-]?){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c72d52d241f90e418fa9033bb6f3033422d4c11d,NameTest.java,testLastName,"    public void testLastName() {
        assertThat(faker.name().lastName(), matchesRegularExpression(""[A-Za-z']+""));
    }",https://www.github.com/dius/java-faker/commit/c72d52d241f90e418fa9033bb6f3033422d4c11d,"    public void testLastName() {
        assertThat(faker.name().lastName(), matchesRegularExpression(""[A-Za-z']+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLastName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'lastName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z']+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,Faker.java,university,"    public University university() {
        return university;
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public University university() {
        return university;
    }
","['    ', 'public', ' ', 'University', ' ', 'university', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'university', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,University.java,name,"    public String name() {
        return fakeValueService.resolve(""university.name"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public String name() {
        return fakeValueService.resolve(""university.name"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'resolve', '(', '""', 'university.name', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,University.java,prefix,"    public String prefix() {
        return fakeValueService.fetchString(""university.prefix"");
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public String prefix() {
        return fakeValueService.fetchString(""university.prefix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'fetchString', '(', '""', 'university.prefix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,University.java,suffix,"    public String suffix() {
        return fakeValueService.fetchString(""university.suffix"");
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public String suffix() {
        return fakeValueService.fetchString(""university.suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValueService', '.', 'fetchString', '(', '""', 'university.suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,UniversityTest.java,testName,"    public void testName() {
        assertThat(faker.university().name(), matchesRegularExpression(""[A-Za-z'() ]+""));
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public void testName() {
        assertThat(faker.university().name(), matchesRegularExpression(""[A-Za-z'() ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'university', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,UniversityTest.java,testPrefix,"    public void testPrefix() {
        assertThat(faker.university().prefix(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public void testPrefix() {
        assertThat(faker.university().prefix(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPrefix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'university', '(', ')', '.', 'prefix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9745107b14c133d30a38afa79c537e33324e407a,UniversityTest.java,testSuffix,"    public void testSuffix() {
        assertThat(faker.university().suffix(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/9745107b14c133d30a38afa79c537e33324e407a,"    public void testSuffix() {
        assertThat(faker.university().suffix(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSuffix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'university', '(', ')', '.', 'suffix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,Internet.java,domainName,"    public String domainName() {
        return domainWord() + ""."" + domainSuffix();
    }",https://www.github.com/dius/java-faker/commit/980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,"    public String domainName() {
        return domainWord() + ""."" + domainSuffix();
    }
","['    ', 'public', ' ', 'String', ' ', 'domainName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'domainWord', '(', ')', ' ', '+', ' ', '""', '.', '""', ' ', '+', ' ', 'domainSuffix', '(', ')', ';', '\n', '    ', '}', '\n']"
master,980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,Internet.java,domainWord,"    public String domainWord() {
        return IDN.toASCII(name.lastName().toLowerCase().replaceAll(""'"", """"));
    }",https://www.github.com/dius/java-faker/commit/980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,"    public String domainWord() {
        return IDN.toASCII(name.lastName().toLowerCase().replaceAll(""'"", """"));
    }
","['    ', 'public', ' ', 'String', ' ', 'domainWord', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'IDN', '.', 'toASCII', '(', 'name', '.', 'lastName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,Internet.java,domainSuffix,"    public String domainSuffix() {
        return fakeValuesService.fetchString(""internet.domain_suffix"");
    }",https://www.github.com/dius/java-faker/commit/980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,"    public String domainSuffix() {
        return fakeValuesService.fetchString(""internet.domain_suffix"");
    }
","['    ', 'public', ' ', 'String', ' ', 'domainSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.domain_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,InternetTest.java,testDomainName,"    public void testDomainName() {
        assertThat(faker.internet().domainName(), matchesRegularExpression(""[a-z]+\\.\\w{2,4}""));
    }",https://www.github.com/dius/java-faker/commit/980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,"    public void testDomainName() {
        assertThat(faker.internet().domainName(), matchesRegularExpression(""[a-z]+\\.\\w{2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDomainName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'domainName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z]+', '\\\\', '.', '\\\\', 'w{2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,InternetTest.java,testDomainWord,"    public void testDomainWord() {
        assertThat(faker.internet().domainWord(), matchesRegularExpression(""[a-z]+""));
    }",https://www.github.com/dius/java-faker/commit/980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,"    public void testDomainWord() {
        assertThat(faker.internet().domainWord(), matchesRegularExpression(""[a-z]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDomainWord', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'domainWord', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,InternetTest.java,testDomainSuffix,"    public void testDomainSuffix() {
      assertThat(faker.internet().domainSuffix(), matchesRegularExpression(""\\w{2,4}""));
    }",https://www.github.com/dius/java-faker/commit/980bc8c9904c1f2d6bb6a54d384a4ee9789c74fe,"    public void testDomainSuffix() {
      assertThat(faker.internet().domainSuffix(), matchesRegularExpression(""\\w{2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDomainSuffix', '(', ')', ' ', '{', '\n', '      ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'domainSuffix', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w{2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Internet.java,password,"    public String password(int minimumLength, int maximumLength) {
        return password(minimumLength, maximumLength, false);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String password(int minimumLength, int maximumLength) {
        return password(minimumLength, maximumLength, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ')', ' ', '{', '\n', '        ', 'return', ' ', 'password', '(', 'minimumLength', ',', ' ', 'maximumLength', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Internet.java,password,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase) {
        return password(minimumLength, maximumLength, includeUppercase, false);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase) {
        return password(minimumLength, maximumLength, includeUppercase, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'password', '(', 'minimumLength', ',', ' ', 'maximumLength', ',', ' ', 'includeUppercase', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Internet.java,password,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial) {
        if (includeSpecial) {
            char[] password = lorem.characters(minimumLength, maximumLength, includeUppercase).toCharArray();",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial) {
        if (includeSpecial) {
            char[] password = lorem.characters(minimumLength, maximumLength, includeUppercase).toCharArray();
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ',', ' ', 'boolean', ' ', 'includeSpecial', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'includeSpecial', ')', ' ', '{', '\n', '            ', 'char', '[', ']', ' ', 'password', ' ', '=', ' ', 'lorem', '.', 'characters', '(', 'minimumLength', ',', ' ', 'maximumLength', ',', ' ', 'includeUppercase', ')', '.', 'toCharArray', '(', ')', ';', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,character,"    public char character(boolean includeUppercase) {
        return characters(1).charAt(0);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public char character(boolean includeUppercase) {
        return characters(1).charAt(0);
    }
","['    ', 'public', ' ', 'char', ' ', 'character', '(', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '1', ')', '.', 'charAt', '(', '0', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,characters,"    public String characters() {
        return characters(255, false);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String characters() {
        return characters(255, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '255', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,characters,"    public String characters(boolean includeUppercase) {
        return characters(255, false);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String characters(boolean includeUppercase) {
        return characters(255, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '255', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,characters,"    public String characters(int minimumLength, int maximumLength) {
        return characters(randomService.nextInt(maximumLength - minimumLength) + minimumLength, false);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String characters(int minimumLength, int maximumLength) {
        return characters(randomService.nextInt(maximumLength - minimumLength) + minimumLength, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'randomService', '.', 'nextInt', '(', 'maximumLength', ' ', '-', ' ', 'minimumLength', ')', ' ', '+', ' ', 'minimumLength', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,characters,"    public String characters(int minimumLength, int maximumLength, boolean includeUppercase) {
        return characters(randomService.nextInt(maximumLength - minimumLength) + minimumLength, includeUppercase);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String characters(int minimumLength, int maximumLength, boolean includeUppercase) {
        return characters(randomService.nextInt(maximumLength - minimumLength) + minimumLength, includeUppercase);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'randomService', '.', 'nextInt', '(', 'maximumLength', ' ', '-', ' ', 'minimumLength', ')', ' ', '+', ' ', 'minimumLength', ',', ' ', 'includeUppercase', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,characters,"    public String characters(int fixedNumberOfCharacters) {
        return characters(fixedNumberOfCharacters, false);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String characters(int fixedNumberOfCharacters) {
        return characters(fixedNumberOfCharacters, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'fixedNumberOfCharacters', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'fixedNumberOfCharacters', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,Lorem.java,characters,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            char randomCharacter = characters[randomService.nextInt(characters.length)];
            if (includeUppercase && randomService.nextBoolean()) {
                randomCharacter = Character.toUpperCase(randomCharacter);
            }
            buffer[i] = randomCharacter;
        }
        return new String(buffer);
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            char randomCharacter = characters[randomService.nextInt(characters.length)];
            if (includeUppercase && randomService.nextBoolean()) {
                randomCharacter = Character.toUpperCase(randomCharacter);
            }
            buffer[i] = randomCharacter;
        }
        return new String(buffer);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'fixedNumberOfCharacters', ',', ' ', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'fixedNumberOfCharacters', ' ', '<', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', '""', ';', '\n', '        ', '}', '\n', '        ', 'char', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'char', '[', 'fixedNumberOfCharacters', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'buffer', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'char', ' ', 'randomCharacter', ' ', '=', ' ', 'characters', '[', 'randomService', '.', 'nextInt', '(', 'characters', '.', 'length', ')', ']', ';', '\n', '            ', 'if', ' ', '(', 'includeUppercase', ' ', '&', '&', ' ', 'randomService', '.', 'nextBoolean', '(', ')', ')', ' ', '{', '\n', '                ', 'randomCharacter', ' ', '=', ' ', 'Character', '.', 'toUpperCase', '(', 'randomCharacter', ')', ';', '\n', '            ', '}', '\n', '            ', 'buffer', '[', 'i', ']', ' ', '=', ' ', 'randomCharacter', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'buffer', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,InternetTest.java,testPasswort,"    public void testPasswort() {
        assertThat(faker.internet().password(), matchesRegularExpression(""[a-z\\d]{8,16}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testPasswort() {
        assertThat(faker.internet().password(), matchesRegularExpression(""[a-z\\d]{8,16}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswort', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{8,16}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,InternetTest.java,testPasswortMinLengthMaxLength,"    public void testPasswortMinLengthMaxLength() {
        assertThat(faker.internet().password(10, 25), matchesRegularExpression(""[a-z\\d]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testPasswortMinLengthMaxLength() {
        assertThat(faker.internet().password(10, 25), matchesRegularExpression(""[a-z\\d]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswortMinLengthMaxLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,InternetTest.java,testPasswortMinLengthMaxLengthIncludeUpperCase,"    public void testPasswortMinLengthMaxLengthIncludeUpperCase() {
        assertThat(faker.internet().password(1, 2, false), matchesRegularExpression(""[a-z\\d]{1,2}""));
        assertThat(faker.internet().password(10, 25, true), matchesRegularExpression(""[a-zA-Z\\d]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testPasswortMinLengthMaxLengthIncludeUpperCase() {
        assertThat(faker.internet().password(1, 2, false), matchesRegularExpression(""[a-z\\d]{1,2}""));
        assertThat(faker.internet().password(10, 25, true), matchesRegularExpression(""[a-zA-Z\\d]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswortMinLengthMaxLengthIncludeUpperCase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '1', ',', ' ', '2', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{1,2}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,InternetTest.java,testPasswortMinLengthMaxLengthIncludeUpperCaseIncludeSpecial,"    public void testPasswortMinLengthMaxLengthIncludeUpperCaseIncludeSpecial() {
        assertThat(faker.internet().password(10, 25, false, false), matchesRegularExpression(""[a-z\\d]{10,25}""));
        assertThat(faker.internet().password(10, 25, false, true), matchesRegularExpression(""[a-z\\d!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true), matchesRegularExpression(""[a-zA-Z\\d!@#$%^&*]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testPasswortMinLengthMaxLengthIncludeUpperCaseIncludeSpecial() {
        assertThat(faker.internet().password(10, 25, false, false), matchesRegularExpression(""[a-z\\d]{10,25}""));
        assertThat(faker.internet().password(10, 25, false, true), matchesRegularExpression(""[a-z\\d!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true), matchesRegularExpression(""[a-zA-Z\\d!@#$%^&*]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswortMinLengthMaxLengthIncludeUpperCaseIncludeSpecial', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'false', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'false', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'true', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,LoremTest.java,testCharacterIncludeUpperCase,"    public void testCharacterIncludeUpperCase() {
        assertThat(String.valueOf(faker.lorem().character(false)), matchesRegularExpression(""[a-z\\d]{1}""));
        assertThat(String.valueOf(faker.lorem().character(true)), matchesRegularExpression(""[a-zA-Z\\d]{1}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testCharacterIncludeUpperCase() {
        assertThat(String.valueOf(faker.lorem().character(false)), matchesRegularExpression(""[a-z\\d]{1}""));
        assertThat(String.valueOf(faker.lorem().character(true)), matchesRegularExpression(""[a-zA-Z\\d]{1}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharacterIncludeUpperCase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'String', '.', 'valueOf', '(', 'faker', '.', 'lorem', '(', ')', '.', 'character', '(', 'false', ')', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{1}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'String', '.', 'valueOf', '(', 'faker', '.', 'lorem', '(', ')', '.', 'character', '(', 'true', ')', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{1}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,LoremTest.java,testCharactersIncludeUpperCase,"    public void testCharactersIncludeUpperCase() {
        assertThat(faker.lorem().characters(false), matchesRegularExpression(""[a-z\\d]{255}""));
        assertThat(faker.lorem().characters(true), matchesRegularExpression(""[a-zA-Z\\d]{255}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testCharactersIncludeUpperCase() {
        assertThat(faker.lorem().characters(false), matchesRegularExpression(""[a-z\\d]{255}""));
        assertThat(faker.lorem().characters(true), matchesRegularExpression(""[a-zA-Z\\d]{255}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersIncludeUpperCase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{255}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{255}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,LoremTest.java,testCharactersWithLengthIncludeUppercase,"    public void testCharactersWithLengthIncludeUppercase() {
        assertThat(faker.lorem().characters(2, false), matchesRegularExpression(""[a-z\\d]{2}""));
        assertThat(faker.lorem().characters(500, false), matchesRegularExpression(""[a-z\\d]{500}""));
        assertThat(faker.lorem().characters(2, true), matchesRegularExpression(""[a-zA-Z\\d]{2}""));
        assertThat(faker.lorem().characters(500, true), matchesRegularExpression(""[a-zA-Z\\d]{500}""));
        assertThat(faker.lorem().characters(0, false), isEmptyString());
        assertThat(faker.lorem().characters(-1, true), isEmptyString());
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testCharactersWithLengthIncludeUppercase() {
        assertThat(faker.lorem().characters(2, false), matchesRegularExpression(""[a-z\\d]{2}""));
        assertThat(faker.lorem().characters(500, false), matchesRegularExpression(""[a-z\\d]{500}""));
        assertThat(faker.lorem().characters(2, true), matchesRegularExpression(""[a-zA-Z\\d]{2}""));
        assertThat(faker.lorem().characters(500, true), matchesRegularExpression(""[a-zA-Z\\d]{500}""));
        assertThat(faker.lorem().characters(0, false), isEmptyString());
        assertThat(faker.lorem().characters(-1, true), isEmptyString());
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersWithLengthIncludeUppercase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '2', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{2}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '500', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{500}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '2', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{2}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '500', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{500}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '0', ',', ' ', 'false', ')', ',', ' ', 'isEmptyString', '(', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '-', '1', ',', ' ', 'true', ')', ',', ' ', 'isEmptyString', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,LoremTest.java,testCharactersMinimumMaximumLength,"    public void testCharactersMinimumMaximumLength() {
        assertThat(faker.lorem().characters(1, 10), matchesRegularExpression(""[a-z\\d]{1,10}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testCharactersMinimumMaximumLength() {
        assertThat(faker.lorem().characters(1, 10), matchesRegularExpression(""[a-z\\d]{1,10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersMinimumMaximumLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '1', ',', ' ', '10', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{1,10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,911f702a94757f0860adc716753bb80b8b31642c,LoremTest.java,testCharactersMinimumMaximumLengthIncludeUppercase,"    public void testCharactersMinimumMaximumLengthIncludeUppercase() {
        assertThat(faker.lorem().characters(1, 10), matchesRegularExpression(""[a-zA-Z\\d]{1,10}""));
    }",https://www.github.com/dius/java-faker/commit/911f702a94757f0860adc716753bb80b8b31642c,"    public void testCharactersMinimumMaximumLengthIncludeUppercase() {
        assertThat(faker.lorem().characters(1, 10), matchesRegularExpression(""[a-zA-Z\\d]{1,10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersMinimumMaximumLengthIncludeUppercase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '1', ',', ' ', '10', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{1,10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7210acafc8f7cfac018bbb558118d289eecc2ad7,Address.java,streetAddressNumber,"    public String streetAddressNumber() {
        return String.valueOf(randomService.nextInt(1000));
    }",https://www.github.com/dius/java-faker/commit/7210acafc8f7cfac018bbb558118d289eecc2ad7,"    public String streetAddressNumber() {
        return String.valueOf(randomService.nextInt(1000));
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'valueOf', '(', 'randomService', '.', 'nextInt', '(', '1000', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7210acafc8f7cfac018bbb558118d289eecc2ad7,AddressTest.java,testStreetAddressIsANumber,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+""));
    }",https://www.github.com/dius/java-faker/commit/7210acafc8f7cfac018bbb558118d289eecc2ad7,"    public void testStreetAddressIsANumber() {
        final String streetAddressNumber = faker.address().streetAddressNumber();
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressIsANumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddressNumber', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bc0129d8e398c495466b4370ad9f0954ee4da44a,FakeValuesService.java,regexify,"    public String regexify(String regex) {
        Generex generex = new Generex(regex);
        generex.setSeed(randomService.nextLong());
        return generex.random();
    }",https://www.github.com/dius/java-faker/commit/bc0129d8e398c495466b4370ad9f0954ee4da44a,"    public String regexify(String regex) {
        Generex generex = new Generex(regex);
        generex.setSeed(randomService.nextLong());
        return generex.random();
    }
","['    ', 'public', ' ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ' ', '{', '\n', '        ', 'Generex', ' ', 'generex', ' ', '=', ' ', 'new', ' ', 'Generex', '(', 'regex', ')', ';', '\n', '        ', 'generex', '.', 'setSeed', '(', 'randomService', '.', 'nextLong', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'generex', '.', 'random', '(', ')', ';', '\n', '    ', '}', '\n']"
master,bc0129d8e398c495466b4370ad9f0954ee4da44a,RandomService.java,nextLong,"    public long nextLong() {
        return RandomUtils.nextLong(random);
    }",https://www.github.com/dius/java-faker/commit/bc0129d8e398c495466b4370ad9f0954ee4da44a,"    public long nextLong() {
        return RandomUtils.nextLong(random);
    }
","['    ', 'public', ' ', 'long', ' ', 'nextLong', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'RandomUtils', '.', 'nextLong', '(', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,bc0129d8e398c495466b4370ad9f0954ee4da44a,FakerTest.java,regexifyShouldGenerateSameValueForFakerWithSameSeed,"    public void regexifyShouldGenerateSameValueForFakerWithSameSeed() {
        long seed = 1L;
        String regex = ""\\d"";

        String firstResult = new Faker(new Random(seed)).regexify(regex);
        String secondResult = new Faker(new Random(seed)).regexify(regex);

        assertThat(secondResult, is(firstResult));
    }",https://www.github.com/dius/java-faker/commit/bc0129d8e398c495466b4370ad9f0954ee4da44a,"    public void regexifyShouldGenerateSameValueForFakerWithSameSeed() {
        long seed = 1L;
        String regex = ""\\d"";

        String firstResult = new Faker(new Random(seed)).regexify(regex);
        String secondResult = new Faker(new Random(seed)).regexify(regex);

        assertThat(secondResult, is(firstResult));
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyShouldGenerateSameValueForFakerWithSameSeed', '(', ')', ' ', '{', '\n', '        ', 'long', ' ', 'seed', ' ', '=', ' ', '1L', ';', '\n', '        ', 'String', ' ', 'regex', ' ', '=', ' ', '""', '\\\\', 'd', '""', ';', '\n', '\n', '        ', 'String', ' ', 'firstResult', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Random', '(', 'seed', ')', ')', '.', 'regexify', '(', 'regex', ')', ';', '\n', '        ', 'String', ' ', 'secondResult', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Random', '(', 'seed', ')', ')', '.', 'regexify', '(', 'regex', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'secondResult', ',', ' ', 'is', '(', 'firstResult', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,Faker.java,resolve,"    public String resolve(String key) {
        String[] keySplit = key.split(""\\."", 2);
        String object = WordUtils.uncapitalize(keySplit[0]);
        String methodName = keySplit[1];

        char[] METHOD_NAME_REPLACEMENT = {'_'};
        methodName = WordUtils.capitalizeFully(methodName, METHOD_NAME_REPLACEMENT).replaceAll(""_"", """");
        methodName = methodName.substring(0, 1).toLowerCase() + methodName.substring(1);
        try {
            Object objectWithMethodToInvoke = MethodUtils.invokeMethod(this, object, null);",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public String resolve(String key) {
        String[] keySplit = key.split(""\\."", 2);
        String object = WordUtils.uncapitalize(keySplit[0]);
        String methodName = keySplit[1];

        char[] METHOD_NAME_REPLACEMENT = {'_'};
        methodName = WordUtils.capitalizeFully(methodName, METHOD_NAME_REPLACEMENT).replaceAll(""_"", """");
        methodName = methodName.substring(0, 1).toLowerCase() + methodName.substring(1);
        try {
            Object objectWithMethodToInvoke = MethodUtils.invokeMethod(this, object, null);
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'keySplit', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ',', ' ', '2', ')', ';', '\n', '        ', 'String', ' ', 'object', ' ', '=', ' ', 'WordUtils', '.', 'uncapitalize', '(', 'keySplit', '[', '0', ']', ')', ';', '\n', '        ', 'String', ' ', 'methodName', ' ', '=', ' ', 'keySplit', '[', '1', ']', ';', '\n', '\n', '        ', 'char', '[', ']', ' ', 'METHOD_NAME_REPLACEMENT', ' ', '=', ' ', '{', ""'_'"", '}', ';', '\n', '        ', 'methodName', ' ', '=', ' ', 'WordUtils', '.', 'capitalizeFully', '(', 'methodName', ',', ' ', 'METHOD_NAME_REPLACEMENT', ')', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ';', '\n', '        ', 'methodName', ' ', '=', ' ', 'methodName', '.', 'substring', '(', '0', ',', ' ', '1', ')', '.', 'toLowerCase', '(', ')', ' ', '+', ' ', 'methodName', '.', 'substring', '(', '1', ')', ';', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Object', ' ', 'objectWithMethodToInvoke', ' ', '=', ' ', 'MethodUtils', '.', 'invokeMethod', '(', 'this', ',', ' ', 'object', ',', ' ', 'null', ')', ';', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,IdNumber.java,valid,"    public String valid() {
        return fakeValuesService.resolve(""id_number.valid"", this, resolver);
    }",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public String valid() {
        return fakeValuesService.resolve(""id_number.valid"", this, resolver);
    }
","['    ', 'public', ' ', 'String', ' ', 'valid', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'id_number.valid', '""', ',', ' ', 'this', ',', ' ', 'resolver', ')', ';', '\n', '    ', '}', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,IdNumber.java,invalid,"    public String invalid() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""id_number.invalid""));
    }",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public String invalid() {
        return fakeValuesService.numerify(fakeValuesService.fetchString(""id_number.invalid""));
    }
","['    ', 'public', ' ', 'String', ' ', 'invalid', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'numerify', '(', 'fakeValuesService', '.', 'fetchString', '(', '""', 'id_number.invalid', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,IdNumber.java,ssnValid,"    public String ssnValid() {
        String ssn = fakeValuesService.regexify(""[0-8]\\d{2}-\\d{2}-\\d{4}"");

        boolean isValid = true;
        for (int i = 0; i < invalidSSNPatterns.length; i++) {
            if (ssn.matches(invalidSSNPatterns[i])) {
                isValid = false;
                break;
            }
        }
        if (!isValid) {
            ssn = ssnValid();
        }
        return ssn;
    }",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public String ssnValid() {
        String ssn = fakeValuesService.regexify(""[0-8]\\d{2}-\\d{2}-\\d{4}"");

        boolean isValid = true;
        for (int i = 0; i < invalidSSNPatterns.length; i++) {
            if (ssn.matches(invalidSSNPatterns[i])) {
                isValid = false;
                break;
            }
        }
        if (!isValid) {
            ssn = ssnValid();
        }
        return ssn;
    }
","['    ', 'public', ' ', 'String', ' ', 'ssnValid', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'ssn', ' ', '=', ' ', 'fakeValuesService', '.', 'regexify', '(', '""', '[0-8]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ';', '\n', '\n', '        ', 'boolean', ' ', 'isValid', ' ', '=', ' ', 'true', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'invalidSSNPatterns', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'ssn', '.', 'matches', '(', 'invalidSSNPatterns', '[', 'i', ']', ')', ')', ' ', '{', '\n', '                ', 'isValid', ' ', '=', ' ', 'false', ';', '\n', '                ', 'break', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', '!', 'isValid', ')', ' ', '{', '\n', '            ', 'ssn', ' ', '=', ' ', 'ssnValid', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'ssn', ';', '\n', '    ', '}', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,IdNumberTest.java,testValid,"    public void testValid() {
        assertThat(faker.idNumber().valid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public void testValid() {
        assertThat(faker.idNumber().valid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testValid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'idNumber', '(', ')', '.', 'valid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-8]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,IdNumberTest.java,testInvalid,"    public void testInvalid() {
        assertThat(faker.idNumber().invalid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public void testInvalid() {
        assertThat(faker.idNumber().invalid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testInvalid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'idNumber', '(', ')', '.', 'invalid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-8]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2e4a0ed2521d4ad42a8ee37b237542ef99861719,IdNumberTest.java,testSsnValid,"    public void testSsnValid() {
        assertThat(faker.idNumber().ssnValid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/2e4a0ed2521d4ad42a8ee37b237542ef99861719,"    public void testSsnValid() {
        assertThat(faker.idNumber().ssnValid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSsnValid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'idNumber', '(', ')', '.', 'ssnValid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-8]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d2f6bc2b4b689b4508144800fcc3a68e112dc83d,IdNumberTest.java,testInvalid,"    public void testInvalid() {
        assertThat(faker.idNumber().invalid(), matchesRegularExpression(""[0-9]\\d{2}-\\d{2}-\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/d2f6bc2b4b689b4508144800fcc3a68e112dc83d,"    public void testInvalid() {
        assertThat(faker.idNumber().invalid(), matchesRegularExpression(""[0-9]\\d{2}-\\d{2}-\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testInvalid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'idNumber', '(', ')', '.', 'invalid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e5d859014a79a9bf3ce8c7569b2393439e561654,EducatorTest.java,testUniversity,"    public void testUniversity() {
        assertThat(faker.educator().university(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/e5d859014a79a9bf3ce8c7569b2393439e561654,"    public void testUniversity() {
        assertThat(faker.educator().university(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUniversity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'university', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e5d859014a79a9bf3ce8c7569b2393439e561654,EducatorTest.java,testCourse,"    public void testCourse() {
        assertThat(faker.educator().course(), matchesRegularExpression(""(\\(?\\w+\\)? ?){3,6}""));
    }",https://www.github.com/dius/java-faker/commit/e5d859014a79a9bf3ce8c7569b2393439e561654,"    public void testCourse() {
        assertThat(faker.educator().course(), matchesRegularExpression(""(\\(?\\w+\\)? ?){3,6}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCourse', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'course', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', '(?', '\\\\', 'w+', '\\\\', ')? ?){3,6}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e5d859014a79a9bf3ce8c7569b2393439e561654,EducatorTest.java,testSecondarySchool,"    public void testSecondarySchool() {
        assertThat(faker.educator().secondarySchool(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/e5d859014a79a9bf3ce8c7569b2393439e561654,"    public void testSecondarySchool() {
        assertThat(faker.educator().secondarySchool(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSecondarySchool', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'secondarySchool', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e5d859014a79a9bf3ce8c7569b2393439e561654,EducatorTest.java,testCampus,"    public void testCampus() {
        assertThat(faker.educator().campus(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/e5d859014a79a9bf3ce8c7569b2393439e561654,"    public void testCampus() {
        assertThat(faker.educator().campus(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCampus', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'educator', '(', ')', '.', 'campus', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,Finance.java,iban,"    public String iban() {
        List<String> countryCodes = new ArrayList<String>(countryCodeToBasicBankAccountNumberPattern.keySet());
        String randomCountryCode = countryCodes.get(randomService.nextInt(countryCodes.size()));
        return iban(randomCountryCode);
    }",https://www.github.com/dius/java-faker/commit/19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,"    public String iban() {
        List<String> countryCodes = new ArrayList<String>(countryCodeToBasicBankAccountNumberPattern.keySet());
        String randomCountryCode = countryCodes.get(randomService.nextInt(countryCodes.size()));
        return iban(randomCountryCode);
    }
","['    ', 'public', ' ', 'String', ' ', 'iban', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'countryCodes', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', 'countryCodeToBasicBankAccountNumberPattern', '.', 'keySet', '(', ')', ')', ';', '\n', '        ', 'String', ' ', 'randomCountryCode', ' ', '=', ' ', 'countryCodes', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'countryCodes', '.', 'size', '(', ')', ')', ')', ';', '\n', '        ', 'return', ' ', 'iban', '(', 'randomCountryCode', ')', ';', '\n', '    ', '}', '\n']"
master,19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,Finance.java,iban,"    public String iban(String countryCode) {
        String basicBankAccountNumber = fakeValuesService.regexify(countryCodeToBasicBankAccountNumberPattern.get(countryCode));
        String checkSum = calculateIbanChecksum(countryCode, basicBankAccountNumber);
        return countryCode + checkSum + basicBankAccountNumber;
    }",https://www.github.com/dius/java-faker/commit/19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,"    public String iban(String countryCode) {
        String basicBankAccountNumber = fakeValuesService.regexify(countryCodeToBasicBankAccountNumberPattern.get(countryCode));
        String checkSum = calculateIbanChecksum(countryCode, basicBankAccountNumber);
        return countryCode + checkSum + basicBankAccountNumber;
    }
","['    ', 'public', ' ', 'String', ' ', 'iban', '(', 'String', ' ', 'countryCode', ')', ' ', '{', '\n', '        ', 'String', ' ', 'basicBankAccountNumber', ' ', '=', ' ', 'fakeValuesService', '.', 'regexify', '(', 'countryCodeToBasicBankAccountNumberPattern', '.', 'get', '(', 'countryCode', ')', ')', ';', '\n', '        ', 'String', ' ', 'checkSum', ' ', '=', ' ', 'calculateIbanChecksum', '(', 'countryCode', ',', ' ', 'basicBankAccountNumber', ')', ';', '\n', '        ', 'return', ' ', 'countryCode', ' ', '+', ' ', 'checkSum', ' ', '+', ' ', 'basicBankAccountNumber', ';', '\n', '    ', '}', '\n']"
master,19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,Finance.java,calculateIbanChecksum,"    private static String calculateIbanChecksum(String countryCode, String basicBankAccountNumber) {
        String basis = basicBankAccountNumber + countryCode + ""00"";

        StringBuilder sb = new StringBuilder();
        char[] characters = basis.toLowerCase().toCharArray();
        for (int i = 0; i < characters.length; i++) {
            char c = characters[i];
            if (Character.isLetter(c)) {
                sb.append(String.valueOf((c - 'a') + 10));
            } else {
                sb.append(c);
            }
        }

        int mod97 = new BigInteger(sb.toString()).mod(BigInteger.valueOf(97L)).intValue();
        return StringUtils.leftPad(String.valueOf(98 - mod97), 2, '0');
    }",https://www.github.com/dius/java-faker/commit/19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,"    private static String calculateIbanChecksum(String countryCode, String basicBankAccountNumber) {
        String basis = basicBankAccountNumber + countryCode + ""00"";

        StringBuilder sb = new StringBuilder();
        char[] characters = basis.toLowerCase().toCharArray();
        for (int i = 0; i < characters.length; i++) {
            char c = characters[i];
            if (Character.isLetter(c)) {
                sb.append(String.valueOf((c - 'a') + 10));
            } else {
                sb.append(c);
            }
        }

        int mod97 = new BigInteger(sb.toString()).mod(BigInteger.valueOf(97L)).intValue();
        return StringUtils.leftPad(String.valueOf(98 - mod97), 2, '0');
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'calculateIbanChecksum', '(', 'String', ' ', 'countryCode', ',', ' ', 'String', ' ', 'basicBankAccountNumber', ')', ' ', '{', '\n', '        ', 'String', ' ', 'basis', ' ', '=', ' ', 'basicBankAccountNumber', ' ', '+', ' ', 'countryCode', ' ', '+', ' ', '""', '00', '""', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'char', '[', ']', ' ', 'characters', ' ', '=', ' ', 'basis', '.', 'toLowerCase', '(', ')', '.', 'toCharArray', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'characters', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'char', ' ', 'c', ' ', '=', ' ', 'characters', '[', 'i', ']', ';', '\n', '            ', 'if', ' ', '(', 'Character', '.', 'isLetter', '(', 'c', ')', ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'String', '.', 'valueOf', '(', '(', 'c', ' ', '-', ' ', ""'a'"", ')', ' ', '+', ' ', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'c', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'int', ' ', 'mod97', ' ', '=', ' ', 'new', ' ', 'BigInteger', '(', 'sb', '.', 'toString', '(', ')', ')', '.', 'mod', '(', 'BigInteger', '.', 'valueOf', '(', '97L', ')', ')', '.', 'intValue', '(', ')', ';', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'leftPad', '(', 'String', '.', 'valueOf', '(', '98', ' ', '-', ' ', 'mod97', ')', ',', ' ', '2', ',', ' ', ""'0'"", ')', ';', '\n', '    ', '}', '\n']"
master,19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,FinanceTest.java,iban,"    public void iban() {
        assertThat(faker.finance().iban(), matchesRegularExpression(""[A-Z]{2}\\p{Alnum}{13,30}""));
    }",https://www.github.com/dius/java-faker/commit/19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,"    public void iban() {
        assertThat(faker.finance().iban(), matchesRegularExpression(""[A-Z]{2}\\p{Alnum}{13,30}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'iban', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'finance', '(', ')', '.', 'iban', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z]{2}', '\\\\', 'p{Alnum}{13,30}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,FinanceTest.java,ibanWithCountryCode,"    public void ibanWithCountryCode() {
        assertThat(faker.finance().iban(""DE""), matchesRegularExpression(""DE\\d{20}""));
    }",https://www.github.com/dius/java-faker/commit/19066bf4cf9c6c32bd0b7d18d33156ca0c681aee,"    public void ibanWithCountryCode() {
        assertThat(faker.finance().iban(""DE""), matchesRegularExpression(""DE\\d{20}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'ibanWithCountryCode', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'finance', '(', ')', '.', 'iban', '(', '""', 'DE', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'DE', '\\\\', 'd{20}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3a373cbed143d179e75618ebf4227692a6fdff35,Company.java,domainName,"    private String domainName(){
        return StringUtils.deleteWhitespace(name().toLowerCase().replaceAll("","", """").replaceAll(""'"", """"));
    }",https://www.github.com/dius/java-faker/commit/3a373cbed143d179e75618ebf4227692a6fdff35,"    private String domainName(){
        return StringUtils.deleteWhitespace(name().toLowerCase().replaceAll("","", """").replaceAll(""'"", """"));
    }
","['    ', 'private', ' ', 'String', ' ', 'domainName', '(', ')', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'deleteWhitespace', '(', 'name', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ',', '""', ',', ' ', '""', '""', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3a373cbed143d179e75618ebf4227692a6fdff35,Company.java,domainSuffix,"    private String domainSuffix() {
        return fakeValuesService.fetchString(""internet.domain_suffix"");
    }",https://www.github.com/dius/java-faker/commit/3a373cbed143d179e75618ebf4227692a6fdff35,"    private String domainSuffix() {
        return fakeValuesService.fetchString(""internet.domain_suffix"");
    }
","['    ', 'private', ' ', 'String', ' ', 'domainSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.domain_suffix', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3a373cbed143d179e75618ebf4227692a6fdff35,CompanyTest.java,testUrl,"    public void testUrl() {
        String regexp = ""(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])"";
        assertThat(faker.company().url(), matchesRegularExpression(regexp));
    }",https://www.github.com/dius/java-faker/commit/3a373cbed143d179e75618ebf4227692a6fdff35,"    public void testUrl() {
        String regexp = ""(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])"";
        assertThat(faker.company().url(), matchesRegularExpression(regexp));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUrl', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'regexp', ' ', '=', ' ', '""', '(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9', '\\\\', '-]*[a-zA-Z0-9])', '\\\\', '.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9', '\\\\', '-]*[A-Za-z0-9])', '""', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'company', '(', ')', '.', 'url', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'regexp', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ffdf7fd337caa6bd900366c4f88f3d04ed2ae5f7,Name.java,username,"    public String username() {
        return StringUtils.join(new String[]{
                firstName().replaceAll(""'"", """").toLowerCase(),",https://www.github.com/dius/java-faker/commit/ffdf7fd337caa6bd900366c4f88f3d04ed2ae5f7,"    public String username() {
        return StringUtils.join(new String[]{
                firstName().replaceAll(""'"", """").toLowerCase(),
","['    ', 'public', ' ', 'String', ' ', 'username', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'new', ' ', 'String', '[', ']', '{', '\n', '                ', 'firstName', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', '.', 'toLowerCase', '(', ')', ',', '\n']"
master,ffdf7fd337caa6bd900366c4f88f3d04ed2ae5f7,NameTest.java,testUsername,"    public void testUsername() {
        assertThat(faker.name().username(), matchesRegularExpression(""^(\\w+)\\.(\\w+)$""));
    }",https://www.github.com/dius/java-faker/commit/ffdf7fd337caa6bd900366c4f88f3d04ed2ae5f7,"    public void testUsername() {
        assertThat(faker.name().username(), matchesRegularExpression(""^(\\w+)\\.(\\w+)$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUsername', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'username', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+)', '\\\\', '.(', '\\\\', 'w+)$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,58dcdfd47c973765353698e3792815e6484aa8e6,Cat.java,name,"    public String name() {
        return fakeValuesService.fetchString(""cat.name"");
    }",https://www.github.com/dius/java-faker/commit/58dcdfd47c973765353698e3792815e6484aa8e6,"    public String name() {
        return fakeValuesService.fetchString(""cat.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'cat.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,58dcdfd47c973765353698e3792815e6484aa8e6,Cat.java,breed,"    public String breed() {
        return fakeValuesService.fetchString(""cat.breed"");
    }",https://www.github.com/dius/java-faker/commit/58dcdfd47c973765353698e3792815e6484aa8e6,"    public String breed() {
        return fakeValuesService.fetchString(""cat.breed"");
    }
","['    ', 'public', ' ', 'String', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'cat.breed', '""', ')', ';', '\n', '    ', '}', '\n']"
master,58dcdfd47c973765353698e3792815e6484aa8e6,Cat.java,registry,"    public String registry() {
        return fakeValuesService.fetchString(""cat.registry"");
    }",https://www.github.com/dius/java-faker/commit/58dcdfd47c973765353698e3792815e6484aa8e6,"    public String registry() {
        return fakeValuesService.fetchString(""cat.registry"");
    }
","['    ', 'public', ' ', 'String', ' ', 'registry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'cat.registry', '""', ')', ';', '\n', '    ', '}', '\n']"
master,58dcdfd47c973765353698e3792815e6484aa8e6,CatTest.java,name,"    public void name() {
        assertThat(faker.cat().name(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/58dcdfd47c973765353698e3792815e6484aa8e6,"    public void name() {
        assertThat(faker.cat().name(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'cat', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,58dcdfd47c973765353698e3792815e6484aa8e6,CatTest.java,breed,"    public void breed() {
        assertThat(faker.cat().breed(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }",https://www.github.com/dius/java-faker/commit/58dcdfd47c973765353698e3792815e6484aa8e6,"    public void breed() {
        assertThat(faker.cat().breed(), matchesRegularExpression(""[A-Za-z'() 0-9-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'cat', '(', ')', '.', 'breed', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2a21f3f39eea2c3c3f4d8651b513b5b456170073,CatTest.java,breed,"    public void breed() {
        assertThat(faker.cat().breed(), matchesRegularExpression(""[A-Za-z'() 0-9-,]+""));
    }",https://www.github.com/dius/java-faker/commit/2a21f3f39eea2c3c3f4d8651b513b5b456170073,"    public void breed() {
        assertThat(faker.cat().breed(), matchesRegularExpression(""[A-Za-z'() 0-9-,]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'cat', '(', ')', '.', 'breed', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'() 0-9-,]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9eda4c9ab47063116b90bcd338527375a89aeaf1,InternetTest.java,testPassword,"    public void testPassword() {
        assertThat(faker.internet().password(), matchesRegularExpression(""[a-z\\d]{8,16}""));
    }",https://www.github.com/dius/java-faker/commit/9eda4c9ab47063116b90bcd338527375a89aeaf1,"    public void testPassword() {
        assertThat(faker.internet().password(), matchesRegularExpression(""[a-z\\d]{8,16}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPassword', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{8,16}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9eda4c9ab47063116b90bcd338527375a89aeaf1,InternetTest.java,testPasswordMinLengthMaxLength,"    public void testPasswordMinLengthMaxLength() {
        assertThat(faker.internet().password(10, 25), matchesRegularExpression(""[a-z\\d]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/9eda4c9ab47063116b90bcd338527375a89aeaf1,"    public void testPasswordMinLengthMaxLength() {
        assertThat(faker.internet().password(10, 25), matchesRegularExpression(""[a-z\\d]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswordMinLengthMaxLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9eda4c9ab47063116b90bcd338527375a89aeaf1,InternetTest.java,testPasswordMinLengthMaxLengthIncludeUpperCase,"    public void testPasswordMinLengthMaxLengthIncludeUpperCase() {
        assertThat(faker.internet().password(1, 2, false), matchesRegularExpression(""[a-z\\d]{1,2}""));
        assertThat(faker.internet().password(10, 25, true), matchesRegularExpression(""[a-zA-Z\\d]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/9eda4c9ab47063116b90bcd338527375a89aeaf1,"    public void testPasswordMinLengthMaxLengthIncludeUpperCase() {
        assertThat(faker.internet().password(1, 2, false), matchesRegularExpression(""[a-z\\d]{1,2}""));
        assertThat(faker.internet().password(10, 25, true), matchesRegularExpression(""[a-zA-Z\\d]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswordMinLengthMaxLengthIncludeUpperCase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '1', ',', ' ', '2', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{1,2}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9eda4c9ab47063116b90bcd338527375a89aeaf1,InternetTest.java,testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecial,"    public void testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecial() {
        assertThat(faker.internet().password(10, 25, false, false), matchesRegularExpression(""[a-z\\d]{10,25}""));
        assertThat(faker.internet().password(10, 25, false, true), matchesRegularExpression(""[a-z\\d!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true), matchesRegularExpression(""[a-zA-Z\\d!@#$%^&*]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/9eda4c9ab47063116b90bcd338527375a89aeaf1,"    public void testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecial() {
        assertThat(faker.internet().password(10, 25, false, false), matchesRegularExpression(""[a-z\\d]{10,25}""));
        assertThat(faker.internet().password(10, 25, false, true), matchesRegularExpression(""[a-z\\d!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true), matchesRegularExpression(""[a-zA-Z\\d!@#$%^&*]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecial', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'false', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'false', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'true', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4a96e87953dfe969d8a8a7c84edb90b74d3327c0,Internet.java,emailAddress,"    public String emailAddress() {
        return emailAddress(join(new Object[]{
                name.firstName().toLowerCase().replaceAll(""'"", """"),",https://www.github.com/dius/java-faker/commit/4a96e87953dfe969d8a8a7c84edb90b74d3327c0,"    public String emailAddress() {
        return emailAddress(join(new Object[]{
                name.firstName().toLowerCase().replaceAll(""'"", """"),
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'name', '.', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ',', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,Faker.java,letterify,"    public String letterify(String letterString, boolean isUpper) {
        return fakeValuesService.letterify(letterString, isUpper);
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    public String letterify(String letterString, boolean isUpper) {
        return fakeValuesService.letterify(letterString, isUpper);
    }
","['    ', 'public', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'letterify', '(', 'letterString', ',', ' ', 'isUpper', ')', ';', '\n', '    ', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,Faker.java,bothify,"    public String bothify(String string, boolean isUpper) {
        return fakeValuesService.bothify(string, isUpper);
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    public String bothify(String string, boolean isUpper) {
        return fakeValuesService.bothify(string, isUpper);
    }
","['    ', 'public', ' ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fakeValuesService', '.', 'bothify', '(', 'string', ',', ' ', 'isUpper', ')', ';', '\n', '    ', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesService.java,bothify,"    public String bothify(String string, boolean isUpper) {
        return letterify(numerify(string), isUpper);
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    public String bothify(String string, boolean isUpper) {
        return letterify(numerify(string), isUpper);
    }
","['    ', 'public', ' ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ' ', '{', '\n', '        ', 'return', ' ', 'letterify', '(', 'numerify', '(', 'string', ')', ',', ' ', 'isUpper', ')', ';', '\n', '    ', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesService.java,letterify,"    public String letterify(String letterString) {
        return this.letterify(letterString, false);
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    public String letterify(String letterString) {
        return this.letterify(letterString, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'letterify', '(', 'letterString', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesService.java,letterify,"    public String letterify(String letterString, boolean isUpper) {
        return letterHelper((isUpper) ? 65 : 97, letterString); // from ascii table
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    public String letterify(String letterString, boolean isUpper) {
        return letterHelper((isUpper) ? 65 : 97, letterString); 
    }
","['    ', 'public', ' ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ' ', '{', '\n', '        ', 'return', ' ', 'letterHelper', '(', '(', 'isUpper', ')', ' ', '?', ' ', '65', ' ', ':', ' ', '97', ',', ' ', 'letterString', ')', ';', ' ', '\n', '    ', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesService.java,letterHelper,"    private String letterHelper(int baseChar, String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (baseChar + nextInt(26))); // a-z
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    private String letterHelper(int baseChar, String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (baseChar + nextInt(26))); 
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'private', ' ', 'String', ' ', 'letterHelper', '(', 'int', ' ', 'baseChar', ',', ' ', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'letterString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'?'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', '(', 'char', ')', ' ', '(', 'baseChar', ' ', '+', ' ', 'nextInt', '(', '26', ')', ')', ')', ';', ' ', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,fetch,"    Object fetch(String key);

    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    Object fetch(String key);

    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,fetchString,"    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String fetchString(String key);

    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'fetchString', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,safeFetch,"    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String safeFetch(String key);

    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,fetchObject,"    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    Object fetchObject(String key);

    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ';', '\n', '\n', '    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,numerify,"    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String numerify(String numberString);

    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,bothify,"    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String bothify(String string);

    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ')', ';', '\n', '\n', '    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,bothify,"    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String bothify(String string, boolean isUpper);

    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'bothify', '(', 'String', ' ', 'string', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,letterify,"    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String letterify(String letterString);

    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ')', ';', '\n', '\n', '    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakeValuesServiceInterface.java,letterify,"    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    String letterify(String letterString, boolean isUpper);

    String regexify(String regex);

    String resolve(String key, Object current, Resolver resolver);
}
","['    ', 'String', ' ', 'letterify', '(', 'String', ' ', 'letterString', ',', ' ', 'boolean', ' ', 'isUpper', ')', ';', '\n', '\n', '    ', 'String', ' ', 'regexify', '(', 'String', ' ', 'regex', ')', ';', '\n', '\n', '    ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Resolver', ' ', 'resolver', ')', ';', '\n', '}', '\n']"
master,bb8a14c7b692ee27891334f0e1c19817b3f73c5c,FakerTest.java,letterifyShouldGenerateUpperCaseLetters,"    public void letterifyShouldGenerateUpperCaseLetters() {
        assertThat(faker.bothify(""????"",true), matchesRegularExpression(""[A-Z]{4}""));
    }",https://www.github.com/dius/java-faker/commit/bb8a14c7b692ee27891334f0e1c19817b3f73c5c,"    public void letterifyShouldGenerateUpperCaseLetters() {
        assertThat(faker.bothify(""????"",true), matchesRegularExpression(""[A-Z]{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'letterifyShouldGenerateUpperCaseLetters', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', '????', '""', ',', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z]{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f05ad85f9cf4d8b4adb01f099f17d35e1f214698,RandomService.java,nextInt,"    public int nextInt(int n) {
        return random.nextInt(n);
    }",https://www.github.com/dius/java-faker/commit/f05ad85f9cf4d8b4adb01f099f17d35e1f214698,"    public int nextInt(int n) {
        return random.nextInt(n);
    }
","['    ', 'public', ' ', 'int', ' ', 'nextInt', '(', 'int', ' ', 'n', ')', ' ', '{', '\n', '        ', 'return', ' ', 'random', '.', 'nextInt', '(', 'n', ')', ';', '\n', '    ', '}', '\n']"
master,f05ad85f9cf4d8b4adb01f099f17d35e1f214698,RandomService.java,nextLong,"    public long nextLong(long n) {
        if (n <= 0) {
            throw new IllegalArgumentException(""bound must be positive"");
        }

        long bits, val;
        do {
            long randomLong = random.nextLong();
            bits = (randomLong << 1) >>> 1;
            val = bits % n;
        } while (bits - val + (n - 1) < 0L);
        return val;
    }",https://www.github.com/dius/java-faker/commit/f05ad85f9cf4d8b4adb01f099f17d35e1f214698,"    public long nextLong(long n) {
        if (n <= 0) {
            throw new IllegalArgumentException(""bound must be positive"");
        }

        long bits, val;
        do {
            long randomLong = random.nextLong();
            bits = (randomLong << 1) >>> 1;
            val = bits % n;
        } while (bits - val + (n - 1) < 0L);
        return val;
    }
","['    ', 'public', ' ', 'long', ' ', 'nextLong', '(', 'long', ' ', 'n', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'n', ' ', '<', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'bound must be positive', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'long', ' ', 'bits', ',', ' ', 'val', ';', '\n', '        ', 'do', ' ', '{', '\n', '            ', 'long', ' ', 'randomLong', ' ', '=', ' ', 'random', '.', 'nextLong', '(', ')', ';', '\n', '            ', 'bits', ' ', '=', ' ', '(', 'randomLong', ' ', '<', '<', ' ', '1', ')', ' ', '>', '>', '>', ' ', '1', ';', '\n', '            ', 'val', ' ', '=', ' ', 'bits', ' ', '%', ' ', 'n', ';', '\n', '        ', '}', ' ', 'while', ' ', '(', 'bits', ' ', '-', ' ', 'val', ' ', '+', ' ', '(', 'n', ' ', '-', ' ', '1', ')', ' ', '<', ' ', '0', 'L', ')', ';', '\n', '        ', 'return', ' ', 'val', ';', '\n', '    ', '}', '\n']"
master,f05ad85f9cf4d8b4adb01f099f17d35e1f214698,RandomService.java,nextDouble,"    public double nextDouble() {
        return random.nextDouble();
    }",https://www.github.com/dius/java-faker/commit/f05ad85f9cf4d8b4adb01f099f17d35e1f214698,"    public double nextDouble() {
        return random.nextDouble();
    }
","['    ', 'public', ' ', 'double', ' ', 'nextDouble', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'random', '.', 'nextDouble', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f05ad85f9cf4d8b4adb01f099f17d35e1f214698,RandomService.java,nextBoolean,"    public Boolean nextBoolean() {
        return random.nextBoolean();
    }",https://www.github.com/dius/java-faker/commit/f05ad85f9cf4d8b4adb01f099f17d35e1f214698,"    public Boolean nextBoolean() {
        return random.nextBoolean();
    }
","['    ', 'public', ' ', 'Boolean', ' ', 'nextBoolean', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'random', '.', 'nextBoolean', '(', ')', ';', '\n', '    ', '}', '\n']"
master,dac2bec127569a1dddc6886f7909099ab8e6e414,Internet.java,safeEmailAddress,"    public String safeEmailAddress(){
        return emailAddress(join(new Object[]{
                name.firstName().toLowerCase().replaceAll(""'"", """"),",https://www.github.com/dius/java-faker/commit/dac2bec127569a1dddc6886f7909099ab8e6e414,"    public String safeEmailAddress(){
        return emailAddress(join(new Object[]{
                name.firstName().toLowerCase().replaceAll(""'"", """"),
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', ')', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'name', '.', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ',', '\n']"
master,dac2bec127569a1dddc6886f7909099ab8e6e414,Internet.java,safeEmailAddress,"    public String safeEmailAddress(String localPart){
        return join(new Object[]{
                localPart,",https://www.github.com/dius/java-faker/commit/dac2bec127569a1dddc6886f7909099ab8e6e414,"    public String safeEmailAddress(String localPart){
        return join(new Object[]{
                localPart,
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', 'String', ' ', 'localPart', ')', '{', '\n', '        ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'localPart', ',', '\n']"
master,dac2bec127569a1dddc6886f7909099ab8e6e414,InternetTest.java,testSafeEmailAddress,"    public void testSafeEmailAddress() {
        String emailAddress = faker.internet().safeEmailAddress();
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }",https://www.github.com/dius/java-faker/commit/dac2bec127569a1dddc6886f7909099ab8e6e414,"    public void testSafeEmailAddress() {
        String emailAddress = faker.internet().safeEmailAddress();
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSafeEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'safeEmailAddress', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dac2bec127569a1dddc6886f7909099ab8e6e414,InternetTest.java,testSafeEmailAddressWithLocalPartParameter,"    public void testSafeEmailAddressWithLocalPartParameter() {
        String emailAddress = faker.internet().emailAddress(""john"");
        assertThat(emailAddress, startsWith(""john@""));
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }",https://www.github.com/dius/java-faker/commit/dac2bec127569a1dddc6886f7909099ab8e6e414,"    public void testSafeEmailAddressWithLocalPartParameter() {
        String emailAddress = faker.internet().emailAddress(""john"");
        assertThat(emailAddress, startsWith(""john@""));
        assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSafeEmailAddressWithLocalPartParameter', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'emailAddress', '(', '""', 'john', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'emailAddress', ',', ' ', 'startsWith', '(', '""', 'john@', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ed24b1b179c6c4edfb7f36761d2e1fbfb408550e,Internet.java,image,"    public String image(Integer width, Integer height, Boolean gray, String text) {
        return String.format(""http://lorempixel.com/%s%s/%s/%s/%s"",
                gray ? ""g/"" : StringUtils.EMPTY, width, height, fakeValuesService.fetchString(""internet.image_category""),",https://www.github.com/dius/java-faker/commit/ed24b1b179c6c4edfb7f36761d2e1fbfb408550e,"    public String image(Integer width, Integer height, Boolean gray, String text) {
        return String.format(""http://lorempixel.com/%s%s/%s/%s/%s"",
                gray ? ""g/"" : StringUtils.EMPTY, width, height, fakeValuesService.fetchString(""internet.image_category""),
","['    ', 'public', ' ', 'String', ' ', 'image', '(', 'Integer', ' ', 'width', ',', ' ', 'Integer', ' ', 'height', ',', ' ', 'Boolean', ' ', 'gray', ',', ' ', 'String', ' ', 'text', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', 'http://lorempixel.com/%s%s/%s/%s/%s', '""', ',', '\n', '                ', 'gray', ' ', '?', ' ', '""', 'g/', '""', ' ', ':', ' ', 'StringUtils', '.', 'EMPTY', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'fakeValuesService', '.', 'fetchString', '(', '""', 'internet.image_category', '""', ')', ',', '\n']"
master,ed24b1b179c6c4edfb7f36761d2e1fbfb408550e,InternetTest.java,testImage,"    public void testImage() {
        String imageUrl = faker.internet().image();
        assertThat(imageUrl, matchesRegularExpression(""^http:\\/\\/lorempixel\\.com(/g)?/\\d{1,4}/\\d{1,4}/\\w+/$""));
    }",https://www.github.com/dius/java-faker/commit/ed24b1b179c6c4edfb7f36761d2e1fbfb408550e,"    public void testImage() {
        String imageUrl = faker.internet().image();
        assertThat(imageUrl, matchesRegularExpression(""^http:\\/\\/lorempixel\\.com(/g)?/\\d{1,4}/\\d{1,4}/\\w+/$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testImage', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'imageUrl', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'image', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'imageUrl', ',', ' ', 'matchesRegularExpression', '(', '""', '^http:', '\\\\', '/', '\\\\', '/lorempixel', '\\\\', '.com(/g)?/', '\\\\', 'd{1,4}/', '\\\\', 'd{1,4}/', '\\\\', 'w+/$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ed24b1b179c6c4edfb7f36761d2e1fbfb408550e,InternetTest.java,testImageWithExplicitParams,"    public void testImageWithExplicitParams() {
        String imageUrl = faker.internet().image(800, 600, false, ""bugs"");
        assertThat(imageUrl, matchesRegularExpression(""^http:\\/\\/lorempixel\\.com/800/600/\\w+/bugs$""));
    }",https://www.github.com/dius/java-faker/commit/ed24b1b179c6c4edfb7f36761d2e1fbfb408550e,"    public void testImageWithExplicitParams() {
        String imageUrl = faker.internet().image(800, 600, false, ""bugs"");
        assertThat(imageUrl, matchesRegularExpression(""^http:\\/\\/lorempixel\\.com/800/600/\\w+/bugs$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testImageWithExplicitParams', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'imageUrl', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'image', '(', '800', ',', ' ', '600', ',', ' ', 'false', ',', ' ', '""', 'bugs', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'imageUrl', ',', ' ', 'matchesRegularExpression', '(', '""', '^http:', '\\\\', '/', '\\\\', '/lorempixel', '\\\\', '.com/800/600/', '\\\\', 'w+/bugs$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,690415f159e8b5c7dc6f673ad220f86620a5cea8,FakeValuesService.java,normalizeLocale,"    private Locale normalizeLocale(Locale locale) {
        final String[] parts = locale.toString().split(""[-\\_]"");
        
        if (parts.length == 1) {
            return new Locale(parts[0]);",https://www.github.com/dius/java-faker/commit/690415f159e8b5c7dc6f673ad220f86620a5cea8,"    private Locale normalizeLocale(Locale locale) {
        final String[] parts = locale.toString().split(""[-\\_]"");
        
        if (parts.length == 1) {
            return new Locale(parts[0]);
","['    ', 'private', ' ', 'Locale', ' ', 'normalizeLocale', '(', 'Locale', ' ', 'locale', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'parts', ' ', '=', ' ', 'locale', '.', 'toString', '(', ')', '.', 'split', '(', '""', '[-', '\\\\', '_]', '""', ')', ';', '\n', '        ', '\n', '        ', 'if', ' ', '(', 'parts', '.', 'length', ' ', '=', '=', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'Locale', '(', 'parts', '[', '0', ']', ')', ';', '\n']"
master,690415f159e8b5c7dc6f673ad220f86620a5cea8,FakerIT.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.US, null},
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {Locale.CANADA_FRENCH, null},
                {Locale.TRADITIONAL_CHINESE, null},
                {new Locale(""pt""), null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {new Locale(""pt-BR""), null},
                {new Locale(""pt-br""), null},
                {new Locale(""Pt_br""), null},
                {new Locale(""pT_Br""), null},
                {new Locale(""pt"",""Br"",""x2""), null},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/690415f159e8b5c7dc6f673ad220f86620a5cea8,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.US, null},
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {Locale.CANADA_FRENCH, null},
                {Locale.TRADITIONAL_CHINESE, null},
                {new Locale(""pt""), null},
                {FINNISH_LOCALE, null},
                {Locale.ENGLISH, new Random()},
                {new Locale(""pt-BR""), null},
                {new Locale(""pt-br""), null},
                {new Locale(""Pt_br""), null},
                {new Locale(""pT_Br""), null},
                {new Locale(""pt"",""Br"",""x2""), null},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'US', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'CANADA_FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'TRADITIONAL_CHINESE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'FINNISH_LOCALE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt-BR', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt-br', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'Pt_br', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pT_Br', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt', '""', ',', '""', 'Br', '""', ',', '""', 'x2', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,690415f159e8b5c7dc6f673ad220f86620a5cea8,MostSpecificLocaleIT.java,setupFakers,"    public void setupFakers() {
        en = new FakeValuesService(new Locale(""en""), null);
        en_US = new FakeValuesService(new Locale(""en"",""US""), null);
    }",https://www.github.com/dius/java-faker/commit/690415f159e8b5c7dc6f673ad220f86620a5cea8,"    public void setupFakers() {
        en = new FakeValuesService(new Locale(""en""), null);
        en_US = new FakeValuesService(new Locale(""en"",""US""), null);
    }
","['    ', 'public', ' ', 'void', ' ', 'setupFakers', '(', ')', ' ', '{', '\n', '        ', 'en', ' ', '=', ' ', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'en', '""', ')', ',', ' ', 'null', ')', ';', '\n', '        ', 'en_US', ' ', '=', ' ', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'en', '""', ',', '""', 'US', '""', ')', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n']"
master,690415f159e8b5c7dc6f673ad220f86620a5cea8,MostSpecificLocaleIT.java,resolvesTheMostSpecificLocale,"    public void resolvesTheMostSpecificLocale() {
        
        final List<String> enDefaultCountries = (List<String>) en.fetchObject(""address.default_country"");
        final List<String> enUsDefaultCountries = (List<String>) en_US.fetchObject(""address.default_country"");
        
        assertThat(enDefaultCountries, hasSize(1));
        assertThat(enUsDefaultCountries, hasSize(3));
        
        assertThat(""the default country for en is not en_US"", enDefaultCountries, is(not(enUsDefaultCountries)));
    }",https://www.github.com/dius/java-faker/commit/690415f159e8b5c7dc6f673ad220f86620a5cea8,"    public void resolvesTheMostSpecificLocale() {
        
        final List<String> enDefaultCountries = (List<String>) en.fetchObject(""address.default_country"");
        final List<String> enUsDefaultCountries = (List<String>) en_US.fetchObject(""address.default_country"");
        
        assertThat(enDefaultCountries, hasSize(1));
        assertThat(enUsDefaultCountries, hasSize(3));
        
        assertThat(""the default country for en is not en_US"", enDefaultCountries, is(not(enUsDefaultCountries)));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolvesTheMostSpecificLocale', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'List', '<', 'String', '>', ' ', 'enDefaultCountries', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'en', '.', 'fetchObject', '(', '""', 'address.default_country', '""', ')', ';', '\n', '        ', 'final', ' ', 'List', '<', 'String', '>', ' ', 'enUsDefaultCountries', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'en_US', '.', 'fetchObject', '(', '""', 'address.default_country', '""', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', 'enDefaultCountries', ',', ' ', 'hasSize', '(', '1', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'enUsDefaultCountries', ',', ' ', 'hasSize', '(', '3', ')', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'the default country for en is not en_US', '""', ',', ' ', 'enDefaultCountries', ',', ' ', 'is', '(', 'not', '(', 'enUsDefaultCountries', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,macAddress,"    public String macAddress(String prefix) {
        final String tmp = (prefix == null) ? """" : prefix;
        final int prefixLength = tmp.trim().length() == 0 
          ? 0 
          : tmp.split("":"").length;
        
        final StringBuilder out = new StringBuilder(tmp);
        for (int i=0;i < 6 - prefixLength;i++) {
            if (out.length() > 0) {
                out.append(':');
            }
            out.append(Integer.toHexString(randomService.nextInt(16)));
            out.append(Integer.toHexString(randomService.nextInt(16)));
        }
        return out.toString();
    }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String macAddress(String prefix) {
        final String tmp = (prefix == null) ? """" : prefix;
        final int prefixLength = tmp.trim().length() == 0 
          ? 0 
          : tmp.split("":"").length;
        
        final StringBuilder out = new StringBuilder(tmp);
        for (int i=0;i < 6 - prefixLength;i++) {
            if (out.length() > 0) {
                out.append(':');
            }
            out.append(Integer.toHexString(randomService.nextInt(16)));
            out.append(Integer.toHexString(randomService.nextInt(16)));
        }
        return out.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'macAddress', '(', 'String', ' ', 'prefix', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'tmp', ' ', '=', ' ', '(', 'prefix', ' ', '=', '=', ' ', 'null', ')', ' ', '?', ' ', '""', '""', ' ', ':', ' ', 'prefix', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'prefixLength', ' ', '=', ' ', 'tmp', '.', 'trim', '(', ')', '.', 'length', '(', ')', ' ', '=', '=', ' ', '0', ' ', '\n', '          ', '?', ' ', '0', ' ', '\n', '          ', ':', ' ', 'tmp', '.', 'split', '(', '""', ':', '""', ')', '.', 'length', ';', '\n', '        ', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', 'tmp', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', ' ', '<', ' ', '6', ' ', '-', ' ', 'prefixLength', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'out', '.', 'length', '(', ')', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '                ', 'out', '.', 'append', '(', ""':'"", ')', ';', '\n', '            ', '}', '\n', '            ', 'out', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'randomService', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'out', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'randomService', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'out', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,macAddress,"    public String macAddress() {
        return macAddress("""");
    }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String macAddress() {
        return macAddress("""");
    }
","['    ', 'public', ' ', 'String', ' ', 'macAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'macAddress', '(', '""', '""', ')', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,ipV4Address,"    public String ipV4Address() {
        return String.format(""%d.%d.%d.%d"",
          randomService.nextInt(254) + 2,",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String ipV4Address() {
        return String.format(""%d.%d.%d.%d"",
          randomService.nextInt(254) + 2,
","['    ', 'public', ' ', 'String', ' ', 'ipV4Address', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%d.%d.%d.%d', '""', ',', '\n', '          ', 'randomService', '.', 'nextInt', '(', '254', ')', ' ', '+', ' ', '2', ',', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,privateIpV4Address,"    public String privateIpV4Address() {
        String addr = null;
        do {
            addr = ipV4Address(); 
        } while (!isPrivate(addr));
        return addr;
    }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String privateIpV4Address() {
        String addr = null;
        do {
            addr = ipV4Address(); 
        } while (!isPrivate(addr));
        return addr;
    }
","['    ', 'public', ' ', 'String', ' ', 'privateIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'addr', ' ', '=', ' ', 'null', ';', '\n', '        ', 'do', ' ', '{', '\n', '            ', 'addr', ' ', '=', ' ', 'ipV4Address', '(', ')', ';', ' ', '\n', '        ', '}', ' ', 'while', ' ', '(', '!', 'isPrivate', '(', 'addr', ')', ')', ';', '\n', '        ', 'return', ' ', 'addr', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,publicIpV4Address,"    public String publicIpV4Address() {
        String addr = null;
        do {
            addr = ipV4Address();
        } while (isPrivate(addr));
        return addr;
    }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String publicIpV4Address() {
        String addr = null;
        do {
            addr = ipV4Address();
        } while (isPrivate(addr));
        return addr;
    }
","['    ', 'public', ' ', 'String', ' ', 'publicIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'addr', ' ', '=', ' ', 'null', ';', '\n', '        ', 'do', ' ', '{', '\n', '            ', 'addr', ' ', '=', ' ', 'ipV4Address', '(', ')', ';', '\n', '        ', '}', ' ', 'while', ' ', '(', 'isPrivate', '(', 'addr', ')', ')', ';', '\n', '        ', 'return', ' ', 'addr', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,ipV4Cidr,"    public String ipV4Cidr() {
        return new StringBuilder(ipV4Address())
          .append('/')",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String ipV4Cidr() {
        return new StringBuilder(ipV4Address())
          .append('/')
","['    ', 'public', ' ', 'String', ' ', 'ipV4Cidr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'StringBuilder', '(', 'ipV4Address', '(', ')', ')', '\n', '          ', '.', 'append', '(', ""'/'"", ')', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,ipV6Address,"    public String ipV6Address() {
        final StringBuilder tmp = new StringBuilder();
        for (int i=0;i < 8;i++) {
            if (i > 0) {
                tmp.append("":"");
            }
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
        }
        return tmp.toString();
    }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String ipV6Address() {
        final StringBuilder tmp = new StringBuilder();
        for (int i=0;i < 8;i++) {
            if (i > 0) {
                tmp.append("":"");
            }
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
            tmp.append(Integer.toHexString(randomService.nextInt(16)));
        }
        return tmp.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'ipV6Address', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'tmp', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', ' ', '<', ' ', '8', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'i', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '                ', 'tmp', '.', 'append', '(', '""', ':', '""', ')', ';', '\n', '            ', '}', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'randomService', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'randomService', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'randomService', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'randomService', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'tmp', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,ipV6Cidr,"    public String ipV6Cidr() {
        return new StringBuilder(ipV6Address())
          .append('/')",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public String ipV6Cidr() {
        return new StringBuilder(ipV6Address())
          .append('/')
","['    ', 'public', ' ', 'String', ' ', 'ipV6Cidr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'StringBuilder', '(', 'ipV6Address', '(', ')', ')', '\n', '          ', '.', 'append', '(', ""'/'"", ')', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,Internet.java,isPrivate,"    private final boolean isPrivate(String addr) {
        for (int i = 0; i< PRIVATE_IPV4_NETS_REGEX.length; i++) {
            if (addr.matches(PRIVATE_IPV4_NETS_REGEX[i])) {
                return true;
            }
        }
        return false;
    }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    private final boolean isPrivate(String addr) {
        for (int i = 0; i< PRIVATE_IPV4_NETS_REGEX.length; i++) {
            if (addr.matches(PRIVATE_IPV4_NETS_REGEX[i])) {
                return true;
            }
        }
        return false;
    }
","['    ', 'private', ' ', 'final', ' ', 'boolean', ' ', 'isPrivate', '(', 'String', ' ', 'addr', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', '<', ' ', 'PRIVATE_IPV4_NETS_REGEX', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'addr', '.', 'matches', '(', 'PRIVATE_IPV4_NETS_REGEX', '[', 'i', ']', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'true', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'false', ';', '\n', '    ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testMacAddress,"    public void testMacAddress() {
        assertThat(faker.internet().macAddress(), countOf(':', is(5)));
        assertThat(faker.internet().macAddress(""""), countOf(':', is(5)));

        assertThat(faker.internet().macAddress(""fa:fa:fa""), startsWith(""fa:fa:fa""));
        assertThat(faker.internet().macAddress(""fa:fa:fa""), countOf(':', is(5)));

        assertThat(faker.internet().macAddress(""01:02""), startsWith(""01:02""));
        assertThat(faker.internet().macAddress(""01:02""), countOf(':', is(5)));

        // loop through 1000 times just to 'run it through the wringer'
        for (int i=0; i<1000;i++) {
            assertThat(",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testMacAddress() {
        assertThat(faker.internet().macAddress(), countOf(':', is(5)));
        assertThat(faker.internet().macAddress(""""), countOf(':', is(5)));

        assertThat(faker.internet().macAddress(""fa:fa:fa""), startsWith(""fa:fa:fa""));
        assertThat(faker.internet().macAddress(""fa:fa:fa""), countOf(':', is(5)));

        assertThat(faker.internet().macAddress(""01:02""), startsWith(""01:02""));
        assertThat(faker.internet().macAddress(""01:02""), countOf(':', is(5)));

        
        for (int i=0; i<1000;i++) {
            assertThat(
","['    ', 'public', ' ', 'void', ' ', 'testMacAddress', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'macAddress', '(', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '5', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'macAddress', '(', '""', '""', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '5', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'macAddress', '(', '""', 'fa:fa:fa', '""', ')', ',', ' ', 'startsWith', '(', '""', 'fa:fa:fa', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'macAddress', '(', '""', 'fa:fa:fa', '""', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '5', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'macAddress', '(', '""', '01:02', '""', ')', ',', ' ', 'startsWith', '(', '""', '01:02', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'macAddress', '(', '""', '01:02', '""', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '5', ')', ')', ')', ';', '\n', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', ' ', 'i', '<', '1000', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testIpV4Address,"    public void testIpV4Address() {
        assertThat(faker.internet().ipV4Address(), countOf('.', is(3)));
        for (int i = 0; i < 100; i++) {
            final String[] octets = faker.internet().ipV4Address().split(""\\."");",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testIpV4Address() {
        assertThat(faker.internet().ipV4Address(), countOf('.', is(3)));
        for (int i = 0; i < 100; i++) {
            final String[] octets = faker.internet().ipV4Address().split(""\\."");
","['    ', 'public', ' ', 'void', ' ', 'testIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Address', '(', ')', ',', ' ', 'countOf', '(', ""'.'"", ',', ' ', 'is', '(', '3', ')', ')', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'final', ' ', 'String', '[', ']', ' ', 'octets', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Address', '(', ')', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testIpV4Cidr,"    public void testIpV4Cidr() {
        assertThat(faker.internet().ipV4Cidr(), countOf('.', is(3)));
        assertThat(faker.internet().ipV4Cidr(), countOf('/', is(1)));
        
        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV4Cidr().split(""\\/"")[1]),",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testIpV4Cidr() {
        assertThat(faker.internet().ipV4Cidr(), countOf('.', is(3)));
        assertThat(faker.internet().ipV4Cidr(), countOf('/', is(1)));
        
        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV4Cidr().split(""\\/"")[1]),
","['    ', 'public', ' ', 'void', ' ', 'testIpV4Cidr', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Cidr', '(', ')', ',', ' ', 'countOf', '(', ""'.'"", ',', ' ', 'is', '(', '3', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Cidr', '(', ')', ',', ' ', 'countOf', '(', ""'/'"", ',', ' ', 'is', '(', '1', ')', ')', ')', ';', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'parseInt', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Cidr', '(', ')', '.', 'split', '(', '""', '\\\\', '/', '""', ')', '[', '1', ']', ')', ',', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testPrivateIpV4Address,"    public void testPrivateIpV4Address() {
        String tenDot = ""^10\\..+"";
        String oneTwoSeven = ""^127\\..+"";
        String oneSixNine = ""^169\\.254\\..+"";
        String oneNineTwo = ""^192\\.168\\..+"";
        String oneSevenTwo = ""^172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\..+"";
        for (int i = 0; i < 1000; i++) {
            String addr = faker.internet().privateIpV4Address();",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testPrivateIpV4Address() {
        String tenDot = ""^10\\..+"";
        String oneTwoSeven = ""^127\\..+"";
        String oneSixNine = ""^169\\.254\\..+"";
        String oneNineTwo = ""^192\\.168\\..+"";
        String oneSevenTwo = ""^172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\..+"";
        for (int i = 0; i < 1000; i++) {
            String addr = faker.internet().privateIpV4Address();
","['    ', 'public', ' ', 'void', ' ', 'testPrivateIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'tenDot', ' ', '=', ' ', '""', '^10', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneTwoSeven', ' ', '=', ' ', '""', '^127', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneSixNine', ' ', '=', ' ', '""', '^169', '\\\\', '.254', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneNineTwo', ' ', '=', ' ', '""', '^192', '\\\\', '.168', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneSevenTwo', ' ', '=', ' ', '""', '^172', '\\\\', '.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)', '\\\\', '..+', '""', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'addr', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'privateIpV4Address', '(', ')', ';', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testPublicIpV4Address,"    public void testPublicIpV4Address() {
        String tenDot = ""^10\\."";
        String oneTwoSeven = ""^127\\."";
        String oneSixNine = ""^169\\.254"";
        String oneNineTwo = ""^192\\.168\\."";
        String oneSevenTwo = ""^172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\."";
        for (int i = 0; i < 1000; i++) {
            String addr = faker.internet().publicIpV4Address();",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testPublicIpV4Address() {
        String tenDot = ""^10\\."";
        String oneTwoSeven = ""^127\\."";
        String oneSixNine = ""^169\\.254"";
        String oneNineTwo = ""^192\\.168\\."";
        String oneSevenTwo = ""^172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\."";
        for (int i = 0; i < 1000; i++) {
            String addr = faker.internet().publicIpV4Address();
","['    ', 'public', ' ', 'void', ' ', 'testPublicIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'tenDot', ' ', '=', ' ', '""', '^10', '\\\\', '.', '""', ';', '\n', '        ', 'String', ' ', 'oneTwoSeven', ' ', '=', ' ', '""', '^127', '\\\\', '.', '""', ';', '\n', '        ', 'String', ' ', 'oneSixNine', ' ', '=', ' ', '""', '^169', '\\\\', '.254', '""', ';', '\n', '        ', 'String', ' ', 'oneNineTwo', ' ', '=', ' ', '""', '^192', '\\\\', '.168', '\\\\', '.', '""', ';', '\n', '        ', 'String', ' ', 'oneSevenTwo', ' ', '=', ' ', '""', '^172', '\\\\', '.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)', '\\\\', '.', '""', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'addr', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'publicIpV4Address', '(', ')', ';', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testIpV6,"    public void testIpV6() {
        assertThat(faker.internet().ipV6Address(), countOf(':', is(7)));
        
        for (int i = 0; i < 1000; i++) {
            assertThat(",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testIpV6() {
        assertThat(faker.internet().ipV6Address(), countOf(':', is(7)));
        
        for (int i = 0; i < 1000; i++) {
            assertThat(
","['    ', 'public', ' ', 'void', ' ', 'testIpV6', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Address', '(', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '7', ')', ')', ')', ';', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,InternetTest.java,testIpV6Cidr,"    public void testIpV6Cidr() {
        assertThat(faker.internet().ipV6Cidr(), countOf(':', is(7)));
        assertThat(faker.internet().ipV6Cidr(), countOf('/', is(1)));

        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV6Cidr().split(""\\/"")[1]),",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"    public void testIpV6Cidr() {
        assertThat(faker.internet().ipV6Cidr(), countOf(':', is(7)));
        assertThat(faker.internet().ipV6Cidr(), countOf('/', is(1)));

        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV6Cidr().split(""\\/"")[1]),
","['    ', 'public', ' ', 'void', ' ', 'testIpV6Cidr', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Cidr', '(', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '7', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Cidr', '(', ')', ',', ' ', 'countOf', '(', ""'/'"", ',', ' ', 'is', '(', '1', ')', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'parseInt', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Cidr', '(', ')', '.', 'split', '(', '""', '\\\\', '/', '""', ')', '[', '1', ']', ')', ',', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,CountOfCharactersMatcher.java,countOf,"  public static <T> Matcher<String> countOf(char character, Matcher<Integer> matcher) {
    return new CountOfCharactersMatcher(character, matcher);
  }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"  public static <T> Matcher<String> countOf(char character, Matcher<Integer> matcher) {
    return new CountOfCharactersMatcher(character, matcher);
  }
","['  ', 'public', ' ', 'static', ' ', '<', 'T', '>', ' ', 'Matcher', '<', 'String', '>', ' ', 'countOf', '(', 'char', ' ', 'character', ',', ' ', 'Matcher', '<', 'Integer', '>', ' ', 'matcher', ')', ' ', '{', '\n', '    ', 'return', ' ', 'new', ' ', 'CountOfCharactersMatcher', '(', 'character', ',', ' ', 'matcher', ')', ';', '\n', '  ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,CountOfCharactersMatcher.java,matchesSafely,"  protected boolean matchesSafely(String item) {
    int count = count(item);
    return matcher.matches(count);
  }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"  protected boolean matchesSafely(String item) {
    int count = count(item);
    return matcher.matches(count);
  }
","['  ', 'protected', ' ', 'boolean', ' ', 'matchesSafely', '(', 'String', ' ', 'item', ')', ' ', '{', '\n', '    ', 'int', ' ', 'count', ' ', '=', ' ', 'count', '(', 'item', ')', ';', '\n', '    ', 'return', ' ', 'matcher', '.', 'matches', '(', 'count', ')', ';', '\n', '  ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,CountOfCharactersMatcher.java,count,"  private int count(String item) {
    int count = 0;
    for (char c : item.toCharArray()) {
      count += (c == character) ? 1 : 0;
    }
    return count;
  }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"  private int count(String item) {
    int count = 0;
    for (char c : item.toCharArray()) {
      count += (c == character) ? 1 : 0;
    }
    return count;
  }
","['  ', 'private', ' ', 'int', ' ', 'count', '(', 'String', ' ', 'item', ')', ' ', '{', '\n', '    ', 'int', ' ', 'count', ' ', '=', ' ', '0', ';', '\n', '    ', 'for', ' ', '(', 'char', ' ', 'c', ' ', ':', ' ', 'item', '.', 'toCharArray', '(', ')', ')', ' ', '{', '\n', '      ', 'count', ' ', '+', '=', ' ', '(', 'c', ' ', '=', '=', ' ', 'character', ')', ' ', '?', ' ', '1', ' ', ':', ' ', '0', ';', '\n', '    ', '}', '\n', '    ', 'return', ' ', 'count', ';', '\n', '  ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,CountOfCharactersMatcher.java,describeTo,"  public void describeTo(Description description) {
    description.appendText(""count of "" + character + "" "").appendDescriptionOf(matcher);
  }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"  public void describeTo(Description description) {
    description.appendText(""count of "" + character + "" "").appendDescriptionOf(matcher);
  }
","['  ', 'public', ' ', 'void', ' ', 'describeTo', '(', 'Description', ' ', 'description', ')', ' ', '{', '\n', '    ', 'description', '.', 'appendText', '(', '""', 'count of ', '""', ' ', '+', ' ', 'character', ' ', '+', ' ', '""', ' ', '""', ')', '.', 'appendDescriptionOf', '(', 'matcher', ')', ';', '\n', '  ', '}', '\n']"
master,773ea626329b9d91898f35281154c77a4f5a9e2d,CountOfCharactersMatcher.java,describeMismatchSafely,"  protected void describeMismatchSafely(String item, Description mismatchDescription) {
    mismatchDescription.appendText(""count of "" + character + "" "");
    matcher.describeMismatch(count(item), mismatchDescription);
  }",https://www.github.com/dius/java-faker/commit/773ea626329b9d91898f35281154c77a4f5a9e2d,"  protected void describeMismatchSafely(String item, Description mismatchDescription) {
    mismatchDescription.appendText(""count of "" + character + "" "");
    matcher.describeMismatch(count(item), mismatchDescription);
  }
","['  ', 'protected', ' ', 'void', ' ', 'describeMismatchSafely', '(', 'String', ' ', 'item', ',', ' ', 'Description', ' ', 'mismatchDescription', ')', ' ', '{', '\n', '    ', 'mismatchDescription', '.', 'appendText', '(', '""', 'count of ', '""', ' ', '+', ' ', 'character', ' ', '+', ' ', '""', ' ', '""', ')', ';', '\n', '    ', 'matcher', '.', 'describeMismatch', '(', 'count', '(', 'item', ')', ',', ' ', 'mismatchDescription', ')', ';', '\n', '  ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,streetName,"    public String streetName() {
        return faker.fakeValuesService().resolve(""address.street_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String streetName() {
        return faker.fakeValuesService().resolve(""address.street_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.street_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,streetAddressNumber,"    public String streetAddressNumber() {
        return String.valueOf(faker.random().nextInt(1000));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String streetAddressNumber() {
        return String.valueOf(faker.random().nextInt(1000));
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddressNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'valueOf', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '1000', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,streetAddress,"    public String streetAddress() {
        return faker.fakeValuesService().resolve(""address.street_address"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String streetAddress() {
        return faker.fakeValuesService().resolve(""address.street_address"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.street_address', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,streetAddress,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = faker.fakeValuesService().resolve(""address.street_address"", this, faker);
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return streetAddress;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String streetAddress(boolean includeSecondary) {
        String streetAddress = faker.fakeValuesService().resolve(""address.street_address"", this, faker);
        if (includeSecondary) {
            streetAddress = streetAddress + "" "" + secondaryAddress();
        }
        return streetAddress;
    }
","['    ', 'public', ' ', 'String', ' ', 'streetAddress', '(', 'boolean', ' ', 'includeSecondary', ')', ' ', '{', '\n', '        ', 'String', ' ', 'streetAddress', ' ', '=', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.street_address', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '        ', 'if', ' ', '(', 'includeSecondary', ')', ' ', '{', '\n', '            ', 'streetAddress', ' ', '=', ' ', 'streetAddress', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'secondaryAddress', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'streetAddress', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,secondaryAddress,"    public String secondaryAddress() {
        return faker.numerify(faker.fakeValuesService().resolve(""address.secondary_address"", this,faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String secondaryAddress() {
        return faker.numerify(faker.fakeValuesService().resolve(""address.secondary_address"", this,faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'secondaryAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.secondary_address', '""', ',', ' ', 'this', ',', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,zipCode,"    public String zipCode() {
        return faker.bothify(faker.fakeValuesService().resolve(""address.postcode"", this,faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String zipCode() {
        return faker.bothify(faker.fakeValuesService().resolve(""address.postcode"", this,faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'zipCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'bothify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.postcode', '""', ',', ' ', 'this', ',', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,streetSuffix,"    public String streetSuffix() {
        return faker.fakeValuesService().resolve(""address.street_suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String streetSuffix() {
        return faker.fakeValuesService().resolve(""address.street_suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.street_suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,streetPrefix,"    public String streetPrefix() {
        return faker.fakeValuesService().resolve(""address.street_prefix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String streetPrefix() {
        return faker.fakeValuesService().resolve(""address.street_prefix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'streetPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.street_prefix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,citySuffix,"    public String citySuffix() {
        return faker.fakeValuesService().resolve(""address.city_suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String citySuffix() {
        return faker.fakeValuesService().resolve(""address.city_suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'citySuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.city_suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,cityPrefix,"    public String cityPrefix() {
        return faker.fakeValuesService().resolve(""address.city_prefix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String cityPrefix() {
        return faker.fakeValuesService().resolve(""address.city_prefix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'cityPrefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.city_prefix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,city,"    public String city() {
        return faker.fakeValuesService().resolve(""address.city"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String city() {
        return faker.fakeValuesService().resolve(""address.city"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.city', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,cityName,"    public String cityName() {
        return faker.fakeValuesService().resolve(""address.city_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String cityName() {
        return faker.fakeValuesService().resolve(""address.city_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'cityName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.city_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,state,"    public String state() {
        return faker.fakeValuesService().resolve(""address.state"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String state() {
        return faker.fakeValuesService().resolve(""address.state"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'state', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.state', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,stateAbbr,"    public String stateAbbr() {
        return faker.fakeValuesService().resolve(""address.state_abbr"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String stateAbbr() {
        return faker.fakeValuesService().resolve(""address.state_abbr"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'stateAbbr', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.state_abbr', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,firstName,"    public String firstName() {
        return faker.name().firstName();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String firstName() {
        return faker.name().firstName();
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'name', '(', ')', '.', 'firstName', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,lastName,"    public String lastName() {
        return faker.name().lastName();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String lastName() {
        return faker.name().lastName();
    }
","['    ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'name', '(', ')', '.', 'lastName', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,latitude,"    public String latitude() {
        return String.format(""%.8g"", (faker.random().nextDouble() * 180) - 90);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String latitude() {
        return String.format(""%.8g"", (faker.random().nextDouble() * 180) - 90);
    }
","['    ', 'public', ' ', 'String', ' ', 'latitude', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%.8g', '""', ',', ' ', '(', 'faker', '.', 'random', '(', ')', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '180', ')', ' ', '-', ' ', '90', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,longitude,"    public String longitude() {
        return String.format(""%.8g"", (faker.random().nextDouble() * 360) - 180);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String longitude() {
        return String.format(""%.8g"", (faker.random().nextDouble() * 360) - 180);
    }
","['    ', 'public', ' ', 'String', ' ', 'longitude', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%.8g', '""', ',', ' ', '(', 'faker', '.', 'random', '(', ')', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '360', ')', ' ', '-', ' ', '180', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,timeZone,"    public String timeZone() {
        return faker.fakeValuesService().resolve(""address.time_zone"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String timeZone() {
        return faker.fakeValuesService().resolve(""address.time_zone"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'timeZone', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.time_zone', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,country,"    public String country() {
        return faker.fakeValuesService().resolve(""address.country"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String country() {
        return faker.fakeValuesService().resolve(""address.country"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'country', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.country', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,countryCode,"    public String countryCode() {
        return faker.fakeValuesService().resolve(""address.country_code"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String countryCode() {
        return faker.fakeValuesService().resolve(""address.country_code"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'countryCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.country_code', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Address.java,buildingNumber,"    public String buildingNumber() {
        return faker.numerify(faker.fakeValuesService().resolve(""address.building_number"", this, faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String buildingNumber() {
        return faker.numerify(faker.fakeValuesService().resolve(""address.building_number"", this, faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'buildingNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.building_number', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,App.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""app.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""app.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'app.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,App.java,version,"    public String version() {
        return faker.numerify(faker.fakeValuesService().resolve(""app.version"", this, faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String version() {
        return faker.numerify(faker.fakeValuesService().resolve(""app.version"", this, faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'version', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'app.version', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,App.java,author,"    public String author() {
        return faker.fakeValuesService().resolve(""app.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String author() {
        return faker.fakeValuesService().resolve(""app.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'author', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'app.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Beer.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""beer.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""beer.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'beer.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Beer.java,style,"    public String style() {
        return faker.fakeValuesService().resolve(""beer.style"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String style() {
        return faker.fakeValuesService().resolve(""beer.style"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'style', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'beer.style', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Beer.java,hop,"    public String hop() {
        return faker.fakeValuesService().resolve(""beer.hop"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String hop() {
        return faker.fakeValuesService().resolve(""beer.hop"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'hop', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'beer.hop', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Beer.java,yeast,"    public String yeast() {
        return faker.fakeValuesService().resolve(""beer.yeast"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String yeast() {
        return faker.fakeValuesService().resolve(""beer.yeast"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'yeast', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'beer.yeast', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Beer.java,malt,"    public String malt() {
        return faker.fakeValuesService().resolve(""beer.malt"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String malt() {
        return faker.fakeValuesService().resolve(""beer.malt"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'malt', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'beer.malt', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Book.java,author,"    public String author() {
        return faker.fakeValuesService().resolve(""book.author"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String author() {
        return faker.fakeValuesService().resolve(""book.author"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'author', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'book.author', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Book.java,title,"    public String title() {
        return faker.fakeValuesService().resolve(""book.title"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String title() {
        return faker.fakeValuesService().resolve(""book.title"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'book.title', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Book.java,publisher,"    public String publisher() {
        return faker.fakeValuesService().resolve(""book.publisher"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String publisher() {
        return faker.fakeValuesService().resolve(""book.publisher"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'publisher', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'book.publisher', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Book.java,genre,"    public String genre() {
        return faker.fakeValuesService().resolve(""book.genre"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String genre() {
        return faker.fakeValuesService().resolve(""book.genre"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'book.genre', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Bool.java,bool,"    public boolean bool() {
        return faker.random().nextBoolean();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public boolean bool() {
        return faker.random().nextBoolean();
    }
","['    ', 'public', ' ', 'boolean', ' ', 'bool', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextBoolean', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Business.java,creditCardNumber,"    public String creditCardNumber() {
        return faker.fakeValuesService().resolve(""business.credit_card_numbers"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String creditCardNumber() {
        return faker.fakeValuesService().resolve(""business.credit_card_numbers"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCardNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'business.credit_card_numbers', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Business.java,creditCardType,"    public String creditCardType() {
        return faker.fakeValuesService().resolve(""business.credit_card_types"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String creditCardType() {
        return faker.fakeValuesService().resolve(""business.credit_card_types"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCardType', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'business.credit_card_types', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Business.java,creditCardExpiry,"    public String creditCardExpiry() {
        return faker.fakeValuesService().resolve(""business.credit_card_expiry_dates"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String creditCardExpiry() {
        return faker.fakeValuesService().resolve(""business.credit_card_expiry_dates"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCardExpiry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'business.credit_card_expiry_dates', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Cat.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""cat.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""cat.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'cat.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Cat.java,breed,"    public String breed() {
        return faker.fakeValuesService().resolve(""cat.breed"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String breed() {
        return faker.fakeValuesService().resolve(""cat.breed"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'cat.breed', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Cat.java,registry,"    public String registry() {
        return faker.fakeValuesService().resolve(""cat.registry"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String registry() {
        return faker.fakeValuesService().resolve(""cat.registry"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'registry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'cat.registry', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,ChuckNorris.java,fact,"    public String fact() {
        return faker.fakeValuesService().resolve(""chuck_norris.fact"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String fact() {
        return faker.fakeValuesService().resolve(""chuck_norris.fact"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'fact', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'chuck_norris.fact', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Code.java,isbn10,"    public String isbn10() {
        StringBuilder isbn10 = new StringBuilder();
        int sum = 0;
        for (int i = 10; i > 1; i--) {
            int n = faker.random().nextInt(10);
            sum += i * n;
            isbn10.append(n);
        }
        int check = (11 - sum % 11) % 11;
        isbn10.append('-');
        isbn10.append(check != 10 ? check : ""X"");
        return isbn10.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String isbn10() {
        StringBuilder isbn10 = new StringBuilder();
        int sum = 0;
        for (int i = 10; i > 1; i--) {
            int n = faker.random().nextInt(10);
            sum += i * n;
            isbn10.append(n);
        }
        int check = (11 - sum % 11) % 11;
        isbn10.append('-');
        isbn10.append(check != 10 ? check : ""X"");
        return isbn10.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn10', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'isbn10', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '10', ';', ' ', 'i', ' ', '>', ' ', '1', ';', ' ', 'i', '-', '-', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '10', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'i', ' ', '*', ' ', 'n', ';', '\n', '            ', 'isbn10', '.', 'append', '(', 'n', ')', ';', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'check', ' ', '=', ' ', '(', '11', ' ', '-', ' ', 'sum', ' ', '%', ' ', '11', ')', ' ', '%', ' ', '11', ';', '\n', '        ', 'isbn10', '.', 'append', '(', ""'-'"", ')', ';', '\n', '        ', 'isbn10', '.', 'append', '(', 'check', ' ', '!', '=', ' ', '10', ' ', '?', ' ', 'check', ' ', ':', ' ', '""', 'X', '""', ')', ';', '\n', '        ', 'return', ' ', 'isbn10', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Code.java,isbn13,"    public String isbn13() {
        StringBuilder isbn13 = new StringBuilder();
        int sum = 0;
        int multiplier = 1;
        int a = 1;
        int b = 2;
        for (int i = 0; i < 12; i++) {
            int n = faker.random().nextInt(10);
            sum += multiplier * n;
            multiplier = multiplier == 1 ? 3 : 1;
            isbn13.append(n);
            if (i == b) {
                isbn13.append('-');
                int t = b;
                b += a;
                a = t;
            }
        }
        int check = (10 - sum % 10) % 10;
        isbn13.append(check);
        return isbn13.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String isbn13() {
        StringBuilder isbn13 = new StringBuilder();
        int sum = 0;
        int multiplier = 1;
        int a = 1;
        int b = 2;
        for (int i = 0; i < 12; i++) {
            int n = faker.random().nextInt(10);
            sum += multiplier * n;
            multiplier = multiplier == 1 ? 3 : 1;
            isbn13.append(n);
            if (i == b) {
                isbn13.append('-');
                int t = b;
                b += a;
                a = t;
            }
        }
        int check = (10 - sum % 10) % 10;
        isbn13.append(check);
        return isbn13.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn13', '(', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'isbn13', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'int', ' ', 'multiplier', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'a', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'b', ' ', '=', ' ', '2', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '12', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '10', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'multiplier', ' ', '*', ' ', 'n', ';', '\n', '            ', 'multiplier', ' ', '=', ' ', 'multiplier', ' ', '=', '=', ' ', '1', ' ', '?', ' ', '3', ' ', ':', ' ', '1', ';', '\n', '            ', 'isbn13', '.', 'append', '(', 'n', ')', ';', '\n', '            ', 'if', ' ', '(', 'i', ' ', '=', '=', ' ', 'b', ')', ' ', '{', '\n', '                ', 'isbn13', '.', 'append', '(', ""'-'"", ')', ';', '\n', '                ', 'int', ' ', 't', ' ', '=', ' ', 'b', ';', '\n', '                ', 'b', ' ', '+', '=', ' ', 'a', ';', '\n', '                ', 'a', ' ', '=', ' ', 't', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'check', ' ', '=', ' ', '(', '10', ' ', '-', ' ', 'sum', ' ', '%', ' ', '10', ')', ' ', '%', ' ', '10', ';', '\n', '        ', 'isbn13', '.', 'append', '(', 'check', ')', ';', '\n', '        ', 'return', ' ', 'isbn13', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Color.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""color.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""color.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'color.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Commerce.java,color,"    public String color() {
        return faker.fakeValuesService().resolve(""color.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String color() {
        return faker.fakeValuesService().resolve(""color.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'color', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'color.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Commerce.java,department,"    public String department() {
        int numberOfDepartments = Math.max(faker.random().nextInt(4), 1);
        SortedSet<String> departments = new TreeSet<String>();
        while (departments.size() < numberOfDepartments) {
            departments.add(faker.fakeValuesService().resolve(""commerce.department"", this, faker));
        }
        if (departments.size() > 1) {
            String lastDepartment = departments.last();",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String department() {
        int numberOfDepartments = Math.max(faker.random().nextInt(4), 1);
        SortedSet<String> departments = new TreeSet<String>();
        while (departments.size() < numberOfDepartments) {
            departments.add(faker.fakeValuesService().resolve(""commerce.department"", this, faker));
        }
        if (departments.size() > 1) {
            String lastDepartment = departments.last();
","['    ', 'public', ' ', 'String', ' ', 'department', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'numberOfDepartments', ' ', '=', ' ', 'Math', '.', 'max', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '4', ')', ',', ' ', '1', ')', ';', '\n', '        ', 'SortedSet', '<', 'String', '>', ' ', 'departments', ' ', '=', ' ', 'new', ' ', 'TreeSet', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'while', ' ', '(', 'departments', '.', 'size', '(', ')', ' ', '<', ' ', 'numberOfDepartments', ')', ' ', '{', '\n', '            ', 'departments', '.', 'add', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'commerce.department', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'departments', '.', 'size', '(', ')', ' ', '>', ' ', '1', ')', ' ', '{', '\n', '            ', 'String', ' ', 'lastDepartment', ' ', '=', ' ', 'departments', '.', 'last', '(', ')', ';', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Commerce.java,productName,"    public String productName() {
        return StringUtils.join(new String[] { 
            faker.fakeValuesService().resolve(""commerce.product_name.adjective"", this,faker), ",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String productName() {
        return StringUtils.join(new String[] { 
            faker.fakeValuesService().resolve(""commerce.product_name.adjective"", this,faker), 
","['    ', 'public', ' ', 'String', ' ', 'productName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'new', ' ', 'String', '[', ']', ' ', '{', ' ', '\n', '            ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'commerce.product_name.adjective', '""', ',', ' ', 'this', ',', 'faker', ')', ',', ' ', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Commerce.java,material,"    public String material() {
        return faker.fakeValuesService().resolve(""commerce.product_name.material"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String material() {
        return faker.fakeValuesService().resolve(""commerce.product_name.material"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'material', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'commerce.product_name.material', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Commerce.java,price,"    public String price(double min, double max) {
        double price =  min + (faker.random().nextDouble() * (max - min));
        return new DecimalFormat(""#0.00"").format(price);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String price(double min, double max) {
        double price =  min + (faker.random().nextDouble() * (max - min));
        return new DecimalFormat(""#0.00"").format(price);
    }
","['    ', 'public', ' ', 'String', ' ', 'price', '(', 'double', ' ', 'min', ',', ' ', 'double', ' ', 'max', ')', ' ', '{', '\n', '        ', 'double', ' ', 'price', ' ', '=', '  ', 'min', ' ', '+', ' ', '(', 'faker', '.', 'random', '(', ')', '.', 'nextDouble', '(', ')', ' ', '*', ' ', '(', 'max', ' ', '-', ' ', 'min', ')', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'DecimalFormat', '(', '""', '#0.00', '""', ')', '.', 'format', '(', 'price', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""company.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""company.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'company.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,suffix,"    public String suffix() {
        return faker.fakeValuesService().resolve(""company.suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String suffix() {
        return faker.fakeValuesService().resolve(""company.suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'company.suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,industry,"    public String industry() {
        return faker.fakeValuesService().resolve(""company.industry"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String industry() {
        return faker.fakeValuesService().resolve(""company.industry"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'industry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'company.industry', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,profession,"    public String profession() {
        return faker.fakeValuesService().resolve(""company.profession"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String profession() {
        return faker.fakeValuesService().resolve(""company.profession"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'profession', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'company.profession', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,buzzword,"    public String buzzword() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) faker.fakeValuesService().fetchObject(""company.buzzwords"");
        List<String> buzzwords = new ArrayList<String>();
        for (List<String> buzzwordList : buzzwordLists) {
            buzzwords.addAll(buzzwordList);
        }
        return buzzwords.get(faker.random().nextInt(buzzwords.size()));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String buzzword() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) faker.fakeValuesService().fetchObject(""company.buzzwords"");
        List<String> buzzwords = new ArrayList<String>();
        for (List<String> buzzwordList : buzzwordLists) {
            buzzwords.addAll(buzzwordList);
        }
        return buzzwords.get(faker.random().nextInt(buzzwords.size()));
    }
","['    ', 'public', ' ', 'String', ' ', 'buzzword', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'buzzwordLists', ' ', '=', ' ', '(', 'List', '<', 'List', '<', 'String', '>', '>', ')', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchObject', '(', '""', 'company.buzzwords', '""', ')', ';', '\n', '        ', 'List', '<', 'String', '>', ' ', 'buzzwords', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'List', '<', 'String', '>', ' ', 'buzzwordList', ' ', ':', ' ', 'buzzwordLists', ')', ' ', '{', '\n', '            ', 'buzzwords', '.', 'addAll', '(', 'buzzwordList', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'buzzwords', '.', 'get', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'buzzwords', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,catchPhrase,"    public String catchPhrase() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> catchPhraseLists = (List<List<String>>) faker.fakeValuesService().fetchObject(""company.buzzwords"");
        return joinSampleOfEachList(catchPhraseLists, "" "");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String catchPhrase() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> catchPhraseLists = (List<List<String>>) faker.fakeValuesService().fetchObject(""company.buzzwords"");
        return joinSampleOfEachList(catchPhraseLists, "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'catchPhrase', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'catchPhraseLists', ' ', '=', ' ', '(', 'List', '<', 'List', '<', 'String', '>', '>', ')', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchObject', '(', '""', 'company.buzzwords', '""', ')', ';', '\n', '        ', 'return', ' ', 'joinSampleOfEachList', '(', 'catchPhraseLists', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,bs,"    public String bs() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) faker.fakeValuesService().fetchObject(""company.bs"");
        return joinSampleOfEachList(buzzwordLists, "" "");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String bs() {
        @SuppressWarnings(""unchecked"")
        List<List<String>> buzzwordLists = (List<List<String>>) faker.fakeValuesService().fetchObject(""company.bs"");
        return joinSampleOfEachList(buzzwordLists, "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'bs', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'buzzwordLists', ' ', '=', ' ', '(', 'List', '<', 'List', '<', 'String', '>', '>', ')', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchObject', '(', '""', 'company.bs', '""', ')', ';', '\n', '        ', 'return', ' ', 'joinSampleOfEachList', '(', 'buzzwordLists', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,logo,"    public String logo() {
        int number = faker.random().nextInt(13) + 1;
        return ""https://pigment.github.io/fake-logos/logos/medium/color/"" + number + "".png"";
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String logo() {
        int number = faker.random().nextInt(13) + 1;
        return ""https://pigment.github.io/fake-logos/logos/medium/color/"" + number + "".png"";
    }
","['    ', 'public', ' ', 'String', ' ', 'logo', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'number', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '13', ')', ' ', '+', ' ', '1', ';', '\n', '        ', 'return', ' ', '""', 'https://pigment.github.io/fake-logos/logos/medium/color/', '""', ' ', '+', ' ', 'number', ' ', '+', ' ', '""', '.png', '""', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,domainSuffix,"    private String domainSuffix() {
        return faker.fakeValuesService().resolve(""internet.domain_suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String domainSuffix() {
        return faker.fakeValuesService().resolve(""internet.domain_suffix"", this, faker);
    }
","['    ', 'private', ' ', 'String', ' ', 'domainSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.domain_suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Company.java,joinSampleOfEachList,"    private String joinSampleOfEachList(List<List<String>> listOfLists, String separator) {
        List<String> words = new ArrayList<String>();
        for (List<String> list : listOfLists) {
           words.add(list.get(faker.random().nextInt(list.size())));
        }
        return join(words, separator);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String joinSampleOfEachList(List<List<String>> listOfLists, String separator) {
        List<String> words = new ArrayList<String>();
        for (List<String> list : listOfLists) {
           words.add(list.get(faker.random().nextInt(list.size())));
        }
        return join(words, separator);
    }
","['    ', 'private', ' ', 'String', ' ', 'joinSampleOfEachList', '(', 'List', '<', 'List', '<', 'String', '>', '>', ' ', 'listOfLists', ',', ' ', 'String', ' ', 'separator', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'List', '<', 'String', '>', ' ', 'list', ' ', ':', ' ', 'listOfLists', ')', ' ', '{', '\n', '           ', 'words', '.', 'add', '(', 'list', '.', 'get', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'list', '.', 'size', '(', ')', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'join', '(', 'words', ',', ' ', 'separator', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,DateAndTime.java,future,"    public Date future(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis += 1 + faker.random().nextLong(upperBound - 1);

        return new Date(futureMillis);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public Date future(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis += 1 + faker.random().nextLong(upperBound - 1);

        return new Date(futureMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'future', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ',', ' ', 'Date', ' ', 'referenceDate', ')', ' ', '{', '\n', '        ', 'long', ' ', 'upperBound', ' ', '=', ' ', 'unit', '.', 'toMillis', '(', 'atMost', ')', ';', '\n', '\n', '        ', 'long', ' ', 'futureMillis', ' ', '=', ' ', 'referenceDate', '.', 'getTime', '(', ')', ';', '\n', '        ', 'futureMillis', ' ', '+', '=', ' ', '1', ' ', '+', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'upperBound', ' ', '-', ' ', '1', ')', ';', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'futureMillis', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,DateAndTime.java,past,"    public Date past(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis -= 1 + faker.random().nextLong(upperBound - 1);

        return new Date(futureMillis);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public Date past(int atMost, TimeUnit unit, Date referenceDate) {
        long upperBound = unit.toMillis(atMost);

        long futureMillis = referenceDate.getTime();
        futureMillis -= 1 + faker.random().nextLong(upperBound - 1);

        return new Date(futureMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'past', '(', 'int', ' ', 'atMost', ',', ' ', 'TimeUnit', ' ', 'unit', ',', ' ', 'Date', ' ', 'referenceDate', ')', ' ', '{', '\n', '        ', 'long', ' ', 'upperBound', ' ', '=', ' ', 'unit', '.', 'toMillis', '(', 'atMost', ')', ';', '\n', '\n', '        ', 'long', ' ', 'futureMillis', ' ', '=', ' ', 'referenceDate', '.', 'getTime', '(', ')', ';', '\n', '        ', 'futureMillis', ' ', '-', '=', ' ', '1', ' ', '+', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'upperBound', ' ', '-', ' ', '1', ')', ';', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'futureMillis', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,DateAndTime.java,between,"    public Date between(Date from, Date to) throws IllegalArgumentException {
        if (to.before(from)) {
            throw new IllegalArgumentException(""Invalid date range, the upper bound date is before the lower bound."");
        }

        long offsetMillis = faker.random().nextLong(to.getTime() - from.getTime());
        return new Date(from.getTime() + offsetMillis);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public Date between(Date from, Date to) throws IllegalArgumentException {
        if (to.before(from)) {
            throw new IllegalArgumentException(""Invalid date range, the upper bound date is before the lower bound."");
        }

        long offsetMillis = faker.random().nextLong(to.getTime() - from.getTime());
        return new Date(from.getTime() + offsetMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'between', '(', 'Date', ' ', 'from', ',', ' ', 'Date', ' ', 'to', ')', ' ', 'throws', ' ', 'IllegalArgumentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'to', '.', 'before', '(', 'from', ')', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Invalid date range, the upper bound date is before the lower bound.', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'long', ' ', 'offsetMillis', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'to', '.', 'getTime', '(', ')', ' ', '-', ' ', 'from', '.', 'getTime', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'from', '.', 'getTime', '(', ')', ' ', '+', ' ', 'offsetMillis', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Educator.java,university,"    public String university() {
        return faker.fakeValuesService().resolve(""educator.name"", this, faker) 
                + "" "" ",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String university() {
        return faker.fakeValuesService().resolve(""educator.name"", this, faker) 
                + "" "" 
","['    ', 'public', ' ', 'String', ' ', 'university', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'educator.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ' ', '\n', '                ', '+', ' ', '""', ' ', '""', ' ', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Educator.java,course,"    public String course() {
        return faker.fakeValuesService().resolve(""educator.tertiary.course.type"", this, faker) 
                + "" """,https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String course() {
        return faker.fakeValuesService().resolve(""educator.tertiary.course.type"", this, faker) 
                + "" ""
","['    ', 'public', ' ', 'String', ' ', 'course', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'educator.tertiary.course.type', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ' ', '\n', '                ', '+', ' ', '""', ' ', '""', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Educator.java,secondarySchool,"    public String secondarySchool() {
        return faker.fakeValuesService().resolve(""educator.name"", this, faker)
                + "" """,https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String secondarySchool() {
        return faker.fakeValuesService().resolve(""educator.name"", this, faker)
                + "" ""
","['    ', 'public', ' ', 'String', ' ', 'secondarySchool', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'educator.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', '\n', '                ', '+', ' ', '""', ' ', '""', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Educator.java,campus,"    public String campus() {
        return faker.fakeValuesService().resolve(""educator.name"", this, faker) + "" Campus"";
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String campus() {
        return faker.fakeValuesService().resolve(""educator.name"", this, faker) + "" Campus"";
    }
","['    ', 'public', ' ', 'String', ' ', 'campus', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'educator.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ' ', '+', ' ', '""', ' Campus', '""', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Faker.java,random,"    RandomService random() {
        return this.randomService;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    RandomService random() {
        return this.randomService;
    }
","['    ', 'RandomService', ' ', 'random', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'randomService', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Faker.java,fakeValuesService,"    FakeValuesService fakeValuesService() {
        return this.fakeValuesService;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    FakeValuesService fakeValuesService() {
        return this.fakeValuesService;
    }
","['    ', 'FakeValuesService', ' ', 'fakeValuesService', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'fakeValuesService', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Faker.java,resolve,"    public String resolve(String key) {
        return this.fakeValuesService.resolve(key, this, this);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String resolve(String key) {
        return this.fakeValuesService.resolve(key, this, this);
    }
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'fakeValuesService', '.', 'resolve', '(', 'key', ',', ' ', 'this', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Finance.java,bic,"    public String bic() {
        return faker.regexify(""([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?"");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String bic() {
        return faker.regexify(""([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?"");
    }
","['    ', 'public', ' ', 'String', ' ', 'bic', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'regexify', '(', '""', '([A-Z]){4}([A-Z]){2}([0-9A-Z]){2}([0-9A-Z]{3})?', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Finance.java,iban,"    public String iban() {
        List<String> countryCodes = new ArrayList<String>(countryCodeToBasicBankAccountNumberPattern.keySet());
        String randomCountryCode = countryCodes.get(faker.random().nextInt(countryCodes.size()));
        return iban(randomCountryCode);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String iban() {
        List<String> countryCodes = new ArrayList<String>(countryCodeToBasicBankAccountNumberPattern.keySet());
        String randomCountryCode = countryCodes.get(faker.random().nextInt(countryCodes.size()));
        return iban(randomCountryCode);
    }
","['    ', 'public', ' ', 'String', ' ', 'iban', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'countryCodes', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', 'countryCodeToBasicBankAccountNumberPattern', '.', 'keySet', '(', ')', ')', ';', '\n', '        ', 'String', ' ', 'randomCountryCode', ' ', '=', ' ', 'countryCodes', '.', 'get', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'countryCodes', '.', 'size', '(', ')', ')', ')', ';', '\n', '        ', 'return', ' ', 'iban', '(', 'randomCountryCode', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Finance.java,iban,"    public String iban(String countryCode) {
        String basicBankAccountNumber = faker.regexify(countryCodeToBasicBankAccountNumberPattern.get(countryCode));
        String checkSum = calculateIbanChecksum(countryCode, basicBankAccountNumber);
        return countryCode + checkSum + basicBankAccountNumber;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String iban(String countryCode) {
        String basicBankAccountNumber = faker.regexify(countryCodeToBasicBankAccountNumberPattern.get(countryCode));
        String checkSum = calculateIbanChecksum(countryCode, basicBankAccountNumber);
        return countryCode + checkSum + basicBankAccountNumber;
    }
","['    ', 'public', ' ', 'String', ' ', 'iban', '(', 'String', ' ', 'countryCode', ')', ' ', '{', '\n', '        ', 'String', ' ', 'basicBankAccountNumber', ' ', '=', ' ', 'faker', '.', 'regexify', '(', 'countryCodeToBasicBankAccountNumberPattern', '.', 'get', '(', 'countryCode', ')', ')', ';', '\n', '        ', 'String', ' ', 'checkSum', ' ', '=', ' ', 'calculateIbanChecksum', '(', 'countryCode', ',', ' ', 'basicBankAccountNumber', ')', ';', '\n', '        ', 'return', ' ', 'countryCode', ' ', '+', ' ', 'checkSum', ' ', '+', ' ', 'basicBankAccountNumber', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Finance.java,randomCreditCardType,"    private CreditCardType randomCreditCardType() {
        return CreditCardType.values()[this.faker.random().nextInt(CreditCardType.values().length)];
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private CreditCardType randomCreditCardType() {
        return CreditCardType.values()[this.faker.random().nextInt(CreditCardType.values().length)];
    }
","['    ', 'private', ' ', 'CreditCardType', ' ', 'randomCreditCardType', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'CreditCardType', '.', 'values', '(', ')', '[', 'this', '.', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'CreditCardType', '.', 'values', '(', ')', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Hacker.java,abbreviation,"    public String abbreviation() {
        return faker.fakeValuesService().resolve(""hacker.abbreviation"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String abbreviation() {
        return faker.fakeValuesService().resolve(""hacker.abbreviation"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'abbreviation', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hacker.abbreviation', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Hacker.java,adjective,"    public String adjective() {
        return faker.fakeValuesService().resolve(""hacker.adjective"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String adjective() {
        return faker.fakeValuesService().resolve(""hacker.adjective"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'adjective', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hacker.adjective', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Hacker.java,noun,"    public String noun() {
        return faker.fakeValuesService().resolve(""hacker.noun"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String noun() {
        return faker.fakeValuesService().resolve(""hacker.noun"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'noun', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hacker.noun', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Hacker.java,verb,"    public String verb() {
        return faker.fakeValuesService().resolve(""hacker.verb"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String verb() {
        return faker.fakeValuesService().resolve(""hacker.verb"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'verb', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hacker.verb', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Hacker.java,ingverb,"    public String ingverb() {
        return faker.fakeValuesService().resolve(""hacker.ingverb"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String ingverb() {
        return faker.fakeValuesService().resolve(""hacker.ingverb"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'ingverb', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hacker.ingverb', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,IdNumber.java,valid,"    public String valid() {
        return faker.fakeValuesService().resolve(""id_number.valid"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String valid() {
        return faker.fakeValuesService().resolve(""id_number.valid"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'valid', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'id_number.valid', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,IdNumber.java,invalid,"    public String invalid() {
        return faker.numerify(faker.fakeValuesService().resolve(""id_number.invalid"", this, faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String invalid() {
        return faker.numerify(faker.fakeValuesService().resolve(""id_number.invalid"", this, faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'invalid', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'id_number.invalid', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,IdNumber.java,ssnValid,"    public String ssnValid() {
        String ssn = faker.regexify(""[0-8]\\d{2}-\\d{2}-\\d{4}"");

        boolean isValid = true;
        for (int i = 0; i < invalidSSNPatterns.length; i++) {
            if (ssn.matches(invalidSSNPatterns[i])) {
                isValid = false;
                break;
            }
        }
        if (!isValid) {
            ssn = ssnValid();
        }
        return ssn;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String ssnValid() {
        String ssn = faker.regexify(""[0-8]\\d{2}-\\d{2}-\\d{4}"");

        boolean isValid = true;
        for (int i = 0; i < invalidSSNPatterns.length; i++) {
            if (ssn.matches(invalidSSNPatterns[i])) {
                isValid = false;
                break;
            }
        }
        if (!isValid) {
            ssn = ssnValid();
        }
        return ssn;
    }
","['    ', 'public', ' ', 'String', ' ', 'ssnValid', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'ssn', ' ', '=', ' ', 'faker', '.', 'regexify', '(', '""', '[0-8]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ';', '\n', '\n', '        ', 'boolean', ' ', 'isValid', ' ', '=', ' ', 'true', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'invalidSSNPatterns', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'ssn', '.', 'matches', '(', 'invalidSSNPatterns', '[', 'i', ']', ')', ')', ' ', '{', '\n', '                ', 'isValid', ' ', '=', ' ', 'false', ';', '\n', '                ', 'break', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', '!', 'isValid', ')', ' ', '{', '\n', '            ', 'ssn', ' ', '=', ' ', 'ssnValid', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'ssn', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,emailAddress,"    public String emailAddress() {
        return emailAddress(join(new Object[]{
                faker.name().firstName().toLowerCase().replaceAll(""'"", """"),",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String emailAddress() {
        return emailAddress(join(new Object[]{
                faker.name().firstName().toLowerCase().replaceAll(""'"", """"),
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'faker', '.', 'name', '(', ')', '.', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ',', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,safeEmailAddress,"    public String safeEmailAddress() {
        return emailAddress(join(new Object[]{
                faker.name().firstName().toLowerCase().replaceAll(""'"", """"),",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String safeEmailAddress() {
        return emailAddress(join(new Object[]{
                faker.name().firstName().toLowerCase().replaceAll(""'"", """"),
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'faker', '.', 'name', '(', ')', '.', 'firstName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ',', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,safeEmailAddress,"    public String safeEmailAddress(String localPart) {
        return join(new Object[]{
                localPart,",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String safeEmailAddress(String localPart) {
        return join(new Object[]{
                localPart,
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', 'String', ' ', 'localPart', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'new', ' ', 'Object', '[', ']', '{', '\n', '                ', 'localPart', ',', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,domainWord,"    public String domainWord() {
        return IDN.toASCII(faker.name().lastName().toLowerCase().replaceAll(""'"", """"));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String domainWord() {
        return IDN.toASCII(faker.name().lastName().toLowerCase().replaceAll(""'"", """"));
    }
","['    ', 'public', ' ', 'String', ' ', 'domainWord', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'IDN', '.', 'toASCII', '(', 'faker', '.', 'name', '(', ')', '.', 'lastName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,domainSuffix,"    public String domainSuffix() {
        return faker.fakeValuesService().resolve(""internet.domain_suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String domainSuffix() {
        return faker.fakeValuesService().resolve(""internet.domain_suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'domainSuffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.domain_suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,avatar,"    public String avatar() {
        return ""https://s3.amazonaws.com/uifaces/faces/twitter/"" + faker.fakeValuesService().resolve(""internet.avatar"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String avatar() {
        return ""https://s3.amazonaws.com/uifaces/faces/twitter/"" + faker.fakeValuesService().resolve(""internet.avatar"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'avatar', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', 'https://s3.amazonaws.com/uifaces/faces/twitter/', '""', ' ', '+', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.avatar', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,image,"    public String image() {
        String[] dimension = StringUtils.split(faker.fakeValuesService().resolve(""internet.image_dimension"", this, faker), 'x');
        if (dimension.length == 0) return """";
        return image(
                Integer.valueOf(StringUtils.trim(dimension[0])), Integer.valueOf(StringUtils.trim(dimension[1])),",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String image() {
        String[] dimension = StringUtils.split(faker.fakeValuesService().resolve(""internet.image_dimension"", this, faker), 'x');
        if (dimension.length == 0) return """";
        return image(
                Integer.valueOf(StringUtils.trim(dimension[0])), Integer.valueOf(StringUtils.trim(dimension[1])),
","['    ', 'public', ' ', 'String', ' ', 'image', '(', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'dimension', ' ', '=', ' ', 'StringUtils', '.', 'split', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.image_dimension', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ',', ' ', ""'x'"", ')', ';', '\n', '        ', 'if', ' ', '(', 'dimension', '.', 'length', ' ', '=', '=', ' ', '0', ')', ' ', 'return', ' ', '""', '""', ';', '\n', '        ', 'return', ' ', 'image', '(', '\n', '                ', 'Integer', '.', 'valueOf', '(', 'StringUtils', '.', 'trim', '(', 'dimension', '[', '0', ']', ')', ')', ',', ' ', 'Integer', '.', 'valueOf', '(', 'StringUtils', '.', 'trim', '(', 'dimension', '[', '1', ']', ')', ')', ',', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,image,"    public String image(Integer width, Integer height, Boolean gray, String text) {
        return String.format(""http://lorempixel.com/%s%s/%s/%s/%s"",
                gray ? ""g/"" : StringUtils.EMPTY, width, height, faker.fakeValuesService().resolve(""internet.image_category"", this, faker),",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String image(Integer width, Integer height, Boolean gray, String text) {
        return String.format(""http://lorempixel.com/%s%s/%s/%s/%s"",
                gray ? ""g/"" : StringUtils.EMPTY, width, height, faker.fakeValuesService().resolve(""internet.image_category"", this, faker),
","['    ', 'public', ' ', 'String', ' ', 'image', '(', 'Integer', ' ', 'width', ',', ' ', 'Integer', ' ', 'height', ',', ' ', 'Boolean', ' ', 'gray', ',', ' ', 'String', ' ', 'text', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', 'http://lorempixel.com/%s%s/%s/%s/%s', '""', ',', '\n', '                ', 'gray', ' ', '?', ' ', '""', 'g/', '""', ' ', ':', ' ', 'StringUtils', '.', 'EMPTY', ',', ' ', 'width', ',', ' ', 'height', ',', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.image_category', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ',', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,password,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial) {
        if (includeSpecial) {
            char[] password = faker.lorem().characters(minimumLength, maximumLength, includeUppercase).toCharArray();",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial) {
        if (includeSpecial) {
            char[] password = faker.lorem().characters(minimumLength, maximumLength, includeUppercase).toCharArray();
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ',', ' ', 'boolean', ' ', 'includeSpecial', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'includeSpecial', ')', ' ', '{', '\n', '            ', 'char', '[', ']', ' ', 'password', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', 'minimumLength', ',', ' ', 'maximumLength', ',', ' ', 'includeUppercase', ')', '.', 'toCharArray', '(', ')', ';', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,macAddress,"    public String macAddress(String prefix) {
        final String tmp = (prefix == null) ? """" : prefix;
        final int prefixLength = tmp.trim().length() == 0 
          ? 0 
          : tmp.split("":"").length;
        
        final StringBuilder out = new StringBuilder(tmp);
        for (int i=0;i < 6 - prefixLength;i++) {
            if (out.length() > 0) {
                out.append(':');
            }
            out.append(Integer.toHexString(faker.random().nextInt(16)));
            out.append(Integer.toHexString(faker.random().nextInt(16)));
        }
        return out.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String macAddress(String prefix) {
        final String tmp = (prefix == null) ? """" : prefix;
        final int prefixLength = tmp.trim().length() == 0 
          ? 0 
          : tmp.split("":"").length;
        
        final StringBuilder out = new StringBuilder(tmp);
        for (int i=0;i < 6 - prefixLength;i++) {
            if (out.length() > 0) {
                out.append(':');
            }
            out.append(Integer.toHexString(faker.random().nextInt(16)));
            out.append(Integer.toHexString(faker.random().nextInt(16)));
        }
        return out.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'macAddress', '(', 'String', ' ', 'prefix', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'tmp', ' ', '=', ' ', '(', 'prefix', ' ', '=', '=', ' ', 'null', ')', ' ', '?', ' ', '""', '""', ' ', ':', ' ', 'prefix', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'prefixLength', ' ', '=', ' ', 'tmp', '.', 'trim', '(', ')', '.', 'length', '(', ')', ' ', '=', '=', ' ', '0', ' ', '\n', '          ', '?', ' ', '0', ' ', '\n', '          ', ':', ' ', 'tmp', '.', 'split', '(', '""', ':', '""', ')', '.', 'length', ';', '\n', '        ', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'out', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', 'tmp', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', ' ', '<', ' ', '6', ' ', '-', ' ', 'prefixLength', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'out', '.', 'length', '(', ')', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '                ', 'out', '.', 'append', '(', ""':'"", ')', ';', '\n', '            ', '}', '\n', '            ', 'out', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'out', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'out', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,ipV4Address,"    public String ipV4Address() {
        return String.format(""%d.%d.%d.%d"",
          faker.random().nextInt(254) + 2,",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String ipV4Address() {
        return String.format(""%d.%d.%d.%d"",
          faker.random().nextInt(254) + 2,
","['    ', 'public', ' ', 'String', ' ', 'ipV4Address', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%d.%d.%d.%d', '""', ',', '\n', '          ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '254', ')', ' ', '+', ' ', '2', ',', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Internet.java,ipV6Address,"    public String ipV6Address() {
        final StringBuilder tmp = new StringBuilder();
        for (int i=0;i < 8;i++) {
            if (i > 0) {
                tmp.append("":"");
            }
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
        }
        return tmp.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String ipV6Address() {
        final StringBuilder tmp = new StringBuilder();
        for (int i=0;i < 8;i++) {
            if (i > 0) {
                tmp.append("":"");
            }
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
            tmp.append(Integer.toHexString(faker.random().nextInt(16)));
        }
        return tmp.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'ipV6Address', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'tmp', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', ' ', '<', ' ', '8', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'i', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '                ', 'tmp', '.', 'append', '(', '""', ':', '""', ')', ';', '\n', '            ', '}', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '            ', 'tmp', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '16', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'tmp', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,characters,"    public String characters(int minimumLength, int maximumLength) {
        return characters(faker.random().nextInt(maximumLength - minimumLength) + minimumLength, false);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String characters(int minimumLength, int maximumLength) {
        return characters(faker.random().nextInt(maximumLength - minimumLength) + minimumLength, false);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'maximumLength', ' ', '-', ' ', 'minimumLength', ')', ' ', '+', ' ', 'minimumLength', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,characters,"    public String characters(int minimumLength, int maximumLength, boolean includeUppercase) {
        return characters(faker.random().nextInt(maximumLength - minimumLength) + minimumLength, includeUppercase);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String characters(int minimumLength, int maximumLength, boolean includeUppercase) {
        return characters(faker.random().nextInt(maximumLength - minimumLength) + minimumLength, includeUppercase);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'maximumLength', ' ', '-', ' ', 'minimumLength', ')', ' ', '+', ' ', 'minimumLength', ',', ' ', 'includeUppercase', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,characters,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            char randomCharacter = characters[faker.random().nextInt(characters.length)];
            if (includeUppercase && faker.bool().bool()) {
                randomCharacter = Character.toUpperCase(randomCharacter);
            }
            buffer[i] = randomCharacter;
        }
        return new String(buffer);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            char randomCharacter = characters[faker.random().nextInt(characters.length)];
            if (includeUppercase && faker.bool().bool()) {
                randomCharacter = Character.toUpperCase(randomCharacter);
            }
            buffer[i] = randomCharacter;
        }
        return new String(buffer);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'fixedNumberOfCharacters', ',', ' ', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'fixedNumberOfCharacters', ' ', '<', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', '""', ';', '\n', '        ', '}', '\n', '        ', 'char', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'char', '[', 'fixedNumberOfCharacters', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'buffer', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'char', ' ', 'randomCharacter', ' ', '=', ' ', 'characters', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'characters', '.', 'length', ')', ']', ';', '\n', '            ', 'if', ' ', '(', 'includeUppercase', ' ', '&', '&', ' ', 'faker', '.', 'bool', '(', ')', '.', 'bool', '(', ')', ')', ' ', '{', '\n', '                ', 'randomCharacter', ' ', '=', ' ', 'Character', '.', 'toUpperCase', '(', 'randomCharacter', ')', ';', '\n', '            ', '}', '\n', '            ', 'buffer', '[', 'i', ']', ' ', '=', ' ', 'randomCharacter', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'buffer', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,words,"    public List<String> words(int num) {
        List<String> returnList = new ArrayList<String>();
        for (int i = 0; i < num; i++) {
            returnList.add(word());
        }
        return returnList;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public List<String> words(int num) {
        List<String> returnList = new ArrayList<String>();
        for (int i = 0; i < num; i++) {
            returnList.add(word());
        }
        return returnList;
    }
","['    ', 'public', ' ', 'List', '<', 'String', '>', ' ', 'words', '(', 'int', ' ', 'num', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'returnList', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', 'String', '>', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'num', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'returnList', '.', 'add', '(', 'word', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'returnList', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,word,"    public String word() {
        return faker.fakeValuesService().resolve(""lorem.words"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String word() {
        return faker.fakeValuesService().resolve(""lorem.words"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'word', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'lorem.words', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,sentence,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + faker.random().nextInt(6)), "" "") + ""."");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String sentence(int wordCount) {
        return capitalize(join(words(wordCount + faker.random().nextInt(6)), "" "") + ""."");
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'capitalize', '(', 'join', '(', 'words', '(', 'wordCount', ' ', '+', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '6', ')', ')', ',', ' ', '""', ' ', '""', ')', ' ', '+', ' ', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Lorem.java,paragraph,"    public String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + faker.random().nextInt(3)), "" "");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String paragraph(int sentenceCount) {
        return join(sentences(sentenceCount + faker.random().nextInt(3)), "" "");
    }
","['    ', 'public', ' ', 'String', ' ', 'paragraph', '(', 'int', ' ', 'sentenceCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'sentences', '(', 'sentenceCount', ' ', '+', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '3', ')', ')', ',', ' ', '""', ' ', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""name.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""name.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,nameWithMiddle,"    public String nameWithMiddle() {
        return faker.fakeValuesService().resolve(""name.name_with_middle"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String nameWithMiddle() {
        return faker.fakeValuesService().resolve(""name.name_with_middle"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'nameWithMiddle', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.name_with_middle', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,firstName,"    public String firstName() {
        return faker.fakeValuesService().resolve(""name.first_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String firstName() {
        return faker.fakeValuesService().resolve(""name.first_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.first_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,lastName,"    public String lastName() {
        return faker.fakeValuesService().resolve(""name.last_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String lastName() {
        return faker.fakeValuesService().resolve(""name.last_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.last_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,prefix,"    public String prefix() {
        return faker.fakeValuesService().resolve(""name.prefix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String prefix() {
        return faker.fakeValuesService().resolve(""name.prefix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.prefix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,suffix,"    public String suffix() {
        return faker.fakeValuesService().resolve(""name.suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String suffix() {
        return faker.fakeValuesService().resolve(""name.suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Name.java,title,"    public String title() {
        return StringUtils.join(new String[] {
            faker.fakeValuesService().resolve(""name.title.descriptor"", this, faker), ",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String title() {
        return StringUtils.join(new String[] {
            faker.fakeValuesService().resolve(""name.title.descriptor"", this, faker), 
","['    ', 'public', ' ', 'String', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'new', ' ', 'String', '[', ']', ' ', '{', '\n', '            ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.title.descriptor', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ',', ' ', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,randomDigit,"    public int randomDigit() {
        return faker.random().nextInt(9);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public int randomDigit() {
        return faker.random().nextInt(9);
    }
","['    ', 'public', ' ', 'int', ' ', 'randomDigit', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '9', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,randomDigitNotZero,"    public int randomDigitNotZero() {
        return faker.random().nextInt(8) + 1;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public int randomDigitNotZero() {
        return faker.random().nextInt(8) + 1;
    }
","['    ', 'public', ' ', 'int', ' ', 'randomDigitNotZero', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '8', ')', ' ', '+', ' ', '1', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,numberBetween,"    public int numberBetween(int min, int max) {
        return faker.random().nextInt(max - min) + min;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public int numberBetween(int min, int max) {
        return faker.random().nextInt(max - min) + min;
    }
","['    ', 'public', ' ', 'int', ' ', 'numberBetween', '(', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', 'min', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,numberBetween,"    public long numberBetween(long min, long max) {
        return faker.random().nextLong(max - min) + min;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public long numberBetween(long min, long max) {
        return faker.random().nextLong(max - min) + min;
    }
","['    ', 'public', ' ', 'long', ' ', 'numberBetween', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', 'min', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,randomNumber,"    public long randomNumber(int numberOfDigits, boolean strict) {
        long max = (long) Math.pow(10, numberOfDigits);
        if (strict) {
            long min = (long) Math.pow(10, numberOfDigits - 1);
            return faker.random().nextLong(max - min) + min;
        }

        return faker.random().nextLong(max);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public long randomNumber(int numberOfDigits, boolean strict) {
        long max = (long) Math.pow(10, numberOfDigits);
        if (strict) {
            long min = (long) Math.pow(10, numberOfDigits - 1);
            return faker.random().nextLong(max - min) + min;
        }

        return faker.random().nextLong(max);
    }
","['    ', 'public', ' ', 'long', ' ', 'randomNumber', '(', 'int', ' ', 'numberOfDigits', ',', ' ', 'boolean', ' ', 'strict', ')', ' ', '{', '\n', '        ', 'long', ' ', 'max', ' ', '=', ' ', '(', 'long', ')', ' ', 'Math', '.', 'pow', '(', '10', ',', ' ', 'numberOfDigits', ')', ';', '\n', '        ', 'if', ' ', '(', 'strict', ')', ' ', '{', '\n', '            ', 'long', ' ', 'min', ' ', '=', ' ', '(', 'long', ')', ' ', 'Math', '.', 'pow', '(', '10', ',', ' ', 'numberOfDigits', ' ', '-', ' ', '1', ')', ';', '\n', '            ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', 'min', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'max', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,randomNumber,"    public long randomNumber() {
        int numberOfDigits = faker.random().nextInt(8) + 1;

        return randomNumber(numberOfDigits, false);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public long randomNumber() {
        int numberOfDigits = faker.random().nextInt(8) + 1;

        return randomNumber(numberOfDigits, false);
    }
","['    ', 'public', ' ', 'long', ' ', 'randomNumber', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'numberOfDigits', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '8', ')', ' ', '+', ' ', '1', ';', '\n', '\n', '        ', 'return', ' ', 'randomNumber', '(', 'numberOfDigits', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,randomDouble,"    public double randomDouble(int maxNumberOfDecimals, int min, int max) {
        double value = min + (max - min) * faker.random().nextDouble();

        return new BigDecimal(value).setScale(maxNumberOfDecimals, BigDecimal.ROUND_HALF_EVEN).doubleValue();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public double randomDouble(int maxNumberOfDecimals, int min, int max) {
        double value = min + (max - min) * faker.random().nextDouble();

        return new BigDecimal(value).setScale(maxNumberOfDecimals, BigDecimal.ROUND_HALF_EVEN).doubleValue();
    }
","['    ', 'public', ' ', 'double', ' ', 'randomDouble', '(', 'int', ' ', 'maxNumberOfDecimals', ',', ' ', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'double', ' ', 'value', ' ', '=', ' ', 'min', ' ', '+', ' ', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '*', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextDouble', '(', ')', ';', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'BigDecimal', '(', 'value', ')', '.', 'setScale', '(', 'maxNumberOfDecimals', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_EVEN', ')', '.', 'doubleValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Number.java,digits,"    public String digits(int count) {
        final StringBuilder tmp = new StringBuilder();
        for (int i = 0; i < count; i++) {
            tmp.append(faker.random().nextInt(10));
        }
        return tmp.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String digits(int count) {
        final StringBuilder tmp = new StringBuilder();
        for (int i = 0; i < count; i++) {
            tmp.append(faker.random().nextInt(10));
        }
        return tmp.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'digits', '(', 'int', ' ', 'count', ')', ' ', '{', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'tmp', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'count', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'tmp', '.', 'append', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '10', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'tmp', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Options.java,option,"    public String option(String... options) {
        return options[faker.random().nextInt(options.length)];
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String option(String... options) {
        return options[faker.random().nextInt(options.length)];
    }
","['    ', 'public', ' ', 'String', ' ', 'option', '(', 'String', '.', '.', '.', ' ', 'options', ')', ' ', '{', '\n', '        ', 'return', ' ', 'options', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'options', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Options.java,option,"    public <E extends Enum<E>> E option(Class<E> enumeration) {
        E[] enumConstants = enumeration.getEnumConstants();
        return enumConstants[faker.random().nextInt(enumConstants.length)];
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public <E extends Enum<E>> E option(Class<E> enumeration) {
        E[] enumConstants = enumeration.getEnumConstants();
        return enumConstants[faker.random().nextInt(enumConstants.length)];
    }
","['    ', 'public', ' ', '<', 'E', ' ', 'extends', ' ', 'Enum', '<', 'E', '>', '>', ' ', 'E', ' ', 'option', '(', 'Class', '<', 'E', '>', ' ', 'enumeration', ')', ' ', '{', '\n', '        ', 'E', '[', ']', ' ', 'enumConstants', ' ', '=', ' ', 'enumeration', '.', 'getEnumConstants', '(', ')', ';', '\n', '        ', 'return', ' ', 'enumConstants', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'enumConstants', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,PhoneNumber.java,cellPhone,"    public String cellPhone() {
        return faker.numerify(faker.fakeValuesService().resolve(""cell_phone.formats"", this, faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String cellPhone() {
        return faker.numerify(faker.fakeValuesService().resolve(""cell_phone.formats"", this, faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'cellPhone', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'cell_phone.formats', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,PhoneNumber.java,phoneNumber,"    public String phoneNumber() {
        return faker.numerify(faker.fakeValuesService().resolve(""phone_number.formats"", this, faker));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String phoneNumber() {
        return faker.numerify(faker.fakeValuesService().resolve(""phone_number.formats"", this, faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'phoneNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'phone_number.formats', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Shakespeare.java,randomElement,"    private String randomElement(String[] values) {
        return values[faker.random().nextInt(values.length)];
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String randomElement(String[] values) {
        return values[faker.random().nextInt(values.length)];
    }
","['    ', 'private', ' ', 'String', ' ', 'randomElement', '(', 'String', '[', ']', ' ', 'values', ')', ' ', '{', '\n', '        ', 'return', ' ', 'values', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'values', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Superhero.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""superhero.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""superhero.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'superhero.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Superhero.java,prefix,"    public String prefix() {
        return faker.fakeValuesService().resolve(""superhero.prefix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String prefix() {
        return faker.fakeValuesService().resolve(""superhero.prefix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'superhero.prefix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Superhero.java,suffix,"    public String suffix() {
        return faker.fakeValuesService().resolve(""superhero.suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String suffix() {
        return faker.fakeValuesService().resolve(""superhero.suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'superhero.suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Superhero.java,power,"    public String power() {
        return faker.fakeValuesService().resolve(""superhero.power"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String power() {
        return faker.fakeValuesService().resolve(""superhero.power"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'power', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'superhero.power', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Superhero.java,descriptor,"    public String descriptor() {
        return faker.fakeValuesService().resolve(""superhero.descriptor"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String descriptor() {
        return faker.fakeValuesService().resolve(""superhero.descriptor"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'descriptor', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'superhero.descriptor', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Team.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""team.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""team.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'team.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Team.java,creature,"    public String creature() {
        return faker.fakeValuesService().resolve(""team.creature"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String creature() {
        return faker.fakeValuesService().resolve(""team.creature"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'creature', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'team.creature', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,Team.java,sport,"    public String sport() {
        return faker.fakeValuesService().resolve(""team.sport"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String sport() {
        return faker.fakeValuesService().resolve(""team.sport"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'sport', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'team.sport', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,University.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""university.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String name() {
        return faker.fakeValuesService().resolve(""university.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'university.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,University.java,prefix,"    public String prefix() {
        return faker.fakeValuesService().resolve(""university.prefix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String prefix() {
        return faker.fakeValuesService().resolve(""university.prefix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'prefix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'university.prefix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,University.java,suffix,"    public String suffix() {
        return faker.fakeValuesService().resolve(""university.suffix"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String suffix() {
        return faker.fakeValuesService().resolve(""university.suffix"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'suffix', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'university.suffix', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,fakerFromStream,"    protected Map fakerFromStream(InputStream stream, String localeName) {
        final Map valuesMap = new Yaml().loadAs(stream, Map.class);
        final Map localeBased = (Map) valuesMap.get(localeName.toString());
        return (Map) localeBased.get(""faker"");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    protected Map fakerFromStream(InputStream stream, String localeName) {
        final Map valuesMap = new Yaml().loadAs(stream, Map.class);
        final Map localeBased = (Map) valuesMap.get(localeName.toString());
        return (Map) localeBased.get(""faker"");
    }
","['    ', 'protected', ' ', 'Map', ' ', 'fakerFromStream', '(', 'InputStream', ' ', 'stream', ',', ' ', 'String', ' ', 'localeName', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Map', ' ', 'valuesMap', ' ', '=', ' ', 'new', ' ', 'Yaml', '(', ')', '.', 'loadAs', '(', 'stream', ',', ' ', 'Map', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'Map', ' ', 'localeBased', ' ', '=', ' ', '(', 'Map', ')', ' ', 'valuesMap', '.', 'get', '(', 'localeName', '.', 'toString', '(', ')', ')', ';', '\n', '        ', 'return', ' ', '(', 'Map', ')', ' ', 'localeBased', '.', 'get', '(', '""', 'faker', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,fetch,"    public Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray == null ? null : valuesArray.get(randomService.nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public Object fetch(String key) {
        List valuesArray = (List) fetchObject(key);
        return valuesArray == null ? null : valuesArray.get(randomService.nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'List', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', ')', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'return', ' ', 'valuesArray', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'null', ' ', ':', ' ', 'valuesArray', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,safeFetch,"    public String safeFetch(String key, String defaultIfNull) {
        Object o = fetchObject(key);
        if (o == null) return defaultIfNull;
        if (o instanceof List) {
            List<String> values = (List<String>) o;",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String safeFetch(String key, String defaultIfNull) {
        Object o = fetchObject(key);
        if (o == null) return defaultIfNull;
        if (o instanceof List) {
            List<String> values = (List<String>) o;
","['    ', 'public', ' ', 'String', ' ', 'safeFetch', '(', 'String', ' ', 'key', ',', ' ', 'String', ' ', 'defaultIfNull', ')', ' ', '{', '\n', '        ', 'Object', ' ', 'o', ' ', '=', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'if', ' ', '(', 'o', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ' ', 'defaultIfNull', ';', '\n', '        ', 'if', ' ', '(', 'o', ' ', 'instanceof', ' ', 'List', ')', ' ', '{', '\n', '            ', 'List', '<', 'String', '>', ' ', 'values', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'o', ';', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,fetchObject,"    public Object fetchObject(String key) {
        String[] path = key.split(""\\."");

        Object result = null;
        for (Map<String, Object> fakeValuesMap : fakeValuesMaps) {
            Object currentValue = fakeValuesMap;
            for (int p = 0; currentValue != null && p < path.length; p++) {
                currentValue = ((Map<String, Object>) currentValue).get(path[p]);
            }
            result = currentValue;
            if (result != null) {
                break;
            }
        }
        return result;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public Object fetchObject(String key) {
        String[] path = key.split(""\\."");

        Object result = null;
        for (Map<String, Object> fakeValuesMap : fakeValuesMaps) {
            Object currentValue = fakeValuesMap;
            for (int p = 0; currentValue != null && p < path.length; p++) {
                currentValue = ((Map<String, Object>) currentValue).get(path[p]);
            }
            result = currentValue;
            if (result != null) {
                break;
            }
        }
        return result;
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'path', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n', '\n', '        ', 'Object', ' ', 'result', ' ', '=', ' ', 'null', ';', '\n', '        ', 'for', ' ', '(', 'Map', '<', 'String', ',', ' ', 'Object', '>', ' ', 'fakeValuesMap', ' ', ':', ' ', 'fakeValuesMaps', ')', ' ', '{', '\n', '            ', 'Object', ' ', 'currentValue', ' ', '=', ' ', 'fakeValuesMap', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'p', ' ', '=', ' ', '0', ';', ' ', 'currentValue', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'p', ' ', '<', ' ', 'path', '.', 'length', ';', ' ', 'p', '+', '+', ')', ' ', '{', '\n', '                ', 'currentValue', ' ', '=', ' ', '(', '(', 'Map', '<', 'String', ',', ' ', 'Object', '>', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'path', '[', 'p', ']', ')', ';', '\n', '            ', '}', '\n', '            ', 'result', ' ', '=', ' ', 'currentValue', ';', '\n', '            ', 'if', ' ', '(', 'result', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'break', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,numerify,"    public String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(randomService.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String numerify(String numberString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(randomService.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'numberString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'#'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'randomService', '.', 'nextInt', '(', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,letterHelper,"    private String letterHelper(int baseChar, String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (baseChar + randomService.nextInt(26))); // a-z
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String letterHelper(int baseChar, String letterString) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (baseChar + randomService.nextInt(26))); 
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'private', ' ', 'String', ' ', 'letterHelper', '(', 'int', ' ', 'baseChar', ',', ' ', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'StringBuffer', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuffer', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'letterString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'?'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', '(', 'char', ')', ' ', '(', 'baseChar', ' ', '+', ' ', 'randomService', '.', 'nextInt', '(', '26', ')', ')', ')', ';', ' ', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,resolve,"    public String resolve(String key, Object current, Faker root) {
        final String template = safeFetch(key, null);
        return processTemplate(template, current, root);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String resolve(String key, Object current, Faker root) {
        final String template = safeFetch(key, null);
        return processTemplate(template, current, root);
    }
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Faker', ' ', 'root', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'template', ' ', '=', ' ', 'safeFetch', '(', 'key', ',', ' ', 'null', ')', ';', '\n', '        ', 'return', ' ', 'processTemplate', '(', 'template', ',', ' ', 'current', ',', ' ', 'root', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,processTemplate,"    protected String processTemplate(String template, Object current, Faker root) {
        final Matcher matcher = EXPRESSION_PATTERN.matcher(template);

        String result = template;
        while (matcher.find()) {
            final String escapedDirective = matcher.group(0);
            final String directive = matcher.group(1);
            
            // resolve the expression and reprocess it to handle recursive templates
            String resolved = resolveExpression(directive, current, root);
            resolved = processTemplate(resolved, current, root);
            
            result = result.replace(escapedDirective, resolved);
        }
        return result;
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    protected String processTemplate(String template, Object current, Faker root) {
        final Matcher matcher = EXPRESSION_PATTERN.matcher(template);

        String result = template;
        while (matcher.find()) {
            final String escapedDirective = matcher.group(0);
            final String directive = matcher.group(1);
            
            
            String resolved = resolveExpression(directive, current, root);
            resolved = processTemplate(resolved, current, root);
            
            result = result.replace(escapedDirective, resolved);
        }
        return result;
    }
","['    ', 'protected', ' ', 'String', ' ', 'processTemplate', '(', 'String', ' ', 'template', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Faker', ' ', 'root', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Matcher', ' ', 'matcher', ' ', '=', ' ', 'EXPRESSION_PATTERN', '.', 'matcher', '(', 'template', ')', ';', '\n', '\n', '        ', 'String', ' ', 'result', ' ', '=', ' ', 'template', ';', '\n', '        ', 'while', ' ', '(', 'matcher', '.', 'find', '(', ')', ')', ' ', '{', '\n', '            ', 'final', ' ', 'String', ' ', 'escapedDirective', ' ', '=', ' ', 'matcher', '.', 'group', '(', '0', ')', ';', '\n', '            ', 'final', ' ', 'String', ' ', 'directive', ' ', '=', ' ', 'matcher', '.', 'group', '(', '1', ')', ';', '\n', '            ', '\n', '            ', '\n', '            ', 'String', ' ', 'resolved', ' ', '=', ' ', 'resolveExpression', '(', 'directive', ',', ' ', 'current', ',', ' ', 'root', ')', ';', '\n', '            ', 'resolved', ' ', '=', ' ', 'processTemplate', '(', 'resolved', ',', ' ', 'current', ',', ' ', 'root', ')', ';', '\n', '            ', '\n', '            ', 'result', ' ', '=', ' ', 'result', '.', 'replace', '(', 'escapedDirective', ',', ' ', 'resolved', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,isNestedDirective,"    private boolean isNestedDirective(String directive) {
        return directive.contains(""."");
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private boolean isNestedDirective(String directive) {
        return directive.contains(""."");
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isNestedDirective', '(', 'String', ' ', 'directive', ')', ' ', '{', '\n', '        ', 'return', ' ', 'directive', '.', 'contains', '(', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,classNameToYamlName,"    private String classNameToYamlName(Object current) {
        return current.getClass().getSimpleName()
                .replaceAll(""([A-Z])"", ""_$1"")",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String classNameToYamlName(Object current) {
        return current.getClass().getSimpleName()
                .replaceAll(""([A-Z])"", ""_$1"")
","['    ', 'private', ' ', 'String', ' ', 'classNameToYamlName', '(', 'Object', ' ', 'current', ')', ' ', '{', '\n', '        ', 'return', ' ', 'current', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', '\n', '                ', '.', 'replaceAll', '(', '""', '([A-Z])', '""', ',', ' ', '""', '_$1', '""', ')', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,resolveFromMethodOnCurrent,"    private String resolveFromMethodOnCurrent(Object current, String directive) {
        try {
            return string(accessor(current,directive).invoke(current));",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String resolveFromMethodOnCurrent(Object current, String directive) {
        try {
            return string(accessor(current,directive).invoke(current));
","['    ', 'private', ' ', 'String', ' ', 'resolveFromMethodOnCurrent', '(', 'Object', ' ', 'current', ',', ' ', 'String', ' ', 'directive', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'return', ' ', 'string', '(', 'accessor', '(', 'current', ',', 'directive', ')', '.', 'invoke', '(', 'current', ')', ')', ';', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,resolveFakerObjectAndMethod,"    public String resolveFakerObjectAndMethod(Faker faker, String key) {
        final String[] classAndMethod = key.split(""\\."", 2);
        
        try {
            Method fakerAccessor = accessor(faker, classAndMethod[0].replaceAll(""_"", """"));",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public String resolveFakerObjectAndMethod(Faker faker, String key) {
        final String[] classAndMethod = key.split(""\\."", 2);
        
        try {
            Method fakerAccessor = accessor(faker, classAndMethod[0].replaceAll(""_"", """"));
","['    ', 'public', ' ', 'String', ' ', 'resolveFakerObjectAndMethod', '(', 'Faker', ' ', 'faker', ',', ' ', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'classAndMethod', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ',', ' ', '2', ')', ';', '\n', '        ', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Method', ' ', 'fakerAccessor', ' ', '=', ' ', 'accessor', '(', 'faker', ',', ' ', 'classAndMethod', '[', '0', ']', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ')', ';', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesService.java,string,"    private String string(Object obj) {
        return (obj == null) ? null : obj.toString();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private String string(Object obj) {
        return (obj == null) ? null : obj.toString();
    }
","['    ', 'private', ' ', 'String', ' ', 'string', '(', 'Object', ' ', 'obj', ')', ' ', '{', '\n', '        ', 'return', ' ', '(', 'obj', ' ', '=', '=', ' ', 'null', ')', ' ', '?', ' ', 'null', ' ', ':', ' ', 'obj', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,BoolTest.java,testBool,"    public void testBool() {
        for (int i = 0; i < 100; i++) {
            assertThat(faker.bool().bool(), isOneOf(true, false));",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void testBool() {
        for (int i = 0; i < 100; i++) {
            assertThat(faker.bool().bool(), isOneOf(true, false));
","['    ', 'public', ' ', 'void', ' ', 'testBool', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'faker', '.', 'bool', '(', ')', '.', 'bool', '(', ')', ',', ' ', 'isOneOf', '(', 'true', ',', ' ', 'false', ')', ')', ';', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakerTest.java,resolveShouldThrowExceptionWhenPropertyDoesntExist,"    public void resolveShouldThrowExceptionWhenPropertyDoesntExist() {
        final String resolve = faker.resolve(""address.nothing"");
        assertThat(resolve, is(nullValue()));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void resolveShouldThrowExceptionWhenPropertyDoesntExist() {
        final String resolve = faker.resolve(""address.nothing"");
        assertThat(resolve, is(nullValue()));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveShouldThrowExceptionWhenPropertyDoesntExist', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'resolve', ' ', '=', ' ', 'faker', '.', 'resolve', '(', '""', 'address.nothing', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'resolve', ',', ' ', 'is', '(', 'nullValue', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,OptionsTest.java,setupOptions,"    public void setupOptions() {
        options = new String[]{""A"", ""B"", ""C""};
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void setupOptions() {
        options = new String[]{""A"", ""B"", ""C""};
    }
","['    ', 'public', ' ', 'void', ' ', 'setupOptions', '(', ')', ' ', '{', '\n', '        ', 'options', ' ', '=', ' ', 'new', ' ', 'String', '[', ']', '{', '""', 'A', '""', ',', ' ', '""', 'B', '""', ',', ' ', '""', 'C', '""', '}', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,PhoneNumberTest.java,testCellPhone_enUS,"    public void testCellPhone_enUS() {
        final Faker f = new Faker(Locale.US);
        assertThat(f.phoneNumber().cellPhone(), matchesRegularExpression(""\\(?\\d+\\)?([- .]\\d+){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void testCellPhone_enUS() {
        final Faker f = new Faker(Locale.US);
        assertThat(f.phoneNumber().cellPhone(), matchesRegularExpression(""\\(?\\d+\\)?([- .]\\d+){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCellPhone_enUS', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'Locale', '.', 'US', ')', ';', '\n', '        ', 'assertThat', '(', 'f', '.', 'phoneNumber', '(', ')', '.', 'cellPhone', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', '(?', '\\\\', 'd+', '\\\\', ')?([- .]', '\\\\', 'd+){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,SuperheroTest.java,testName,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z' -/]+""));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void testName() {
        assertThat(faker.superhero().name(), matchesRegularExpression(""[A-Za-z' -/]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'superhero', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z' -/]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakerIT.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.US, null},
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {Locale.CANADA_FRENCH, null},
                {Locale.TRADITIONAL_CHINESE, null},
                {new Locale(""pt""), null},
                {new Locale(""fi"", ""FI""), null},
                {Locale.ENGLISH, new Random()},
                {new Locale(""pt-BR""), null},
                {new Locale(""pt-br""), null},
                {new Locale(""Pt_br""), null},
                {new Locale(""pT_Br""), null},
                {new Locale(""pt"",""Br"",""x2""), null},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {Locale.US, null},
                {Locale.ENGLISH, null},
                {Locale.FRENCH, null},
                {Locale.CANADA_FRENCH, null},
                {Locale.TRADITIONAL_CHINESE, null},
                {new Locale(""pt""), null},
                {new Locale(""fi"", ""FI""), null},
                {Locale.ENGLISH, new Random()},
                {new Locale(""pt-BR""), null},
                {new Locale(""pt-br""), null},
                {new Locale(""Pt_br""), null},
                {new Locale(""pT_Br""), null},
                {new Locale(""pt"",""Br"",""x2""), null},
                {null, new Random()},
                {null, null}};
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', 'Locale', '.', 'US', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'CANADA_FRENCH', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'TRADITIONAL_CHINESE', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'fi', '""', ',', ' ', '""', 'FI', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'Locale', '.', 'ENGLISH', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt-BR', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt-br', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'Pt_br', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pT_Br', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'new', ' ', 'Locale', '(', '""', 'pt', '""', ',', '""', 'Br', '""', ',', '""', 'x2', '""', ')', ',', ' ', 'null', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'new', ' ', 'Random', '(', ')', '}', ',', '\n', '                ', '{', 'null', ',', ' ', 'null', '}', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakerIT.java,isExcepted,"    private boolean isExcepted(Object object, Method method) {
        final List<String> classDotMethod = exceptions.get(this.locale);
        if (classDotMethod == null) {return false;}
        return classDotMethod.contains(object.getClass().getSimpleName() + ""."" + method.getName());
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    private boolean isExcepted(Object object, Method method) {
        final List<String> classDotMethod = exceptions.get(this.locale);
        if (classDotMethod == null) {return false;}
        return classDotMethod.contains(object.getClass().getSimpleName() + ""."" + method.getName());
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isExcepted', '(', 'Object', ' ', 'object', ',', ' ', 'Method', ' ', 'method', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'String', '>', ' ', 'classDotMethod', ' ', '=', ' ', 'exceptions', '.', 'get', '(', 'this', '.', 'locale', ')', ';', '\n', '        ', 'if', ' ', '(', 'classDotMethod', ' ', '=', '=', ' ', 'null', ')', ' ', '{', 'return', ' ', 'false', ';', '}', '\n', '        ', 'return', ' ', 'classDotMethod', '.', 'contains', '(', 'object', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ' ', '+', ' ', '""', '.', '""', ' ', '+', ' ', 'method', '.', 'getName', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,safeFetchShouldReturnValueInList,"    public void safeFetchShouldReturnValueInList() {
        assertThat(fakeValuesService.safeFetch(""property.dummy"", null), is(""x""));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void safeFetchShouldReturnValueInList() {
        assertThat(fakeValuesService.safeFetch(""property.dummy"", null), is(""x""));
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnValueInList', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.dummy', '""', ',', ' ', 'null', ')', ',', ' ', 'is', '(', '""', 'x', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,safeFetchShouldReturnSimpleList,"    public void safeFetchShouldReturnSimpleList() {
        assertThat(fakeValuesService.safeFetch(""property.simple"", null), is(""hello""));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void safeFetchShouldReturnSimpleList() {
        assertThat(fakeValuesService.safeFetch(""property.simple"", null), is(""hello""));
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnSimpleList', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.simple', '""', ',', ' ', 'null', ')', ',', ' ', 'is', '(', '""', 'hello', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist,"    public void safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist() {
        assertThat(fakeValuesService.safeFetch(""property.dummy2"", """"), isEmptyString());
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist() {
        assertThat(fakeValuesService.safeFetch(""property.dummy2"", """"), isEmptyString());
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.dummy2', '""', ',', ' ', '""', '""', ')', ',', ' ', 'isEmptyString', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,resolveKeyToPropertyWithAPropertyWithoutAnObject,"    public void resolveKeyToPropertyWithAPropertyWithoutAnObject() {
        // #{hello} -> DummyService.hello

        // given
        final Faker faker = mock(Faker.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(""Yo!"").when(dummy).hello();

        // when
        final String actual = fakeValuesService.resolve(""property.simpleResolution"", dummy, faker);

        // then
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
        verifyZeroInteractions(faker);
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void resolveKeyToPropertyWithAPropertyWithoutAnObject() {
        

        
        final Faker faker = mock(Faker.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(""Yo!"").when(dummy).hello();

        
        final String actual = fakeValuesService.resolve(""property.simpleResolution"", dummy, faker);

        
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
        verifyZeroInteractions(faker);
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAPropertyWithoutAnObject', '(', ')', ' ', '{', '\n', '        ', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'mock', '(', 'Faker', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Yo!', '""', ')', '.', 'when', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.simpleResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Yo!', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '        ', 'verifyZeroInteractions', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,resolveKeyToPropertyWithAPropertyWithAnObject,"    public void resolveKeyToPropertyWithAPropertyWithAnObject() {
        // given
        final Faker faker = mock(Faker.class);
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();
        doReturn(""Luke Cage"").when(person).name();

        // when
        final String actual = fakeValuesService.resolve(""property.advancedResolution"", dummy, faker);

        // then
        assertThat(actual, is(""Luke Cage""));
        verify(faker).superhero();
        verify(person).name();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void resolveKeyToPropertyWithAPropertyWithAnObject() {
        
        final Faker faker = mock(Faker.class);
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();
        doReturn(""Luke Cage"").when(person).name();

        
        final String actual = fakeValuesService.resolve(""property.advancedResolution"", dummy, faker);

        
        assertThat(actual, is(""Luke Cage""));
        verify(faker).superhero();
        verify(person).name();
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAPropertyWithAnObject', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'mock', '(', 'Faker', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'Superhero', ' ', 'person', ' ', '=', ' ', 'mock', '(', 'Superhero', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', 'person', ')', '.', 'when', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Luke Cage', '""', ')', '.', 'when', '(', 'person', ')', '.', 'name', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.advancedResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Luke Cage', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '        ', 'verify', '(', 'person', ')', '.', 'name', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,resolveKeyToPropertyWithAList,"    public void resolveKeyToPropertyWithAList() {
        // property.resolutionWithList -> #{hello}
        // #{hello} -> DummyService.hello

        // given
        final Faker faker = mock(Faker.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(""Yo!"").when(dummy).hello();

        // when
        final String actual = fakeValuesService.resolve(""property.resolutionWithList"", dummy, faker);

        // then
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void resolveKeyToPropertyWithAList() {
        
        

        
        final Faker faker = mock(Faker.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(""Yo!"").when(dummy).hello();

        
        final String actual = fakeValuesService.resolve(""property.resolutionWithList"", dummy, faker);

        
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAList', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'mock', '(', 'Faker', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Yo!', '""', ')', '.', 'when', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.resolutionWithList', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Yo!', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,resolveKeyWithMultiplePropertiesShouldJoinResults,"    public void resolveKeyWithMultiplePropertiesShouldJoinResults() {
        // given
        final Faker faker = mock(Faker.class);
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();

        doReturn(""Yo Superman!"").when(dummy).hello();
        doReturn(""up up and away"").when(person).descriptor();

        // when
        String actual = fakeValuesService.resolve(""property.multipleResolution"", dummy, faker);

        // then
        assertThat(actual, is(""Yo Superman! up up and away""));

        verify(faker).superhero();
        verify(person).descriptor();
        verify(dummy).hello();
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void resolveKeyWithMultiplePropertiesShouldJoinResults() {
        
        final Faker faker = mock(Faker.class);
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();

        doReturn(""Yo Superman!"").when(dummy).hello();
        doReturn(""up up and away"").when(person).descriptor();

        
        String actual = fakeValuesService.resolve(""property.multipleResolution"", dummy, faker);

        
        assertThat(actual, is(""Yo Superman! up up and away""));

        verify(faker).superhero();
        verify(person).descriptor();
        verify(dummy).hello();
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyWithMultiplePropertiesShouldJoinResults', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'mock', '(', 'Faker', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'Superhero', ' ', 'person', ' ', '=', ' ', 'mock', '(', 'Superhero', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', 'person', ')', '.', 'when', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '\n', '        ', 'doReturn', '(', '""', 'Yo Superman!', '""', ')', '.', 'when', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'up up and away', '""', ')', '.', 'when', '(', 'person', ')', '.', 'descriptor', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.multipleResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Yo Superman! up up and away', '""', ')', ')', ';', '\n', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '        ', 'verify', '(', 'person', ')', '.', 'descriptor', '(', ')', ';', '\n', '        ', 'verify', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,testLocaleChain,"    public void testLocaleChain() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.SIMPLIFIED_CHINESE);
        
        assertThat(chain, hasSize(3));
        assertThat(chain.get(0), is(Locale.SIMPLIFIED_CHINESE));
        assertThat(chain.get(1), is(Locale.CHINESE));
        assertThat(chain.get(2), is(Locale.ENGLISH));
        ",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void testLocaleChain() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.SIMPLIFIED_CHINESE);
        
        assertThat(chain, hasSize(3));
        assertThat(chain.get(0), is(Locale.SIMPLIFIED_CHINESE));
        assertThat(chain.get(1), is(Locale.CHINESE));
        assertThat(chain.get(2), is(Locale.ENGLISH));
        
","['    ', 'public', ' ', 'void', ' ', 'testLocaleChain', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'Locale', '>', ' ', 'chain', ' ', '=', ' ', 'fakeValuesService', '.', 'localeChain', '(', 'Locale', '.', 'SIMPLIFIED_CHINESE', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', 'chain', ',', ' ', 'hasSize', '(', '3', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'chain', '.', 'get', '(', '0', ')', ',', ' ', 'is', '(', 'Locale', '.', 'SIMPLIFIED_CHINESE', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'chain', '.', 'get', '(', '1', ')', ',', ' ', 'is', '(', 'Locale', '.', 'CHINESE', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'chain', '.', 'get', '(', '2', ')', ',', ' ', 'is', '(', 'Locale', '.', 'ENGLISH', ')', ')', ';', '\n', '        ', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,testLocaleChainEnglish,"    public void testLocaleChainEnglish() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.ENGLISH);

        assertThat(chain, hasSize(1));
        assertThat(chain.get(0), is(Locale.ENGLISH));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void testLocaleChainEnglish() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.ENGLISH);

        assertThat(chain, hasSize(1));
        assertThat(chain.get(0), is(Locale.ENGLISH));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLocaleChainEnglish', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'Locale', '>', ' ', 'chain', ' ', '=', ' ', 'fakeValuesService', '.', 'localeChain', '(', 'Locale', '.', 'ENGLISH', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'chain', ',', ' ', 'hasSize', '(', '1', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'chain', '.', 'get', '(', '0', ')', ',', ' ', 'is', '(', 'Locale', '.', 'ENGLISH', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,testLocaleChainLanguageOnly,"    public void testLocaleChainLanguageOnly() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.CHINESE);

        assertThat(chain, hasSize(2));
        assertThat(chain.get(0), is(Locale.CHINESE));
        assertThat(chain.get(1), is(Locale.ENGLISH));
    }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"    public void testLocaleChainLanguageOnly() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.CHINESE);

        assertThat(chain, hasSize(2));
        assertThat(chain.get(0), is(Locale.CHINESE));
        assertThat(chain.get(1), is(Locale.ENGLISH));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLocaleChainLanguageOnly', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'Locale', '>', ' ', 'chain', ' ', '=', ' ', 'fakeValuesService', '.', 'localeChain', '(', 'Locale', '.', 'CHINESE', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'chain', ',', ' ', 'hasSize', '(', '2', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'chain', '.', 'get', '(', '0', ')', ',', ' ', 'is', '(', 'Locale', '.', 'CHINESE', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'chain', '.', 'get', '(', '1', ')', ',', ' ', 'is', '(', 'Locale', '.', 'ENGLISH', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f574317642a820fc24eef51a1a1fbafa02db2043,FakeValuesServiceTest.java,hello,"        public String hello() {
            return ""Hello"";
        }",https://www.github.com/dius/java-faker/commit/f574317642a820fc24eef51a1a1fbafa02db2043,"        public String hello() {
            return ""Hello"";
        }
","['        ', 'public', ' ', 'String', ' ', 'hello', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', 'Hello', '""', ';', '\n', '        ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,Faker.java,expression,"    public String expression(String expression) {
        return this.fakeValuesService.expression(expression, this);
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public String expression(String expression) {
        return this.fakeValuesService.expression(expression, this);
    }
","['    ', 'public', ' ', 'String', ' ', 'expression', '(', 'String', ' ', 'expression', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'fakeValuesService', '.', 'expression', '(', 'expression', ',', ' ', 'this', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesService.java,resolve,"    public String resolve(String key, Object current, Faker root) {
        final String expression = safeFetch(key, null);
        if (expression == null) {
            throw new RuntimeException(key + "" resulted in null expression"");
        }

        return resolveExpression(expression, current, root);
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public String resolve(String key, Object current, Faker root) {
        final String expression = safeFetch(key, null);
        if (expression == null) {
            throw new RuntimeException(key + "" resulted in null expression"");
        }

        return resolveExpression(expression, current, root);
    }
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Faker', ' ', 'root', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'expression', ' ', '=', ' ', 'safeFetch', '(', 'key', ',', ' ', 'null', ')', ';', '\n', '        ', 'if', ' ', '(', 'expression', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'RuntimeException', '(', 'key', ' ', '+', ' ', '""', ' resulted in null expression', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'resolveExpression', '(', 'expression', ',', ' ', 'current', ',', ' ', 'root', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesService.java,expression,"    public String expression(String expression, Faker faker) {
        return resolveExpression(expression, null, faker);
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public String expression(String expression, Faker faker) {
        return resolveExpression(expression, null, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'expression', '(', 'String', ' ', 'expression', ',', ' ', 'Faker', ' ', 'faker', ')', ' ', '{', '\n', '        ', 'return', ' ', 'resolveExpression', '(', 'expression', ',', ' ', 'null', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesService.java,isDotDirective,"    private boolean isDotDirective(String directive) {
        return directive.contains(""."");
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    private boolean isDotDirective(String directive) {
        return directive.contains(""."");
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isDotDirective', '(', 'String', ' ', 'directive', ')', ' ', '{', '\n', '        ', 'return', ' ', 'directive', '.', 'contains', '(', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesService.java,resolveFromMethodOn,"    private String resolveFromMethodOn(Object obj, String directive, List<String> args) {
        if (obj == null) {
            return null;
        }
        try {
            Method accessor = accessor(obj, directive, args);",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    private String resolveFromMethodOn(Object obj, String directive, List<String> args) {
        if (obj == null) {
            return null;
        }
        try {
            Method accessor = accessor(obj, directive, args);
","['    ', 'private', ' ', 'String', ' ', 'resolveFromMethodOn', '(', 'Object', ' ', 'obj', ',', ' ', 'String', ' ', 'directive', ',', ' ', 'List', '<', 'String', '>', ' ', 'args', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'obj', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'null', ';', '\n', '        ', '}', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Method', ' ', 'accessor', ' ', '=', ' ', 'accessor', '(', 'obj', ',', ' ', 'directive', ',', ' ', 'args', ')', ';', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesService.java,resolveFakerObjectAndMethod,"    public String resolveFakerObjectAndMethod(Faker faker, String key, List<String> args) {
        final String[] classAndMethod = key.split(""\\."", 2);
        
        try {
            String fakerMethodName = classAndMethod[0].replaceAll(""_"", """");",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public String resolveFakerObjectAndMethod(Faker faker, String key, List<String> args) {
        final String[] classAndMethod = key.split(""\\."", 2);
        
        try {
            String fakerMethodName = classAndMethod[0].replaceAll(""_"", """");
","['    ', 'public', ' ', 'String', ' ', 'resolveFakerObjectAndMethod', '(', 'Faker', ' ', 'faker', ',', ' ', 'String', ' ', 'key', ',', ' ', 'List', '<', 'String', '>', ' ', 'args', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'classAndMethod', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ',', ' ', '2', ')', ';', '\n', '        ', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'fakerMethodName', ' ', '=', ' ', 'classAndMethod', '[', '0', ']', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ';', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,AbstractFakerTest.java,before,"    public void before() {
        MockitoAnnotations.initMocks(this);

        
        Logger rootLogger = LogManager.getLogManager().getLogger("""");
        Handler[] handlers = rootLogger.getHandlers();
        rootLogger.setLevel(Level.FINEST);
        for (Handler h : handlers) {
            h.setLevel(Level.FINEST);",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void before() {
        MockitoAnnotations.initMocks(this);

        
        Logger rootLogger = LogManager.getLogManager().getLogger("""");
        Handler[] handlers = rootLogger.getHandlers();
        rootLogger.setLevel(Level.FINEST);
        for (Handler h : handlers) {
            h.setLevel(Level.FINEST);
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '\n', '        ', '\n', '        ', 'Logger', ' ', 'rootLogger', ' ', '=', ' ', 'LogManager', '.', 'getLogManager', '(', ')', '.', 'getLogger', '(', '""', '""', ')', ';', '\n', '        ', 'Handler', '[', ']', ' ', 'handlers', ' ', '=', ' ', 'rootLogger', '.', 'getHandlers', '(', ')', ';', '\n', '        ', 'rootLogger', '.', 'setLevel', '(', 'Level', '.', 'FINEST', ')', ';', '\n', '        ', 'for', ' ', '(', 'Handler', ' ', 'h', ' ', ':', ' ', 'handlers', ')', ' ', '{', '\n', '            ', 'h', '.', 'setLevel', '(', 'Level', '.', 'FINEST', ')', ';', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakerTest.java,badExpressionTooManyArgs,"    public void badExpressionTooManyArgs() {
        faker.expression(""#{regexify 'a','a'}"");
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void badExpressionTooManyArgs() {
        faker.expression(""#{regexify 'a','a'}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'badExpressionTooManyArgs', '(', ')', ' ', '{', '\n', '        ', 'faker', '.', 'expression', '(', '""', ""#{regexify 'a','a'}"", '""', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakerTest.java,badExpressionTooFewArgs,"    public void badExpressionTooFewArgs() {
        faker.expression(""#{regexify}"");
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void badExpressionTooFewArgs() {
        faker.expression(""#{regexify}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'badExpressionTooFewArgs', '(', ')', ' ', '{', '\n', '        ', 'faker', '.', 'expression', '(', '""', '#{regexify}', '""', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakerTest.java,badExpressionCouldntCoerce,"    public void badExpressionCouldntCoerce() {
        faker.expression(""#{number.number_between 'x','10'}"");
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void badExpressionCouldntCoerce() {
        faker.expression(""#{number.number_between 'x','10'}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'badExpressionCouldntCoerce', '(', ')', ' ', '{', '\n', '        ', 'faker', '.', 'expression', '(', '""', ""#{number.number_between 'x','10'}"", '""', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,RandomFakerTest.java,before,"    public void before() {
        super.before();
        random = new Random();
        faker = new Faker(random);
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void before() {
        super.before();
        random = new Random();
        faker = new Faker(random);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'before', '(', ')', ';', '\n', '        ', 'random', ' ', '=', ' ', 'new', ' ', 'Random', '(', ')', ';', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,before,"    public void before() {
        super.before();
        MockitoAnnotations.initMocks(this);

        // always return the first element
        when(randomService.nextInt(anyInt())).thenReturn(0);
        
        fakeValuesService = spy(new FakeValuesService(new Locale(""test""), randomService));
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void before() {
        super.before();
        MockitoAnnotations.initMocks(this);

        
        when(randomService.nextInt(anyInt())).thenReturn(0);
        
        fakeValuesService = spy(new FakeValuesService(new Locale(""test""), randomService));
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'before', '(', ')', ';', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '\n', '        ', '\n', '        ', 'when', '(', 'randomService', '.', 'nextInt', '(', 'anyInt', '(', ')', ')', ')', '.', 'thenReturn', '(', '0', ')', ';', '\n', '        ', '\n', '        ', 'fakeValuesService', ' ', '=', ' ', 'spy', '(', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ',', ' ', 'randomService', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,safeFetchShouldReturnValueInList,"    public void safeFetchShouldReturnValueInList() {
        doReturn(0).when(randomService).nextInt(Mockito.anyInt());
        assertThat(fakeValuesService.safeFetch(""property.dummy"", null), is(""x""));
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void safeFetchShouldReturnValueInList() {
        doReturn(0).when(randomService).nextInt(Mockito.anyInt());
        assertThat(fakeValuesService.safeFetch(""property.dummy"", null), is(""x""));
    }
","['    ', 'public', ' ', 'void', ' ', 'safeFetchShouldReturnValueInList', '(', ')', ' ', '{', '\n', '        ', 'doReturn', '(', '0', ')', '.', 'when', '(', 'randomService', ')', '.', 'nextInt', '(', 'Mockito', '.', 'anyInt', '(', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'property.dummy', '""', ',', ' ', 'null', ')', ',', ' ', 'is', '(', '""', 'x', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,bothify2Args,"    public void bothify2Args() {
        final DummyService dummy = mock(DummyService.class);
        
        Faker f = new Faker();

        String value = fakeValuesService.resolve(""property.bothify_2"", dummy, f);
        assertThat(value, matchesRegularExpression(""[A-Z]{2}\\d{2}""));
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void bothify2Args() {
        final DummyService dummy = mock(DummyService.class);
        
        Faker f = new Faker();

        String value = fakeValuesService.resolve(""property.bothify_2"", dummy, f);
        assertThat(value, matchesRegularExpression(""[A-Z]{2}\\d{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'bothify2Args', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', '\n', '        ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.bothify_2', '""', ',', ' ', 'dummy', ',', ' ', 'f', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z]{2}', '\\\\', 'd{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,regexifyDirective,"    public void regexifyDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify1"", dummy, faker);
        assertThat(value, either(is(""55"")).or(is(""44"")).or(is(""45"")).or(is(""54"")));
        verify(faker).regexify(""[45]{2}"");
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void regexifyDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify1"", dummy, faker);
        assertThat(value, either(is(""55"")).or(is(""44"")).or(is(""45"")).or(is(""54"")));
        verify(faker).regexify(""[45]{2}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyDirective', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.regexify1', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'either', '(', 'is', '(', '""', '55', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '44', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '45', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '54', '""', ')', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'regexify', '(', '""', '[45]{2}', '""', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,regexifyDirective2,"    public void regexifyDirective2() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_cell"", dummy, faker);
        assertThat(value, either(is(""479"")).or(is(""459"")));
        verify(faker).regexify(""4[57]9"");
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void regexifyDirective2() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_cell"", dummy, faker);
        assertThat(value, either(is(""479"")).or(is(""459"")));
        verify(faker).regexify(""4[57]9"");
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyDirective2', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.regexify_cell', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'either', '(', 'is', '(', '""', '479', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '459', '""', ')', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'regexify', '(', '""', '4[57]9', '""', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,resolveKeyToPropertyWithAPropertyWithoutAnObject,"    public void resolveKeyToPropertyWithAPropertyWithoutAnObject() {
        // #{hello} -> DummyService.hello

        // given
        final DummyService dummy = mock(DummyService.class);
        doReturn(""Yo!"").when(dummy).hello();

        // when
        final String actual = fakeValuesService.resolve(""property.simpleResolution"", dummy, faker);

        // then
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
        verifyZeroInteractions(faker);
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void resolveKeyToPropertyWithAPropertyWithoutAnObject() {
        

        
        final DummyService dummy = mock(DummyService.class);
        doReturn(""Yo!"").when(dummy).hello();

        
        final String actual = fakeValuesService.resolve(""property.simpleResolution"", dummy, faker);

        
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
        verifyZeroInteractions(faker);
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAPropertyWithoutAnObject', '(', ')', ' ', '{', '\n', '        ', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Yo!', '""', ')', '.', 'when', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.simpleResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Yo!', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '        ', 'verifyZeroInteractions', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,resolveKeyToPropertyWithAPropertyWithAnObject,"    public void resolveKeyToPropertyWithAPropertyWithAnObject() {
        // given
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();
        doReturn(""Luke Cage"").when(person).name();

        // when
        final String actual = fakeValuesService.resolve(""property.advancedResolution"", dummy, faker);

        // then
        assertThat(actual, is(""Luke Cage""));
        verify(faker).superhero();
        verify(person).name();
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void resolveKeyToPropertyWithAPropertyWithAnObject() {
        
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();
        doReturn(""Luke Cage"").when(person).name();

        
        final String actual = fakeValuesService.resolve(""property.advancedResolution"", dummy, faker);

        
        assertThat(actual, is(""Luke Cage""));
        verify(faker).superhero();
        verify(person).name();
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAPropertyWithAnObject', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'Superhero', ' ', 'person', ' ', '=', ' ', 'mock', '(', 'Superhero', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', 'person', ')', '.', 'when', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Luke Cage', '""', ')', '.', 'when', '(', 'person', ')', '.', 'name', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.advancedResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Luke Cage', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '        ', 'verify', '(', 'person', ')', '.', 'name', '(', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,resolveKeyToPropertyWithAList,"    public void resolveKeyToPropertyWithAList() {
        // property.resolutionWithList -> #{hello}
        // #{hello} -> DummyService.hello

        // given
        final DummyService dummy = mock(DummyService.class);
        doReturn(0).when(randomService).nextInt(Mockito.anyInt());
        doReturn(""Yo!"").when(dummy).hello();

        // when
        final String actual = fakeValuesService.resolve(""property.resolutionWithList"", dummy, faker);

        // then
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void resolveKeyToPropertyWithAList() {
        
        

        
        final DummyService dummy = mock(DummyService.class);
        doReturn(0).when(randomService).nextInt(Mockito.anyInt());
        doReturn(""Yo!"").when(dummy).hello();

        
        final String actual = fakeValuesService.resolve(""property.resolutionWithList"", dummy, faker);

        
        assertThat(actual, is(""Yo!""));
        verify(dummy).hello();
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyToPropertyWithAList', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', '0', ')', '.', 'when', '(', 'randomService', ')', '.', 'nextInt', '(', 'Mockito', '.', 'anyInt', '(', ')', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Yo!', '""', ')', '.', 'when', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.resolutionWithList', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Yo!', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,FakeValuesServiceTest.java,resolveKeyWithMultiplePropertiesShouldJoinResults,"    public void resolveKeyWithMultiplePropertiesShouldJoinResults() {
        // given
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();

        doReturn(""Yo Superman!"").when(dummy).hello();
        doReturn(""up up and away"").when(person).descriptor();

        // when
        String actual = fakeValuesService.resolve(""property.multipleResolution"", dummy, faker);

        // then
        assertThat(actual, is(""Yo Superman! up up and away""));

        verify(faker).superhero();
        verify(person).descriptor();
        verify(dummy).hello();
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void resolveKeyWithMultiplePropertiesShouldJoinResults() {
        
        final Superhero person = mock(Superhero.class);
        final DummyService dummy = mock(DummyService.class);
        doReturn(person).when(faker).superhero();

        doReturn(""Yo Superman!"").when(dummy).hello();
        doReturn(""up up and away"").when(person).descriptor();

        
        String actual = fakeValuesService.resolve(""property.multipleResolution"", dummy, faker);

        
        assertThat(actual, is(""Yo Superman! up up and away""));

        verify(faker).superhero();
        verify(person).descriptor();
        verify(dummy).hello();
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveKeyWithMultiplePropertiesShouldJoinResults', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'Superhero', ' ', 'person', ' ', '=', ' ', 'mock', '(', 'Superhero', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'doReturn', '(', 'person', ')', '.', 'when', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '\n', '        ', 'doReturn', '(', '""', 'Yo Superman!', '""', ')', '.', 'when', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'up up and away', '""', ')', '.', 'when', '(', 'person', ')', '.', 'descriptor', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.multipleResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', 'Yo Superman! up up and away', '""', ')', ')', ';', '\n', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'superhero', '(', ')', ';', '\n', '        ', 'verify', '(', 'person', ')', '.', 'descriptor', '(', ')', ';', '\n', '        ', 'verify', '(', 'dummy', ')', '.', 'hello', '(', ')', ';', '\n', '    ', '}', '\n']"
master,7d41c366172ce340a5049d3787671092a94c8252,RandomServiceTest.java,before,"    public void before() {
        super.before();
        randomService = new RandomService(new Random());
    }",https://www.github.com/dius/java-faker/commit/7d41c366172ce340a5049d3787671092a94c8252,"    public void before() {
        super.before();
        randomService = new RandomService(new Random());
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'before', '(', ')', ';', '\n', '        ', 'randomService', ' ', '=', ' ', 'new', ' ', 'RandomService', '(', 'new', ' ', 'Random', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,Internet.java,emailAddress,"    public String emailAddress() {
        return emailAddress(faker.name().username());
    }",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"    public String emailAddress() {
        return emailAddress(faker.name().username());
    }
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'faker', '.', 'name', '(', ')', '.', 'username', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,Internet.java,emailAddress,"    public String emailAddress(String localPart) {
        return join(localPart,
                ""@"",",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"    public String emailAddress(String localPart) {
        return join(localPart,
                ""@"",
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', 'String', ' ', 'localPart', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'localPart', ',', '\n', '                ', '""', '@', '""', ',', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,Internet.java,safeEmailAddress,"    public String safeEmailAddress() {
        return safeEmailAddress(faker.name().username());
    }",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"    public String safeEmailAddress() {
        return safeEmailAddress(faker.name().username());
    }
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'safeEmailAddress', '(', 'faker', '.', 'name', '(', ')', '.', 'username', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,Internet.java,safeEmailAddress,"    public String safeEmailAddress(String localPart) {
        return join(localPart, 
                ""@"",",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"    public String safeEmailAddress(String localPart) {
        return join(localPart, 
                ""@"",
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', 'String', ' ', 'localPart', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'localPart', ',', ' ', '\n', '                ', '""', '@', '""', ',', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,InternetTest.java,testSafeEmailAddress,"    public void testSafeEmailAddress() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress();
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");
        boolean foundSafeDomainEmail = Iterables.any(emails, new Predicate<String>() {
            @Override
            public boolean apply(@Nullable String s) {
                return s.endsWith(""@"" + safeDomain);
            }});
        
        assertThat(""Should find at least one email from "" + safeDomain, foundSafeDomainEmail, is(true));
    }",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"    public void testSafeEmailAddress() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress();
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");
        boolean foundSafeDomainEmail = Iterables.any(emails, new Predicate<String>() {
            @Override
            public boolean apply(@Nullable String s) {
                return s.endsWith(""@"" + safeDomain);
            }});
        
        assertThat(""Should find at least one email from "" + safeDomain, foundSafeDomainEmail, is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSafeEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'emails', ' ', '=', ' ', 'Lists', '.', 'newArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'safeEmailAddress', '(', ')', ';', '\n', '            ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '            ', 'emails', '.', 'add', '(', 'emailAddress', ')', ';', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'String', ' ', 'safeDomain', ' ', '=', ' ', 'faker', '.', 'resolve', '(', '""', 'internet.safe_email', '""', ')', ';', '\n', '        ', 'boolean', ' ', 'foundSafeDomainEmail', ' ', '=', ' ', 'Iterables', '.', 'any', '(', 'emails', ',', ' ', 'new', ' ', 'Predicate', '<', 'String', '>', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'boolean', ' ', 'apply', '(', '@Nullable', ' ', 'String', ' ', 's', ')', ' ', '{', '\n', '                ', 'return', ' ', 's', '.', 'endsWith', '(', '""', '@', '""', ' ', '+', ' ', 'safeDomain', ')', ';', '\n', '            ', '}', '}', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'Should find at least one email from ', '""', ' ', '+', ' ', 'safeDomain', ',', ' ', 'foundSafeDomainEmail', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,InternetTest.java,apply,"            public boolean apply(@Nullable String s) {
                return s.endsWith(""@"" + safeDomain);
            }});",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"            public boolean apply(@Nullable String s) {
                return s.endsWith(""@"" + safeDomain);
            }});
","['            ', 'public', ' ', 'boolean', ' ', 'apply', '(', '@Nullable', ' ', 'String', ' ', 's', ')', ' ', '{', '\n', '                ', 'return', ' ', 's', '.', 'endsWith', '(', '""', '@', '""', ' ', '+', ' ', 'safeDomain', ')', ';', '\n', '            ', '}', '}', ')', ';', '\n']"
master,2614053b9a001853c9616e88fde9b46d088c4a15,InternetTest.java,testSafeEmailAddressWithLocalPartParameter,"    public void testSafeEmailAddressWithLocalPartParameter() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress(""john"");
            assertThat(emailAddress, startsWith(""john@""));
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");
        boolean foundSafeDomainEmail = Iterables.any(emails, new Predicate<String>() {
            @Override
            public boolean apply(@Nullable String s) {
                return s.endsWith(""@"" + safeDomain);
            }});

        assertThat(""Should find at least one email from "" + safeDomain, foundSafeDomainEmail, is(true));
    }",https://www.github.com/dius/java-faker/commit/2614053b9a001853c9616e88fde9b46d088c4a15,"    public void testSafeEmailAddressWithLocalPartParameter() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress(""john"");
            assertThat(emailAddress, startsWith(""john@""));
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");
        boolean foundSafeDomainEmail = Iterables.any(emails, new Predicate<String>() {
            @Override
            public boolean apply(@Nullable String s) {
                return s.endsWith(""@"" + safeDomain);
            }});

        assertThat(""Should find at least one email from "" + safeDomain, foundSafeDomainEmail, is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSafeEmailAddressWithLocalPartParameter', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'emails', ' ', '=', ' ', 'Lists', '.', 'newArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'safeEmailAddress', '(', '""', 'john', '""', ')', ';', '\n', '            ', 'assertThat', '(', 'emailAddress', ',', ' ', 'startsWith', '(', '""', 'john@', '""', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '            ', 'emails', '.', 'add', '(', 'emailAddress', ')', ';', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'String', ' ', 'safeDomain', ' ', '=', ' ', 'faker', '.', 'resolve', '(', '""', 'internet.safe_email', '""', ')', ';', '\n', '        ', 'boolean', ' ', 'foundSafeDomainEmail', ' ', '=', ' ', 'Iterables', '.', 'any', '(', 'emails', ',', ' ', 'new', ' ', 'Predicate', '<', 'String', '>', '(', ')', ' ', '{', '\n', '            ', '@Override', '\n', '            ', 'public', ' ', 'boolean', ' ', 'apply', '(', '@Nullable', ' ', 'String', ' ', 's', ')', ' ', '{', '\n', '                ', 'return', ' ', 's', '.', 'endsWith', '(', '""', '@', '""', ' ', '+', ' ', 'safeDomain', ')', ';', '\n', '            ', '}', '}', ')', ';', '\n', '\n', '        ', 'assertThat', '(', '""', 'Should find at least one email from ', '""', ' ', '+', ' ', 'safeDomain', ',', ' ', 'foundSafeDomainEmail', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,FakeValuesService.java,resolveFakerObjectAndMethod,"    private String resolveFakerObjectAndMethod(Faker faker, String key, List<String> args) {
        final String[] classAndMethod = key.split(""\\."", 2);
        
        try {
            String fakerMethodName = classAndMethod[0].replaceAll(""_"", """");",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    private String resolveFakerObjectAndMethod(Faker faker, String key, List<String> args) {
        final String[] classAndMethod = key.split(""\\."", 2);
        
        try {
            String fakerMethodName = classAndMethod[0].replaceAll(""_"", """");
","['    ', 'private', ' ', 'String', ' ', 'resolveFakerObjectAndMethod', '(', 'Faker', ' ', 'faker', ',', ' ', 'String', ' ', 'key', ',', ' ', 'List', '<', 'String', '>', ' ', 'args', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'classAndMethod', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ',', ' ', '2', ')', ';', '\n', '        ', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'fakerMethodName', ' ', '=', ' ', 'classAndMethod', '[', '0', ']', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ';', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,CryptoTest.java,missingAlgorithVomitsHorribly,"    public void missingAlgorithVomitsHorribly() throws NoSuchAlgorithmException {
        mockStatic(MessageDigest.class);
        
        PowerMockito.when(MessageDigest.getInstance(Mockito.anyString()))
                .thenThrow(new NoSuchAlgorithmException(""I no haz that algorithm.""));
        
        try {
            faker.crypto().sha1();",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    public void missingAlgorithVomitsHorribly() throws NoSuchAlgorithmException {
        mockStatic(MessageDigest.class);
        
        PowerMockito.when(MessageDigest.getInstance(Mockito.anyString()))
                .thenThrow(new NoSuchAlgorithmException(""I no haz that algorithm.""));
        
        try {
            faker.crypto().sha1();
","['    ', 'public', ' ', 'void', ' ', 'missingAlgorithVomitsHorribly', '(', ')', ' ', 'throws', ' ', 'NoSuchAlgorithmException', ' ', '{', '\n', '        ', 'mockStatic', '(', 'MessageDigest', '.', 'class', ')', ';', '\n', '        ', '\n', '        ', 'PowerMockito', '.', 'when', '(', 'MessageDigest', '.', 'getInstance', '(', 'Mockito', '.', 'anyString', '(', ')', ')', ')', '\n', '                ', '.', 'thenThrow', '(', 'new', ' ', 'NoSuchAlgorithmException', '(', '""', 'I no haz that algorithm.', '""', ')', ')', ';', '\n', '        ', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'faker', '.', 'crypto', '(', ')', '.', 'sha1', '(', ')', ';', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,FakeValuesServiceTest.java,expressionWithInvalidFakerObject,"    public void expressionWithInvalidFakerObject() {
        expressionShouldFailWith(""#{ObjectNotOnFaker.methodName}"", 
                ""Can't find top level faker object named ObjectNotOnFaker."");",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    public void expressionWithInvalidFakerObject() {
        expressionShouldFailWith(""#{ObjectNotOnFaker.methodName}"", 
                ""Can't find top level faker object named ObjectNotOnFaker."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithInvalidFakerObject', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{ObjectNotOnFaker.methodName}', '""', ',', ' ', '\n', '                ', '""', ""Can't find top level faker object named ObjectNotOnFaker."", '""', ')', ';', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,FakeValuesServiceTest.java,expressionWithValidFakerObjectButInvalidMethod,"    public void expressionWithValidFakerObjectButInvalidMethod() {
        expressionShouldFailWith(""#{Name.nonExistentMethod}"", 
                ""Can't find method on Name called nonExistentMethod."");",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    public void expressionWithValidFakerObjectButInvalidMethod() {
        expressionShouldFailWith(""#{Name.nonExistentMethod}"", 
                ""Can't find method on Name called nonExistentMethod."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectButInvalidMethod', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{Name.nonExistentMethod}', '""', ',', ' ', '\n', '                ', '""', ""Can't find method on Name called nonExistentMethod."", '""', ')', ';', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,FakeValuesServiceTest.java,expressionWithValidFakerObjectValidMethodInvalidArgs,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"", 
                ""Unable to coerce x to Long via Long(String) constructor."");",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"", 
                ""Unable to coerce x to Long via Long(String) constructor."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectValidMethodInvalidArgs', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', ""#{Number.number_between 'x','y'}"", '""', ',', ' ', '\n', '                ', '""', 'Unable to coerce x to Long via Long(String) constructor.', '""', ')', ';', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,FakeValuesServiceTest.java,expressionCompletelyUnresolvable,"    public void expressionCompletelyUnresolvable() {
        expressionShouldFailWith(""#{x}"", ""Unable to resolve #{x} directive."");
    }",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    public void expressionCompletelyUnresolvable() {
        expressionShouldFailWith(""#{x}"", ""Unable to resolve #{x} directive."");
    }
","['    ', 'public', ' ', 'void', ' ', 'expressionCompletelyUnresolvable', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{x}', '""', ',', ' ', '""', 'Unable to resolve #{x} directive.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,FakeValuesServiceTest.java,expressionShouldFailWith,"    private void expressionShouldFailWith(String expression, String errorMessage) {
        try {
            fakeValuesService.expression(expression, faker);",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    private void expressionShouldFailWith(String expression, String errorMessage) {
        try {
            fakeValuesService.expression(expression, faker);
","['    ', 'private', ' ', 'void', ' ', 'expressionShouldFailWith', '(', 'String', ' ', 'expression', ',', ' ', 'String', ' ', 'errorMessage', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'fakeValuesService', '.', 'expression', '(', 'expression', ',', ' ', 'faker', ')', ';', '\n']"
master,dee2a88a3fbf0557cf3919aefe50ffb82dff1126,RandomServiceTest.java,data,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {""RandomService(Random)"", new RandomService(new Random())},
                {""RandomService()"", new RandomService()}
        };
        return Arrays.asList(data);
    }",https://www.github.com/dius/java-faker/commit/dee2a88a3fbf0557cf3919aefe50ffb82dff1126,"    public static Collection<Object[]> data() {
        Object[][] data = new Object[][]{
                {""RandomService(Random)"", new RandomService(new Random())},
                {""RandomService()"", new RandomService()}
        };
        return Arrays.asList(data);
    }
","['    ', 'public', ' ', 'static', ' ', 'Collection', '<', 'Object', '[', ']', '>', ' ', 'data', '(', ')', ' ', '{', '\n', '        ', 'Object', '[', ']', '[', ']', ' ', 'data', ' ', '=', ' ', 'new', ' ', 'Object', '[', ']', '[', ']', '{', '\n', '                ', '{', '""', 'RandomService(Random)', '""', ',', ' ', 'new', ' ', 'RandomService', '(', 'new', ' ', 'Random', '(', ')', ')', '}', ',', '\n', '                ', '{', '""', 'RandomService()', '""', ',', ' ', 'new', ' ', 'RandomService', '(', ')', '}', '\n', '        ', '}', ';', '\n', '        ', 'return', ' ', 'Arrays', '.', 'asList', '(', 'data', ')', ';', '\n', '    ', '}', '\n']"
master,d21f85249e9a75dc176e866ac265cb3838a02d81,Internet.java,privateIpV4Address,"    public String privateIpV4Address() {
        final Integer[] PRIVATE_FIRST_OCTET = {10,127,169,192,172};
        final Integer[] PRIVATE_SECOND_OCTET_172 = {16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};

        final RandomService r = faker.random();
        int first = random(PRIVATE_FIRST_OCTET),
                second = r.nextInt(256),
                third = r.nextInt(256),
                fourth = r.nextInt(256);

        switch (first) {
            case 172:
                second = random(PRIVATE_SECOND_OCTET_172);
                break;
            case 192:
                second = 168;
                break;
            case 169:
                second = 254;
                break;
        }
        return String.format(""%d.%d.%d.%d"", first, second, third, fourth);
    }",https://www.github.com/dius/java-faker/commit/d21f85249e9a75dc176e866ac265cb3838a02d81,"    public String privateIpV4Address() {
        final Integer[] PRIVATE_FIRST_OCTET = {10,127,169,192,172};
        final Integer[] PRIVATE_SECOND_OCTET_172 = {16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};

        final RandomService r = faker.random();
        int first = random(PRIVATE_FIRST_OCTET),
                second = r.nextInt(256),
                third = r.nextInt(256),
                fourth = r.nextInt(256);

        switch (first) {
            case 172:
                second = random(PRIVATE_SECOND_OCTET_172);
                break;
            case 192:
                second = 168;
                break;
            case 169:
                second = 254;
                break;
        }
        return String.format(""%d.%d.%d.%d"", first, second, third, fourth);
    }
","['    ', 'public', ' ', 'String', ' ', 'privateIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Integer', '[', ']', ' ', 'PRIVATE_FIRST_OCTET', ' ', '=', ' ', '{', '10', ',', '127', ',', '169', ',', '192', ',', '172', '}', ';', '\n', '        ', 'final', ' ', 'Integer', '[', ']', ' ', 'PRIVATE_SECOND_OCTET_172', ' ', '=', ' ', '{', '16', ',', '17', ',', '18', ',', '19', ',', '20', ',', '21', ',', '22', ',', '23', ',', '24', ',', '25', ',', '26', ',', '27', ',', '28', ',', '29', ',', '30', ',', '31', '}', ';', '\n', '\n', '        ', 'final', ' ', 'RandomService', ' ', 'r', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', ';', '\n', '        ', 'int', ' ', 'first', ' ', '=', ' ', 'random', '(', 'PRIVATE_FIRST_OCTET', ')', ',', '\n', '                ', 'second', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ',', '\n', '                ', 'third', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ',', '\n', '                ', 'fourth', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ';', '\n', '\n', '        ', 'switch', ' ', '(', 'first', ')', ' ', '{', '\n', '            ', 'case', ' ', '172', ':', '\n', '                ', 'second', ' ', '=', ' ', 'random', '(', 'PRIVATE_SECOND_OCTET_172', ')', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', '192', ':', '\n', '                ', 'second', ' ', '=', ' ', '168', ';', '\n', '                ', 'break', ';', '\n', '            ', 'case', ' ', '169', ':', '\n', '                ', 'second', ' ', '=', ' ', '254', ';', '\n', '                ', 'break', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%d.%d.%d.%d', '""', ',', ' ', 'first', ',', ' ', 'second', ',', ' ', 'third', ',', ' ', 'fourth', ')', ';', '\n', '    ', '}', '\n']"
master,d21f85249e9a75dc176e866ac265cb3838a02d81,Internet.java,publicIpV4Address,"    public String publicIpV4Address() {
        final RandomService r = faker.random();
        
        final int[] PRIVATE_FIRST_OCTET = {10,127,169,192,172};

        int first = r.nextInt(256),
                second = r.nextInt(256),
                third = r.nextInt(256),
                fourth = r.nextInt(256);
        
        while (Arrays.binarySearch(PRIVATE_FIRST_OCTET, first) > 0) {
            first = r.nextInt(256);
        }
        return String.format(""%d.%d.%d.%d"", first, second, third, fourth);
    }",https://www.github.com/dius/java-faker/commit/d21f85249e9a75dc176e866ac265cb3838a02d81,"    public String publicIpV4Address() {
        final RandomService r = faker.random();
        
        final int[] PRIVATE_FIRST_OCTET = {10,127,169,192,172};

        int first = r.nextInt(256),
                second = r.nextInt(256),
                third = r.nextInt(256),
                fourth = r.nextInt(256);
        
        while (Arrays.binarySearch(PRIVATE_FIRST_OCTET, first) > 0) {
            first = r.nextInt(256);
        }
        return String.format(""%d.%d.%d.%d"", first, second, third, fourth);
    }
","['    ', 'public', ' ', 'String', ' ', 'publicIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'RandomService', ' ', 'r', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', ';', '\n', '        ', '\n', '        ', 'final', ' ', 'int', '[', ']', ' ', 'PRIVATE_FIRST_OCTET', ' ', '=', ' ', '{', '10', ',', '127', ',', '169', ',', '192', ',', '172', '}', ';', '\n', '\n', '        ', 'int', ' ', 'first', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ',', '\n', '                ', 'second', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ',', '\n', '                ', 'third', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ',', '\n', '                ', 'fourth', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ';', '\n', '        ', '\n', '        ', 'while', ' ', '(', 'Arrays', '.', 'binarySearch', '(', 'PRIVATE_FIRST_OCTET', ',', ' ', 'first', ')', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '            ', 'first', ' ', '=', ' ', 'r', '.', 'nextInt', '(', '256', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'String', '.', 'format', '(', '""', '%d.%d.%d.%d', '""', ',', ' ', 'first', ',', ' ', 'second', ',', ' ', 'third', ',', ' ', 'fourth', ')', ';', '\n', '    ', '}', '\n']"
master,d21f85249e9a75dc176e866ac265cb3838a02d81,Internet.java,random,"    private <T> T random(T[] src) {
        return src[faker.random().nextInt(src.length)];
    }",https://www.github.com/dius/java-faker/commit/d21f85249e9a75dc176e866ac265cb3838a02d81,"    private <T> T random(T[] src) {
        return src[faker.random().nextInt(src.length)];
    }
","['    ', 'private', ' ', '<', 'T', '>', ' ', 'T', ' ', 'random', '(', 'T', '[', ']', ' ', 'src', ')', ' ', '{', '\n', '        ', 'return', ' ', 'src', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'src', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,d21f85249e9a75dc176e866ac265cb3838a02d81,InternetTest.java,testPrivateIpV4Address,"    public void testPrivateIpV4Address() {
        String tenDot = ""^10\\..+"";
        String oneTwoSeven = ""^127\\..+"";
        String oneSixNine = ""^169\\.254\\..+"";
        String oneNineTwo = ""^192\\.168\\..+"";
        String oneSevenTwo = ""^172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\..+"";

        
        for (int i = 0; i < 1000; i++) {
            String addr = faker.internet().privateIpV4Address();",https://www.github.com/dius/java-faker/commit/d21f85249e9a75dc176e866ac265cb3838a02d81,"    public void testPrivateIpV4Address() {
        String tenDot = ""^10\\..+"";
        String oneTwoSeven = ""^127\\..+"";
        String oneSixNine = ""^169\\.254\\..+"";
        String oneNineTwo = ""^192\\.168\\..+"";
        String oneSevenTwo = ""^172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\..+"";

        
        for (int i = 0; i < 1000; i++) {
            String addr = faker.internet().privateIpV4Address();
","['    ', 'public', ' ', 'void', ' ', 'testPrivateIpV4Address', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'tenDot', ' ', '=', ' ', '""', '^10', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneTwoSeven', ' ', '=', ' ', '""', '^127', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneSixNine', ' ', '=', ' ', '""', '^169', '\\\\', '.254', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneNineTwo', ' ', '=', ' ', '""', '^192', '\\\\', '.168', '\\\\', '..+', '""', ';', '\n', '        ', 'String', ' ', 'oneSevenTwo', ' ', '=', ' ', '""', '^172', '\\\\', '.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)', '\\\\', '..+', '""', ';', '\n', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'addr', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'privateIpV4Address', '(', ')', ';', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,randomDigit,"    public int randomDigit() {
        return decimalBetween(0,10).intValue();
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public int randomDigit() {
        return decimalBetween(0,10).intValue();
    }
","['    ', 'public', ' ', 'int', ' ', 'randomDigit', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', '0', ',', '10', ')', '.', 'intValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,randomDigitNotZero,"    public int randomDigitNotZero() {
        return decimalBetween(1,10).intValue();
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public int randomDigitNotZero() {
        return decimalBetween(1,10).intValue();
    }
","['    ', 'public', ' ', 'int', ' ', 'randomDigitNotZero', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', '1', ',', '10', ')', '.', 'intValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,numberBetween,"    public int numberBetween(int min, int max) {
        return decimalBetween(min,max).intValue();
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public int numberBetween(int min, int max) {
        return decimalBetween(min,max).intValue();
    }
","['    ', 'public', ' ', 'int', ' ', 'numberBetween', '(', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', 'min', ',', 'max', ')', '.', 'intValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,numberBetween,"    public long numberBetween(long min, long max) {
        return decimalBetween(min,max).longValue();
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public long numberBetween(long min, long max) {
        return decimalBetween(min,max).longValue();
    }
","['    ', 'public', ' ', 'long', ' ', 'numberBetween', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', 'min', ',', 'max', ')', '.', 'longValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,randomNumber,"    public long randomNumber() {
        int numberOfDigits = decimalBetween(1,10).intValue();
        return randomNumber(numberOfDigits, false);
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public long randomNumber() {
        int numberOfDigits = decimalBetween(1,10).intValue();
        return randomNumber(numberOfDigits, false);
    }
","['    ', 'public', ' ', 'long', ' ', 'randomNumber', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'numberOfDigits', ' ', '=', ' ', 'decimalBetween', '(', '1', ',', '10', ')', '.', 'intValue', '(', ')', ';', '\n', '        ', 'return', ' ', 'randomNumber', '(', 'numberOfDigits', ',', ' ', 'false', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,randomDouble,"    public double randomDouble(int maxNumberOfDecimals, int min, int max) {
        return randomDouble(maxNumberOfDecimals,(long) min, (long) max);
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public double randomDouble(int maxNumberOfDecimals, int min, int max) {
        return randomDouble(maxNumberOfDecimals,(long) min, (long) max);
    }
","['    ', 'public', ' ', 'double', ' ', 'randomDouble', '(', 'int', ' ', 'maxNumberOfDecimals', ',', ' ', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'randomDouble', '(', 'maxNumberOfDecimals', ',', '(', 'long', ')', ' ', 'min', ',', ' ', '(', 'long', ')', ' ', 'max', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,randomDouble,"    public double randomDouble(int maxNumberOfDecimals, long min, long max) {
        return decimalBetween(min,max)
                .setScale(maxNumberOfDecimals, BigDecimal.ROUND_HALF_DOWN)",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public double randomDouble(int maxNumberOfDecimals, long min, long max) {
        return decimalBetween(min,max)
                .setScale(maxNumberOfDecimals, BigDecimal.ROUND_HALF_DOWN)
","['    ', 'public', ' ', 'double', ' ', 'randomDouble', '(', 'int', ' ', 'maxNumberOfDecimals', ',', ' ', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', 'min', ',', 'max', ')', '\n', '                ', '.', 'setScale', '(', 'maxNumberOfDecimals', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_DOWN', ')', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,decimalBetween,"    private BigDecimal decimalBetween(long min, long max) {
        if (min == max) {
            return new BigDecimal(min);
        }
        final long trueMin = Math.min(min, max);
        final long trueMax = Math.max(min, max);

        final double range = (double) trueMax - (double) trueMin;
        
        final double chunkCount = Math.sqrt(Math.abs(range));
        final double chunkSize = chunkCount;
        final long randomChunk = faker.random().nextLong((long) chunkCount);

        final double chunkStart = trueMin + randomChunk * chunkSize;
        final double adj = chunkSize * faker.random().nextDouble();
        return new BigDecimal(chunkStart + adj);
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    private BigDecimal decimalBetween(long min, long max) {
        if (min == max) {
            return new BigDecimal(min);
        }
        final long trueMin = Math.min(min, max);
        final long trueMax = Math.max(min, max);

        final double range = (double) trueMax - (double) trueMin;
        
        final double chunkCount = Math.sqrt(Math.abs(range));
        final double chunkSize = chunkCount;
        final long randomChunk = faker.random().nextLong((long) chunkCount);

        final double chunkStart = trueMin + randomChunk * chunkSize;
        final double adj = chunkSize * faker.random().nextDouble();
        return new BigDecimal(chunkStart + adj);
    }
","['    ', 'private', ' ', 'BigDecimal', ' ', 'decimalBetween', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'min', ' ', '=', '=', ' ', 'max', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'BigDecimal', '(', 'min', ')', ';', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'long', ' ', 'trueMin', ' ', '=', ' ', 'Math', '.', 'min', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '        ', 'final', ' ', 'long', ' ', 'trueMax', ' ', '=', ' ', 'Math', '.', 'max', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '        ', 'final', ' ', 'double', ' ', 'range', ' ', '=', ' ', '(', 'double', ')', ' ', 'trueMax', ' ', '-', ' ', '(', 'double', ')', ' ', 'trueMin', ';', '\n', '        ', '\n', '        ', 'final', ' ', 'double', ' ', 'chunkCount', ' ', '=', ' ', 'Math', '.', 'sqrt', '(', 'Math', '.', 'abs', '(', 'range', ')', ')', ';', '\n', '        ', 'final', ' ', 'double', ' ', 'chunkSize', ' ', '=', ' ', 'chunkCount', ';', '\n', '        ', 'final', ' ', 'long', ' ', 'randomChunk', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', '(', 'long', ')', ' ', 'chunkCount', ')', ';', '\n', '\n', '        ', 'final', ' ', 'double', ' ', 'chunkStart', ' ', '=', ' ', 'trueMin', ' ', '+', ' ', 'randomChunk', ' ', '*', ' ', 'chunkSize', ';', '\n', '        ', 'final', ' ', 'double', ' ', 'adj', ' ', '=', ' ', 'chunkSize', ' ', '*', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextDouble', '(', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'BigDecimal', '(', 'chunkStart', ' ', '+', ' ', 'adj', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,Number.java,digits,"    public String digits(int count) {
        final StringBuilder tmp = new StringBuilder();
        for (int i = 0; i < count; i++) {
            tmp.append(randomDigit());
        }
        return tmp.toString();
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public String digits(int count) {
        final StringBuilder tmp = new StringBuilder();
        for (int i = 0; i < count; i++) {
            tmp.append(randomDigit());
        }
        return tmp.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'digits', '(', 'int', ' ', 'count', ')', ' ', '{', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'tmp', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'count', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'tmp', '.', 'append', '(', 'randomDigit', '(', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'tmp', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,testRandomDigit,"    public void testRandomDigit() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigit();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThanOrEqualTo(0)));
            nums.add(value);
        }
        assertThat(""Verify all numbers 0-9 were represented"", nums,hasSize(10));
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public void testRandomDigit() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigit();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThanOrEqualTo(0)));
            nums.add(value);
        }
        assertThat(""Verify all numbers 0-9 were represented"", nums,hasSize(10));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRandomDigit', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Integer', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDigit', '(', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThanOrEqualTo', '(', '9', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', '0', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', '""', 'Verify all numbers 0-9 were represented', '""', ',', ' ', 'nums', ',', 'hasSize', '(', '10', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,testRandomDigitNotZero,"    public void testRandomDigitNotZero() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigitNotZero();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThan(0)));
            nums.add(value);
        }
        assertThat(""Verify all numbers 1-9 were represented"", nums,hasSize(9));
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public void testRandomDigitNotZero() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigitNotZero();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThan(0)));
            nums.add(value);
        }
        assertThat(""Verify all numbers 1-9 were represented"", nums,hasSize(9));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRandomDigitNotZero', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Integer', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDigitNotZero', '(', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThanOrEqualTo', '(', '9', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThan', '(', '0', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', '""', 'Verify all numbers 1-9 were represented', '""', ',', ' ', 'nums', ',', 'hasSize', '(', '9', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,testRandomNumberWithZeroDigitsStrict,"    public void testRandomNumberWithZeroDigitsStrict() {
        for (int i = 0; i < 100; ++i) {
            long value = faker.number().randomNumber(0, true);",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public void testRandomNumberWithZeroDigitsStrict() {
        for (int i = 0; i < 100; ++i) {
            long value = faker.number().randomNumber(0, true);
","['    ', 'public', ' ', 'void', ' ', 'testRandomNumberWithZeroDigitsStrict', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'long', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomNumber', '(', '0', ',', ' ', 'true', ')', ';', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,numberBetweenIntIntZeroMinMax,"    public void numberBetweenIntIntZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"", 
                faker.number().numberBetween(0,0), 
                is(0));
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween(2,2), ",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public void numberBetweenIntIntZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"", 
                faker.number().numberBetween(0,0), 
                is(0));
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween(2,2), 
","['    ', 'public', ' ', 'void', ' ', 'numberBetweenIntIntZeroMinMax', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min, with 0', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '0', ',', '0', ')', ',', ' ', '\n', '                ', 'is', '(', '0', ')', ')', ';', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '2', ',', '2', ')', ',', ' ', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,numberBetweenLongLongZeroMinMax,"    public void numberBetweenLongLongZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"", 
                faker.number().numberBetween((long)0,(long)0), 
                is(0l));
        
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween((long)2,(long)2), ",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    public void numberBetweenLongLongZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"", 
                faker.number().numberBetween((long)0,(long)0), 
                is(0l));
        
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween((long)2,(long)2), 
","['    ', 'public', ' ', 'void', ' ', 'numberBetweenLongLongZeroMinMax', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min, with 0', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '(', 'long', ')', '0', ',', '(', 'long', ')', '0', ')', ',', ' ', '\n', '                ', 'is', '(', '0', 'l', ')', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '(', 'long', ')', '2', ',', '(', 'long', ')', '2', ')', ',', ' ', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,apply,"            public Double apply(@Nullable Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(),
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Double>() {
                    @Override",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"            public Double apply(@Nullable Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(),
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Double>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', '@Nullable', ' ', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'int', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', '.', 'intValue', '(', ')', ',', '\n', '                        ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Double', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,call,"                    public Double call() throws Exception {
                        return faker.number().randomDouble(0, min, max);
                    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"                    public Double call() throws Exception {
                        return faker.number().randomDouble(0, min, max);
                    }
","['                    ', 'public', ' ', 'Double', ' ', 'call', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '                        ', 'return', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDouble', '(', '0', ',', ' ', 'min', ',', ' ', 'max', ')', ';', '\n', '                    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,apply,"            public Double apply(@Nullable Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(), 
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Integer>() {
                    @Override",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"            public Double apply(@Nullable Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(), 
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Integer>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', '@Nullable', ' ', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'int', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', '.', 'intValue', '(', ')', ',', ' ', '\n', '                        ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Integer', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,call,"                    public Integer call() throws Exception {
                        return faker.number().numberBetween(min, max);
                    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"                    public Integer call() throws Exception {
                        return faker.number().numberBetween(min, max);
                    }
","['                    ', 'public', ' ', 'Integer', ' ', 'call', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '                        ', 'return', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '                    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,apply,"            public Double apply(@Nullable Pair<Long, Long> minMax) {
                final long min = minMax.getLeft(), max = minMax.getRight();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Long>() {
                    @Override",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"            public Double apply(@Nullable Pair<Long, Long> minMax) {
                final long min = minMax.getLeft(), max = minMax.getRight();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Long>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', '@Nullable', ' ', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'long', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', ',', ' ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Long', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,call,"                    public Long call() throws Exception {
                        return faker.number().numberBetween(min, max);
                    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"                    public Long call() throws Exception {
                        return faker.number().numberBetween(min, max);
                    }
","['                    ', 'public', ' ', 'Long', ' ', 'call', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '                        ', 'return', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '                    ', '}', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,uniquePercentageOfResults,"    private <T> double uniquePercentageOfResults(long iterations, Callable<T> callable) {
        try {
            List<T> values = Lists.newArrayList();",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    private <T> double uniquePercentageOfResults(long iterations, Callable<T> callable) {
        try {
            List<T> values = Lists.newArrayList();
","['    ', 'private', ' ', '<', 'T', '>', ' ', 'double', ' ', 'uniquePercentageOfResults', '(', 'long', ' ', 'iterations', ',', ' ', 'Callable', '<', 'T', '>', ' ', 'callable', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'List', '<', 'T', '>', ' ', 'values', ' ', '=', ' ', 'Lists', '.', 'newArrayList', '(', ')', ';', '\n']"
master,e1151d6cca4920cb7c3bbc38011baa3de609c7fc,NumberTest.java,calculateNumbersToGet,"    private long calculateNumbersToGet(long min, long max) {
        long numbersToGet = Math.min((max - min) / 4, RANDOMIZATION_TESTS_MAX_NUMBERS_TO_GET);
        if (numbersToGet == 0) numbersToGet = RANDOMIZATION_TESTS_MAX_NUMBERS_TO_GET;
        return numbersToGet;
    }",https://www.github.com/dius/java-faker/commit/e1151d6cca4920cb7c3bbc38011baa3de609c7fc,"    private long calculateNumbersToGet(long min, long max) {
        long numbersToGet = Math.min((max - min) / 4, RANDOMIZATION_TESTS_MAX_NUMBERS_TO_GET);
        if (numbersToGet == 0) numbersToGet = RANDOMIZATION_TESTS_MAX_NUMBERS_TO_GET;
        return numbersToGet;
    }
","['    ', 'private', ' ', 'long', ' ', 'calculateNumbersToGet', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'Math', '.', 'min', '(', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '/', ' ', '4', ',', ' ', 'RANDOMIZATION_TESTS_MAX_NUMBERS_TO_GET', ')', ';', '\n', '        ', 'if', ' ', '(', 'numbersToGet', ' ', '=', '=', ' ', '0', ')', ' ', 'numbersToGet', ' ', '=', ' ', 'RANDOMIZATION_TESTS_MAX_NUMBERS_TO_GET', ';', '\n', '        ', 'return', ' ', 'numbersToGet', ';', '\n', '    ', '}', '\n']"
master,b2f756cb9d0af859c4d76ff7d10186a76c200957,Food.java,ingredient,"    public String ingredient() {
        return faker.fakeValuesService().resolve(""food.ingredients"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/b2f756cb9d0af859c4d76ff7d10186a76c200957,"    public String ingredient() {
        return faker.fakeValuesService().resolve(""food.ingredients"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'ingredient', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.ingredients', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,b2f756cb9d0af859c4d76ff7d10186a76c200957,Food.java,spice,"    public String spice() {
        return faker.fakeValuesService().resolve(""food.spices"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/b2f756cb9d0af859c4d76ff7d10186a76c200957,"    public String spice() {
        return faker.fakeValuesService().resolve(""food.spices"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'spice', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.spices', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,b2f756cb9d0af859c4d76ff7d10186a76c200957,Food.java,measurement,"    public String measurement() {
        return faker.fakeValuesService().resolve(""food.measurement_sizes"", this, faker) +
            "" "" + faker.fakeValuesService().resolve(""food.measurements"", this, faker);",https://www.github.com/dius/java-faker/commit/b2f756cb9d0af859c4d76ff7d10186a76c200957,"    public String measurement() {
        return faker.fakeValuesService().resolve(""food.measurement_sizes"", this, faker) +
            "" "" + faker.fakeValuesService().resolve(""food.measurements"", this, faker);
","['    ', 'public', ' ', 'String', ' ', 'measurement', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.measurement_sizes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ' ', '+', '\n', '            ', '""', ' ', '""', ' ', '+', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.measurements', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n']"
master,b2f756cb9d0af859c4d76ff7d10186a76c200957,FoodTest.java,ingredient,"    public void ingredient() {
        assertThat(faker.food().ingredient(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/b2f756cb9d0af859c4d76ff7d10186a76c200957,"    public void ingredient() {
        assertThat(faker.food().ingredient(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'ingredient', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'ingredient', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b2f756cb9d0af859c4d76ff7d10186a76c200957,FoodTest.java,spice,"    public void spice() {
        assertThat(faker.food().spice(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/b2f756cb9d0af859c4d76ff7d10186a76c200957,"    public void spice() {
        assertThat(faker.food().spice(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'spice', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'spice', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b2f756cb9d0af859c4d76ff7d10186a76c200957,FoodTest.java,measurement,"    public void measurement() {
        assertThat(faker.food().measurement(), matchesRegularExpression(""[A-Za-z1-9/ ]+{2}""));
    }",https://www.github.com/dius/java-faker/commit/b2f756cb9d0af859c4d76ff7d10186a76c200957,"    public void measurement() {
        assertThat(faker.food().measurement(), matchesRegularExpression(""[A-Za-z1-9/ ]+{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'measurement', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'measurement', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9/ ]+{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,FakeValuesService.java,resolveFromMethodOn,"    private String resolveFromMethodOn(Object obj, String directive, List<String> args) {
        if (obj == null) {
            return null;
        }
        try {
            final MethodAndCoercedArgs accessor = accessor(obj, directive, args);",https://www.github.com/dius/java-faker/commit/078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,"    private String resolveFromMethodOn(Object obj, String directive, List<String> args) {
        if (obj == null) {
            return null;
        }
        try {
            final MethodAndCoercedArgs accessor = accessor(obj, directive, args);
","['    ', 'private', ' ', 'String', ' ', 'resolveFromMethodOn', '(', 'Object', ' ', 'obj', ',', ' ', 'String', ' ', 'directive', ',', ' ', 'List', '<', 'String', '>', ' ', 'args', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'obj', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'null', ';', '\n', '        ', '}', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'final', ' ', 'MethodAndCoercedArgs', ' ', 'accessor', ' ', '=', ' ', 'accessor', '(', 'obj', ',', ' ', 'directive', ',', ' ', 'args', ')', ';', '\n']"
master,078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,FakeValuesService.java,invoke,"        private Object invoke(Object on) throws InvocationTargetException, IllegalAccessException {
            return method.invoke(on, coerced.toArray());
        }",https://www.github.com/dius/java-faker/commit/078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,"        private Object invoke(Object on) throws InvocationTargetException, IllegalAccessException {
            return method.invoke(on, coerced.toArray());
        }
","['        ', 'private', ' ', 'Object', ' ', 'invoke', '(', 'Object', ' ', 'on', ')', ' ', 'throws', ' ', 'InvocationTargetException', ',', ' ', 'IllegalAccessException', ' ', '{', '\n', '            ', 'return', ' ', 'method', '.', 'invoke', '(', 'on', ',', ' ', 'coerced', '.', 'toArray', '(', ')', ')', ';', '\n', '        ', '}', '\n']"
master,078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,FakeValuesService.java,requireNonNull,"        private <T> T requireNonNull(T instance, String messageIfNull) {
            if (instance == null) {
                throw new NullPointerException(messageIfNull);
            }
            return instance;
        }",https://www.github.com/dius/java-faker/commit/078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,"        private <T> T requireNonNull(T instance, String messageIfNull) {
            if (instance == null) {
                throw new NullPointerException(messageIfNull);
            }
            return instance;
        }
","['        ', 'private', ' ', '<', 'T', '>', ' ', 'T', ' ', 'requireNonNull', '(', 'T', ' ', 'instance', ',', ' ', 'String', ' ', 'messageIfNull', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'instance', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'throw', ' ', 'new', ' ', 'NullPointerException', '(', 'messageIfNull', ')', ';', '\n', '            ', '}', '\n', '            ', 'return', ' ', 'instance', ';', '\n', '        ', '}', '\n']"
master,078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,FakeValuesServiceTest.java,expressionWithValidFakerObjectValidMethodInvalidArgs,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"", 
                ""Can't find method on Number called numberbetween."");",https://www.github.com/dius/java-faker/commit/078d44e2323e2a71a0fd7ef1743fbdd7d4ef6d3d,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"", 
                ""Can't find method on Number called numberbetween."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectValidMethodInvalidArgs', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', ""#{Number.number_between 'x','y'}"", '""', ',', ' ', '\n', '                ', '""', ""Can't find method on Number called numberbetween."", '""', ')', ';', '\n']"
master,1a4dae6de7e708cd147c893344515637e2147e63,FakerIDN.java,toASCII,"    public static final String toASCII(String in) {
        final StringBuilder sb = new StringBuilder();
        for (int i=0;i<in.length();i++) {
            try {
                sb.append(IDN.toASCII(in.substring(i, i + 1)));
            }
            catch (Exception e) {}
        }
        if (sb.length() == 0) {
            throw new RuntimeException(""Unable to convert "" + in + "" to ASCII"");
        }
        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/1a4dae6de7e708cd147c893344515637e2147e63,"    public static final String toASCII(String in) {
        final StringBuilder sb = new StringBuilder();
        for (int i=0;i<in.length();i++) {
            try {
                sb.append(IDN.toASCII(in.substring(i, i + 1)));
            }
            catch (Exception e) {}
        }
        if (sb.length() == 0) {
            throw new RuntimeException(""Unable to convert "" + in + "" to ASCII"");
        }
        return sb.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'final', ' ', 'String', ' ', 'toASCII', '(', 'String', ' ', 'in', ')', ' ', '{', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', 'in', '.', 'length', '(', ')', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'IDN', '.', 'toASCII', '(', 'in', '.', 'substring', '(', 'i', ',', ' ', 'i', ' ', '+', ' ', '1', ')', ')', ')', ';', '\n', '            ', '}', '\n', '            ', 'catch', ' ', '(', 'Exception', ' ', 'e', ')', ' ', '{', '}', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'sb', '.', 'length', '(', ')', ' ', '=', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'RuntimeException', '(', '""', 'Unable to convert ', '""', ' ', '+', ' ', 'in', ' ', '+', ' ', '""', ' to ASCII', '""', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,f7f499681df54eef85cb9fb9555553439c07e3a5,FakerIT.java,testAllMethodsThatReturnStringsActuallyReturnStrings,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws IllegalAccessException, InvocationTargetException {
        @SuppressWarnings(""unchecked"")
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            if (isExcepted(object, method)) {",https://www.github.com/dius/java-faker/commit/f7f499681df54eef85cb9fb9555553439c07e3a5,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws IllegalAccessException, InvocationTargetException {
        @SuppressWarnings(""unchecked"")
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            if (isExcepted(object, method)) {
","['    ', 'private', ' ', 'void', ' ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'Object', ' ', 'object', ')', ' ', 'throws', ' ', 'IllegalAccessException', ',', ' ', 'InvocationTargetException', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'Set', '<', 'Method', '>', ' ', 'methodsThatReturnStrings', ' ', '=', ' ', 'getAllMethods', '(', 'object', '.', 'getClass', '(', ')', ',', '\n', '                ', 'withModifier', '(', 'Modifier', '.', 'PUBLIC', ')', ',', '\n', '                ', 'withReturnType', '(', 'String', '.', 'class', ')', ',', '\n', '                ', 'withParametersCount', '(', '0', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Method', ' ', 'method', ' ', ':', ' ', 'methodsThatReturnStrings', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'isExcepted', '(', 'object', ',', ' ', 'method', ')', ')', ' ', '{', '\n']"
master,de89bf740b289a91b05144ba56fac1fa75589d9b,FakeValuesServiceTest.java,expressionWithInvalidFakerObject,"    public void expressionWithInvalidFakerObject() {
        expressionShouldFailWith(""#{ObjectNotOnFaker.methodName}"", 
                ""Unable to resolve #{ObjectNotOnFaker.methodName} directive."");",https://www.github.com/dius/java-faker/commit/de89bf740b289a91b05144ba56fac1fa75589d9b,"    public void expressionWithInvalidFakerObject() {
        expressionShouldFailWith(""#{ObjectNotOnFaker.methodName}"", 
                ""Unable to resolve #{ObjectNotOnFaker.methodName} directive."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithInvalidFakerObject', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{ObjectNotOnFaker.methodName}', '""', ',', ' ', '\n', '                ', '""', 'Unable to resolve #{ObjectNotOnFaker.methodName} directive.', '""', ')', ';', '\n']"
master,de89bf740b289a91b05144ba56fac1fa75589d9b,FakeValuesServiceTest.java,expressionWithValidFakerObjectButInvalidMethod,"    public void expressionWithValidFakerObjectButInvalidMethod() {
        expressionShouldFailWith(""#{Name.nonExistentMethod}"", 
                ""Unable to resolve #{Name.nonExistentMethod} directive."");",https://www.github.com/dius/java-faker/commit/de89bf740b289a91b05144ba56fac1fa75589d9b,"    public void expressionWithValidFakerObjectButInvalidMethod() {
        expressionShouldFailWith(""#{Name.nonExistentMethod}"", 
                ""Unable to resolve #{Name.nonExistentMethod} directive."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectButInvalidMethod', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{Name.nonExistentMethod}', '""', ',', ' ', '\n', '                ', '""', 'Unable to resolve #{Name.nonExistentMethod} directive.', '""', ')', ';', '\n']"
master,de89bf740b289a91b05144ba56fac1fa75589d9b,FakeValuesServiceTest.java,expressionWithValidFakerObjectValidMethodInvalidArgs,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"", 
                ""Unable to resolve #{Number.number_between 'x','y'} directive."");",https://www.github.com/dius/java-faker/commit/de89bf740b289a91b05144ba56fac1fa75589d9b,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"", 
                ""Unable to resolve #{Number.number_between 'x','y'} directive."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectValidMethodInvalidArgs', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', ""#{Number.number_between 'x','y'}"", '""', ',', ' ', '\n', '                ', '""', ""Unable to resolve #{Number.number_between 'x','y'} directive."", '""', ')', ';', '\n']"
master,38aeff61192426ede74078ee6f640a8011b2a590,FoodTest.java,spice,"    public void spice() {
        assertThat(faker.food().spice(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }",https://www.github.com/dius/java-faker/commit/38aeff61192426ede74078ee6f640a8011b2a590,"    public void spice() {
        assertThat(faker.food().spice(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'spice', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'spice', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,FakeValuesService.java,classNameToYamlName,"    private String classNameToYamlName(Object current) {
        return javaNameToYamlName(current.getClass().getSimpleName());
    }",https://www.github.com/dius/java-faker/commit/dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,"    private String classNameToYamlName(Object current) {
        return javaNameToYamlName(current.getClass().getSimpleName());
    }
","['    ', 'private', ' ', 'String', ' ', 'classNameToYamlName', '(', 'Object', ' ', 'current', ')', ' ', '{', '\n', '        ', 'return', ' ', 'javaNameToYamlName', '(', 'current', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,FakeValuesService.java,javaNameToYamlName,"    private String javaNameToYamlName(String expression) {
        return expression.replaceAll(""([A-Z])"", ""_$1"")
                .substring(1)",https://www.github.com/dius/java-faker/commit/dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,"    private String javaNameToYamlName(String expression) {
        return expression.replaceAll(""([A-Z])"", ""_$1"")
                .substring(1)
","['    ', 'private', ' ', 'String', ' ', 'javaNameToYamlName', '(', 'String', ' ', 'expression', ')', ' ', '{', '\n', '        ', 'return', ' ', 'expression', '.', 'replaceAll', '(', '""', '([A-Z])', '""', ',', ' ', '""', '_$1', '""', ')', '\n', '                ', '.', 'substring', '(', '1', ')', '\n']"
master,dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,PhoneNumberTest.java,testPhone_esMx,"    public void testPhone_esMx() {
        final Faker f = new Faker(new Locale(""es_MX""));
        for (int i=0;i<100;i++) {
            assertThat(f.phoneNumber().cellPhone(), matchesRegularExpression(""(044 )?\\(?\\d+\\)?([- .]\\d+){1,3}""));",https://www.github.com/dius/java-faker/commit/dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,"    public void testPhone_esMx() {
        final Faker f = new Faker(new Locale(""es_MX""));
        for (int i=0;i<100;i++) {
            assertThat(f.phoneNumber().cellPhone(), matchesRegularExpression(""(044 )?\\(?\\d+\\)?([- .]\\d+){1,3}""));
","['    ', 'public', ' ', 'void', ' ', 'testPhone_esMx', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'es_MX', '""', ')', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'f', '.', 'phoneNumber', '(', ')', '.', 'cellPhone', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(044 )?', '\\\\', '(?', '\\\\', 'd+', '\\\\', ')?([- .]', '\\\\', 'd+){1,3}', '""', ')', ')', ';', '\n']"
master,dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,PhoneNumberTest.java,testPhone_enZA,"    public void testPhone_enZA() {
        final Faker f = new Faker(new Locale(""en_ZA""));
        for (int i=0;i<100;i++) {
            assertThat(f.phoneNumber().phoneNumber(), matchesRegularExpression(""\\(?\\d+\\)?([- .]\\d+){1,3}""));",https://www.github.com/dius/java-faker/commit/dba083f66b05c4593b02cb0f9dc2bdcca3aaeabf,"    public void testPhone_enZA() {
        final Faker f = new Faker(new Locale(""en_ZA""));
        for (int i=0;i<100;i++) {
            assertThat(f.phoneNumber().phoneNumber(), matchesRegularExpression(""\\(?\\d+\\)?([- .]\\d+){1,3}""));
","['    ', 'public', ' ', 'void', ' ', 'testPhone_enZA', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'en_ZA', '""', ')', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'f', '.', 'phoneNumber', '(', ')', '.', 'phoneNumber', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', '(?', '\\\\', 'd+', '\\\\', ')?([- .]', '\\\\', 'd+){1,3}', '""', ')', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,File.java,extension,"    public String extension() {
        return faker.resolve(""file.extension"");
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String extension() {
        return faker.resolve(""file.extension"");
    }
","['    ', 'public', ' ', 'String', ' ', 'extension', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'file.extension', '""', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,File.java,mimeType,"    public String mimeType() {
        return faker.resolve(""file.mime_type"");
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String mimeType() {
        return faker.resolve(""file.mime_type"");
    }
","['    ', 'public', ' ', 'String', ' ', 'mimeType', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'file.mime_type', '""', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,File.java,fileName,"    public String fileName() {
        return fileName(null, null, null, null);
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String fileName() {
        return fileName(null, null, null, null);
    }
","['    ', 'public', ' ', 'String', ' ', 'fileName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'fileName', '(', 'null', ',', ' ', 'null', ',', ' ', 'null', ',', ' ', 'null', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,File.java,fileName,"    public String fileName(String dirOrNull, String nameOrNull, String extensionOrNull, String separatorOrNull) {
        final String sep = separatorOrNull == null ? System.getProperty(""file.separator"") : separatorOrNull;
        final String dir = dirOrNull == null ? faker.internet().slug() : dirOrNull;
        final String name = nameOrNull == null ? faker.lorem().word().toLowerCase() : nameOrNull;
        final String ext = extensionOrNull == null ? extension() : extensionOrNull;
        return new StringBuilder(dir).append(sep).append(name).append(""."").append(ext).toString();
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String fileName(String dirOrNull, String nameOrNull, String extensionOrNull, String separatorOrNull) {
        final String sep = separatorOrNull == null ? System.getProperty(""file.separator"") : separatorOrNull;
        final String dir = dirOrNull == null ? faker.internet().slug() : dirOrNull;
        final String name = nameOrNull == null ? faker.lorem().word().toLowerCase() : nameOrNull;
        final String ext = extensionOrNull == null ? extension() : extensionOrNull;
        return new StringBuilder(dir).append(sep).append(name).append(""."").append(ext).toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'fileName', '(', 'String', ' ', 'dirOrNull', ',', ' ', 'String', ' ', 'nameOrNull', ',', ' ', 'String', ' ', 'extensionOrNull', ',', ' ', 'String', ' ', 'separatorOrNull', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'sep', ' ', '=', ' ', 'separatorOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'System', '.', 'getProperty', '(', '""', 'file.separator', '""', ')', ' ', ':', ' ', 'separatorOrNull', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'dir', ' ', '=', ' ', 'dirOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'faker', '.', 'internet', '(', ')', '.', 'slug', '(', ')', ' ', ':', ' ', 'dirOrNull', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'name', ' ', '=', ' ', 'nameOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'word', '(', ')', '.', 'toLowerCase', '(', ')', ' ', ':', ' ', 'nameOrNull', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'ext', ' ', '=', ' ', 'extensionOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'extension', '(', ')', ' ', ':', ' ', 'extensionOrNull', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'StringBuilder', '(', 'dir', ')', '.', 'append', '(', 'sep', ')', '.', 'append', '(', 'name', ')', '.', 'append', '(', '""', '.', '""', ')', '.', 'append', '(', 'ext', ')', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,Internet.java,domainWord,"    public String domainWord() {
        return FakerIDN.toASCII(faker.name().lastName().toLowerCase().replaceAll(""'"", """"));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String domainWord() {
        return FakerIDN.toASCII(faker.name().lastName().toLowerCase().replaceAll(""'"", """"));
    }
","['    ', 'public', ' ', 'String', ' ', 'domainWord', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'FakerIDN', '.', 'toASCII', '(', 'faker', '.', 'name', '(', ')', '.', 'lastName', '(', ')', '.', 'toLowerCase', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,Internet.java,slug,"    public String slug() {
        return slug(faker.lorem().words(2), ""_"");
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String slug() {
        return slug(faker.lorem().words(2), ""_"");
    }
","['    ', 'public', ' ', 'String', ' ', 'slug', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'slug', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', '2', ')', ',', ' ', '""', '_', '""', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,Internet.java,slug,"    public String slug(List<String> wordsOrNull, String glueOrNull) {
        final String glue = glueOrNull == null
                ? ""_""
                : glueOrNull;
        final List<String> words = wordsOrNull == null
                ? faker.lorem().words(2)
                : wordsOrNull;

        final StringBuilder slug = new StringBuilder();
        for (int i = 0; i < words.size(); i++) {
            if (i > 0) {
                slug.append(glue);
            }
            slug.append(words.get(i));
        }
        return slug.toString();
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public String slug(List<String> wordsOrNull, String glueOrNull) {
        final String glue = glueOrNull == null
                ? ""_""
                : glueOrNull;
        final List<String> words = wordsOrNull == null
                ? faker.lorem().words(2)
                : wordsOrNull;

        final StringBuilder slug = new StringBuilder();
        for (int i = 0; i < words.size(); i++) {
            if (i > 0) {
                slug.append(glue);
            }
            slug.append(words.get(i));
        }
        return slug.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'slug', '(', 'List', '<', 'String', '>', ' ', 'wordsOrNull', ',', ' ', 'String', ' ', 'glueOrNull', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'glue', ' ', '=', ' ', 'glueOrNull', ' ', '=', '=', ' ', 'null', '\n', '                ', '?', ' ', '""', '_', '""', '\n', '                ', ':', ' ', 'glueOrNull', ';', '\n', '        ', 'final', ' ', 'List', '<', 'String', '>', ' ', 'words', ' ', '=', ' ', 'wordsOrNull', ' ', '=', '=', ' ', 'null', '\n', '                ', '?', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', '2', ')', '\n', '                ', ':', ' ', 'wordsOrNull', ';', '\n', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'slug', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'words', '.', 'size', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'i', ' ', '>', ' ', '0', ')', ' ', '{', '\n', '                ', 'slug', '.', 'append', '(', 'glue', ')', ';', '\n', '            ', '}', '\n', '            ', 'slug', '.', 'append', '(', 'words', '.', 'get', '(', 'i', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'slug', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FakerIDN.java,toASCII,"    public static final String toASCII(String in) {
        try {
            return IDN.toASCII(in);
        } catch (Exception e) {
            // let's continue with the character by character encoding hack.
        }
        final StringBuilder sb = new StringBuilder();
        for (int i=0;i<in.length();i++) {
            try {
                sb.append(IDN.toASCII(in.substring(i, i + 1)));
            }
            catch (Exception e) {}
        }
        if (sb.length() == 0) {
            throw new RuntimeException(""Unable to convert "" + in + "" to ASCII"");
        }
        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public static final String toASCII(String in) {
        try {
            return IDN.toASCII(in);
        } catch (Exception e) {
            
        }
        final StringBuilder sb = new StringBuilder();
        for (int i=0;i<in.length();i++) {
            try {
                sb.append(IDN.toASCII(in.substring(i, i + 1)));
            }
            catch (Exception e) {}
        }
        if (sb.length() == 0) {
            throw new RuntimeException(""Unable to convert "" + in + "" to ASCII"");
        }
        return sb.toString();
    }
","['    ', 'public', ' ', 'static', ' ', 'final', ' ', 'String', ' ', 'toASCII', '(', 'String', ' ', 'in', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'return', ' ', 'IDN', '.', 'toASCII', '(', 'in', ')', ';', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'Exception', ' ', 'e', ')', ' ', '{', '\n', '            ', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', 'in', '.', 'length', '(', ')', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'try', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'IDN', '.', 'toASCII', '(', 'in', '.', 'substring', '(', 'i', ',', ' ', 'i', ' ', '+', ' ', '1', ')', ')', ')', ';', '\n', '            ', '}', '\n', '            ', 'catch', ' ', '(', 'Exception', ' ', 'e', ')', ' ', '{', '}', '\n', '        ', '}', '\n', '        ', 'if', ' ', '(', 'sb', '.', 'length', '(', ')', ' ', '=', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'RuntimeException', '(', '""', 'Unable to convert ', '""', ' ', '+', ' ', 'in', ' ', '+', ' ', '""', ' to ASCII', '""', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,AddressTest.java,testStreetAddressStartsWithNumber,"    public void testStreetAddressStartsWithNumber() {
        final String streetAddressNumber = faker.address().streetAddress();
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ .+""));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testStreetAddressStartsWithNumber() {
        final String streetAddressNumber = faker.address().streetAddress();
        assertThat(streetAddressNumber, matchesRegularExpression(""[0-9]+ .+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetAddressStartsWithNumber', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'streetAddressNumber', ' ', '=', ' ', 'faker', '.', 'address', '(', ')', '.', 'streetAddress', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'streetAddressNumber', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]+ .+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testExtension,"    public void testExtension() {
        assertThat(faker.file().extension(),
                matchesRegularExpression(""(flac|mp3|wav|bmp|gif|jpeg|jpg|png|tiff|css|csv|html|js|json|txt|mp4|avi|mov|webm|doc|docx|xls|xlsx|ppt|pptx|odt|ods|odp|pages|numbers|key|pdf)""));",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testExtension() {
        assertThat(faker.file().extension(),
                matchesRegularExpression(""(flac|mp3|wav|bmp|gif|jpeg|jpg|png|tiff|css|csv|html|js|json|txt|mp4|avi|mov|webm|doc|docx|xls|xlsx|ppt|pptx|odt|ods|odp|pages|numbers|key|pdf)""));
","['    ', 'public', ' ', 'void', ' ', 'testExtension', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'extension', '(', ')', ',', '\n', '                ', 'matchesRegularExpression', '(', '""', '(flac|mp3|wav|bmp|gif|jpeg|jpg|png|tiff|css|csv|html|js|json|txt|mp4|avi|mov|webm|doc|docx|xls|xlsx|ppt|pptx|odt|ods|odp|pages|numbers|key|pdf)', '""', ')', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testMimeTypeFormat,"    public void testMimeTypeFormat() {
        assertThat(faker.file().mimeType(), matchesRegularExpression("".+\\/.+""));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testMimeTypeFormat() {
        assertThat(faker.file().mimeType(), matchesRegularExpression("".+\\/.+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMimeTypeFormat', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'mimeType', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '.+', '\\\\', '/.+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testFileName,"    public void testFileName() {
        assertThat(faker.file().fileName(), matchesRegularExpression(""([a-z\\-_]+)(\\\\|\\/)([a-z\\-_]+)\\.([a-z0-9]+)""));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testFileName() {
        assertThat(faker.file().fileName(), matchesRegularExpression(""([a-z\\-_]+)(\\\\|\\/)([a-z\\-_]+)\\.([a-z0-9]+)""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFileName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'fileName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([a-z', '\\\\', '-_]+)(', '\\\\', '\\\\', '|', '\\\\', '/)([a-z', '\\\\', '-_]+)', '\\\\', '.([a-z0-9]+)', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testFileNameSpecifyExtension,"    public void testFileNameSpecifyExtension() {
        assertThat(faker.file().fileName(null, null, ""txt"", null), 
                matchesRegularExpression(""([a-z\\-_]+)(\\\\|\\/)([a-z\\-_]+)\\.txt""));",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testFileNameSpecifyExtension() {
        assertThat(faker.file().fileName(null, null, ""txt"", null), 
                matchesRegularExpression(""([a-z\\-_]+)(\\\\|\\/)([a-z\\-_]+)\\.txt""));
","['    ', 'public', ' ', 'void', ' ', 'testFileNameSpecifyExtension', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'fileName', '(', 'null', ',', ' ', 'null', ',', ' ', '""', 'txt', '""', ',', ' ', 'null', ')', ',', ' ', '\n', '                ', 'matchesRegularExpression', '(', '""', '([a-z', '\\\\', '-_]+)(', '\\\\', '\\\\', '|', '\\\\', '/)([a-z', '\\\\', '-_]+)', '\\\\', '.txt', '""', ')', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testFileNameSpecifyDir,"    public void testFileNameSpecifyDir() {
        assertThat(faker.file().fileName(""my_dir"", null, null, null),
                matchesRegularExpression(""my_dir(\\\\|\\/)([a-z\\-_]+)\\.([a-z0-9]+)""));",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testFileNameSpecifyDir() {
        assertThat(faker.file().fileName(""my_dir"", null, null, null),
                matchesRegularExpression(""my_dir(\\\\|\\/)([a-z\\-_]+)\\.([a-z0-9]+)""));
","['    ', 'public', ' ', 'void', ' ', 'testFileNameSpecifyDir', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'fileName', '(', '""', 'my_dir', '""', ',', ' ', 'null', ',', ' ', 'null', ',', ' ', 'null', ')', ',', '\n', '                ', 'matchesRegularExpression', '(', '""', 'my_dir(', '\\\\', '\\\\', '|', '\\\\', '/)([a-z', '\\\\', '-_]+)', '\\\\', '.([a-z0-9]+)', '""', ')', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testFileNameSpecifySeparator,"    public void testFileNameSpecifySeparator() {
        assertThat(faker.file().fileName(null,null,null,""\\""), 
                matchesRegularExpression(""([a-z\\-_]+)\\\\([a-z\\-_]+)\\.([a-z0-9]+)""));",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testFileNameSpecifySeparator() {
        assertThat(faker.file().fileName(null,null,null,""\\""), 
                matchesRegularExpression(""([a-z\\-_]+)\\\\([a-z\\-_]+)\\.([a-z0-9]+)""));
","['    ', 'public', ' ', 'void', ' ', 'testFileNameSpecifySeparator', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'fileName', '(', 'null', ',', 'null', ',', 'null', ',', '""', '\\\\', '""', ')', ',', ' ', '\n', '                ', 'matchesRegularExpression', '(', '""', '([a-z', '\\\\', '-_]+)', '\\\\', '\\\\', '([a-z', '\\\\', '-_]+)', '\\\\', '.([a-z0-9]+)', '""', ')', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,FileTest.java,testFileNameSpecifyName,"    public void testFileNameSpecifyName() {
        assertThat(faker.file().fileName(null,""da_name"",null,null),
                matchesRegularExpression(""([a-z\\-_]+)(\\\\|\\/)da_name\\.([a-z0-9]+)""));",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testFileNameSpecifyName() {
        assertThat(faker.file().fileName(null,""da_name"",null,null),
                matchesRegularExpression(""([a-z\\-_]+)(\\\\|\\/)da_name\\.([a-z0-9]+)""));
","['    ', 'public', ' ', 'void', ' ', 'testFileNameSpecifyName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'file', '(', ')', '.', 'fileName', '(', 'null', ',', '""', 'da_name', '""', ',', 'null', ',', 'null', ')', ',', '\n', '                ', 'matchesRegularExpression', '(', '""', '([a-z', '\\\\', '-_]+)(', '\\\\', '\\\\', '|', '\\\\', '/)da_name', '\\\\', '.([a-z0-9]+)', '""', ')', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,InternetTest.java,testSlugWithParams,"    public void testSlugWithParams() {
        assertThat(faker.internet().slug(ImmutableList.of(""a"", ""b""), ""-""), matchesRegularExpression(""[a-zA-Z]+\\-[a-zA-Z]+""));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testSlugWithParams() {
        assertThat(faker.internet().slug(ImmutableList.of(""a"", ""b""), ""-""), matchesRegularExpression(""[a-zA-Z]+\\-[a-zA-Z]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSlugWithParams', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'slug', '(', 'ImmutableList', '.', 'of', '(', '""', 'a', '""', ',', ' ', '""', 'b', '""', ')', ',', ' ', '""', '-', '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z]+', '\\\\', '-[a-zA-Z]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,InternetTest.java,testSlug,"    public void testSlug() {
        assertThat(faker.internet().slug(), matchesRegularExpression(""[a-zA-Z]+\\_[a-zA-Z]+""));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testSlug() {
        assertThat(faker.internet().slug(), matchesRegularExpression(""[a-zA-Z]+\\_[a-zA-Z]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSlug', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'slug', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z]+', '\\\\', '_[a-zA-Z]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,InternetTest.java,testFarsiIDNs,"    public void testFarsiIDNs() {
        // in this case, we're just making sure Farsi doesn't blow up.
        // there have been issues with Farsi not being produced.
        final Faker f = new Faker(new Locale(""fa""));
        assertThat(f.internet().domainName(), not(isEmptyOrNullString()));
        assertThat(f.internet().emailAddress(), not(isEmptyOrNullString()));
        assertThat(f.internet().safeEmailAddress(), not(isEmptyOrNullString()));
        assertThat(f.internet().url(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void testFarsiIDNs() {
        
        
        final Faker f = new Faker(new Locale(""fa""));
        assertThat(f.internet().domainName(), not(isEmptyOrNullString()));
        assertThat(f.internet().emailAddress(), not(isEmptyOrNullString()));
        assertThat(f.internet().safeEmailAddress(), not(isEmptyOrNullString()));
        assertThat(f.internet().url(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFarsiIDNs', '(', ')', ' ', '{', '\n', '        ', '\n', '        ', '\n', '        ', 'final', ' ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'fa', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'f', '.', 'internet', '(', ')', '.', 'domainName', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'f', '.', 'internet', '(', ')', '.', 'emailAddress', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'f', '.', 'internet', '(', ')', '.', 'safeEmailAddress', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'f', '.', 'internet', '(', ')', '.', 'url', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,RepeatRule.java,evaluate,"    public void evaluate() throws Throwable {
      for( int i = 0; i < times; i++ ) {
        statement.evaluate();",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"    public void evaluate() throws Throwable {
      for( int i = 0; i < times; i++ ) {
        statement.evaluate();
","['    ', 'public', ' ', 'void', ' ', 'evaluate', '(', ')', ' ', 'throws', ' ', 'Throwable', ' ', '{', '\n', '      ', 'for', '(', ' ', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'times', ';', ' ', 'i', '+', '+', ' ', ')', ' ', '{', '\n', '        ', 'statement', '.', 'evaluate', '(', ')', ';', '\n']"
master,75751192a1425f1b103529e519466820b3d4d9dc,RepeatRule.java,apply,"  public Statement apply( Statement statement, Description description ) {
    Statement result = statement;
    Repeat repeat = description.getAnnotation( Repeat.class );
    if( repeat != null ) {
      int times = repeat.times();
      result = new RepeatStatement( times, statement );
    }
    return result;
  }",https://www.github.com/dius/java-faker/commit/75751192a1425f1b103529e519466820b3d4d9dc,"  public Statement apply( Statement statement, Description description ) {
    Statement result = statement;
    Repeat repeat = description.getAnnotation( Repeat.class );
    if( repeat != null ) {
      int times = repeat.times();
      result = new RepeatStatement( times, statement );
    }
    return result;
  }
","['  ', 'public', ' ', 'Statement', ' ', 'apply', '(', ' ', 'Statement', ' ', 'statement', ',', ' ', 'Description', ' ', 'description', ' ', ')', ' ', '{', '\n', '    ', 'Statement', ' ', 'result', ' ', '=', ' ', 'statement', ';', '\n', '    ', 'Repeat', ' ', 'repeat', ' ', '=', ' ', 'description', '.', 'getAnnotation', '(', ' ', 'Repeat', '.', 'class', ' ', ')', ';', '\n', '    ', 'if', '(', ' ', 'repeat', ' ', '!', '=', ' ', 'null', ' ', ')', ' ', '{', '\n', '      ', 'int', ' ', 'times', ' ', '=', ' ', 'repeat', '.', 'times', '(', ')', ';', '\n', '      ', 'result', ' ', '=', ' ', 'new', ' ', 'RepeatStatement', '(', ' ', 'times', ',', ' ', 'statement', ' ', ')', ';', '\n', '    ', '}', '\n', '    ', 'return', ' ', 'result', ';', '\n', '  ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,Faker.java,gameOfThrones,"    public GameOfThrones gameOfThrones() {
        return gameOfThrones;
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public GameOfThrones gameOfThrones() {
        return gameOfThrones;
    }
","['    ', 'public', ' ', 'GameOfThrones', ' ', 'gameOfThrones', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'gameOfThrones', ';', '\n', '    ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,GameOfThrones.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""game_of_thrones.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public String character() {
        return faker.fakeValuesService().resolve(""game_of_thrones.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'game_of_thrones.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,GameOfThrones.java,house,"    public String house() {
        return faker.fakeValuesService().resolve(""game_of_thrones.houses"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public String house() {
        return faker.fakeValuesService().resolve(""game_of_thrones.houses"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'house', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'game_of_thrones.houses', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,GameOfThrones.java,city,"    public String city() {
        return faker.fakeValuesService().resolve(""game_of_thrones.cities"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public String city() {
        return faker.fakeValuesService().resolve(""game_of_thrones.cities"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'game_of_thrones.cities', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,GameOfThronesTest.java,character,"    public void character() {
        assertThat(faker.gameOfThrones().character(), matchesRegularExpression(""[A-Za-z'\\-\\(\\) ]+""));
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public void character() {
        assertThat(faker.gameOfThrones().character(), matchesRegularExpression(""[A-Za-z'\\-\\(\\) ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gameOfThrones', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'"", '\\\\', '-', '\\\\', '(', '\\\\', ') ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,GameOfThronesTest.java,house,"    public void house() {
        assertThat(faker.gameOfThrones().house(), matchesRegularExpression(""[A-Za-z' ]+""));
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public void house() {
        assertThat(faker.gameOfThrones().house(), matchesRegularExpression(""[A-Za-z' ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'house', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gameOfThrones', '(', ')', '.', 'house', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z' ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e931bd1e6016516659b230caca98d46829a222c0,GameOfThronesTest.java,city,"    public void city() {
        assertThat(faker.gameOfThrones().city(), matchesRegularExpression(""[A-Za-z' ]+""));
    }",https://www.github.com/dius/java-faker/commit/e931bd1e6016516659b230caca98d46829a222c0,"    public void city() {
        assertThat(faker.gameOfThrones().city(), matchesRegularExpression(""[A-Za-z' ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gameOfThrones', '(', ')', '.', 'city', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z' ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b6b49becf1da1584ae990e47a7531193235e18c2,Commerce.java,promotionCode,"    public String promotionCode() {
        return promotionCode(6);
    }",https://www.github.com/dius/java-faker/commit/b6b49becf1da1584ae990e47a7531193235e18c2,"    public String promotionCode() {
        return promotionCode(6);
    }
","['    ', 'public', ' ', 'String', ' ', 'promotionCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'promotionCode', '(', '6', ')', ';', '\n', '    ', '}', '\n']"
master,b6b49becf1da1584ae990e47a7531193235e18c2,Commerce.java,promotionCode,"    public String promotionCode(int digits) {
        return StringUtils.join(faker.resolve(""commerce.promotion_code.adjective""),
                faker.resolve(""commerce.promotion_code.noun""),",https://www.github.com/dius/java-faker/commit/b6b49becf1da1584ae990e47a7531193235e18c2,"    public String promotionCode(int digits) {
        return StringUtils.join(faker.resolve(""commerce.promotion_code.adjective""),
                faker.resolve(""commerce.promotion_code.noun""),
","['    ', 'public', ' ', 'String', ' ', 'promotionCode', '(', 'int', ' ', 'digits', ')', ' ', '{', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'join', '(', 'faker', '.', 'resolve', '(', '""', 'commerce.promotion_code.adjective', '""', ')', ',', '\n', '                ', 'faker', '.', 'resolve', '(', '""', 'commerce.promotion_code.noun', '""', ')', ',', '\n']"
master,b6b49becf1da1584ae990e47a7531193235e18c2,CommerceTest.java,testPromotionCode,"    public void testPromotionCode() {
        assertThat(faker.commerce().promotionCode(), matchesRegularExpression(""[A-Z][a-z]+[A-Z][a-z]+\\d{6}""));
    }",https://www.github.com/dius/java-faker/commit/b6b49becf1da1584ae990e47a7531193235e18c2,"    public void testPromotionCode() {
        assertThat(faker.commerce().promotionCode(), matchesRegularExpression(""[A-Z][a-z]+[A-Z][a-z]+\\d{6}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPromotionCode', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'promotionCode', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z][a-z]+[A-Z][a-z]+', '\\\\', 'd{6}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b6b49becf1da1584ae990e47a7531193235e18c2,CommerceTest.java,testPromotionCodeDigits,"    public void testPromotionCodeDigits() {
        assertThat(faker.commerce().promotionCode(3), matchesRegularExpression(""[A-Z][a-z]+[A-Z][a-z]+\\d{3}""));
    }",https://www.github.com/dius/java-faker/commit/b6b49becf1da1584ae990e47a7531193235e18c2,"    public void testPromotionCodeDigits() {
        assertThat(faker.commerce().promotionCode(3), matchesRegularExpression(""[A-Z][a-z]+[A-Z][a-z]+\\d{3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPromotionCodeDigits', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'promotionCode', '(', '3', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z][a-z]+[A-Z][a-z]+', '\\\\', 'd{3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,Music.java,instrument,"    public String instrument() {
        return faker.resolve(""music.instruments"");
    }",https://www.github.com/dius/java-faker/commit/bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,"    public String instrument() {
        return faker.resolve(""music.instruments"");
    }
","['    ', 'public', ' ', 'String', ' ', 'instrument', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'music.instruments', '""', ')', ';', '\n', '    ', '}', '\n']"
master,bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,Music.java,key,"    public String key() {
        return faker.options().option(KEYS) + faker.options().option(KEY_VARIANTS);
    }",https://www.github.com/dius/java-faker/commit/bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,"    public String key() {
        return faker.options().option(KEYS) + faker.options().option(KEY_VARIANTS);
    }
","['    ', 'public', ' ', 'String', ' ', 'key', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'KEYS', ')', ' ', '+', ' ', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'KEY_VARIANTS', ')', ';', '\n', '    ', '}', '\n']"
master,bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,MusicTest.java,instrument,"    public void instrument() {
        assertThat(faker.music().instrument(), matchesRegularExpression(""\\w+ ?\\w+""));
    }",https://www.github.com/dius/java-faker/commit/bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,"    public void instrument() {
        assertThat(faker.music().instrument(), matchesRegularExpression(""\\w+ ?\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'instrument', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'music', '(', ')', '.', 'instrument', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+ ?', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,MusicTest.java,key,"    public void key() {
        assertThat(faker.music().key(), matchesRegularExpression(""([A-Z])+(b|#){0,1}""));
    }",https://www.github.com/dius/java-faker/commit/bd6a9c7c08edaad2695ed491b8b34e3517a7e9b4,"    public void key() {
        assertThat(faker.music().key(), matchesRegularExpression(""([A-Z])+(b|#){0,1}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'key', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'music', '(', ')', '.', 'key', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Z])+(b|#){0,1}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,63154783067aa86b8b3e19f09b2d242ff7c9aa82,FakeValuesService.java,fetch,"    public Object fetch(String key) {
        List<Object> valuesArray = (List) fetchObject(key);
        return valuesArray == null ? null : valuesArray.get(randomService.nextInt(valuesArray.size()));
    }",https://www.github.com/dius/java-faker/commit/63154783067aa86b8b3e19f09b2d242ff7c9aa82,"    public Object fetch(String key) {
        List<Object> valuesArray = (List) fetchObject(key);
        return valuesArray == null ? null : valuesArray.get(randomService.nextInt(valuesArray.size()));
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetch', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'List', '<', 'Object', '>', ' ', 'valuesArray', ' ', '=', ' ', '(', 'List', ')', ' ', 'fetchObject', '(', 'key', ')', ';', '\n', '        ', 'return', ' ', 'valuesArray', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'null', ' ', ':', ' ', 'valuesArray', '.', 'get', '(', 'randomService', '.', 'nextInt', '(', 'valuesArray', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,63154783067aa86b8b3e19f09b2d242ff7c9aa82,MostSpecificLocaleIT.java,resolvesTheMostSpecificLocale,"    public void resolvesTheMostSpecificLocale() {
        final List<String> enDefaultCountries = (List<String>) en.fetchObject(""address.default_country"");
        final List<String> enUsDefaultCountries = (List<String>) en_US.fetchObject(""address.default_country"");
        
        assertThat(enDefaultCountries, hasSize(1));
        assertThat(enUsDefaultCountries, hasSize(3));
        
        assertThat(""the default country for en is not en_US"", enDefaultCountries, is(not(enUsDefaultCountries)));
    }",https://www.github.com/dius/java-faker/commit/63154783067aa86b8b3e19f09b2d242ff7c9aa82,"    public void resolvesTheMostSpecificLocale() {
        final List<String> enDefaultCountries = (List<String>) en.fetchObject(""address.default_country"");
        final List<String> enUsDefaultCountries = (List<String>) en_US.fetchObject(""address.default_country"");
        
        assertThat(enDefaultCountries, hasSize(1));
        assertThat(enUsDefaultCountries, hasSize(3));
        
        assertThat(""the default country for en is not en_US"", enDefaultCountries, is(not(enUsDefaultCountries)));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolvesTheMostSpecificLocale', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'String', '>', ' ', 'enDefaultCountries', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'en', '.', 'fetchObject', '(', '""', 'address.default_country', '""', ')', ';', '\n', '        ', 'final', ' ', 'List', '<', 'String', '>', ' ', 'enUsDefaultCountries', ' ', '=', ' ', '(', 'List', '<', 'String', '>', ')', ' ', 'en_US', '.', 'fetchObject', '(', '""', 'address.default_country', '""', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', 'enDefaultCountries', ',', ' ', 'hasSize', '(', '1', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'enUsDefaultCountries', ',', ' ', 'hasSize', '(', '3', ')', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'the default country for en is not en_US', '""', ',', ' ', 'enDefaultCountries', ',', ' ', 'is', '(', 'not', '(', 'enUsDefaultCountries', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,planet,"    public String planet() {
        return faker.resolve(""space.planet"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String planet() {
        return faker.resolve(""space.planet"");
    }
","['    ', 'public', ' ', 'String', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.planet', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,moon,"    public String moon() {
        return faker.resolve(""space.moon"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String moon() {
        return faker.resolve(""space.moon"");
    }
","['    ', 'public', ' ', 'String', ' ', 'moon', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.moon', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,galaxy,"    public String galaxy() {
        return faker.resolve(""space.galaxy"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String galaxy() {
        return faker.resolve(""space.galaxy"");
    }
","['    ', 'public', ' ', 'String', ' ', 'galaxy', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.galaxy', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,nebula,"    public String nebula() {
        return faker.resolve(""space.nebula"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String nebula() {
        return faker.resolve(""space.nebula"");
    }
","['    ', 'public', ' ', 'String', ' ', 'nebula', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.nebula', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,starCluster,"    public String starCluster() {
        return faker.resolve(""space.star_cluster"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String starCluster() {
        return faker.resolve(""space.star_cluster"");
    }
","['    ', 'public', ' ', 'String', ' ', 'starCluster', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.star_cluster', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,constellation,"    public String constellation() {
        return faker.resolve(""space.constellation"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String constellation() {
        return faker.resolve(""space.constellation"");
    }
","['    ', 'public', ' ', 'String', ' ', 'constellation', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.constellation', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,star,"    public String star() {
        return faker.resolve(""space.star"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String star() {
        return faker.resolve(""space.star"");
    }
","['    ', 'public', ' ', 'String', ' ', 'star', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.star', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,agency,"    public String agency() {
        return faker.resolve(""space.agency"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String agency() {
        return faker.resolve(""space.agency"");
    }
","['    ', 'public', ' ', 'String', ' ', 'agency', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.agency', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,agencyAbbreviation,"    public String agencyAbbreviation() {
        return faker.resolve(""space.agency_abv"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String agencyAbbreviation() {
        return faker.resolve(""space.agency_abv"");
    }
","['    ', 'public', ' ', 'String', ' ', 'agencyAbbreviation', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.agency_abv', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,nasaSpaceCraft,"    public String nasaSpaceCraft() {
        return faker.resolve(""space.nasa_space_craft"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String nasaSpaceCraft() {
        return faker.resolve(""space.nasa_space_craft"");
    }
","['    ', 'public', ' ', 'String', ' ', 'nasaSpaceCraft', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.nasa_space_craft', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,company,"    public String company() {
        return faker.resolve(""space.company"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String company() {
        return faker.resolve(""space.company"");
    }
","['    ', 'public', ' ', 'String', ' ', 'company', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.company', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,Space.java,distanceMeasurement,"    public String distanceMeasurement() {
        return faker.number().numberBetween(10, 100) + ' ' + faker.resolve(""space.distance_measurement"");
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public String distanceMeasurement() {
        return faker.number().numberBetween(10, 100) + ' ' + faker.resolve(""space.distance_measurement"");
    }
","['    ', 'public', ' ', 'String', ' ', 'distanceMeasurement', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '10', ',', ' ', '100', ')', ' ', '+', ' ', ""' '"", ' ', '+', ' ', 'faker', '.', 'resolve', '(', '""', 'space.distance_measurement', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testPlanet,"    public void testPlanet() {
        assertThat(faker.space().planet(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testPlanet() {
        assertThat(faker.space().planet(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPlanet', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'planet', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testMoon,"    public void testMoon() {
        assertThat(faker.space().moon(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testMoon() {
        assertThat(faker.space().moon(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMoon', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'moon', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testGalaxy,"    public void testGalaxy() {
        assertThat(faker.space().galaxy(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testGalaxy() {
        assertThat(faker.space().galaxy(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testGalaxy', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'galaxy', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testNebula,"    public void testNebula() {
        assertThat(faker.space().nebula(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testNebula() {
        assertThat(faker.space().nebula(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNebula', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'nebula', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testStarCluster,"    public void testStarCluster() {
        assertThat(faker.space().starCluster(), matchesRegularExpression(""(\\w+[ -]?){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testStarCluster() {
        assertThat(faker.space().starCluster(), matchesRegularExpression(""(\\w+[ -]?){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStarCluster', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'starCluster', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ -]?){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testConstellation,"    public void testConstellation() {
        assertThat(faker.space().constellation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testConstellation() {
        assertThat(faker.space().constellation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testConstellation', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'constellation', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testStar,"    public void testStar() {
        assertThat(faker.space().star(), matchesRegularExpression(""(\\w+[ -]?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testStar() {
        assertThat(faker.space().star(), matchesRegularExpression(""(\\w+[ -]?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testStar', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'star', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ -]?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testAgency,"    public void testAgency() {
        assertThat(faker.space().agency(), matchesRegularExpression(""(\\w+ ?){2,5}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testAgency() {
        assertThat(faker.space().agency(), matchesRegularExpression(""(\\w+ ?){2,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAgency', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'agency', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testAgencyAbbreviation,"    public void testAgencyAbbreviation() {
        assertThat(faker.space().agencyAbbreviation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testAgencyAbbreviation() {
        assertThat(faker.space().agencyAbbreviation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAgencyAbbreviation', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'agencyAbbreviation', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testNasaSpaceCraft,"    public void testNasaSpaceCraft() {
        assertThat(faker.space().nasaSpaceCraft(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testNasaSpaceCraft() {
        assertThat(faker.space().nasaSpaceCraft(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNasaSpaceCraft', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'nasaSpaceCraft', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testCompany,"    public void testCompany() {
        assertThat(faker.space().company(), matchesRegularExpression(""(\\w+ ?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testCompany() {
        assertThat(faker.space().company(), matchesRegularExpression(""(\\w+ ?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCompany', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'company', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,SpaceTest.java,testDistanceMeasurement,"    public void testDistanceMeasurement() {
        assertThat(faker.space().distanceMeasurement(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/5ee72af8aaf9af8261a5f6a02df3fd21e4e64957,"    public void testDistanceMeasurement() {
        assertThat(faker.space().distanceMeasurement(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDistanceMeasurement', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'distanceMeasurement', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,69ad288f3a3003001fc96591a6ddaedfbf15fb8a,Pokemon.java,name,"    public String name() {
        return faker.resolve(""pokemon.names"");
    }",https://www.github.com/dius/java-faker/commit/69ad288f3a3003001fc96591a6ddaedfbf15fb8a,"    public String name() {
        return faker.resolve(""pokemon.names"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'pokemon.names', '""', ')', ';', '\n', '    ', '}', '\n']"
master,69ad288f3a3003001fc96591a6ddaedfbf15fb8a,Pokemon.java,location,"    public String location() {
        return faker.resolve(""pokemon.locations"");
    }",https://www.github.com/dius/java-faker/commit/69ad288f3a3003001fc96591a6ddaedfbf15fb8a,"    public String location() {
        return faker.resolve(""pokemon.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'pokemon.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,69ad288f3a3003001fc96591a6ddaedfbf15fb8a,PokemonTest.java,name,"    public void name() {
        assertThat(faker.pokemon().name(), matchesRegularExpression(""[\\w']+.?""));
    }",https://www.github.com/dius/java-faker/commit/69ad288f3a3003001fc96591a6ddaedfbf15fb8a,"    public void name() {
        assertThat(faker.pokemon().name(), matchesRegularExpression(""[\\w']+.?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'pokemon', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', ""w']+.?"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,69ad288f3a3003001fc96591a6ddaedfbf15fb8a,PokemonTest.java,location,"    public void location() {
        assertThat(faker.pokemon().location(), matchesRegularExpression(""\\w+( \\w+)?( \\w+)?""));
    }",https://www.github.com/dius/java-faker/commit/69ad288f3a3003001fc96591a6ddaedfbf15fb8a,"    public void location() {
        assertThat(faker.pokemon().location(), matchesRegularExpression(""\\w+( \\w+)?( \\w+)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'pokemon', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+( ', '\\\\', 'w+)?( ', '\\\\', 'w+)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,Code.java,asin,"    public String asin() {
        return faker.resolve(""code.asin"");
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public String asin() {
        return faker.resolve(""code.asin"");
    }
","['    ', 'public', ' ', 'String', ' ', 'asin', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'code.asin', '""', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,Code.java,gtin8,"    public String gtin8() {
        char[] values = faker.regexify(""\\d{7}"").toCharArray();
        int sum = 0;
        for (int i = 0; i < values.length; i++) {
            sum += Character.getNumericValue(values[i]) * GTIN_8_CHECK_DIGITS[i];
        }
        int checkDigit = 10 - sum % 10;
        if (checkDigit == 10) {
            return new String(ArrayUtils.add(values, Character.forDigit(0, 10)));",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public String gtin8() {
        char[] values = faker.regexify(""\\d{7}"").toCharArray();
        int sum = 0;
        for (int i = 0; i < values.length; i++) {
            sum += Character.getNumericValue(values[i]) * GTIN_8_CHECK_DIGITS[i];
        }
        int checkDigit = 10 - sum % 10;
        if (checkDigit == 10) {
            return new String(ArrayUtils.add(values, Character.forDigit(0, 10)));
","['    ', 'public', ' ', 'String', ' ', 'gtin8', '(', ')', ' ', '{', '\n', '        ', 'char', '[', ']', ' ', 'values', ' ', '=', ' ', 'faker', '.', 'regexify', '(', '""', '\\\\', 'd{7}', '""', ')', '.', 'toCharArray', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'values', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'Character', '.', 'getNumericValue', '(', 'values', '[', 'i', ']', ')', ' ', '*', ' ', 'GTIN_8_CHECK_DIGITS', '[', 'i', ']', ';', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'checkDigit', ' ', '=', ' ', '10', ' ', '-', ' ', 'sum', ' ', '%', ' ', '10', ';', '\n', '        ', 'if', ' ', '(', 'checkDigit', ' ', '=', '=', ' ', '10', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'String', '(', 'ArrayUtils', '.', 'add', '(', 'values', ',', ' ', 'Character', '.', 'forDigit', '(', '0', ',', ' ', '10', ')', ')', ')', ';', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,Code.java,gtin13,"    public String gtin13() {
        char[] values = faker.regexify(""\\d{12}"").toCharArray();
        int sum = 0;
        for (int i = 0; i < values.length; i++) {
            sum += Character.getNumericValue(values[i]) * GTIN_13_CHECK_DIGITS[i];
        }
        int checkDigit = 10 - sum % 10;
        if (checkDigit == 10) {
            return new String(ArrayUtils.add(values, Character.forDigit(0, 10)));",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public String gtin13() {
        char[] values = faker.regexify(""\\d{12}"").toCharArray();
        int sum = 0;
        for (int i = 0; i < values.length; i++) {
            sum += Character.getNumericValue(values[i]) * GTIN_13_CHECK_DIGITS[i];
        }
        int checkDigit = 10 - sum % 10;
        if (checkDigit == 10) {
            return new String(ArrayUtils.add(values, Character.forDigit(0, 10)));
","['    ', 'public', ' ', 'String', ' ', 'gtin13', '(', ')', ' ', '{', '\n', '        ', 'char', '[', ']', ' ', 'values', ' ', '=', ' ', 'faker', '.', 'regexify', '(', '""', '\\\\', 'd{12}', '""', ')', '.', 'toCharArray', '(', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'values', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'Character', '.', 'getNumericValue', '(', 'values', '[', 'i', ']', ')', ' ', '*', ' ', 'GTIN_13_CHECK_DIGITS', '[', 'i', ']', ';', '\n', '        ', '}', '\n', '        ', 'int', ' ', 'checkDigit', ' ', '=', ' ', '10', ' ', '-', ' ', 'sum', ' ', '%', ' ', '10', ';', '\n', '        ', 'if', ' ', '(', 'checkDigit', ' ', '=', '=', ' ', '10', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'String', '(', 'ArrayUtils', '.', 'add', '(', 'values', ',', ' ', 'Character', '.', 'forDigit', '(', '0', ',', ' ', '10', ')', ')', ')', ';', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,CodeTest.java,asin,"    public void asin() {
        assertThat(faker.code().asin(), matchesRegularExpression(""B000([A-Z]|\\d){6}""));
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public void asin() {
        assertThat(faker.code().asin(), matchesRegularExpression(""B000([A-Z]|\\d){6}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'asin', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'code', '(', ')', '.', 'asin', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'B000([A-Z]|', '\\\\', 'd){6}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,CodeTest.java,imei,"    public void imei() {
        String imei = faker.code().imei();

        assertThat(imei, matchesRegularExpression(""\\A[\\d\\.\\:\\-\\s]+\\z""));
        assertThat(LuhnCheckDigit.LUHN_CHECK_DIGIT.isValid(imei), is(true));
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public void imei() {
        String imei = faker.code().imei();

        assertThat(imei, matchesRegularExpression(""\\A[\\d\\.\\:\\-\\s]+\\z""));
        assertThat(LuhnCheckDigit.LUHN_CHECK_DIGIT.isValid(imei), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'imei', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'imei', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'imei', '(', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'imei', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'A[', '\\\\', 'd', '\\\\', '.', '\\\\', ':', '\\\\', '-', '\\\\', 's]+', '\\\\', 'z', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'LuhnCheckDigit', '.', 'LUHN_CHECK_DIGIT', '.', 'isValid', '(', 'imei', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,CodeTest.java,ean8,"    public void ean8() {
        assertThat(faker.code().ean8(), matchesRegularExpression(""\\d{8}""));
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public void ean8() {
        assertThat(faker.code().ean8(), matchesRegularExpression(""\\d{8}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'ean8', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'code', '(', ')', '.', 'ean8', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{8}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,CodeTest.java,gtin8,"    public void gtin8() {
        assertThat(faker.code().gtin8(), matchesRegularExpression(""\\d{8}""));
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public void gtin8() {
        assertThat(faker.code().gtin8(), matchesRegularExpression(""\\d{8}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'gtin8', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'code', '(', ')', '.', 'gtin8', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{8}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,CodeTest.java,ean13,"    public void ean13() {
        String ean13 = faker.code().ean13();
        assertThat(ean13, matchesRegularExpression(""\\d{13}""));
        assertThat(EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(ean13), is(true));
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public void ean13() {
        String ean13 = faker.code().ean13();
        assertThat(ean13, matchesRegularExpression(""\\d{13}""));
        assertThat(EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(ean13), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'ean13', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'ean13', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'ean13', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'ean13', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{13}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'EAN13CheckDigit', '.', 'EAN13_CHECK_DIGIT', '.', 'isValid', '(', 'ean13', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,CodeTest.java,gtin13,"    public void gtin13() {
        String gtin13 = faker.code().gtin13();
        assertThat(gtin13, matchesRegularExpression(""\\d{13}""));
        assertThat(EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(gtin13), is(true));
    }",https://www.github.com/dius/java-faker/commit/cf7dc5e1201d548e6db45c14eaffc6ec3704eb05,"    public void gtin13() {
        String gtin13 = faker.code().gtin13();
        assertThat(gtin13, matchesRegularExpression(""\\d{13}""));
        assertThat(EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(gtin13), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'gtin13', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'gtin13', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'gtin13', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'gtin13', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{13}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'EAN13CheckDigit', '.', 'EAN13_CHECK_DIGIT', '.', 'isValid', '(', 'gtin13', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,Faker.java,slackEmoji,"    public SlackEmoji slackEmoji() {
        return slackEmoji;
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public SlackEmoji slackEmoji() {
        return slackEmoji;
    }
","['    ', 'public', ' ', 'SlackEmoji', ' ', 'slackEmoji', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'slackEmoji', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,people,"    public String people() {
        return faker.resolve(""slack_emoji.people"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String people() {
        return faker.resolve(""slack_emoji.people"");
    }
","['    ', 'public', ' ', 'String', ' ', 'people', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.people', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,nature,"    public String nature() {
        return faker.resolve(""slack_emoji.nature"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String nature() {
        return faker.resolve(""slack_emoji.nature"");
    }
","['    ', 'public', ' ', 'String', ' ', 'nature', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.nature', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,foodAndDrink,"    public String foodAndDrink() {
        return faker.resolve(""slack_emoji.food_and_drink"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String foodAndDrink() {
        return faker.resolve(""slack_emoji.food_and_drink"");
    }
","['    ', 'public', ' ', 'String', ' ', 'foodAndDrink', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.food_and_drink', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,celebration,"    public String celebration() {
        return faker.resolve(""slack_emoji.celebration"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String celebration() {
        return faker.resolve(""slack_emoji.celebration"");
    }
","['    ', 'public', ' ', 'String', ' ', 'celebration', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.celebration', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,activity,"    public String activity() {
        return faker.resolve(""slack_emoji.activity"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String activity() {
        return faker.resolve(""slack_emoji.activity"");
    }
","['    ', 'public', ' ', 'String', ' ', 'activity', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.activity', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,travelAndPlaces,"    public String travelAndPlaces() {
        return faker.resolve(""slack_emoji.travel_and_places"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String travelAndPlaces() {
        return faker.resolve(""slack_emoji.travel_and_places"");
    }
","['    ', 'public', ' ', 'String', ' ', 'travelAndPlaces', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.travel_and_places', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,objectsAndSymbols,"    public String objectsAndSymbols() {
        return faker.resolve(""slack_emoji.objects_and_symbols"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String objectsAndSymbols() {
        return faker.resolve(""slack_emoji.objects_and_symbols"");
    }
","['    ', 'public', ' ', 'String', ' ', 'objectsAndSymbols', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.objects_and_symbols', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,custom,"    public String custom() {
        return faker.resolve(""slack_emoji.custom"");
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String custom() {
        return faker.resolve(""slack_emoji.custom"");
    }
","['    ', 'public', ' ', 'String', ' ', 'custom', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'slack_emoji.custom', '""', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmoji.java,emoji,"    public String emoji() {
        return faker.fakeValuesService().resolve(""slack_emoji.emoji"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public String emoji() {
        return faker.fakeValuesService().resolve(""slack_emoji.emoji"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'emoji', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'slack_emoji.emoji', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,people,"    public void people() {
        assertThat(faker.slackEmoji().people(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void people() {
        assertThat(faker.slackEmoji().people(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'people', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'people', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,nature,"    public void nature() {
        assertThat(faker.slackEmoji().nature(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void nature() {
        assertThat(faker.slackEmoji().nature(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'nature', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'nature', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,food_and_drink,"    public void food_and_drink() {
        assertThat(faker.slackEmoji().foodAndDrink(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void food_and_drink() {
        assertThat(faker.slackEmoji().foodAndDrink(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'food_and_drink', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'foodAndDrink', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,celebration,"    public void celebration() {
        assertThat(faker.slackEmoji().celebration(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void celebration() {
        assertThat(faker.slackEmoji().celebration(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'celebration', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'celebration', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,activity,"    public void activity() {
        assertThat(faker.slackEmoji().activity(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void activity() {
        assertThat(faker.slackEmoji().activity(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'activity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'activity', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,travel_and_places,"    public void travel_and_places() {
        assertThat(faker.slackEmoji().travelAndPlaces(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void travel_and_places() {
        assertThat(faker.slackEmoji().travelAndPlaces(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'travel_and_places', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'travelAndPlaces', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,objects_and_symbols,"    public void objects_and_symbols() {
        assertThat(faker.slackEmoji().objectsAndSymbols(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void objects_and_symbols() {
        assertThat(faker.slackEmoji().objectsAndSymbols(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'objects_and_symbols', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'objectsAndSymbols', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,custom,"    public void custom() {
        assertThat(faker.slackEmoji().custom(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void custom() {
        assertThat(faker.slackEmoji().custom(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'custom', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'custom', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d3f0dd17747d7907315a64f2f7cf8132977217,SlackEmojiTest.java,emoji,"    public void emoji() {
        assertThat(faker.slackEmoji().emoji(), matchesRegularExpression(EMOTICON_REGEX));
    }",https://www.github.com/dius/java-faker/commit/29d3f0dd17747d7907315a64f2f7cf8132977217,"    public void emoji() {
        assertThat(faker.slackEmoji().emoji(), matchesRegularExpression(EMOTICON_REGEX));
    }
","['    ', 'public', ' ', 'void', ' ', 'emoji', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'slackEmoji', '(', ')', '.', 'emoji', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'EMOTICON_REGEX', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6f99bef9a992b3bd8c601e28cd2a0a84517a7558,App.java,author,"    public String author() {
        return faker.fakeValuesService().resolve(""app.author"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6f99bef9a992b3bd8c601e28cd2a0a84517a7558,"    public String author() {
        return faker.fakeValuesService().resolve(""app.author"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'author', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'app.author', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6f99bef9a992b3bd8c601e28cd2a0a84517a7558,AppTest.java,testAuthor,"    public void testAuthor() {
        assertThat(faker.app().author(), matchesRegularExpression(""([\\w']+[-&,\\.]? ?){2,9}""));
    }",https://www.github.com/dius/java-faker/commit/6f99bef9a992b3bd8c601e28cd2a0a84517a7558,"    public void testAuthor() {
        assertThat(faker.app().author(), matchesRegularExpression(""([\\w']+[-&,\\.]? ?){2,9}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAuthor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'app', '(', ')', '.', 'author', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+[-&,"", '\\\\', '.]? ?){2,9}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbnGs1,"    public String isbnGs1() {
        return faker.regexify(""978|979"");
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public String isbnGs1() {
        return faker.regexify(""978|979"");
    }
","['    ', 'public', ' ', 'String', ' ', 'isbnGs1', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'regexify', '(', '""', '978|979', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbnGroup,"    public String isbnGroup() {
        return faker.regexify(""[0-1]"");
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public String isbnGroup() {
        return faker.regexify(""[0-1]"");
    }
","['    ', 'public', ' ', 'String', ' ', 'isbnGroup', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'regexify', '(', '""', '[0-1]', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbnRegistrant,"    public String isbnRegistrant() {
        int ct = faker.random().nextInt(6) + 1;
        switch (ct) {
            case 6:",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public String isbnRegistrant() {
        int ct = faker.random().nextInt(6) + 1;
        switch (ct) {
            case 6:
","['    ', 'public', ' ', 'String', ' ', 'isbnRegistrant', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'ct', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '6', ')', ' ', '+', ' ', '1', ';', '\n', '        ', 'switch', ' ', '(', 'ct', ')', ' ', '{', '\n', '            ', 'case', ' ', '6', ':', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbn10,"    public String isbn10(boolean separator) {
        // The registration group identifier is a 1- to 5-digit number
        final StringBuilder isbn10 = new StringBuilder()
            .append(faker.expression(""#{code.isbn_group}""))
            .append('-')
            .append(faker.expression(""#{code.isbn_registrant}""))
            .append('-');

        final int checkDigit = isbn10CheckDigit(isbn10);
        isbn10.append(checkDigit != 10 ? checkDigit : ""X"");
        return separator ? isbn10.toString() : stripIsbnSeparator(isbn10);
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public String isbn10(boolean separator) {
        
        final StringBuilder isbn10 = new StringBuilder()
            .append(faker.expression(""#{code.isbn_group}""))
            .append('-')
            .append(faker.expression(""#{code.isbn_registrant}""))
            .append('-');

        final int checkDigit = isbn10CheckDigit(isbn10);
        isbn10.append(checkDigit != 10 ? checkDigit : ""X"");
        return separator ? isbn10.toString() : stripIsbnSeparator(isbn10);
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn10', '(', 'boolean', ' ', 'separator', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'isbn10', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', '\n', '            ', '.', 'append', '(', 'faker', '.', 'expression', '(', '""', '#{code.isbn_group}', '""', ')', ')', '\n', '            ', '.', 'append', '(', ""'-'"", ')', '\n', '            ', '.', 'append', '(', 'faker', '.', 'expression', '(', '""', '#{code.isbn_registrant}', '""', ')', ')', '\n', '            ', '.', 'append', '(', ""'-'"", ')', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'checkDigit', ' ', '=', ' ', 'isbn10CheckDigit', '(', 'isbn10', ')', ';', '\n', '        ', 'isbn10', '.', 'append', '(', 'checkDigit', ' ', '!', '=', ' ', '10', ' ', '?', ' ', 'checkDigit', ' ', ':', ' ', '""', 'X', '""', ')', ';', '\n', '        ', 'return', ' ', 'separator', ' ', '?', ' ', 'isbn10', '.', 'toString', '(', ')', ' ', ':', ' ', 'stripIsbnSeparator', '(', 'isbn10', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbn13,"    public String isbn13(boolean separator) {
        // The registration group identifier is a 1- to 5-digit number
        final StringBuilder isbn13 = new StringBuilder()
            .append(faker.expression(""#{code.isbn_gs1}""))
            .append('-')
            .append(faker.expression(""#{code.isbn_group}""))
            .append('-')
            .append(faker.expression(""#{code.isbn_registrant}""))
            .append('-');

        final int checkDigit = isbn13CheckDigit(isbn13);
        isbn13.append(checkDigit);
        return separator ? isbn13.toString() : stripIsbnSeparator(isbn13);
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public String isbn13(boolean separator) {
        
        final StringBuilder isbn13 = new StringBuilder()
            .append(faker.expression(""#{code.isbn_gs1}""))
            .append('-')
            .append(faker.expression(""#{code.isbn_group}""))
            .append('-')
            .append(faker.expression(""#{code.isbn_registrant}""))
            .append('-');

        final int checkDigit = isbn13CheckDigit(isbn13);
        isbn13.append(checkDigit);
        return separator ? isbn13.toString() : stripIsbnSeparator(isbn13);
    }
","['    ', 'public', ' ', 'String', ' ', 'isbn13', '(', 'boolean', ' ', 'separator', ')', ' ', '{', '\n', '        ', '\n', '        ', 'final', ' ', 'StringBuilder', ' ', 'isbn13', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', '\n', '            ', '.', 'append', '(', 'faker', '.', 'expression', '(', '""', '#{code.isbn_gs1}', '""', ')', ')', '\n', '            ', '.', 'append', '(', ""'-'"", ')', '\n', '            ', '.', 'append', '(', 'faker', '.', 'expression', '(', '""', '#{code.isbn_group}', '""', ')', ')', '\n', '            ', '.', 'append', '(', ""'-'"", ')', '\n', '            ', '.', 'append', '(', 'faker', '.', 'expression', '(', '""', '#{code.isbn_registrant}', '""', ')', ')', '\n', '            ', '.', 'append', '(', ""'-'"", ')', ';', '\n', '\n', '        ', 'final', ' ', 'int', ' ', 'checkDigit', ' ', '=', ' ', 'isbn13CheckDigit', '(', 'isbn13', ')', ';', '\n', '        ', 'isbn13', '.', 'append', '(', 'checkDigit', ')', ';', '\n', '        ', 'return', ' ', 'separator', ' ', '?', ' ', 'isbn13', '.', 'toString', '(', ')', ' ', ':', ' ', 'stripIsbnSeparator', '(', 'isbn13', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbn10CheckDigit,"    private final int isbn10CheckDigit(CharSequence t) {
        String value = stripIsbnSeparator(t);
        int sum = 0;
        for (int i = 0; i < value.length(); i++) {
            sum += ((i + 1) * toInt(value.substring(i, i + 1)));
        }
        return sum % 11;
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    private final int isbn10CheckDigit(CharSequence t) {
        String value = stripIsbnSeparator(t);
        int sum = 0;
        for (int i = 0; i < value.length(); i++) {
            sum += ((i + 1) * toInt(value.substring(i, i + 1)));
        }
        return sum % 11;
    }
","['    ', 'private', ' ', 'final', ' ', 'int', ' ', 'isbn10CheckDigit', '(', 'CharSequence', ' ', 't', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'stripIsbnSeparator', '(', 't', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'value', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'sum', ' ', '+', '=', ' ', '(', '(', 'i', ' ', '+', ' ', '1', ')', ' ', '*', ' ', 'toInt', '(', 'value', '.', 'substring', '(', 'i', ',', ' ', 'i', ' ', '+', ' ', '1', ')', ')', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sum', ' ', '%', ' ', '11', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,isbn13CheckDigit,"    private final int isbn13CheckDigit(CharSequence t) {
        String value = stripIsbnSeparator(t);
        int sum = 0;
        int multiplier = 0;
        for (int i = 0; i < value.length(); i++) {
            multiplier = i % 2 == 0 ? 1 : 3;
            sum += multiplier * toInt(value.subSequence(i, i + 1).toString());
        }

        return (10 - sum % 10) % 10;
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    private final int isbn13CheckDigit(CharSequence t) {
        String value = stripIsbnSeparator(t);
        int sum = 0;
        int multiplier = 0;
        for (int i = 0; i < value.length(); i++) {
            multiplier = i % 2 == 0 ? 1 : 3;
            sum += multiplier * toInt(value.subSequence(i, i + 1).toString());
        }

        return (10 - sum % 10) % 10;
    }
","['    ', 'private', ' ', 'final', ' ', 'int', ' ', 'isbn13CheckDigit', '(', 'CharSequence', ' ', 't', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'stripIsbnSeparator', '(', 't', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'int', ' ', 'multiplier', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'value', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'multiplier', ' ', '=', ' ', 'i', ' ', '%', ' ', '2', ' ', '=', '=', ' ', '0', ' ', '?', ' ', '1', ' ', ':', ' ', '3', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'multiplier', ' ', '*', ' ', 'toInt', '(', 'value', '.', 'subSequence', '(', 'i', ',', ' ', 'i', ' ', '+', ' ', '1', ')', '.', 'toString', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', '(', '10', ' ', '-', ' ', 'sum', ' ', '%', ' ', '10', ')', ' ', '%', ' ', '10', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,Code.java,stripIsbnSeparator,"    private final String stripIsbnSeparator(CharSequence t) {
        return t.toString().replaceAll(""-"","""");
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    private final String stripIsbnSeparator(CharSequence t) {
        return t.toString().replaceAll(""-"","""");
    }
","['    ', 'private', ' ', 'final', ' ', 'String', ' ', 'stripIsbnSeparator', '(', 'CharSequence', ' ', 't', ')', ' ', '{', '\n', '        ', 'return', ' ', 't', '.', 'toString', '(', ')', '.', 'replaceAll', '(', '""', '-', '""', ',', '""', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,AbstractFakerTest.java,before,"    public void before() {
        MockitoAnnotations.initMocks(this);

        
        Logger rootLogger = LogManager.getLogManager().getLogger("""");
        Handler[] handlers = rootLogger.getHandlers();
        rootLogger.setLevel(Level.INFO);
        for (Handler h : handlers) {
            h.setLevel(Level.INFO);",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public void before() {
        MockitoAnnotations.initMocks(this);

        
        Logger rootLogger = LogManager.getLogManager().getLogger("""");
        Handler[] handlers = rootLogger.getHandlers();
        rootLogger.setLevel(Level.INFO);
        for (Handler h : handlers) {
            h.setLevel(Level.INFO);
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '\n', '        ', '\n', '        ', 'Logger', ' ', 'rootLogger', ' ', '=', ' ', 'LogManager', '.', 'getLogManager', '(', ')', '.', 'getLogger', '(', '""', '""', ')', ';', '\n', '        ', 'Handler', '[', ']', ' ', 'handlers', ' ', '=', ' ', 'rootLogger', '.', 'getHandlers', '(', ')', ';', '\n', '        ', 'rootLogger', '.', 'setLevel', '(', 'Level', '.', 'INFO', ')', ';', '\n', '        ', 'for', ' ', '(', 'Handler', ' ', 'h', ' ', ':', ' ', 'handlers', ')', ' ', '{', '\n', '            ', 'h', '.', 'setLevel', '(', 'Level', '.', 'INFO', ')', ';', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,CodeTest.java,isbn10DefaultIsNoSeparator,"    public void isbn10DefaultIsNoSeparator() {
        assertThat(faker.code().isbn10(), not(containsString(""-"")));
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public void isbn10DefaultIsNoSeparator() {
        assertThat(faker.code().isbn10(), not(containsString(""-"")));
    }
","['    ', 'public', ' ', 'void', ' ', 'isbn10DefaultIsNoSeparator', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', ')', ',', ' ', 'not', '(', 'containsString', '(', '""', '-', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,CodeTest.java,isbn13DefaultIsNoSeparator,"    public void isbn13DefaultIsNoSeparator() {
        assertThat(faker.code().isbn13(), not(containsString(""-"")));
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public void isbn13DefaultIsNoSeparator() {
        assertThat(faker.code().isbn13(), not(containsString(""-"")));
    }
","['    ', 'public', ' ', 'void', ' ', 'isbn13DefaultIsNoSeparator', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', ')', ',', ' ', 'not', '(', 'containsString', '(', '""', '-', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,CodeTest.java,testIsbn10,"    public void testIsbn10() {
        final ISBNValidator v = new ISBNValidator();
        final String isbn10NoSep = faker.code().isbn10(false);
        final String isbn10Sep = faker.code().isbn10(true);

        assertThat(isbn10NoSep + "" is not null"", isbn10NoSep, is(not(nullValue())));
        assertThat(isbn10NoSep + "" has length of 10"", isbn10NoSep.length(), is(10));
        assertThat(isbn10NoSep + "" is valid"", v.isValidISBN10(isbn10NoSep), is(true));

        assertThat(isbn10Sep + "" is not null"", isbn10Sep, is(not(nullValue())));
        assertThat(isbn10Sep + "" has length of 13"", isbn10Sep.length(), is(13));
        assertThat(isbn10Sep + "" is valid"", v.isValidISBN10(isbn10Sep), is(true));
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public void testIsbn10() {
        final ISBNValidator v = new ISBNValidator();
        final String isbn10NoSep = faker.code().isbn10(false);
        final String isbn10Sep = faker.code().isbn10(true);

        assertThat(isbn10NoSep + "" is not null"", isbn10NoSep, is(not(nullValue())));
        assertThat(isbn10NoSep + "" has length of 10"", isbn10NoSep.length(), is(10));
        assertThat(isbn10NoSep + "" is valid"", v.isValidISBN10(isbn10NoSep), is(true));

        assertThat(isbn10Sep + "" is not null"", isbn10Sep, is(not(nullValue())));
        assertThat(isbn10Sep + "" has length of 13"", isbn10Sep.length(), is(13));
        assertThat(isbn10Sep + "" is valid"", v.isValidISBN10(isbn10Sep), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testIsbn10', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'ISBNValidator', ' ', 'v', ' ', '=', ' ', 'new', ' ', 'ISBNValidator', '(', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn10NoSep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', 'false', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn10Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', 'true', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn10NoSep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn10NoSep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10NoSep', ' ', '+', ' ', '""', ' has length of 10', '""', ',', ' ', 'isbn10NoSep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '10', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10NoSep', ' ', '+', ' ', '""', ' is valid', '""', ',', ' ', 'v', '.', 'isValidISBN10', '(', 'isbn10NoSep', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn10Sep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn10Sep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10Sep', ' ', '+', ' ', '""', ' has length of 13', '""', ',', ' ', 'isbn10Sep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '13', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10Sep', ' ', '+', ' ', '""', ' is valid', '""', ',', ' ', 'v', '.', 'isValidISBN10', '(', 'isbn10Sep', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,CodeTest.java,testIsbn13,"    public void testIsbn13() {
        final ISBNValidator v = new ISBNValidator();

        final String isbn13NoSep = faker.code().isbn13(false);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(isbn13NoSep + "" is not null"", isbn13NoSep, is(not(nullValue())));
        assertThat(isbn13NoSep + "" has length of 13"", isbn13NoSep.length(), is(13));
        assertThat(isbn13NoSep + "" is valid"", v.isValidISBN13(isbn13NoSep), is(true));

        assertThat(isbn13Sep + "" is not null"", isbn13Sep, is(not(nullValue())));
        assertThat(isbn13Sep + "" has length of 17"", isbn13Sep.length(), is(17));
        assertThat(isbn13Sep + "" is valid"", v.isValidISBN13(isbn13Sep), is(true));
    }",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public void testIsbn13() {
        final ISBNValidator v = new ISBNValidator();

        final String isbn13NoSep = faker.code().isbn13(false);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(isbn13NoSep + "" is not null"", isbn13NoSep, is(not(nullValue())));
        assertThat(isbn13NoSep + "" has length of 13"", isbn13NoSep.length(), is(13));
        assertThat(isbn13NoSep + "" is valid"", v.isValidISBN13(isbn13NoSep), is(true));

        assertThat(isbn13Sep + "" is not null"", isbn13Sep, is(not(nullValue())));
        assertThat(isbn13Sep + "" has length of 17"", isbn13Sep.length(), is(17));
        assertThat(isbn13Sep + "" is valid"", v.isValidISBN13(isbn13Sep), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'testIsbn13', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'ISBNValidator', ' ', 'v', ' ', '=', ' ', 'new', ' ', 'ISBNValidator', '(', ')', ';', '\n', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn13NoSep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', 'false', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn13Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', 'true', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn13NoSep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn13NoSep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13NoSep', ' ', '+', ' ', '""', ' has length of 13', '""', ',', ' ', 'isbn13NoSep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '13', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13NoSep', ' ', '+', ' ', '""', ' is valid', '""', ',', ' ', 'v', '.', 'isValidISBN13', '(', 'isbn13NoSep', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn13Sep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn13Sep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13Sep', ' ', '+', ' ', '""', ' has length of 17', '""', ',', ' ', 'isbn13Sep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '17', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13Sep', ' ', '+', ' ', '""', ' is valid', '""', ',', ' ', 'v', '.', 'isValidISBN13', '(', 'isbn13Sep', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a837e1cb0252bd14e010723f0a3ff587447b4f1a,CodeTest.java,testOverrides,"    public void testOverrides() {
        Faker faker = new Faker(new Locale(""test""));
        
        final ISBNValidator v = new ISBNValidator();
        
        final String isbn10Sep = faker.code().isbn10(true);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(""Uses overridden expressions from test.yml"", 
                isbn10Sep, 
                matchesRegularExpression(""9971-\\d-\\d{4}-(\\d|X)""));
        
        assertThat(""Uses overridden expressions from test.yml"",
                isbn13Sep, ",https://www.github.com/dius/java-faker/commit/a837e1cb0252bd14e010723f0a3ff587447b4f1a,"    public void testOverrides() {
        Faker faker = new Faker(new Locale(""test""));
        
        final ISBNValidator v = new ISBNValidator();
        
        final String isbn10Sep = faker.code().isbn10(true);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(""Uses overridden expressions from test.yml"", 
                isbn10Sep, 
                matchesRegularExpression(""9971-\\d-\\d{4}-(\\d|X)""));
        
        assertThat(""Uses overridden expressions from test.yml"",
                isbn13Sep, 
","['    ', 'public', ' ', 'void', ' ', 'testOverrides', '(', ')', ' ', '{', '\n', '        ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ')', ';', '\n', '        ', '\n', '        ', 'final', ' ', 'ISBNValidator', ' ', 'v', ' ', '=', ' ', 'new', ' ', 'ISBNValidator', '(', ')', ';', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn10Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', 'true', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn13Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', 'true', ')', ';', '\n', '\n', '        ', 'assertThat', '(', '""', 'Uses overridden expressions from test.yml', '""', ',', ' ', '\n', '                ', 'isbn10Sep', ',', ' ', '\n', '                ', 'matchesRegularExpression', '(', '""', '9971-', '\\\\', 'd-', '\\\\', 'd{4}-(', '\\\\', 'd|X)', '""', ')', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'Uses overridden expressions from test.yml', '""', ',', '\n', '                ', 'isbn13Sep', ',', ' ', '\n']"
master,e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,Stock.java,nsdqSymbol,"	public String nsdqSymbol() {
		return faker.fakeValuesService().resolve(""stock.symbol_nsdq"", this, faker);
	}",https://www.github.com/dius/java-faker/commit/e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,"	public String nsdqSymbol() {
		return faker.fakeValuesService().resolve(""stock.symbol_nsdq"", this, faker);
	}
","['\t', 'public', ' ', 'String', ' ', 'nsdqSymbol', '(', ')', ' ', '{', '\n', '\t\t', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'stock.symbol_nsdq', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '\t', '}', '\n']"
master,e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,Stock.java,nyseSymbol,"	public String nyseSymbol() {
		return faker.fakeValuesService().resolve(""stock.symbol_nyse"", this, faker);
	}",https://www.github.com/dius/java-faker/commit/e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,"	public String nyseSymbol() {
		return faker.fakeValuesService().resolve(""stock.symbol_nyse"", this, faker);
	}
","['\t', 'public', ' ', 'String', ' ', 'nyseSymbol', '(', ')', ' ', '{', '\n', '\t\t', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'stock.symbol_nyse', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '\t', '}', '\n']"
master,e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,StockTest.java,testNasdaq,"	public void testNasdaq() {
		assertThat(faker.stock().nsdqSymbol(), not(isEmptyOrNullString()));
	}",https://www.github.com/dius/java-faker/commit/e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,"	public void testNasdaq() {
		assertThat(faker.stock().nsdqSymbol(), not(isEmptyOrNullString()));
	}
","['\t', 'public', ' ', 'void', ' ', 'testNasdaq', '(', ')', ' ', '{', '\n', '\t\t', 'assertThat', '(', 'faker', '.', 'stock', '(', ')', '.', 'nsdqSymbol', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '\t', '}', '\n']"
master,e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,StockTest.java,testNYSE,"	public void testNYSE() {
		assertThat(faker.stock().nyseSymbol(), not(isEmptyOrNullString()));
	}",https://www.github.com/dius/java-faker/commit/e4b0e6d9b512e21fd1a2108ddee5ab6280c3d7b3,"	public void testNYSE() {
		assertThat(faker.stock().nyseSymbol(), not(isEmptyOrNullString()));
	}
","['\t', 'public', ' ', 'void', ' ', 'testNYSE', '(', ')', ' ', '{', '\n', '\t\t', 'assertThat', '(', 'faker', '.', 'stock', '(', ')', '.', 'nyseSymbol', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '\t', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,isbn10DefaultIsNoSeparator,"    public void isbn10DefaultIsNoSeparator() {
        String isbn10 = faker.code().isbn10();

        assertIsValidISBN10(isbn10);
        assertThat(isbn10, not(containsString(""-"")));
    }",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    public void isbn10DefaultIsNoSeparator() {
        String isbn10 = faker.code().isbn10();

        assertIsValidISBN10(isbn10);
        assertThat(isbn10, not(containsString(""-"")));
    }
","['    ', 'public', ' ', 'void', ' ', 'isbn10DefaultIsNoSeparator', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'isbn10', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', ')', ';', '\n', '\n', '        ', 'assertIsValidISBN10', '(', 'isbn10', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10', ',', ' ', 'not', '(', 'containsString', '(', '""', '-', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,isbn13DefaultIsNoSeparator,"    public void isbn13DefaultIsNoSeparator() {
        String isbn13 = faker.code().isbn13();

        assertIsValidISBN13(isbn13);
        assertThat(isbn13, not(containsString(""-"")));
    }",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    public void isbn13DefaultIsNoSeparator() {
        String isbn13 = faker.code().isbn13();

        assertIsValidISBN13(isbn13);
        assertThat(isbn13, not(containsString(""-"")));
    }
","['    ', 'public', ' ', 'void', ' ', 'isbn13DefaultIsNoSeparator', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'isbn13', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', ')', ';', '\n', '\n', '        ', 'assertIsValidISBN13', '(', 'isbn13', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13', ',', ' ', 'not', '(', 'containsString', '(', '""', '-', '""', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,testIsbn10,"    public void testIsbn10() {
        final String isbn10NoSep = faker.code().isbn10(false);
        final String isbn10Sep = faker.code().isbn10(true);

        assertThat(isbn10NoSep + "" is not null"", isbn10NoSep, is(not(nullValue())));
        assertThat(isbn10NoSep + "" has length of 10"", isbn10NoSep.length(), is(10));
        assertIsValidISBN10(isbn10NoSep);

        assertThat(isbn10Sep + "" is not null"", isbn10Sep, is(not(nullValue())));
        assertThat(isbn10Sep + "" has length of 13"", isbn10Sep.length(), is(13));
        assertIsValidISBN10(isbn10Sep);
    }",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    public void testIsbn10() {
        final String isbn10NoSep = faker.code().isbn10(false);
        final String isbn10Sep = faker.code().isbn10(true);

        assertThat(isbn10NoSep + "" is not null"", isbn10NoSep, is(not(nullValue())));
        assertThat(isbn10NoSep + "" has length of 10"", isbn10NoSep.length(), is(10));
        assertIsValidISBN10(isbn10NoSep);

        assertThat(isbn10Sep + "" is not null"", isbn10Sep, is(not(nullValue())));
        assertThat(isbn10Sep + "" has length of 13"", isbn10Sep.length(), is(13));
        assertIsValidISBN10(isbn10Sep);
    }
","['    ', 'public', ' ', 'void', ' ', 'testIsbn10', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn10NoSep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', 'false', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn10Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', 'true', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn10NoSep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn10NoSep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10NoSep', ' ', '+', ' ', '""', ' has length of 10', '""', ',', ' ', 'isbn10NoSep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '10', ')', ')', ';', '\n', '        ', 'assertIsValidISBN10', '(', 'isbn10NoSep', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn10Sep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn10Sep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn10Sep', ' ', '+', ' ', '""', ' has length of 13', '""', ',', ' ', 'isbn10Sep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '13', ')', ')', ';', '\n', '        ', 'assertIsValidISBN10', '(', 'isbn10Sep', ')', ';', '\n', '    ', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,testIsbn13,"    public void testIsbn13() {
        final String isbn13NoSep = faker.code().isbn13(false);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(isbn13NoSep + "" is not null"", isbn13NoSep, is(not(nullValue())));
        assertThat(isbn13NoSep + "" has length of 13"", isbn13NoSep.length(), is(13));
        assertIsValidISBN13(isbn13NoSep);

        assertThat(isbn13Sep + "" is not null"", isbn13Sep, is(not(nullValue())));
        assertThat(isbn13Sep + "" has length of 17"", isbn13Sep.length(), is(17));
        assertIsValidISBN13(isbn13Sep);
    }",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    public void testIsbn13() {
        final String isbn13NoSep = faker.code().isbn13(false);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(isbn13NoSep + "" is not null"", isbn13NoSep, is(not(nullValue())));
        assertThat(isbn13NoSep + "" has length of 13"", isbn13NoSep.length(), is(13));
        assertIsValidISBN13(isbn13NoSep);

        assertThat(isbn13Sep + "" is not null"", isbn13Sep, is(not(nullValue())));
        assertThat(isbn13Sep + "" has length of 17"", isbn13Sep.length(), is(17));
        assertIsValidISBN13(isbn13Sep);
    }
","['    ', 'public', ' ', 'void', ' ', 'testIsbn13', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn13NoSep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', 'false', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn13Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', 'true', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn13NoSep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn13NoSep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13NoSep', ' ', '+', ' ', '""', ' has length of 13', '""', ',', ' ', 'isbn13NoSep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '13', ')', ')', ';', '\n', '        ', 'assertIsValidISBN13', '(', 'isbn13NoSep', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'isbn13Sep', ' ', '+', ' ', '""', ' is not null', '""', ',', ' ', 'isbn13Sep', ',', ' ', 'is', '(', 'not', '(', 'nullValue', '(', ')', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'isbn13Sep', ' ', '+', ' ', '""', ' has length of 17', '""', ',', ' ', 'isbn13Sep', '.', 'length', '(', ')', ',', ' ', 'is', '(', '17', ')', ')', ';', '\n', '        ', 'assertIsValidISBN13', '(', 'isbn13Sep', ')', ';', '\n', '    ', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,assertIsValidISBN10,"    private void assertIsValidISBN10(String isbn10) {
        assertThat(isbn10 + "" is valid"", ISBN_VALIDATOR.isValidISBN10(isbn10), is(true));
    }",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    private void assertIsValidISBN10(String isbn10) {
        assertThat(isbn10 + "" is valid"", ISBN_VALIDATOR.isValidISBN10(isbn10), is(true));
    }
","['    ', 'private', ' ', 'void', ' ', 'assertIsValidISBN10', '(', 'String', ' ', 'isbn10', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'isbn10', ' ', '+', ' ', '""', ' is valid', '""', ',', ' ', 'ISBN_VALIDATOR', '.', 'isValidISBN10', '(', 'isbn10', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,assertIsValidISBN13,"    private void assertIsValidISBN13(String isbn13) {
        assertThat(isbn13 + "" is valid"", ISBN_VALIDATOR.isValidISBN13(isbn13), is(true));
    }",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    private void assertIsValidISBN13(String isbn13) {
        assertThat(isbn13 + "" is valid"", ISBN_VALIDATOR.isValidISBN13(isbn13), is(true));
    }
","['    ', 'private', ' ', 'void', ' ', 'assertIsValidISBN13', '(', 'String', ' ', 'isbn13', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'isbn13', ' ', '+', ' ', '""', ' is valid', '""', ',', ' ', 'ISBN_VALIDATOR', '.', 'isValidISBN13', '(', 'isbn13', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,CodeTest.java,testOverrides,"    public void testOverrides() {
        Faker faker = new Faker(new Locale(""test""));

        final String isbn10Sep = faker.code().isbn10(true);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(""Uses overridden expressions from test.yml"", 
                isbn10Sep, 
                matchesRegularExpression(""9971-\\d-\\d{4}-(\\d|X)""));
        
        assertThat(""Uses overridden expressions from test.yml"",
                isbn13Sep, ",https://www.github.com/dius/java-faker/commit/07cdbbec2b0dd63d2ecea34b1570fa05a23d63be,"    public void testOverrides() {
        Faker faker = new Faker(new Locale(""test""));

        final String isbn10Sep = faker.code().isbn10(true);
        final String isbn13Sep = faker.code().isbn13(true);

        assertThat(""Uses overridden expressions from test.yml"", 
                isbn10Sep, 
                matchesRegularExpression(""9971-\\d-\\d{4}-(\\d|X)""));
        
        assertThat(""Uses overridden expressions from test.yml"",
                isbn13Sep, 
","['    ', 'public', ' ', 'void', ' ', 'testOverrides', '(', ')', ' ', '{', '\n', '        ', 'Faker', ' ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ')', ';', '\n', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn10Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn10', '(', 'true', ')', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'isbn13Sep', ' ', '=', ' ', 'faker', '.', 'code', '(', ')', '.', 'isbn13', '(', 'true', ')', ';', '\n', '\n', '        ', 'assertThat', '(', '""', 'Uses overridden expressions from test.yml', '""', ',', ' ', '\n', '                ', 'isbn10Sep', ',', ' ', '\n', '                ', 'matchesRegularExpression', '(', '""', '9971-', '\\\\', 'd-', '\\\\', 'd{4}-(', '\\\\', 'd|X)', '""', ')', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'Uses overridden expressions from test.yml', '""', ',', '\n', '                ', 'isbn13Sep', ',', ' ', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,IdNumber.java,ssnValidSwedish,"    private String ssnValidSwedish() {
        SwedishIdNumber swedishIdNumber = new SwedishIdNumber();
        return swedishIdNumber.getValidSwedishSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    private String ssnValidSwedish() {
        SwedishIdNumber swedishIdNumber = new SwedishIdNumber();
        return swedishIdNumber.getValidSwedishSsn(faker);
    }
","['    ', 'private', ' ', 'String', ' ', 'ssnValidSwedish', '(', ')', ' ', '{', '\n', '        ', 'SwedishIdNumber', ' ', 'swedishIdNumber', ' ', '=', ' ', 'new', ' ', 'SwedishIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'swedishIdNumber', '.', 'getValidSwedishSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,IdNumber.java,ssnInvalidSwedish,"    private String ssnInvalidSwedish() {
        SwedishIdNumber swedishIdNumber = new SwedishIdNumber();
        return swedishIdNumber.getInvalidSwedishSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    private String ssnInvalidSwedish() {
        SwedishIdNumber swedishIdNumber = new SwedishIdNumber();
        return swedishIdNumber.getInvalidSwedishSsn(faker);
    }
","['    ', 'private', ' ', 'String', ' ', 'ssnInvalidSwedish', '(', ')', ' ', '{', '\n', '        ', 'SwedishIdNumber', ' ', 'swedishIdNumber', ' ', '=', ' ', 'new', ' ', 'SwedishIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'swedishIdNumber', '.', 'getInvalidSwedishSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumber.java,validSwedishSsn,"    boolean validSwedishSsn(String ssn) {
        if (ssn.length() != 11) {
            return false;
        }

        try {
            if (parseDate(ssn)) {
                return false;
            }
        } catch (ParseException e) {
            return false;
        }

        int calculatedChecksum = calculateChecksum(ssn);

        int checksum = Integer.parseInt(ssn.substring(10, 11));

        return checksum == calculatedChecksum;
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    boolean validSwedishSsn(String ssn) {
        if (ssn.length() != 11) {
            return false;
        }

        try {
            if (parseDate(ssn)) {
                return false;
            }
        } catch (ParseException e) {
            return false;
        }

        int calculatedChecksum = calculateChecksum(ssn);

        int checksum = Integer.parseInt(ssn.substring(10, 11));

        return checksum == calculatedChecksum;
    }
","['    ', 'boolean', ' ', 'validSwedishSsn', '(', 'String', ' ', 'ssn', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'ssn', '.', 'length', '(', ')', ' ', '!', '=', ' ', '11', ')', ' ', '{', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'if', ' ', '(', 'parseDate', '(', 'ssn', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'false', ';', '\n', '            ', '}', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'ParseException', ' ', 'e', ')', ' ', '{', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '\n', '        ', 'int', ' ', 'calculatedChecksum', ' ', '=', ' ', 'calculateChecksum', '(', 'ssn', ')', ';', '\n', '\n', '        ', 'int', ' ', 'checksum', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'ssn', '.', 'substring', '(', '10', ',', ' ', '11', ')', ')', ';', '\n', '\n', '        ', 'return', ' ', 'checksum', ' ', '=', '=', ' ', 'calculatedChecksum', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumber.java,parseDate,"    private boolean parseDate(String ssn) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat(""yyMMdd"");
        String dateString = ssn.substring(0, 6);
        Date date = sdf.parse(dateString);

        // want to check that the parsed date is equal to the supplied data, most of the attempts will fail
        String reversed = sdf.format(date);
        return !reversed.equals(dateString);
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    private boolean parseDate(String ssn) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat(""yyMMdd"");
        String dateString = ssn.substring(0, 6);
        Date date = sdf.parse(dateString);

        
        String reversed = sdf.format(date);
        return !reversed.equals(dateString);
    }
","['    ', 'private', ' ', 'boolean', ' ', 'parseDate', '(', 'String', ' ', 'ssn', ')', ' ', 'throws', ' ', 'ParseException', ' ', '{', '\n', '        ', 'SimpleDateFormat', ' ', 'sdf', ' ', '=', ' ', 'new', ' ', 'SimpleDateFormat', '(', '""', 'yyMMdd', '""', ')', ';', '\n', '        ', 'String', ' ', 'dateString', ' ', '=', ' ', 'ssn', '.', 'substring', '(', '0', ',', ' ', '6', ')', ';', '\n', '        ', 'Date', ' ', 'date', ' ', '=', ' ', 'sdf', '.', 'parse', '(', 'dateString', ')', ';', '\n', '\n', '        ', '\n', '        ', 'String', ' ', 'reversed', ' ', '=', ' ', 'sdf', '.', 'format', '(', 'date', ')', ';', '\n', '        ', 'return', ' ', '!', 'reversed', '.', 'equals', '(', 'dateString', ')', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumber.java,calculateChecksum,"    private int calculateChecksum(String number) {
        String dateString = number.substring(0, 6);
        String birthNumber = number.substring(7, 10);

        String calculatedNumber = calculateDigits(dateString + birthNumber);
        int sum = calculateDigitSum(calculatedNumber);

        int lastDigit = (sum % 10);
        int difference = 10 - lastDigit;

        return (difference % 10);
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    private int calculateChecksum(String number) {
        String dateString = number.substring(0, 6);
        String birthNumber = number.substring(7, 10);

        String calculatedNumber = calculateDigits(dateString + birthNumber);
        int sum = calculateDigitSum(calculatedNumber);

        int lastDigit = (sum % 10);
        int difference = 10 - lastDigit;

        return (difference % 10);
    }
","['    ', 'private', ' ', 'int', ' ', 'calculateChecksum', '(', 'String', ' ', 'number', ')', ' ', '{', '\n', '        ', 'String', ' ', 'dateString', ' ', '=', ' ', 'number', '.', 'substring', '(', '0', ',', ' ', '6', ')', ';', '\n', '        ', 'String', ' ', 'birthNumber', ' ', '=', ' ', 'number', '.', 'substring', '(', '7', ',', ' ', '10', ')', ';', '\n', '\n', '        ', 'String', ' ', 'calculatedNumber', ' ', '=', ' ', 'calculateDigits', '(', 'dateString', ' ', '+', ' ', 'birthNumber', ')', ';', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', 'calculateDigitSum', '(', 'calculatedNumber', ')', ';', '\n', '\n', '        ', 'int', ' ', 'lastDigit', ' ', '=', ' ', '(', 'sum', ' ', '%', ' ', '10', ')', ';', '\n', '        ', 'int', ' ', 'difference', ' ', '=', ' ', '10', ' ', '-', ' ', 'lastDigit', ';', '\n', '\n', '        ', 'return', ' ', '(', 'difference', ' ', '%', ' ', '10', ')', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumber.java,calculateDigits,"    private String calculateDigits(String numbers) {
        String calculatedNumbers = """";
        for (int i = 0; i < 9; i++) {
            int res;
            int n = Integer.parseInt(numbers.substring(i, i + 1));
            if (i % 2 == 0) {
                res = n * 2;
            } else {
                res = n;
            }

            calculatedNumbers += res;
        }
        return calculatedNumbers;
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    private String calculateDigits(String numbers) {
        String calculatedNumbers = """";
        for (int i = 0; i < 9; i++) {
            int res;
            int n = Integer.parseInt(numbers.substring(i, i + 1));
            if (i % 2 == 0) {
                res = n * 2;
            } else {
                res = n;
            }

            calculatedNumbers += res;
        }
        return calculatedNumbers;
    }
","['    ', 'private', ' ', 'String', ' ', 'calculateDigits', '(', 'String', ' ', 'numbers', ')', ' ', '{', '\n', '        ', 'String', ' ', 'calculatedNumbers', ' ', '=', ' ', '""', '""', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '9', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'res', ';', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'numbers', '.', 'substring', '(', 'i', ',', ' ', 'i', ' ', '+', ' ', '1', ')', ')', ';', '\n', '            ', 'if', ' ', '(', 'i', ' ', '%', ' ', '2', ' ', '=', '=', ' ', '0', ')', ' ', '{', '\n', '                ', 'res', ' ', '=', ' ', 'n', ' ', '*', ' ', '2', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'res', ' ', '=', ' ', 'n', ';', '\n', '            ', '}', '\n', '\n', '            ', 'calculatedNumbers', ' ', '+', '=', ' ', 'res', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'calculatedNumbers', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumber.java,calculateDigitSum,"    private int calculateDigitSum(String numbers) {
        int sum = 0;
        for (int i = 0; i < numbers.length(); i++) {
            int n = Integer.parseInt(numbers.substring(i, i + 1));
            sum += n;
        }
        return sum;
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    private int calculateDigitSum(String numbers) {
        int sum = 0;
        for (int i = 0; i < numbers.length(); i++) {
            int n = Integer.parseInt(numbers.substring(i, i + 1));
            sum += n;
        }
        return sum;
    }
","['    ', 'private', ' ', 'int', ' ', 'calculateDigitSum', '(', 'String', ' ', 'numbers', ')', ' ', '{', '\n', '        ', 'int', ' ', 'sum', ' ', '=', ' ', '0', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'numbers', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'n', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'numbers', '.', 'substring', '(', 'i', ',', ' ', 'i', ' ', '+', ' ', '1', ')', ')', ';', '\n', '            ', 'sum', ' ', '+', '=', ' ', 'n', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'sum', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,IdNumberTest.java,testValidSwedishSsn,"    public void testValidSwedishSsn() {
        final Faker f = new Faker(new Locale(""sv_SE""));
        for (int i = 0; i < 100; i++) {
            assertThat(f.idNumber().valid(), matchesRegularExpression(""\\d{6}[-+]\\d{4}""));",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    public void testValidSwedishSsn() {
        final Faker f = new Faker(new Locale(""sv_SE""));
        for (int i = 0; i < 100; i++) {
            assertThat(f.idNumber().valid(), matchesRegularExpression(""\\d{6}[-+]\\d{4}""));
","['    ', 'public', ' ', 'void', ' ', 'testValidSwedishSsn', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'sv_SE', '""', ')', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'f', '.', 'idNumber', '(', ')', '.', 'valid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{6}[-+]', '\\\\', 'd{4}', '""', ')', ')', ';', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,IdNumberTest.java,testInvalidSwedishSsn,"    public void testInvalidSwedishSsn() {
        final Faker f = new Faker(new Locale(""sv_SE""));
        for (int i = 0; i < 100; i++) {
            assertThat(f.idNumber().invalid(), matchesRegularExpression(""\\d{6}[-+]\\d{4}""));",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    public void testInvalidSwedishSsn() {
        final Faker f = new Faker(new Locale(""sv_SE""));
        for (int i = 0; i < 100; i++) {
            assertThat(f.idNumber().invalid(), matchesRegularExpression(""\\d{6}[-+]\\d{4}""));
","['    ', 'public', ' ', 'void', ' ', 'testInvalidSwedishSsn', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'sv_SE', '""', ')', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'f', '.', 'idNumber', '(', ')', '.', 'invalid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{6}[-+]', '\\\\', 'd{4}', '""', ')', ')', ';', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumberTest.java,valid,"    public void valid() {
        SwedishIdNumber idNumber = new SwedishIdNumber();
        assertTrue(idNumber.validSwedishSsn(""670919-9530""));
        assertTrue(idNumber.validSwedishSsn(""811228-9874""));
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    public void valid() {
        SwedishIdNumber idNumber = new SwedishIdNumber();
        assertTrue(idNumber.validSwedishSsn(""670919-9530""));
        assertTrue(idNumber.validSwedishSsn(""811228-9874""));
    }
","['    ', 'public', ' ', 'void', ' ', 'valid', '(', ')', ' ', '{', '\n', '        ', 'SwedishIdNumber', ' ', 'idNumber', ' ', '=', ' ', 'new', ' ', 'SwedishIdNumber', '(', ')', ';', '\n', '        ', 'assertTrue', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '670919-9530', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9874', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b9b1411007b70e4ec6be538dd8240285ed24442a,SwedishIdNumberTest.java,invalid,"    public void invalid() {
        SwedishIdNumber idNumber = new SwedishIdNumber();
        assertTrue(!idNumber.validSwedishSsn(""8112289873""));
        assertTrue(!idNumber.validSwedishSsn(""foo228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9875""));
        assertTrue(!idNumber.validSwedishSsn(""811200-9874""));
        assertTrue(!idNumber.validSwedishSsn(""810028-9874""));
    }",https://www.github.com/dius/java-faker/commit/b9b1411007b70e4ec6be538dd8240285ed24442a,"    public void invalid() {
        SwedishIdNumber idNumber = new SwedishIdNumber();
        assertTrue(!idNumber.validSwedishSsn(""8112289873""));
        assertTrue(!idNumber.validSwedishSsn(""foo228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9875""));
        assertTrue(!idNumber.validSwedishSsn(""811200-9874""));
        assertTrue(!idNumber.validSwedishSsn(""810028-9874""));
    }
","['    ', 'public', ' ', 'void', ' ', 'invalid', '(', ')', ' ', '{', '\n', '        ', 'SwedishIdNumber', ' ', 'idNumber', ' ', '=', ' ', 'new', ' ', 'SwedishIdNumber', '(', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '8112289873', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', 'foo228-9873', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9873', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9875', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811200-9874', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '810028-9874', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,IdNumber.java,validEnSsn,"    public String validEnSsn() {
        EnIdNumber enIdNumber = new EnIdNumber();
        return enIdNumber.getValidSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public String validEnSsn() {
        EnIdNumber enIdNumber = new EnIdNumber();
        return enIdNumber.getValidSsn(faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'validEnSsn', '(', ')', ' ', '{', '\n', '        ', 'EnIdNumber', ' ', 'enIdNumber', ' ', '=', ' ', 'new', ' ', 'EnIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'enIdNumber', '.', 'getValidSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,IdNumber.java,validEnUsSsn,"    public String validEnUsSsn() {
        EnIdNumber enIdNumber = new EnIdNumber();
        return enIdNumber.getValidSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public String validEnUsSsn() {
        EnIdNumber enIdNumber = new EnIdNumber();
        return enIdNumber.getValidSsn(faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'validEnUsSsn', '(', ')', ' ', '{', '\n', '        ', 'EnIdNumber', ' ', 'enIdNumber', ' ', '=', ' ', 'new', ' ', 'EnIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'enIdNumber', '.', 'getValidSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,IdNumber.java,validSvSeSsn,"    public String validSvSeSsn() {
        SvSEIdNumber svSEIdNumber = new SvSEIdNumber();
        return svSEIdNumber.getValidSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public String validSvSeSsn() {
        SvSEIdNumber svSEIdNumber = new SvSEIdNumber();
        return svSEIdNumber.getValidSsn(faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'validSvSeSsn', '(', ')', ' ', '{', '\n', '        ', 'SvSEIdNumber', ' ', 'svSEIdNumber', ' ', '=', ' ', 'new', ' ', 'SvSEIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'svSEIdNumber', '.', 'getValidSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,IdNumber.java,invalidSvSeSsn,"    public String invalidSvSeSsn() {
        SvSEIdNumber svSEIdNumber = new SvSEIdNumber();
        return svSEIdNumber.getInvalidSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public String invalidSvSeSsn() {
        SvSEIdNumber svSEIdNumber = new SvSEIdNumber();
        return svSEIdNumber.getInvalidSsn(faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'invalidSvSeSsn', '(', ')', ' ', '{', '\n', '        ', 'SvSEIdNumber', ' ', 'svSEIdNumber', ' ', '=', ' ', 'new', ' ', 'SvSEIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'svSEIdNumber', '.', 'getInvalidSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,IdNumberTest.java,testSsnValid,"    public void testSsnValid() {
        assertThat(faker.idNumber().valid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public void testSsnValid() {
        assertThat(faker.idNumber().valid(), matchesRegularExpression(""[0-8]\\d{2}-\\d{2}-\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSsnValid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'idNumber', '(', ')', '.', 'valid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-8]', '\\\\', 'd{2}-', '\\\\', 'd{2}-', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,SwedishIdNumberTest.java,valid,"    public void valid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertTrue(idNumber.validSwedishSsn(""670919-9530""));
        assertTrue(idNumber.validSwedishSsn(""811228-9874""));
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public void valid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertTrue(idNumber.validSwedishSsn(""670919-9530""));
        assertTrue(idNumber.validSwedishSsn(""811228-9874""));
    }
","['    ', 'public', ' ', 'void', ' ', 'valid', '(', ')', ' ', '{', '\n', '        ', 'SvSEIdNumber', ' ', 'idNumber', ' ', '=', ' ', 'new', ' ', 'SvSEIdNumber', '(', ')', ';', '\n', '        ', 'assertTrue', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '670919-9530', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9874', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,SwedishIdNumberTest.java,invalid,"    public void invalid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertTrue(!idNumber.validSwedishSsn(""8112289873""));
        assertTrue(!idNumber.validSwedishSsn(""foo228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9875""));
        assertTrue(!idNumber.validSwedishSsn(""811200-9874""));
        assertTrue(!idNumber.validSwedishSsn(""810028-9874""));
    }",https://www.github.com/dius/java-faker/commit/c7cd8bafcfd777b1fc79ddbd3cb762b944e382da,"    public void invalid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertTrue(!idNumber.validSwedishSsn(""8112289873""));
        assertTrue(!idNumber.validSwedishSsn(""foo228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9873""));
        assertTrue(!idNumber.validSwedishSsn(""811228-9875""));
        assertTrue(!idNumber.validSwedishSsn(""811200-9874""));
        assertTrue(!idNumber.validSwedishSsn(""810028-9874""));
    }
","['    ', 'public', ' ', 'void', ' ', 'invalid', '(', ')', ' ', '{', '\n', '        ', 'SvSEIdNumber', ' ', 'idNumber', ' ', '=', ' ', 'new', ' ', 'SvSEIdNumber', '(', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '8112289873', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', 'foo228-9873', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9873', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9875', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811200-9874', '""', ')', ')', ';', '\n', '        ', 'assertTrue', '(', '!', 'idNumber', '.', 'validSwedishSsn', '(', '""', '810028-9874', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,Ancient.java,god,"    public String god() {
        return faker.resolve(""ancient.god"");
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public String god() {
        return faker.resolve(""ancient.god"");
    }
","['    ', 'public', ' ', 'String', ' ', 'god', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'ancient.god', '""', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,Ancient.java,primordial,"    public String primordial() {
        return faker.resolve(""ancient.primordial"");
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public String primordial() {
        return faker.resolve(""ancient.primordial"");
    }
","['    ', 'public', ' ', 'String', ' ', 'primordial', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'ancient.primordial', '""', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,Ancient.java,titan,"    public String titan() {
        return faker.resolve(""ancient.titan"");
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public String titan() {
        return faker.resolve(""ancient.titan"");
    }
","['    ', 'public', ' ', 'String', ' ', 'titan', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'ancient.titan', '""', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,Ancient.java,hero,"    public String hero() {
        return faker.resolve(""ancient.hero"");
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public String hero() {
        return faker.resolve(""ancient.hero"");
    }
","['    ', 'public', ' ', 'String', ' ', 'hero', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'ancient.hero', '""', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,AncientTest.java,god,"    public void god() {
        assertThat(faker.ancient().god(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public void god() {
        assertThat(faker.ancient().god(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'god', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'ancient', '(', ')', '.', 'god', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,AncientTest.java,primordial,"    public void primordial() {
        assertThat(faker.ancient().primordial(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public void primordial() {
        assertThat(faker.ancient().primordial(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'primordial', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'ancient', '(', ')', '.', 'primordial', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,AncientTest.java,titan,"    public void titan() {
        assertThat(faker.ancient().titan(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public void titan() {
        assertThat(faker.ancient().titan(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'titan', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'ancient', '(', ')', '.', 'titan', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,AncientTest.java,hero,"    public void hero() {
        assertThat(faker.ancient().hero(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/b0897a05ca8c7d0dd3a5d9b53397c75b325d8f1f,"    public void hero() {
        assertThat(faker.ancient().hero(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'hero', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'ancient', '(', ')', '.', 'hero', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3eb2ad300b3d8dadabd090bcb4aeed98170395d0,GameOfThrones.java,character,"    public String character() {
        return faker.resolve(""game_of_thrones.characters"");
    }",https://www.github.com/dius/java-faker/commit/3eb2ad300b3d8dadabd090bcb4aeed98170395d0,"    public String character() {
        return faker.resolve(""game_of_thrones.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'game_of_thrones.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3eb2ad300b3d8dadabd090bcb4aeed98170395d0,GameOfThrones.java,house,"    public String house() {
        return faker.resolve(""game_of_thrones.houses"");
    }",https://www.github.com/dius/java-faker/commit/3eb2ad300b3d8dadabd090bcb4aeed98170395d0,"    public String house() {
        return faker.resolve(""game_of_thrones.houses"");
    }
","['    ', 'public', ' ', 'String', ' ', 'house', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'game_of_thrones.houses', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3eb2ad300b3d8dadabd090bcb4aeed98170395d0,GameOfThrones.java,city,"    public String city() {
        return faker.resolve(""game_of_thrones.cities"");
    }",https://www.github.com/dius/java-faker/commit/3eb2ad300b3d8dadabd090bcb4aeed98170395d0,"    public String city() {
        return faker.resolve(""game_of_thrones.cities"");
    }
","['    ', 'public', ' ', 'String', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'game_of_thrones.cities', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3eb2ad300b3d8dadabd090bcb4aeed98170395d0,GameOfThrones.java,dragon,"    public String dragon() {
        return faker.resolve(""game_of_thrones.dragons"");
    }",https://www.github.com/dius/java-faker/commit/3eb2ad300b3d8dadabd090bcb4aeed98170395d0,"    public String dragon() {
        return faker.resolve(""game_of_thrones.dragons"");
    }
","['    ', 'public', ' ', 'String', ' ', 'dragon', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'game_of_thrones.dragons', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3eb2ad300b3d8dadabd090bcb4aeed98170395d0,GameOfThronesTest.java,dragon,"    public void dragon() {
        assertThat(faker.gameOfThrones().dragon(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/3eb2ad300b3d8dadabd090bcb4aeed98170395d0,"    public void dragon() {
        assertThat(faker.gameOfThrones().dragon(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'dragon', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gameOfThrones', '(', ')', '.', 'dragon', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bba74389a997dc89f01d0bdb3913a7710079740e,Faker.java,random,"    public RandomService random() {
        return this.randomService;
    }",https://www.github.com/dius/java-faker/commit/bba74389a997dc89f01d0bdb3913a7710079740e,"    public RandomService random() {
        return this.randomService;
    }
","['    ', 'public', ' ', 'RandomService', ' ', 'random', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'randomService', ';', '\n', '    ', '}', '\n']"
master,bba74389a997dc89f01d0bdb3913a7710079740e,IdNumber.java,ssnValid,"    public String ssnValid() {
        EnIdNumber enIdNumber = new EnIdNumber();
        return enIdNumber.getValidSsn(faker);
    }",https://www.github.com/dius/java-faker/commit/bba74389a997dc89f01d0bdb3913a7710079740e,"    public String ssnValid() {
        EnIdNumber enIdNumber = new EnIdNumber();
        return enIdNumber.getValidSsn(faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'ssnValid', '(', ')', ' ', '{', '\n', '        ', 'EnIdNumber', ' ', 'enIdNumber', ' ', '=', ' ', 'new', ' ', 'EnIdNumber', '(', ')', ';', '\n', '        ', 'return', ' ', 'enIdNumber', '.', 'getValidSsn', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,bba74389a997dc89f01d0bdb3913a7710079740e,SvSEIdNumber.java,validSwedishSsn,"    boolean validSwedishSsn(String ssn) {
        if (ssn.length() != 11) {
            return false;
        }

        try {
            if (parseDate(ssn)) {
                return false;
            }
        } catch (ParseException e) {
            return false;
        }

        int calculatedChecksum = calculateChecksum(ssn);
        int checksum = Integer.parseInt(ssn.substring(10, 11));
        return checksum == calculatedChecksum;
    }",https://www.github.com/dius/java-faker/commit/bba74389a997dc89f01d0bdb3913a7710079740e,"    boolean validSwedishSsn(String ssn) {
        if (ssn.length() != 11) {
            return false;
        }

        try {
            if (parseDate(ssn)) {
                return false;
            }
        } catch (ParseException e) {
            return false;
        }

        int calculatedChecksum = calculateChecksum(ssn);
        int checksum = Integer.parseInt(ssn.substring(10, 11));
        return checksum == calculatedChecksum;
    }
","['    ', 'boolean', ' ', 'validSwedishSsn', '(', 'String', ' ', 'ssn', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'ssn', '.', 'length', '(', ')', ' ', '!', '=', ' ', '11', ')', ' ', '{', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'if', ' ', '(', 'parseDate', '(', 'ssn', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'false', ';', '\n', '            ', '}', '\n', '        ', '}', ' ', 'catch', ' ', '(', 'ParseException', ' ', 'e', ')', ' ', '{', '\n', '            ', 'return', ' ', 'false', ';', '\n', '        ', '}', '\n', '\n', '        ', 'int', ' ', 'calculatedChecksum', ' ', '=', ' ', 'calculateChecksum', '(', 'ssn', ')', ';', '\n', '        ', 'int', ' ', 'checksum', ' ', '=', ' ', 'Integer', '.', 'parseInt', '(', 'ssn', '.', 'substring', '(', '10', ',', ' ', '11', ')', ')', ';', '\n', '        ', 'return', ' ', 'checksum', ' ', '=', '=', ' ', 'calculatedChecksum', ';', '\n', '    ', '}', '\n']"
master,bba74389a997dc89f01d0bdb3913a7710079740e,SwedishIdNumberTest.java,valid,"    public void valid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertThat(idNumber.validSwedishSsn(""670919-9530""), is(true));
        assertThat(idNumber.validSwedishSsn(""811228-9874""), is(true));
    }",https://www.github.com/dius/java-faker/commit/bba74389a997dc89f01d0bdb3913a7710079740e,"    public void valid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertThat(idNumber.validSwedishSsn(""670919-9530""), is(true));
        assertThat(idNumber.validSwedishSsn(""811228-9874""), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'valid', '(', ')', ' ', '{', '\n', '        ', 'SvSEIdNumber', ' ', 'idNumber', ' ', '=', ' ', 'new', ' ', 'SvSEIdNumber', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '670919-9530', '""', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9874', '""', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bba74389a997dc89f01d0bdb3913a7710079740e,SwedishIdNumberTest.java,invalid,"    public void invalid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertThat(idNumber.validSwedishSsn(""8112289873""), is(false));
        assertThat(idNumber.validSwedishSsn(""foo228-9873""), is(false));
        assertThat(idNumber.validSwedishSsn(""811228-9873""), is(false));
        assertThat(idNumber.validSwedishSsn(""811228-9875""), is(false));
        assertThat(idNumber.validSwedishSsn(""811200-9874""), is(false));
        assertThat(idNumber.validSwedishSsn(""810028-9874""), is(false));
    }",https://www.github.com/dius/java-faker/commit/bba74389a997dc89f01d0bdb3913a7710079740e,"    public void invalid() {
        SvSEIdNumber idNumber = new SvSEIdNumber();
        assertThat(idNumber.validSwedishSsn(""8112289873""), is(false));
        assertThat(idNumber.validSwedishSsn(""foo228-9873""), is(false));
        assertThat(idNumber.validSwedishSsn(""811228-9873""), is(false));
        assertThat(idNumber.validSwedishSsn(""811228-9875""), is(false));
        assertThat(idNumber.validSwedishSsn(""811200-9874""), is(false));
        assertThat(idNumber.validSwedishSsn(""810028-9874""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'invalid', '(', ')', ' ', '{', '\n', '        ', 'SvSEIdNumber', ' ', 'idNumber', ' ', '=', ' ', 'new', ' ', 'SvSEIdNumber', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '8112289873', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', 'foo228-9873', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9873', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811228-9875', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '811200-9874', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'idNumber', '.', 'validSwedishSsn', '(', '""', '810028-9874', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,46926e9d5bffd5ff7139fdf182a3d8c8030ed054,Finance.java,calculateIbanChecksum,"    private static String calculateIbanChecksum(String countryCode, String basicBankAccountNumber) {
        String basis = basicBankAccountNumber + countryCode + ""00"";

        StringBuilder sb = new StringBuilder();
        char[] characters = basis.toLowerCase().toCharArray();
        for (char c : characters) {
            if (Character.isLetter(c)) {
                sb.append(String.valueOf((c - 'a') + 10));
            } else {
                sb.append(c);
            }
        }

        int mod97 = new BigInteger(sb.toString()).mod(BigInteger.valueOf(97L)).intValue();
        return StringUtils.leftPad(String.valueOf(98 - mod97), 2, '0');
    }",https://www.github.com/dius/java-faker/commit/46926e9d5bffd5ff7139fdf182a3d8c8030ed054,"    private static String calculateIbanChecksum(String countryCode, String basicBankAccountNumber) {
        String basis = basicBankAccountNumber + countryCode + ""00"";

        StringBuilder sb = new StringBuilder();
        char[] characters = basis.toLowerCase().toCharArray();
        for (char c : characters) {
            if (Character.isLetter(c)) {
                sb.append(String.valueOf((c - 'a') + 10));
            } else {
                sb.append(c);
            }
        }

        int mod97 = new BigInteger(sb.toString()).mod(BigInteger.valueOf(97L)).intValue();
        return StringUtils.leftPad(String.valueOf(98 - mod97), 2, '0');
    }
","['    ', 'private', ' ', 'static', ' ', 'String', ' ', 'calculateIbanChecksum', '(', 'String', ' ', 'countryCode', ',', ' ', 'String', ' ', 'basicBankAccountNumber', ')', ' ', '{', '\n', '        ', 'String', ' ', 'basis', ' ', '=', ' ', 'basicBankAccountNumber', ' ', '+', ' ', 'countryCode', ' ', '+', ' ', '""', '00', '""', ';', '\n', '\n', '        ', 'StringBuilder', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'char', '[', ']', ' ', 'characters', ' ', '=', ' ', 'basis', '.', 'toLowerCase', '(', ')', '.', 'toCharArray', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'char', ' ', 'c', ' ', ':', ' ', 'characters', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'Character', '.', 'isLetter', '(', 'c', ')', ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'String', '.', 'valueOf', '(', '(', 'c', ' ', '-', ' ', ""'a'"", ')', ' ', '+', ' ', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'c', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'int', ' ', 'mod97', ' ', '=', ' ', 'new', ' ', 'BigInteger', '(', 'sb', '.', 'toString', '(', ')', ')', '.', 'mod', '(', 'BigInteger', '.', 'valueOf', '(', '97L', ')', ')', '.', 'intValue', '(', ')', ';', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'leftPad', '(', 'String', '.', 'valueOf', '(', '98', ' ', '-', ' ', 'mod97', ')', ',', ' ', '2', ',', ' ', ""'0'"", ')', ';', '\n', '    ', '}', '\n']"
master,46926e9d5bffd5ff7139fdf182a3d8c8030ed054,FakeValuesService.java,fakerFromStream,"    protected Map fakerFromStream(InputStream stream, String localeName) {
        final Map valuesMap = new Yaml().loadAs(stream, Map.class);
        final Map localeBased = (Map) valuesMap.get(localeName);
        return (Map) localeBased.get(""faker"");
    }",https://www.github.com/dius/java-faker/commit/46926e9d5bffd5ff7139fdf182a3d8c8030ed054,"    protected Map fakerFromStream(InputStream stream, String localeName) {
        final Map valuesMap = new Yaml().loadAs(stream, Map.class);
        final Map localeBased = (Map) valuesMap.get(localeName);
        return (Map) localeBased.get(""faker"");
    }
","['    ', 'protected', ' ', 'Map', ' ', 'fakerFromStream', '(', 'InputStream', ' ', 'stream', ',', ' ', 'String', ' ', 'localeName', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Map', ' ', 'valuesMap', ' ', '=', ' ', 'new', ' ', 'Yaml', '(', ')', '.', 'loadAs', '(', 'stream', ',', ' ', 'Map', '.', 'class', ')', ';', '\n', '        ', 'final', ' ', 'Map', ' ', 'localeBased', ' ', '=', ' ', '(', 'Map', ')', ' ', 'valuesMap', '.', 'get', '(', 'localeName', ')', ';', '\n', '        ', 'return', ' ', '(', 'Map', ')', ' ', 'localeBased', '.', 'get', '(', '""', 'faker', '""', ')', ';', '\n', '    ', '}', '\n']"
master,46926e9d5bffd5ff7139fdf182a3d8c8030ed054,NumberTest.java,numberBetweenLongLongZeroMinMax,"    public void numberBetweenLongLongZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"", 
                faker.number().numberBetween((long)0,(long)0), 
                is(0L));
        
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween((long)2,(long)2), ",https://www.github.com/dius/java-faker/commit/46926e9d5bffd5ff7139fdf182a3d8c8030ed054,"    public void numberBetweenLongLongZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"", 
                faker.number().numberBetween((long)0,(long)0), 
                is(0L));
        
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween((long)2,(long)2), 
","['    ', 'public', ' ', 'void', ' ', 'numberBetweenLongLongZeroMinMax', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min, with 0', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '(', 'long', ')', '0', ',', '(', 'long', ')', '0', ')', ',', ' ', '\n', '                ', 'is', '(', '0', 'L', ')', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '(', 'long', ')', '2', ',', '(', 'long', ')', '2', ')', ',', ' ', '\n']"
master,bb4efb6bd3545cc562ea16df506df0b5cb93a9d4,GameOfThrones.java,quote,"    public String quote() {
      return faker.resolve(""game_of_thrones.quotes"");
    }",https://www.github.com/dius/java-faker/commit/bb4efb6bd3545cc562ea16df506df0b5cb93a9d4,"    public String quote() {
      return faker.resolve(""game_of_thrones.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '      ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'game_of_thrones.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,bb4efb6bd3545cc562ea16df506df0b5cb93a9d4,GameOfThronesTest.java,quote,"    public void quote() {
        assertThat(faker.gameOfThrones().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/bb4efb6bd3545cc562ea16df506df0b5cb93a9d4,"    public void quote() {
        assertThat(faker.gameOfThrones().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gameOfThrones', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1ad1adc4ab22589e4934ba3e42e7c3ff5f6ce866,Address.java,fullAddress,"    public String fullAddress() {
      return faker.fakeValuesService().resolve(""address.full_address"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1ad1adc4ab22589e4934ba3e42e7c3ff5f6ce866,"    public String fullAddress() {
      return faker.fakeValuesService().resolve(""address.full_address"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'fullAddress', '(', ')', ' ', '{', '\n', '      ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.full_address', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1ad1adc4ab22589e4934ba3e42e7c3ff5f6ce866,AddressTest.java,testFullAddress,"    public void testFullAddress() {
        assertThat(faker.address().fullAddress(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/1ad1adc4ab22589e4934ba3e42e7c3ff5f6ce866,"    public void testFullAddress() {
        assertThat(faker.address().fullAddress(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFullAddress', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'fullAddress', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,33e09fcf0f977444cee65073c3f7e05e423b18b5,Lorem.java,sentence,"    public String sentence(int wordCount) {
        return sentence(wordCount, 6);
    }",https://www.github.com/dius/java-faker/commit/33e09fcf0f977444cee65073c3f7e05e423b18b5,"    public String sentence(int wordCount) {
        return sentence(wordCount, 6);
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ')', ' ', '{', '\n', '        ', 'return', ' ', 'sentence', '(', 'wordCount', ',', ' ', '6', ')', ';', '\n', '    ', '}', '\n']"
master,33e09fcf0f977444cee65073c3f7e05e423b18b5,Lorem.java,sentence,"    public String sentence(int wordCount, int randomWordsToAdd) {
        int numberOfWordsToAdd = randomWordsToAdd == 0 ? 0 : faker.random().nextInt(randomWordsToAdd);
        return capitalize(join(words(wordCount + numberOfWordsToAdd), "" "") + ""."");
    }",https://www.github.com/dius/java-faker/commit/33e09fcf0f977444cee65073c3f7e05e423b18b5,"    public String sentence(int wordCount, int randomWordsToAdd) {
        int numberOfWordsToAdd = randomWordsToAdd == 0 ? 0 : faker.random().nextInt(randomWordsToAdd);
        return capitalize(join(words(wordCount + numberOfWordsToAdd), "" "") + ""."");
    }
","['    ', 'public', ' ', 'String', ' ', 'sentence', '(', 'int', ' ', 'wordCount', ',', ' ', 'int', ' ', 'randomWordsToAdd', ')', ' ', '{', '\n', '        ', 'int', ' ', 'numberOfWordsToAdd', ' ', '=', ' ', 'randomWordsToAdd', ' ', '=', '=', ' ', '0', ' ', '?', ' ', '0', ' ', ':', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'randomWordsToAdd', ')', ';', '\n', '        ', 'return', ' ', 'capitalize', '(', 'join', '(', 'words', '(', 'wordCount', ' ', '+', ' ', 'numberOfWordsToAdd', ')', ',', ' ', '""', ' ', '""', ')', ' ', '+', ' ', '""', '.', '""', ')', ';', '\n', '    ', '}', '\n']"
master,33e09fcf0f977444cee65073c3f7e05e423b18b5,LoremTest.java,testSentence,"    public void testSentence() {
        assertThat(faker.lorem().sentence(), matchesRegularExpression(""(\\w+\\s?){4,10}\\.""));
    }",https://www.github.com/dius/java-faker/commit/33e09fcf0f977444cee65073c3f7e05e423b18b5,"    public void testSentence() {
        assertThat(faker.lorem().sentence(), matchesRegularExpression(""(\\w+\\s?){4,10}\\.""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentence', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', 's?){4,10}', '\\\\', '.', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,33e09fcf0f977444cee65073c3f7e05e423b18b5,LoremTest.java,testSentenceWithWordCount,"    public void testSentenceWithWordCount() {
        assertThat(faker.lorem().sentence(10), matchesRegularExpression(""(\\w+\\s?){11,17}\\.""));
    }",https://www.github.com/dius/java-faker/commit/33e09fcf0f977444cee65073c3f7e05e423b18b5,"    public void testSentenceWithWordCount() {
        assertThat(faker.lorem().sentence(10), matchesRegularExpression(""(\\w+\\s?){11,17}\\.""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentenceWithWordCount', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '10', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', 's?){11,17}', '\\\\', '.', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,33e09fcf0f977444cee65073c3f7e05e423b18b5,LoremTest.java,testSentenceWithWordCountAndRandomWordsToAdd,"    public void testSentenceWithWordCountAndRandomWordsToAdd() {
        assertThat(faker.lorem().sentence(10, 10), matchesRegularExpression(""(\\w+\\s?){10,20}\\.""));
    }",https://www.github.com/dius/java-faker/commit/33e09fcf0f977444cee65073c3f7e05e423b18b5,"    public void testSentenceWithWordCountAndRandomWordsToAdd() {
        assertThat(faker.lorem().sentence(10, 10), matchesRegularExpression(""(\\w+\\s?){10,20}\\.""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentenceWithWordCountAndRandomWordsToAdd', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '10', ',', ' ', '10', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', 's?){10,20}', '\\\\', '.', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,33e09fcf0f977444cee65073c3f7e05e423b18b5,LoremTest.java,testSentenceFixedNumberOfWords,"    public void testSentenceFixedNumberOfWords() {
        assertThat(faker.lorem().sentence(10, 0), matchesRegularExpression(""(\\w+\\s?){10}\\.""));
    }",https://www.github.com/dius/java-faker/commit/33e09fcf0f977444cee65073c3f7e05e423b18b5,"    public void testSentenceFixedNumberOfWords() {
        assertThat(faker.lorem().sentence(10, 0), matchesRegularExpression(""(\\w+\\s?){10}\\.""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSentenceFixedNumberOfWords', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '10', ',', ' ', '0', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+', '\\\\', 's?){10}', '\\\\', '.', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,779c9aae0619dab5c6c29ca53b44368cea2b3ac3,AncientTest.java,hero,"    public void hero() {
        assertThat(faker.ancient().hero(), matchesRegularExpression(""(?U)\\w+""));
    }",https://www.github.com/dius/java-faker/commit/779c9aae0619dab5c6c29ca53b44368cea2b3ac3,"    public void hero() {
        assertThat(faker.ancient().hero(), matchesRegularExpression(""(?U)\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'hero', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'ancient', '(', ')', '.', 'hero', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0acfd1e823c409d72603ca6e21e69d69343e18f5,FakeValuesService.java,isSlashDelimitedRegex,"    private boolean isSlashDelimitedRegex(String expression) {
        return expression != null && expression.startsWith(""/"") && expression.endsWith(""/"");
    }",https://www.github.com/dius/java-faker/commit/0acfd1e823c409d72603ca6e21e69d69343e18f5,"    private boolean isSlashDelimitedRegex(String expression) {
        return expression != null && expression.startsWith(""/"") && expression.endsWith(""/"");
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isSlashDelimitedRegex', '(', 'String', ' ', 'expression', ')', ' ', '{', '\n', '        ', 'return', ' ', 'expression', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'expression', '.', 'startsWith', '(', '""', '/', '""', ')', ' ', '&', '&', ' ', 'expression', '.', 'endsWith', '(', '""', '/', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0acfd1e823c409d72603ca6e21e69d69343e18f5,FakeValuesService.java,trimRegexSlashes,"    private String trimRegexSlashes(String slashDelimitedRegex) {
        return slashDelimitedRegex.substring(1, slashDelimitedRegex.length() - 1);
    }",https://www.github.com/dius/java-faker/commit/0acfd1e823c409d72603ca6e21e69d69343e18f5,"    private String trimRegexSlashes(String slashDelimitedRegex) {
        return slashDelimitedRegex.substring(1, slashDelimitedRegex.length() - 1);
    }
","['    ', 'private', ' ', 'String', ' ', 'trimRegexSlashes', '(', 'String', ' ', 'slashDelimitedRegex', ')', ' ', '{', '\n', '        ', 'return', ' ', 'slashDelimitedRegex', '.', 'substring', '(', '1', ',', ' ', 'slashDelimitedRegex', '.', 'length', '(', ')', ' ', '-', ' ', '1', ')', ';', '\n', '    ', '}', '\n']"
master,0acfd1e823c409d72603ca6e21e69d69343e18f5,Issue194SlashFormatRegexIT.java,enGBZipCodeReturnsProperRegexifiedValue,"    public void enGBZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""en-GB"");

        final String postalCode = new Faker(uk).address().zipCode();
        
        assertThat(postalCode, matchesRegularExpression(""[A-PR-UWYZ][A-HK-Y]?[0-9][ABEHMNPRVWXY0-9]? [0-9][ABD-HJLNP-UW-Z]{2}""));
    }",https://www.github.com/dius/java-faker/commit/0acfd1e823c409d72603ca6e21e69d69343e18f5,"    public void enGBZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""en-GB"");

        final String postalCode = new Faker(uk).address().zipCode();
        
        assertThat(postalCode, matchesRegularExpression(""[A-PR-UWYZ][A-HK-Y]?[0-9][ABEHMNPRVWXY0-9]? [0-9][ABD-HJLNP-UW-Z]{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'enGBZipCodeReturnsProperRegexifiedValue', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Locale', ' ', 'uk', ' ', '=', ' ', 'new', ' ', 'Locale', '(', '""', 'en-GB', '""', ')', ';', '\n', '\n', '        ', 'final', ' ', 'String', ' ', 'postalCode', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'uk', ')', '.', 'address', '(', ')', '.', 'zipCode', '(', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', 'postalCode', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-PR-UWYZ][A-HK-Y]?[0-9][ABEHMNPRVWXY0-9]? [0-9][ABD-HJLNP-UW-Z]{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0acfd1e823c409d72603ca6e21e69d69343e18f5,Issue194SlashFormatRegexIT.java,enCAZipCodeReturnsProperRegexifiedValue,"    public void enCAZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""en-CA"");

        final String postalCode = new Faker(uk).address().zipCode();

        assertThat(postalCode, matchesRegularExpression(""[A-CEJ-NPR-TVXY][0-9][A-CEJ-NPR-TV-Z] ?[0-9][A-CEJ-NPR-TV-Z][0-9]""));
    }",https://www.github.com/dius/java-faker/commit/0acfd1e823c409d72603ca6e21e69d69343e18f5,"    public void enCAZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""en-CA"");

        final String postalCode = new Faker(uk).address().zipCode();

        assertThat(postalCode, matchesRegularExpression(""[A-CEJ-NPR-TVXY][0-9][A-CEJ-NPR-TV-Z] ?[0-9][A-CEJ-NPR-TV-Z][0-9]""));
    }
","['    ', 'public', ' ', 'void', ' ', 'enCAZipCodeReturnsProperRegexifiedValue', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Locale', ' ', 'uk', ' ', '=', ' ', 'new', ' ', 'Locale', '(', '""', 'en-CA', '""', ')', ';', '\n', '\n', '        ', 'final', ' ', 'String', ' ', 'postalCode', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'uk', ')', '.', 'address', '(', ')', '.', 'zipCode', '(', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'postalCode', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-CEJ-NPR-TVXY][0-9][A-CEJ-NPR-TV-Z] ?[0-9][A-CEJ-NPR-TV-Z][0-9]', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0acfd1e823c409d72603ca6e21e69d69343e18f5,Issue194SlashFormatRegexIT.java,viZipCodeReturnsProperRegexifiedValue,"    public void viZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""vi"");

        final String postalCode = new Faker(uk).address().zipCode();

        assertThat(postalCode, matchesRegularExpression(""[A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? {1,2}[0-9][ABD-HJLN-UW-Z]{2}""));
    }",https://www.github.com/dius/java-faker/commit/0acfd1e823c409d72603ca6e21e69d69343e18f5,"    public void viZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""vi"");

        final String postalCode = new Faker(uk).address().zipCode();

        assertThat(postalCode, matchesRegularExpression(""[A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? {1,2}[0-9][ABD-HJLN-UW-Z]{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'viZipCodeReturnsProperRegexifiedValue', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Locale', ' ', 'uk', ' ', '=', ' ', 'new', ' ', 'Locale', '(', '""', 'vi', '""', ')', ';', '\n', '\n', '        ', 'final', ' ', 'String', ' ', 'postalCode', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'uk', ')', '.', 'address', '(', ')', '.', 'zipCode', '(', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'postalCode', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? {1,2}[0-9][ABD-HJLN-UW-Z]{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0acfd1e823c409d72603ca6e21e69d69343e18f5,FakeValuesServiceTest.java,regexifySlashFormatDirective,"    public void regexifySlashFormatDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_slash_format"", dummy, faker);
        assertThat(value, either(is(""55"")).or(is(""44"")).or(is(""45"")).or(is(""54"")));
        verify(faker).regexify(""[45]{2}"");
    }",https://www.github.com/dius/java-faker/commit/0acfd1e823c409d72603ca6e21e69d69343e18f5,"    public void regexifySlashFormatDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_slash_format"", dummy, faker);
        assertThat(value, either(is(""55"")).or(is(""44"")).or(is(""45"")).or(is(""54"")));
        verify(faker).regexify(""[45]{2}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifySlashFormatDirective', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.regexify_slash_format', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'either', '(', 'is', '(', '""', '55', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '44', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '45', '""', ')', ')', '.', 'or', '(', 'is', '(', '""', '54', '""', ')', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'regexify', '(', '""', '[45]{2}', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e6333c20b65fd65c35aa2e6b641b82af4e4059c5,FakerIT.java,testAllMethodsThatReturnStringsActuallyReturnStrings,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws Exception {
        @SuppressWarnings(""unchecked"")
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            if (isExcepted(object, method)) {",https://www.github.com/dius/java-faker/commit/e6333c20b65fd65c35aa2e6b641b82af4e4059c5,"    private void testAllMethodsThatReturnStringsActuallyReturnStrings(Object object) throws Exception {
        @SuppressWarnings(""unchecked"")
        Set<Method> methodsThatReturnStrings = getAllMethods(object.getClass(),
                withModifier(Modifier.PUBLIC),
                withReturnType(String.class),
                withParametersCount(0));

        for (Method method : methodsThatReturnStrings) {
            if (isExcepted(object, method)) {
","['    ', 'private', ' ', 'void', ' ', 'testAllMethodsThatReturnStringsActuallyReturnStrings', '(', 'Object', ' ', 'object', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'Set', '<', 'Method', '>', ' ', 'methodsThatReturnStrings', ' ', '=', ' ', 'getAllMethods', '(', 'object', '.', 'getClass', '(', ')', ',', '\n', '                ', 'withModifier', '(', 'Modifier', '.', 'PUBLIC', ')', ',', '\n', '                ', 'withReturnType', '(', 'String', '.', 'class', ')', ',', '\n', '                ', 'withParametersCount', '(', '0', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Method', ' ', 'method', ' ', ':', ' ', 'methodsThatReturnStrings', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'isExcepted', '(', 'object', ',', ' ', 'method', ')', ')', ' ', '{', '\n']"
master,e6333c20b65fd65c35aa2e6b641b82af4e4059c5,FakerIT.java,testExceptionsNotCoveredInAboveTest,"    public void testExceptionsNotCoveredInAboveTest() {
        assertThat(faker.bothify(""####???""), is(notNullValue()));
        assertThat(faker.letterify(""????""), is(notNullValue()));
        assertThat(faker.numerify(""####""), is(notNullValue()));

        assertThat(faker.lorem().paragraph(1), is(notNullValue()));
        assertThat(faker.lorem().paragraphs(1), is(notNullValue()));

        assertThat(faker.lorem().sentence(1), is(notNullValue()));
        assertThat(faker.lorem().sentences(1), is(notNullValue()));

        assertThat(faker.address().streetAddress(), is(notNullValue()));

        assertThat(faker.lorem().words(), is(notNullValue()));
        assertThat(faker.lorem().words(1), is(notNullValue()));
    }",https://www.github.com/dius/java-faker/commit/e6333c20b65fd65c35aa2e6b641b82af4e4059c5,"    public void testExceptionsNotCoveredInAboveTest() {
        assertThat(faker.bothify(""####???""), is(notNullValue()));
        assertThat(faker.letterify(""????""), is(notNullValue()));
        assertThat(faker.numerify(""####""), is(notNullValue()));

        assertThat(faker.lorem().paragraph(1), is(notNullValue()));
        assertThat(faker.lorem().paragraphs(1), is(notNullValue()));

        assertThat(faker.lorem().sentence(1), is(notNullValue()));
        assertThat(faker.lorem().sentences(1), is(notNullValue()));

        assertThat(faker.address().streetAddress(), is(notNullValue()));

        assertThat(faker.lorem().words(), is(notNullValue()));
        assertThat(faker.lorem().words(1), is(notNullValue()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testExceptionsNotCoveredInAboveTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'bothify', '(', '""', '####???', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'letterify', '(', '""', '????', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'numerify', '(', '""', '####', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'paragraph', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'paragraphs', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentence', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'sentences', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'streetAddress', '(', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', '1', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,FakeValuesServiceTest.java,regexifyDirective,"    public void regexifyDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify1"", dummy, faker);
        assertThat(value, isOneOf(""55"", ""44"", ""45"", ""54""));
        verify(faker).regexify(""[45]{2}"");
    }",https://www.github.com/dius/java-faker/commit/9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,"    public void regexifyDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify1"", dummy, faker);
        assertThat(value, isOneOf(""55"", ""44"", ""45"", ""54""));
        verify(faker).regexify(""[45]{2}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyDirective', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.regexify1', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'isOneOf', '(', '""', '55', '""', ',', ' ', '""', '44', '""', ',', ' ', '""', '45', '""', ',', ' ', '""', '54', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'regexify', '(', '""', '[45]{2}', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,FakeValuesServiceTest.java,regexifySlashFormatDirective,"    public void regexifySlashFormatDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_slash_format"", dummy, faker);
        assertThat(value, isOneOf(""55"", ""44"", ""45"", ""54""));
        verify(faker).regexify(""[45]{2}"");
    }",https://www.github.com/dius/java-faker/commit/9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,"    public void regexifySlashFormatDirective() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_slash_format"", dummy, faker);
        assertThat(value, isOneOf(""55"", ""44"", ""45"", ""54""));
        verify(faker).regexify(""[45]{2}"");
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifySlashFormatDirective', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.regexify_slash_format', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'isOneOf', '(', '""', '55', '""', ',', ' ', '""', '44', '""', ',', ' ', '""', '45', '""', ',', ' ', '""', '54', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'regexify', '(', '""', '[45]{2}', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,FakeValuesServiceTest.java,regexifyDirective2,"    public void regexifyDirective2() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_cell"", dummy, faker);
        assertThat(value, isOneOf(""479"", ""459""));
        verify(faker).regexify(""4[57]9"");
    }",https://www.github.com/dius/java-faker/commit/9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,"    public void regexifyDirective2() {
        final DummyService dummy = mock(DummyService.class);

        String value = fakeValuesService.resolve(""property.regexify_cell"", dummy, faker);
        assertThat(value, isOneOf(""479"", ""459""));
        verify(faker).regexify(""4[57]9"");
    }
","['    ', 'public', ' ', 'void', ' ', 'regexifyDirective2', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.regexify_cell', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'isOneOf', '(', '""', '479', '""', ',', ' ', '""', '459', '""', ')', ')', ';', '\n', '        ', 'verify', '(', 'faker', ')', '.', 'regexify', '(', '""', '4[57]9', '""', ')', ';', '\n', '    ', '}', '\n']"
master,9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,FakeValuesServiceTest.java,testLocaleChain,"    public void testLocaleChain() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.SIMPLIFIED_CHINESE);

        assertThat(chain, contains(Locale.SIMPLIFIED_CHINESE, Locale.CHINESE, Locale.ENGLISH));
    }",https://www.github.com/dius/java-faker/commit/9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,"    public void testLocaleChain() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.SIMPLIFIED_CHINESE);

        assertThat(chain, contains(Locale.SIMPLIFIED_CHINESE, Locale.CHINESE, Locale.ENGLISH));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLocaleChain', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'Locale', '>', ' ', 'chain', ' ', '=', ' ', 'fakeValuesService', '.', 'localeChain', '(', 'Locale', '.', 'SIMPLIFIED_CHINESE', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'chain', ',', ' ', 'contains', '(', 'Locale', '.', 'SIMPLIFIED_CHINESE', ',', ' ', 'Locale', '.', 'CHINESE', ',', ' ', 'Locale', '.', 'ENGLISH', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,FakeValuesServiceTest.java,testLocaleChainEnglish,"    public void testLocaleChainEnglish() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.ENGLISH);

        assertThat(chain, contains(Locale.ENGLISH));
    }",https://www.github.com/dius/java-faker/commit/9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,"    public void testLocaleChainEnglish() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.ENGLISH);

        assertThat(chain, contains(Locale.ENGLISH));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLocaleChainEnglish', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'Locale', '>', ' ', 'chain', ' ', '=', ' ', 'fakeValuesService', '.', 'localeChain', '(', 'Locale', '.', 'ENGLISH', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'chain', ',', ' ', 'contains', '(', 'Locale', '.', 'ENGLISH', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,FakeValuesServiceTest.java,testLocaleChainLanguageOnly,"    public void testLocaleChainLanguageOnly() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.CHINESE);

        assertThat(chain, contains(Locale.CHINESE, Locale.ENGLISH));
    }",https://www.github.com/dius/java-faker/commit/9500fc2395bfe5ab3f5e13bc637cd4b2f23b7f23,"    public void testLocaleChainLanguageOnly() {
        final List<Locale> chain = fakeValuesService.localeChain(Locale.CHINESE);

        assertThat(chain, contains(Locale.CHINESE, Locale.ENGLISH));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLocaleChainLanguageOnly', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'List', '<', 'Locale', '>', ' ', 'chain', ' ', '=', ' ', 'fakeValuesService', '.', 'localeChain', '(', 'Locale', '.', 'CHINESE', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'chain', ',', ' ', 'contains', '(', 'Locale', '.', 'CHINESE', ',', ' ', 'Locale', '.', 'ENGLISH', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Demographic.java,race,"    public String race() {
        return faker.fakeValuesService().fetchString(""demographic.race"");
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public String race() {
        return faker.fakeValuesService().fetchString(""demographic.race"");
    }
","['    ', 'public', ' ', 'String', ' ', 'race', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'demographic.race', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Demographic.java,educationalAttainment,"    public String educationalAttainment() {
        return faker.fakeValuesService().fetchString(""demographic.educational_attainment"");
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public String educationalAttainment() {
        return faker.fakeValuesService().fetchString(""demographic.educational_attainment"");
    }
","['    ', 'public', ' ', 'String', ' ', 'educationalAttainment', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'demographic.educational_attainment', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Demographic.java,demonym,"    public String demonym() {
        return faker.fakeValuesService().fetchString(""demographic.demonym"");
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public String demonym() {
        return faker.fakeValuesService().fetchString(""demographic.demonym"");
    }
","['    ', 'public', ' ', 'String', ' ', 'demonym', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'demographic.demonym', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Demographic.java,sex,"    public String sex() {
        return faker.fakeValuesService().fetchString(""demographic.sex"");
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public String sex() {
        return faker.fakeValuesService().fetchString(""demographic.sex"");
    }
","['    ', 'public', ' ', 'String', ' ', 'sex', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'demographic.sex', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Demographic.java,maritalStatus,"    public String maritalStatus() {
        return faker.fakeValuesService().fetchString(""demographic.marital_status"");
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public String maritalStatus() {
        return faker.fakeValuesService().fetchString(""demographic.marital_status"");
    }
","['    ', 'public', ' ', 'String', ' ', 'maritalStatus', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'demographic.marital_status', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Faker.java,demographic,"    public Demographic demographic() {
        return demographic;
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public Demographic demographic() {
        return demographic;
    }
","['    ', 'public', ' ', 'Demographic', ' ', 'demographic', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'demographic', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,DemographicTest.java,race,"    public void race() {
        assertThat(faker.demographic().race(), matchesRegularExpression(""(\\w+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public void race() {
        assertThat(faker.demographic().race(), matchesRegularExpression(""(\\w+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'race', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'demographic', '(', ')', '.', 'race', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,DemographicTest.java,educationalAttainment,"    public void educationalAttainment() {
        assertThat(faker.demographic().educationalAttainment(), matchesRegularExpression(""(?U)([\\w'-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public void educationalAttainment() {
        assertThat(faker.demographic().educationalAttainment(), matchesRegularExpression(""(?U)([\\w'-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'educationalAttainment', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'demographic', '(', ')', '.', 'educationalAttainment', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', ""w'-]+ ?)+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,DemographicTest.java,demonym,"    public void demonym() {
        assertThat(faker.demographic().demonym(), matchesRegularExpression(""(?U)([\\w'-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public void demonym() {
        assertThat(faker.demographic().demonym(), matchesRegularExpression(""(?U)([\\w'-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'demonym', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'demographic', '(', ')', '.', 'demonym', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', ""w'-]+ ?)+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,DemographicTest.java,maritalStatus,"    public void maritalStatus() {
        assertThat(faker.demographic().maritalStatus(), matchesRegularExpression(""(\\w+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public void maritalStatus() {
        assertThat(faker.demographic().maritalStatus(), matchesRegularExpression(""(\\w+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'maritalStatus', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'demographic', '(', ')', '.', 'maritalStatus', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,DemographicTest.java,sex,"    public void sex() {
        assertThat(faker.demographic().sex(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public void sex() {
        assertThat(faker.demographic().sex(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'sex', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'demographic', '(', ')', '.', 'sex', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f6a233913164338b4320e82315322bcdc66c3ac2,Issue194SlashFormatRegexIT.java,enGBZipCodeReturnsProperRegexifiedValue,"    public void enGBZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""en-GB"");

        final String postalCode = new Faker(uk).address().zipCode();
        
        assertThat(postalCode, matchesRegularExpression(""[A-PR-UWYZ]([A-HK-Y][0-9][ABEHMNPRVWXY0-9]?|[0-9][ABCDEFGHJKPSTUW0-9]?) [0-9][ABD-HJLNP-UW-Z]{2}""));
    }",https://www.github.com/dius/java-faker/commit/f6a233913164338b4320e82315322bcdc66c3ac2,"    public void enGBZipCodeReturnsProperRegexifiedValue() {
        final Locale uk = new Locale(""en-GB"");

        final String postalCode = new Faker(uk).address().zipCode();
        
        assertThat(postalCode, matchesRegularExpression(""[A-PR-UWYZ]([A-HK-Y][0-9][ABEHMNPRVWXY0-9]?|[0-9][ABCDEFGHJKPSTUW0-9]?) [0-9][ABD-HJLNP-UW-Z]{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'enGBZipCodeReturnsProperRegexifiedValue', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Locale', ' ', 'uk', ' ', '=', ' ', 'new', ' ', 'Locale', '(', '""', 'en-GB', '""', ')', ';', '\n', '\n', '        ', 'final', ' ', 'String', ' ', 'postalCode', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'uk', ')', '.', 'address', '(', ')', '.', 'zipCode', '(', ')', ';', '\n', '        ', '\n', '        ', 'assertThat', '(', 'postalCode', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-PR-UWYZ]([A-HK-Y][0-9][ABEHMNPRVWXY0-9]?|[0-9][ABCDEFGHJKPSTUW0-9]?) [0-9][ABD-HJLNP-UW-Z]{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2f0e6d0e75e957b2ba2297796a80b12c0a034a59,InternetTest.java,testSafeEmailAddress,"    public void testSafeEmailAddress() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress();
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");

        assertThat(""Should find at least one email from "" + safeDomain, emails,
                Matchers.hasItem(Matchers.endsWith(""@"" + safeDomain)));",https://www.github.com/dius/java-faker/commit/2f0e6d0e75e957b2ba2297796a80b12c0a034a59,"    public void testSafeEmailAddress() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress();
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");

        assertThat(""Should find at least one email from "" + safeDomain, emails,
                Matchers.hasItem(Matchers.endsWith(""@"" + safeDomain)));
","['    ', 'public', ' ', 'void', ' ', 'testSafeEmailAddress', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'emails', ' ', '=', ' ', 'Lists', '.', 'newArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'safeEmailAddress', '(', ')', ';', '\n', '            ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '            ', 'emails', '.', 'add', '(', 'emailAddress', ')', ';', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'String', ' ', 'safeDomain', ' ', '=', ' ', 'faker', '.', 'resolve', '(', '""', 'internet.safe_email', '""', ')', ';', '\n', '\n', '        ', 'assertThat', '(', '""', 'Should find at least one email from ', '""', ' ', '+', ' ', 'safeDomain', ',', ' ', 'emails', ',', '\n', '                ', 'Matchers', '.', 'hasItem', '(', 'Matchers', '.', 'endsWith', '(', '""', '@', '""', ' ', '+', ' ', 'safeDomain', ')', ')', ')', ';', '\n']"
master,2f0e6d0e75e957b2ba2297796a80b12c0a034a59,InternetTest.java,testSafeEmailAddressWithLocalPartParameter,"    public void testSafeEmailAddressWithLocalPartParameter() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress(""john"");
            assertThat(emailAddress, startsWith(""john@""));
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");

        assertThat(""Should find at least one email from "" + safeDomain, emails,
                Matchers.hasItem(Matchers.endsWith(""@"" + safeDomain)));",https://www.github.com/dius/java-faker/commit/2f0e6d0e75e957b2ba2297796a80b12c0a034a59,"    public void testSafeEmailAddressWithLocalPartParameter() {
        List<String> emails = Lists.newArrayList();
        for (int i=0;i<100;i++) {
            String emailAddress = faker.internet().safeEmailAddress(""john"");
            assertThat(emailAddress, startsWith(""john@""));
            assertThat(EmailValidator.getInstance().isValid(emailAddress), is(true));
            emails.add(emailAddress);
        }
        final String safeDomain = faker.resolve(""internet.safe_email"");

        assertThat(""Should find at least one email from "" + safeDomain, emails,
                Matchers.hasItem(Matchers.endsWith(""@"" + safeDomain)));
","['    ', 'public', ' ', 'void', ' ', 'testSafeEmailAddressWithLocalPartParameter', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'String', '>', ' ', 'emails', ' ', '=', ' ', 'Lists', '.', 'newArrayList', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'emailAddress', ' ', '=', ' ', 'faker', '.', 'internet', '(', ')', '.', 'safeEmailAddress', '(', '""', 'john', '""', ')', ';', '\n', '            ', 'assertThat', '(', 'emailAddress', ',', ' ', 'startsWith', '(', '""', 'john@', '""', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'EmailValidator', '.', 'getInstance', '(', ')', '.', 'isValid', '(', 'emailAddress', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '            ', 'emails', '.', 'add', '(', 'emailAddress', ')', ';', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'String', ' ', 'safeDomain', ' ', '=', ' ', 'faker', '.', 'resolve', '(', '""', 'internet.safe_email', '""', ')', ';', '\n', '\n', '        ', 'assertThat', '(', '""', 'Should find at least one email from ', '""', ' ', '+', ' ', 'safeDomain', ',', ' ', 'emails', ',', '\n', '                ', 'Matchers', '.', 'hasItem', '(', 'Matchers', '.', 'endsWith', '(', '""', '@', '""', ' ', '+', ' ', 'safeDomain', ')', ')', ')', ';', '\n']"
master,2f0e6d0e75e957b2ba2297796a80b12c0a034a59,NumberTest.java,apply,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(),
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Double>() {
                    @Override",https://www.github.com/dius/java-faker/commit/2f0e6d0e75e957b2ba2297796a80b12c0a034a59,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(),
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Double>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'int', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', '.', 'intValue', '(', ')', ',', '\n', '                        ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Double', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,2f0e6d0e75e957b2ba2297796a80b12c0a034a59,NumberTest.java,apply,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(), 
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Integer>() {
                    @Override",https://www.github.com/dius/java-faker/commit/2f0e6d0e75e957b2ba2297796a80b12c0a034a59,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(), 
                        max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Integer>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'int', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', '.', 'intValue', '(', ')', ',', ' ', '\n', '                        ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Integer', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,2f0e6d0e75e957b2ba2297796a80b12c0a034a59,NumberTest.java,apply,"            public Double apply(Pair<Long, Long> minMax) {
                final long min = minMax.getLeft(), max = minMax.getRight();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Long>() {
                    @Override",https://www.github.com/dius/java-faker/commit/2f0e6d0e75e957b2ba2297796a80b12c0a034a59,"            public Double apply(Pair<Long, Long> minMax) {
                final long min = minMax.getLeft(), max = minMax.getRight();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Long>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'long', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', ',', ' ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Long', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,Space.java,meteorite,"    public String meteorite() {
        return faker.resolve(""space.meteorite"");
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public String meteorite() {
        return faker.resolve(""space.meteorite"");
    }
","['    ', 'public', ' ', 'String', ' ', 'meteorite', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'space.meteorite', '""', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,planet,"    public void planet() {
        assertThat(faker.space().planet(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void planet() {
        assertThat(faker.space().planet(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'planet', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,moon,"    public void moon() {
        assertThat(faker.space().moon(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void moon() {
        assertThat(faker.space().moon(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'moon', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'moon', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,galaxy,"    public void galaxy() {
        assertThat(faker.space().galaxy(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void galaxy() {
        assertThat(faker.space().galaxy(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'galaxy', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'galaxy', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,nebula,"    public void nebula() {
        assertThat(faker.space().nebula(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void nebula() {
        assertThat(faker.space().nebula(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'nebula', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'nebula', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,starCluster,"    public void starCluster() {
        assertThat(faker.space().starCluster(), matchesRegularExpression(""(\\w+[ -]?){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void starCluster() {
        assertThat(faker.space().starCluster(), matchesRegularExpression(""(\\w+[ -]?){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'starCluster', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'starCluster', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ -]?){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,constellation,"    public void constellation() {
        assertThat(faker.space().constellation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void constellation() {
        assertThat(faker.space().constellation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'constellation', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'constellation', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,star,"    public void star() {
        assertThat(faker.space().star(), matchesRegularExpression(""(\\w+[ -]?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void star() {
        assertThat(faker.space().star(), matchesRegularExpression(""(\\w+[ -]?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'star', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'star', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+[ -]?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,agency,"    public void agency() {
        assertThat(faker.space().agency(), matchesRegularExpression(""(\\w+ ?){2,5}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void agency() {
        assertThat(faker.space().agency(), matchesRegularExpression(""(\\w+ ?){2,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'agency', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'agency', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,agencyAbbreviation,"    public void agencyAbbreviation() {
        assertThat(faker.space().agencyAbbreviation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void agencyAbbreviation() {
        assertThat(faker.space().agencyAbbreviation(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'agencyAbbreviation', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'agencyAbbreviation', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,nasaSpaceCraft,"    public void nasaSpaceCraft() {
        assertThat(faker.space().nasaSpaceCraft(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void nasaSpaceCraft() {
        assertThat(faker.space().nasaSpaceCraft(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'nasaSpaceCraft', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'nasaSpaceCraft', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,company,"    public void company() {
        assertThat(faker.space().company(), matchesRegularExpression(""(\\w+ ?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void company() {
        assertThat(faker.space().company(), matchesRegularExpression(""(\\w+ ?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'company', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'company', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,061d3a5ba0d0216e0e2824e19d23566efceac527,SpaceTest.java,distanceMeasurement,"    public void distanceMeasurement() {
        assertThat(faker.space().distanceMeasurement(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/061d3a5ba0d0216e0e2824e19d23566efceac527,"    public void distanceMeasurement() {
        assertThat(faker.space().distanceMeasurement(), matchesRegularExpression(""(\\w+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'distanceMeasurement', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'distanceMeasurement', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8caa5a5841f37dbd045e37ed4e61358066bba680,Music.java,chord,"    public String chord() {
        return key() + faker.options().option(CHORD_TYPES);
    }",https://www.github.com/dius/java-faker/commit/8caa5a5841f37dbd045e37ed4e61358066bba680,"    public String chord() {
        return key() + faker.options().option(CHORD_TYPES);
    }
","['    ', 'public', ' ', 'String', ' ', 'chord', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'key', '(', ')', ' ', '+', ' ', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'CHORD_TYPES', ')', ';', '\n', '    ', '}', '\n']"
master,8caa5a5841f37dbd045e37ed4e61358066bba680,MusicTest.java,chord,"    public void chord() {
        assertThat(faker.music().chord(), matchesRegularExpression(""([A-Z])+(b|#){0,1}+(-?[a-zA-Z0-9]{0,4})""));
    }",https://www.github.com/dius/java-faker/commit/8caa5a5841f37dbd045e37ed4e61358066bba680,"    public void chord() {
        assertThat(faker.music().chord(), matchesRegularExpression(""([A-Z])+(b|#){0,1}+(-?[a-zA-Z0-9]{0,4})""));
    }
","['    ', 'public', ' ', 'void', ' ', 'chord', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'music', '(', ')', '.', 'chord', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Z])+(b|#){0,1}+(-?[a-zA-Z0-9]{0,4})', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,69fad8f8dae3e228c27aad601b21984c97a7a49e,Artist.java,name,"    public String name() {
        return faker.fakeValuesService().fetchString(""artist.names"");
    }",https://www.github.com/dius/java-faker/commit/69fad8f8dae3e228c27aad601b21984c97a7a49e,"    public String name() {
        return faker.fakeValuesService().fetchString(""artist.names"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'artist.names', '""', ')', ';', '\n', '    ', '}', '\n']"
master,69fad8f8dae3e228c27aad601b21984c97a7a49e,ArtistTest.java,name,"    public void name() {
        assertThat(faker.artist().name(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/69fad8f8dae3e228c27aad601b21984c97a7a49e,"    public void name() {
        assertThat(faker.artist().name(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'artist', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bff9eee7570cd56f00e76a8ed6671a238898c343,DateAndTime.java,birthday,"    public java.util.Date birthday() {
        return birthday(DEFAULT_MIN_AGE, DEFAULT_MAX_AGE);
    }",https://www.github.com/dius/java-faker/commit/bff9eee7570cd56f00e76a8ed6671a238898c343,"    public java.util.Date birthday() {
        return birthday(DEFAULT_MIN_AGE, DEFAULT_MAX_AGE);
    }
","['    ', 'public', ' ', 'java', '.', 'util', '.', 'Date', ' ', 'birthday', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'birthday', '(', 'DEFAULT_MIN_AGE', ',', ' ', 'DEFAULT_MAX_AGE', ')', ';', '\n', '    ', '}', '\n']"
master,bff9eee7570cd56f00e76a8ed6671a238898c343,DateAndTime.java,birthday,"    public java.util.Date birthday(int minAge, int maxAge) {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        Calendar from = new GregorianCalendar(currentYear - maxAge, 0, 1);
        Calendar to = new GregorianCalendar(currentYear - minAge, 12, 31);

        return between(from.getTime(), to.getTime());
    }",https://www.github.com/dius/java-faker/commit/bff9eee7570cd56f00e76a8ed6671a238898c343,"    public java.util.Date birthday(int minAge, int maxAge) {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        Calendar from = new GregorianCalendar(currentYear - maxAge, 0, 1);
        Calendar to = new GregorianCalendar(currentYear - minAge, 12, 31);

        return between(from.getTime(), to.getTime());
    }
","['    ', 'public', ' ', 'java', '.', 'util', '.', 'Date', ' ', 'birthday', '(', 'int', ' ', 'minAge', ',', ' ', 'int', ' ', 'maxAge', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'Calendar', ' ', 'from', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', 'maxAge', ',', ' ', '0', ',', ' ', '1', ')', ';', '\n', '        ', 'Calendar', ' ', 'to', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', 'minAge', ',', ' ', '12', ',', ' ', '31', ')', ';', '\n', '\n', '        ', 'return', ' ', 'between', '(', 'from', '.', 'getTime', '(', ')', ',', ' ', 'to', '.', 'getTime', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bff9eee7570cd56f00e76a8ed6671a238898c343,DateAndTimeTest.java,testBirthday,"    public void testBirthday() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        long from = new GregorianCalendar(currentYear - 65, 0, 1).getTime().getTime();
        long to = new GregorianCalendar(currentYear - 18, 12, 31).getTime().getTime();

        for (int i = 0; i < 1000; i++) {
            Date birthday = faker.date().birthday();",https://www.github.com/dius/java-faker/commit/bff9eee7570cd56f00e76a8ed6671a238898c343,"    public void testBirthday() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        long from = new GregorianCalendar(currentYear - 65, 0, 1).getTime().getTime();
        long to = new GregorianCalendar(currentYear - 18, 12, 31).getTime().getTime();

        for (int i = 0; i < 1000; i++) {
            Date birthday = faker.date().birthday();
","['    ', 'public', ' ', 'void', ' ', 'testBirthday', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'long', ' ', 'from', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', '65', ',', ' ', '0', ',', ' ', '1', ')', '.', 'getTime', '(', ')', '.', 'getTime', '(', ')', ';', '\n', '        ', 'long', ' ', 'to', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', '18', ',', ' ', '12', ',', ' ', '31', ')', '.', 'getTime', '(', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'birthday', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'birthday', '(', ')', ';', '\n']"
master,bff9eee7570cd56f00e76a8ed6671a238898c343,DateAndTimeTest.java,testBirthdayWithAges,"    public void testBirthdayWithAges() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);

        for (int i = 0; i < 1000; i++) {
            int minAge = faker.number().numberBetween(1, 99);",https://www.github.com/dius/java-faker/commit/bff9eee7570cd56f00e76a8ed6671a238898c343,"    public void testBirthdayWithAges() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);

        for (int i = 0; i < 1000; i++) {
            int minAge = faker.number().numberBetween(1, 99);
","['    ', 'public', ' ', 'void', ' ', 'testBirthdayWithAges', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'minAge', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '1', ',', ' ', '99', ')', ';', '\n']"
master,fab9e4b32ff7c57a678ceff0269d906f54b96ce8,RandomService.java,nextElement,"    public <E> E nextElement(E[] array)
    {
        return array[this.nextInt(array.length)];
    }",https://www.github.com/dius/java-faker/commit/fab9e4b32ff7c57a678ceff0269d906f54b96ce8,"    public <E> E nextElement(E[] array)
    {
        return array[this.nextInt(array.length)];
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'nextElement', '(', 'E', '[', ']', ' ', 'array', ')', '\n', '    ', '{', '\n', '        ', 'return', ' ', 'array', '[', 'this', '.', 'nextInt', '(', 'array', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,fab9e4b32ff7c57a678ceff0269d906f54b96ce8,RandomService.java,nextElement,"    public <E> E nextElement(List<E> list)
    {
        return list.get(this.nextInt(list.size()));
    }",https://www.github.com/dius/java-faker/commit/fab9e4b32ff7c57a678ceff0269d906f54b96ce8,"    public <E> E nextElement(List<E> list)
    {
        return list.get(this.nextInt(list.size()));
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'nextElement', '(', 'List', '<', 'E', '>', ' ', 'list', ')', '\n', '    ', '{', '\n', '        ', 'return', ' ', 'list', '.', 'get', '(', 'this', '.', 'nextInt', '(', 'list', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fab9e4b32ff7c57a678ceff0269d906f54b96ce8,RandomService.java,nextEnumValue,"    public <E extends Enum<E>> E nextEnumValue(Class<E> enumeration)
    {
        return nextElement(enumeration.getEnumConstants());
    }",https://www.github.com/dius/java-faker/commit/fab9e4b32ff7c57a678ceff0269d906f54b96ce8,"    public <E extends Enum<E>> E nextEnumValue(Class<E> enumeration)
    {
        return nextElement(enumeration.getEnumConstants());
    }
","['    ', 'public', ' ', '<', 'E', ' ', 'extends', ' ', 'Enum', '<', 'E', '>', '>', ' ', 'E', ' ', 'nextEnumValue', '(', 'Class', '<', 'E', '>', ' ', 'enumeration', ')', '\n', '    ', '{', '\n', '        ', 'return', ' ', 'nextElement', '(', 'enumeration', '.', 'getEnumConstants', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1f8c8b2457be6bf0878355e6df107fdbe2634142,RandomServiceTest.java,testNextArrayElement,"    public void testNextArrayElement() {
        Integer[] array = new Integer[] { 1, 2, 3, 5, 8, 13, 21 };

        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextElement(array), isIn(array));",https://www.github.com/dius/java-faker/commit/1f8c8b2457be6bf0878355e6df107fdbe2634142,"    public void testNextArrayElement() {
        Integer[] array = new Integer[] { 1, 2, 3, 5, 8, 13, 21 };

        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextElement(array), isIn(array));
","['    ', 'public', ' ', 'void', ' ', 'testNextArrayElement', '(', ')', ' ', '{', '\n', '        ', 'Integer', '[', ']', ' ', 'array', ' ', '=', ' ', 'new', ' ', 'Integer', '[', ']', ' ', '{', ' ', '1', ',', ' ', '2', ',', ' ', '3', ',', ' ', '5', ',', ' ', '8', ',', ' ', '13', ',', ' ', '21', ' ', '}', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'randomService', '.', 'nextElement', '(', 'array', ')', ',', ' ', 'isIn', '(', 'array', ')', ')', ';', '\n']"
master,1f8c8b2457be6bf0878355e6df107fdbe2634142,RandomServiceTest.java,testNextListElement,"    public void testNextListElement() {
        List<Integer> list = Arrays.asList(new Integer[] { 1, 2, 3, 5, 8, 13, 21 });

        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextElement(list), isIn(list));",https://www.github.com/dius/java-faker/commit/1f8c8b2457be6bf0878355e6df107fdbe2634142,"    public void testNextListElement() {
        List<Integer> list = Arrays.asList(new Integer[] { 1, 2, 3, 5, 8, 13, 21 });

        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextElement(list), isIn(list));
","['    ', 'public', ' ', 'void', ' ', 'testNextListElement', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'Integer', '>', ' ', 'list', ' ', '=', ' ', 'Arrays', '.', 'asList', '(', 'new', ' ', 'Integer', '[', ']', ' ', '{', ' ', '1', ',', ' ', '2', ',', ' ', '3', ',', ' ', '5', ',', ' ', '8', ',', ' ', '13', ',', ' ', '21', ' ', '}', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'randomService', '.', 'nextElement', '(', 'list', ')', ',', ' ', 'isIn', '(', 'list', ')', ')', ';', '\n']"
master,1f8c8b2457be6bf0878355e6df107fdbe2634142,RandomServiceTest.java,testNextEnumValue,"    public void testNextEnumValue() {
        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextEnumValue(TestEnum.class), isIn(TestEnum.values()));",https://www.github.com/dius/java-faker/commit/1f8c8b2457be6bf0878355e6df107fdbe2634142,"    public void testNextEnumValue() {
        for (int i = 1; i < 10; i++) {
            assertThat(randomService.nextEnumValue(TestEnum.class), isIn(TestEnum.values()));
","['    ', 'public', ' ', 'void', ' ', 'testNextEnumValue', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'randomService', '.', 'nextEnumValue', '(', 'TestEnum', '.', 'class', ')', ',', ' ', 'isIn', '(', 'TestEnum', '.', 'values', '(', ')', ')', ')', ';', '\n']"
master,97bc261e2911abc79b245f43100729619a50ad81,RandomService.java,nextElement,"    public <E> E nextElement(E[] array) {
        return array[this.nextInt(array.length)];
    }",https://www.github.com/dius/java-faker/commit/97bc261e2911abc79b245f43100729619a50ad81,"    public <E> E nextElement(E[] array) {
        return array[this.nextInt(array.length)];
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'nextElement', '(', 'E', '[', ']', ' ', 'array', ')', ' ', '{', '\n', '        ', 'return', ' ', 'array', '[', 'this', '.', 'nextInt', '(', 'array', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,97bc261e2911abc79b245f43100729619a50ad81,RandomService.java,nextElement,"    public <E> E nextElement(List<E> list) {
        return list.get(this.nextInt(list.size()));
    }",https://www.github.com/dius/java-faker/commit/97bc261e2911abc79b245f43100729619a50ad81,"    public <E> E nextElement(List<E> list) {
        return list.get(this.nextInt(list.size()));
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'nextElement', '(', 'List', '<', 'E', '>', ' ', 'list', ')', ' ', '{', '\n', '        ', 'return', ' ', 'list', '.', 'get', '(', 'this', '.', 'nextInt', '(', 'list', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,97bc261e2911abc79b245f43100729619a50ad81,RandomService.java,nextEnumValue,"    public <E extends Enum<E>> E nextEnumValue(Class<E> enumeration) {
        return nextElement(enumeration.getEnumConstants());
    }",https://www.github.com/dius/java-faker/commit/97bc261e2911abc79b245f43100729619a50ad81,"    public <E extends Enum<E>> E nextEnumValue(Class<E> enumeration) {
        return nextElement(enumeration.getEnumConstants());
    }
","['    ', 'public', ' ', '<', 'E', ' ', 'extends', ' ', 'Enum', '<', 'E', '>', '>', ' ', 'E', ' ', 'nextEnumValue', '(', 'Class', '<', 'E', '>', ' ', 'enumeration', ')', ' ', '{', '\n', '        ', 'return', ' ', 'nextElement', '(', 'enumeration', '.', 'getEnumConstants', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,694ea43e2befe9c7ebc44ffec376dc70dba1f409,Number.java,numberBetween,"    public int numberBetween(int min, int max) {
        return decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).intValue();
    }",https://www.github.com/dius/java-faker/commit/694ea43e2befe9c7ebc44ffec376dc70dba1f409,"    public int numberBetween(int min, int max) {
        return decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).intValue();
    }
","['    ', 'public', ' ', 'int', ' ', 'numberBetween', '(', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', 'min', ',', 'max', ')', '.', 'setScale', '(', '0', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_DOWN', ')', '.', 'intValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,694ea43e2befe9c7ebc44ffec376dc70dba1f409,NumberTest.java,testNumberBetweenOneAndThree,"    public void testNumberBetweenOneAndThree() {
        Set<Integer> nums = Sets.newHashSet();
        final int lowerLimit = 0;
        final int upperLimit = 3;
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().numberBetween(lowerLimit, upperLimit);
            assertThat(value, is(lessThan(upperLimit)));
            assertThat(value, is(greaterThanOrEqualTo(lowerLimit)));
            nums.add(value);
        }
        assertThat(""Verify all numbers 0-3 were represented"", nums,hasSize(3));
    }",https://www.github.com/dius/java-faker/commit/694ea43e2befe9c7ebc44ffec376dc70dba1f409,"    public void testNumberBetweenOneAndThree() {
        Set<Integer> nums = Sets.newHashSet();
        final int lowerLimit = 0;
        final int upperLimit = 3;
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().numberBetween(lowerLimit, upperLimit);
            assertThat(value, is(lessThan(upperLimit)));
            assertThat(value, is(greaterThanOrEqualTo(lowerLimit)));
            nums.add(value);
        }
        assertThat(""Verify all numbers 0-3 were represented"", nums,hasSize(3));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNumberBetweenOneAndThree', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Integer', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'lowerLimit', ' ', '=', ' ', '0', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'upperLimit', ' ', '=', ' ', '3', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'lowerLimit', ',', ' ', 'upperLimit', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThan', '(', 'upperLimit', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', 'lowerLimit', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', '""', 'Verify all numbers 0-3 were represented', '""', ',', ' ', 'nums', ',', 'hasSize', '(', '3', ')', ')', ';', '\n', '    ', '}', '\n']"
master,13841611e6e0d2b63f5c193bd3bf081cf74696ed,Options.java,nextElement,"    public <E> E nextElement(E[] array) {
        return array[faker.random().nextInt(array.length)];
    }",https://www.github.com/dius/java-faker/commit/13841611e6e0d2b63f5c193bd3bf081cf74696ed,"    public <E> E nextElement(E[] array) {
        return array[faker.random().nextInt(array.length)];
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'nextElement', '(', 'E', '[', ']', ' ', 'array', ')', ' ', '{', '\n', '        ', 'return', ' ', 'array', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'array', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,13841611e6e0d2b63f5c193bd3bf081cf74696ed,Options.java,nextElement,"    public <E> E nextElement(List<E> list) {
        return list.get(faker.random().nextInt(list.size()));
    }",https://www.github.com/dius/java-faker/commit/13841611e6e0d2b63f5c193bd3bf081cf74696ed,"    public <E> E nextElement(List<E> list) {
        return list.get(faker.random().nextInt(list.size()));
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'nextElement', '(', 'List', '<', 'E', '>', ' ', 'list', ')', ' ', '{', '\n', '        ', 'return', ' ', 'list', '.', 'get', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'list', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,13841611e6e0d2b63f5c193bd3bf081cf74696ed,OptionsTest.java,testNextArrayElement,"    public void testNextArrayElement() {
        Integer[] array = new Integer[] { 1, 2, 3, 5, 8, 13, 21 };

        for (int i = 1; i < 10; i++) {
            assertThat(faker.options().nextElement(array), isIn(array));",https://www.github.com/dius/java-faker/commit/13841611e6e0d2b63f5c193bd3bf081cf74696ed,"    public void testNextArrayElement() {
        Integer[] array = new Integer[] { 1, 2, 3, 5, 8, 13, 21 };

        for (int i = 1; i < 10; i++) {
            assertThat(faker.options().nextElement(array), isIn(array));
","['    ', 'public', ' ', 'void', ' ', 'testNextArrayElement', '(', ')', ' ', '{', '\n', '        ', 'Integer', '[', ']', ' ', 'array', ' ', '=', ' ', 'new', ' ', 'Integer', '[', ']', ' ', '{', ' ', '1', ',', ' ', '2', ',', ' ', '3', ',', ' ', '5', ',', ' ', '8', ',', ' ', '13', ',', ' ', '21', ' ', '}', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'nextElement', '(', 'array', ')', ',', ' ', 'isIn', '(', 'array', ')', ')', ';', '\n']"
master,13841611e6e0d2b63f5c193bd3bf081cf74696ed,OptionsTest.java,testNextListElement,"    public void testNextListElement() {
        List<Integer> list = Arrays.asList(1, 2, 3, 5, 8, 13, 21);
        for (int i = 1; i < 10; i++) {
            assertThat(faker.options().nextElement(list), isIn(list));",https://www.github.com/dius/java-faker/commit/13841611e6e0d2b63f5c193bd3bf081cf74696ed,"    public void testNextListElement() {
        List<Integer> list = Arrays.asList(1, 2, 3, 5, 8, 13, 21);
        for (int i = 1; i < 10; i++) {
            assertThat(faker.options().nextElement(list), isIn(list));
","['    ', 'public', ' ', 'void', ' ', 'testNextListElement', '(', ')', ' ', '{', '\n', '        ', 'List', '<', 'Integer', '>', ' ', 'list', ' ', '=', ' ', 'Arrays', '.', 'asList', '(', '1', ',', ' ', '2', ',', ' ', '3', ',', ' ', '5', ',', ' ', '8', ',', ' ', '13', ',', ' ', '21', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '10', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'nextElement', '(', 'list', ')', ',', ' ', 'isIn', '(', 'list', ')', ')', ';', '\n']"
master,dac3d3fb0612340f5e534fd30d280d33f0549bcd,Faker.java,lordOfTheRings,"    public LordOfTheRings lordOfTheRings() {
        return lordOfTheRings;
    }",https://www.github.com/dius/java-faker/commit/dac3d3fb0612340f5e534fd30d280d33f0549bcd,"    public LordOfTheRings lordOfTheRings() {
        return lordOfTheRings;
    }
","['    ', 'public', ' ', 'LordOfTheRings', ' ', 'lordOfTheRings', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'lordOfTheRings', ';', '\n', '    ', '}', '\n']"
master,dac3d3fb0612340f5e534fd30d280d33f0549bcd,LordOfTheRings.java,character,"    public String character() {
        return faker.resolve(""lord_of_the_rings.characters"");
    }",https://www.github.com/dius/java-faker/commit/dac3d3fb0612340f5e534fd30d280d33f0549bcd,"    public String character() {
        return faker.resolve(""lord_of_the_rings.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'lord_of_the_rings.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dac3d3fb0612340f5e534fd30d280d33f0549bcd,LordOfTheRings.java,location,"    public String location() {
        return faker.resolve(""lord_of_the_rings.locations"");
    }",https://www.github.com/dius/java-faker/commit/dac3d3fb0612340f5e534fd30d280d33f0549bcd,"    public String location() {
        return faker.resolve(""lord_of_the_rings.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'lord_of_the_rings.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,dac3d3fb0612340f5e534fd30d280d33f0549bcd,LordOfTheRingsTest.java,character,"    public void character() throws Exception {
        assertThat(faker.lordOfTheRings().character(), matchesRegularExpression(""(?U)([\\w ]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/dac3d3fb0612340f5e534fd30d280d33f0549bcd,"    public void character() throws Exception {
        assertThat(faker.lordOfTheRings().character(), matchesRegularExpression(""(?U)([\\w ]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lordOfTheRings', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', 'w ]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dac3d3fb0612340f5e534fd30d280d33f0549bcd,LordOfTheRingsTest.java,location,"    public void location() throws Exception {
        assertThat(faker.lordOfTheRings().location(), matchesRegularExpression(""(?U)([\\w'\\- ]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/dac3d3fb0612340f5e534fd30d280d33f0549bcd,"    public void location() throws Exception {
        assertThat(faker.lordOfTheRings().location(), matchesRegularExpression(""(?U)([\\w'\\- ]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lordOfTheRings', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', ""w'"", '\\\\', '- ]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,14ba9a05bc10030e3cf5130808c2d7512151aa8f,Zelda.java,game,"    public String game() {
        return faker.resolve(""zelda.games"");
    }",https://www.github.com/dius/java-faker/commit/14ba9a05bc10030e3cf5130808c2d7512151aa8f,"    public String game() {
        return faker.resolve(""zelda.games"");
    }
","['    ', 'public', ' ', 'String', ' ', 'game', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'zelda.games', '""', ')', ';', '\n', '    ', '}', '\n']"
master,14ba9a05bc10030e3cf5130808c2d7512151aa8f,Zelda.java,character,"    public String character() {
        return faker.resolve(""zelda.characters"");
    }",https://www.github.com/dius/java-faker/commit/14ba9a05bc10030e3cf5130808c2d7512151aa8f,"    public String character() {
        return faker.resolve(""zelda.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'zelda.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,14ba9a05bc10030e3cf5130808c2d7512151aa8f,ZeldaTest.java,game,"    public void game() throws Exception {
        assertThat(faker.zelda().game(), matchesRegularExpression(""[A-Za-z'\\- :]+""));
    }",https://www.github.com/dius/java-faker/commit/14ba9a05bc10030e3cf5130808c2d7512151aa8f,"    public void game() throws Exception {
        assertThat(faker.zelda().game(), matchesRegularExpression(""[A-Za-z'\\- :]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'game', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'zelda', '(', ')', '.', 'game', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'"", '\\\\', '- :]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,14ba9a05bc10030e3cf5130808c2d7512151aa8f,ZeldaTest.java,character,"    public void character() throws Exception {
        assertThat(faker.zelda().character(), matchesRegularExpression(""(?U)([\\w'\\-.\\(\\)]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/14ba9a05bc10030e3cf5130808c2d7512151aa8f,"    public void character() throws Exception {
        assertThat(faker.zelda().character(), matchesRegularExpression(""(?U)([\\w'\\-.\\(\\)]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'zelda', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', ""w'"", '\\\\', '-.', '\\\\', '(', '\\\\', ')]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,Faker.java,harryPotter,"    public HarryPotter harryPotter() {
        return harryPotter;
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public HarryPotter harryPotter() {
        return harryPotter;
    }
","['    ', 'public', ' ', 'HarryPotter', ' ', 'harryPotter', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'harryPotter', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotter.java,character,"    public String character() {
        return faker.resolve(""harry_potter.characters"");
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public String character() {
        return faker.resolve(""harry_potter.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'harry_potter.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotter.java,location,"    public String location() {
        return faker.resolve(""harry_potter.locations"");
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public String location() {
        return faker.resolve(""harry_potter.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'harry_potter.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotter.java,quote,"    public String quote() {
        return faker.resolve(""harry_potter.quotes"");
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public String quote() {
        return faker.resolve(""harry_potter.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'harry_potter.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotter.java,book,"    public String book() {
        return faker.resolve(""harry_potter.books"");
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public String book() {
        return faker.resolve(""harry_potter.books"");
    }
","['    ', 'public', ' ', 'String', ' ', 'book', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'harry_potter.books', '""', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotterTest.java,character,"    public void character() throws Exception {
        assertThat(faker.harryPotter().character(), matchesRegularExpression(""[A-Za-z,\\-\\.\\(\\) ]+""));
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public void character() throws Exception {
        assertThat(faker.harryPotter().character(), matchesRegularExpression(""[A-Za-z,\\-\\.\\(\\) ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z,', '\\\\', '-', '\\\\', '.', '\\\\', '(', '\\\\', ') ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotterTest.java,location,"    public void location() throws Exception {
        assertThat(faker.harryPotter().location(), matchesRegularExpression(""[A-Za-z0-9'\\. &,/]+""));
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public void location() throws Exception {
        assertThat(faker.harryPotter().location(), matchesRegularExpression(""[A-Za-z0-9'\\. &,/]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z0-9'"", '\\\\', '. &,/]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotterTest.java,quote,"    public void quote() throws Exception {
        assertThat(faker.harryPotter().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public void quote() throws Exception {
        assertThat(faker.harryPotter().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,511a273341a8d12425f9b0d4457f80d0df0abb35,HarryPotterTest.java,book,"    public void book() throws Exception {
        assertThat(faker.harryPotter().book(), matchesRegularExpression(""Harry Potter and the ([A-Za-z'\\-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/511a273341a8d12425f9b0d4457f80d0df0abb35,"    public void book() throws Exception {
        assertThat(faker.harryPotter().book(), matchesRegularExpression(""Harry Potter and the ([A-Za-z'\\-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'book', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'book', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""Harry Potter and the ([A-Za-z'"", '\\\\', '-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,81d9e7635a7cfada3d0ce62db387a1c85edcec52,Address.java,zipCodeByState,"    public String zipCodeByState(String stateAbbr) { return faker.fakeValuesService().resolve(""address.postcode_by_state."" + stateAbbr, this, faker); }
",https://www.github.com/dius/java-faker/commit/81d9e7635a7cfada3d0ce62db387a1c85edcec52,"    public String zipCodeByState(String stateAbbr) { return faker.fakeValuesService().resolve(""address.postcode_by_state."" + stateAbbr, this, faker); }
","['    ', 'public', ' ', 'String', ' ', 'zipCodeByState', '(', 'String', ' ', 'stateAbbr', ')', ' ', '{', ' ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.postcode_by_state.', '""', ' ', '+', ' ', 'stateAbbr', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', ' ', '}', '\n']"
master,81d9e7635a7cfada3d0ce62db387a1c85edcec52,Address.java,fullAddress,"    public String fullAddress() {
        return faker.fakeValuesService().resolve(""address.full_address"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/81d9e7635a7cfada3d0ce62db387a1c85edcec52,"    public String fullAddress() {
        return faker.fakeValuesService().resolve(""address.full_address"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'fullAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.full_address', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,81d9e7635a7cfada3d0ce62db387a1c85edcec52,AddressTest.java,testZipCodeByState,"    public void testZipCodeByState() {
        faker = new Faker(new Locale(""en-US""));
        assertThat(faker.address().zipCodeByState(faker.address().stateAbbr()), matchesRegularExpression(""[0-9]{5}""));
    }",https://www.github.com/dius/java-faker/commit/81d9e7635a7cfada3d0ce62db387a1c85edcec52,"    public void testZipCodeByState() {
        faker = new Faker(new Locale(""en-US""));
        assertThat(faker.address().zipCodeByState(faker.address().stateAbbr()), matchesRegularExpression(""[0-9]{5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testZipCodeByState', '(', ')', ' ', '{', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'en-US', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'zipCodeByState', '(', 'faker', '.', 'address', '(', ')', '.', 'stateAbbr', '(', ')', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]{5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f8fa4af927360b06f18a7f48a5cc901bd8233e6a,RockBand.java,name,"    public String name() {
        return faker.resolve(""rock_band.name"");
    }",https://www.github.com/dius/java-faker/commit/f8fa4af927360b06f18a7f48a5cc901bd8233e6a,"    public String name() {
        return faker.resolve(""rock_band.name"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'rock_band.name', '""', ')', ';', '\n', '    ', '}', '\n']"
master,f8fa4af927360b06f18a7f48a5cc901bd8233e6a,RockBandTest.java,name,"    public void name() throws Exception {
        assertThat(faker.rockBand().name(), matchesRegularExpression(""([\\w'/.,&]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f8fa4af927360b06f18a7f48a5cc901bd8233e6a,"    public void name() throws Exception {
        assertThat(faker.rockBand().name(), matchesRegularExpression(""([\\w'/.,&]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rockBand', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w'/.,&]+ ?)+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,Esports.java,player,"    public String player() {
        return faker.resolve(""esports.players"");
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public String player() {
        return faker.resolve(""esports.players"");
    }
","['    ', 'public', ' ', 'String', ' ', 'player', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esports.players', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,Esports.java,team,"    public String team() {
        return faker.resolve(""esports.teams"");
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public String team() {
        return faker.resolve(""esports.teams"");
    }
","['    ', 'public', ' ', 'String', ' ', 'team', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esports.teams', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,Esports.java,event,"    public String event() {
        return faker.resolve(""esports.events"");
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public String event() {
        return faker.resolve(""esports.events"");
    }
","['    ', 'public', ' ', 'String', ' ', 'event', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esports.events', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,Esports.java,league,"    public String league() {
        return faker.resolve(""esports.leagues"");
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public String league() {
        return faker.resolve(""esports.leagues"");
    }
","['    ', 'public', ' ', 'String', ' ', 'league', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esports.leagues', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,Esports.java,game,"    public String game() {
        return faker.resolve(""esports.games"");
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public String game() {
        return faker.resolve(""esports.games"");
    }
","['    ', 'public', ' ', 'String', ' ', 'game', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esports.games', '""', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,EsportsTest.java,player,"    public void player() throws Exception {
        assertThat(faker.esports().player(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public void player() throws Exception {
        assertThat(faker.esports().player(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'player', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'player', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,EsportsTest.java,team,"    public void team() throws Exception {
        assertThat(faker.esports().team(),  matchesRegularExpression(""(\\w+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public void team() throws Exception {
        assertThat(faker.esports().team(),  matchesRegularExpression(""(\\w+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'team', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'team', '(', ')', ',', '  ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,EsportsTest.java,event,"    public void event() throws Exception {
        assertThat(faker.esports().event(), matchesRegularExpression(""(\\w+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public void event() throws Exception {
        assertThat(faker.esports().event(), matchesRegularExpression(""(\\w+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'event', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'event', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,EsportsTest.java,league,"    public void league() throws Exception {
        assertThat(faker.esports().league(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public void league() throws Exception {
        assertThat(faker.esports().league(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'league', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'league', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3c932b95c6d42fe7557fb4078cef01521560fbc2,EsportsTest.java,game,"    public void game() throws Exception {
        assertThat(faker.esports().game(), matchesRegularExpression(""([\\w:.]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/3c932b95c6d42fe7557fb4078cef01521560fbc2,"    public void game() throws Exception {
        assertThat(faker.esports().game(), matchesRegularExpression(""([\\w:.]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'game', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'game', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w:.]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,34ee92a828ac987def98b369807199a574eadb31,Friends.java,character,"    public String character() {
        return faker.resolve(""friends.characters"");
    }",https://www.github.com/dius/java-faker/commit/34ee92a828ac987def98b369807199a574eadb31,"    public String character() {
        return faker.resolve(""friends.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'friends.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,34ee92a828ac987def98b369807199a574eadb31,Friends.java,location,"    public String location() {
        return faker.resolve(""friends.locations"");
    }",https://www.github.com/dius/java-faker/commit/34ee92a828ac987def98b369807199a574eadb31,"    public String location() {
        return faker.resolve(""friends.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'friends.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,34ee92a828ac987def98b369807199a574eadb31,Friends.java,quote,"    public String quote() {
        return faker.resolve(""friends.quotes"");
    }",https://www.github.com/dius/java-faker/commit/34ee92a828ac987def98b369807199a574eadb31,"    public String quote() {
        return faker.resolve(""friends.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'friends.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,34ee92a828ac987def98b369807199a574eadb31,FriendsTest.java,character,"    public void character() throws Exception {
        assertThat(faker.friends().character(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/34ee92a828ac987def98b369807199a574eadb31,"    public void character() throws Exception {
        assertThat(faker.friends().character(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,34ee92a828ac987def98b369807199a574eadb31,FriendsTest.java,location,"    public void location() throws Exception {
        assertThat(faker.friends().location(), matchesRegularExpression(""[\\w., ]+""));
    }",https://www.github.com/dius/java-faker/commit/34ee92a828ac987def98b369807199a574eadb31,"    public void location() throws Exception {
        assertThat(faker.friends().location(), matchesRegularExpression(""[\\w., ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', 'w., ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,34ee92a828ac987def98b369807199a574eadb31,FriendsTest.java,quote,"    public void quote() throws Exception {
        assertThat(faker.friends().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/34ee92a828ac987def98b369807199a574eadb31,"    public void quote() throws Exception {
        assertThat(faker.friends().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,testRandomDigit,"    public void testRandomDigit() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigit();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThanOrEqualTo(0)));
            nums.add(value);
        }
        assertThat(nums, contains(0, 1, 2, 3, 4, 5, 6, 7, 8, 9));
    }",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"    public void testRandomDigit() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigit();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThanOrEqualTo(0)));
            nums.add(value);
        }
        assertThat(nums, contains(0, 1, 2, 3, 4, 5, 6, 7, 8, 9));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRandomDigit', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Integer', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDigit', '(', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThanOrEqualTo', '(', '9', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', '0', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', 'nums', ',', ' ', 'contains', '(', '0', ',', ' ', '1', ',', ' ', '2', ',', ' ', '3', ',', ' ', '4', ',', ' ', '5', ',', ' ', '6', ',', ' ', '7', ',', ' ', '8', ',', ' ', '9', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,testRandomDigitNotZero,"    public void testRandomDigitNotZero() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigitNotZero();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThan(0)));
            nums.add(value);
        }
        assertThat(nums, contains(1, 2, 3, 4, 5, 6, 7, 8, 9));
    }",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"    public void testRandomDigitNotZero() {
        Set<Integer> nums = Sets.newHashSet();
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().randomDigitNotZero();
            assertThat(value, is(lessThanOrEqualTo(9)));
            assertThat(value, is(greaterThan(0)));
            nums.add(value);
        }
        assertThat(nums, contains(1, 2, 3, 4, 5, 6, 7, 8, 9));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRandomDigitNotZero', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Integer', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDigitNotZero', '(', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThanOrEqualTo', '(', '9', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThan', '(', '0', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', 'nums', ',', ' ', 'contains', '(', '1', ',', ' ', '2', ',', ' ', '3', ',', ' ', '4', ',', ' ', '5', ',', ' ', '6', ',', ' ', '7', ',', ' ', '8', ',', ' ', '9', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,testNumberBetweenOneAndThree,"    public void testNumberBetweenOneAndThree() {
        Set<Integer> nums = Sets.newHashSet();
        final int lowerLimit = 0;
        final int upperLimit = 3;
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().numberBetween(lowerLimit, upperLimit);
            assertThat(value, is(lessThan(upperLimit)));
            assertThat(value, is(greaterThanOrEqualTo(lowerLimit)));
            nums.add(value);
        }
        assertThat(nums, contains(0, 1, 2));
    }",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"    public void testNumberBetweenOneAndThree() {
        Set<Integer> nums = Sets.newHashSet();
        final int lowerLimit = 0;
        final int upperLimit = 3;
        for (int i = 0; i < 1000; ++i) {
            int value = faker.number().numberBetween(lowerLimit, upperLimit);
            assertThat(value, is(lessThan(upperLimit)));
            assertThat(value, is(greaterThanOrEqualTo(lowerLimit)));
            nums.add(value);
        }
        assertThat(nums, contains(0, 1, 2));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNumberBetweenOneAndThree', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Integer', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'lowerLimit', ' ', '=', ' ', '0', ';', '\n', '        ', 'final', ' ', 'int', ' ', 'upperLimit', ' ', '=', ' ', '3', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'int', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'lowerLimit', ',', ' ', 'upperLimit', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThan', '(', 'upperLimit', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', 'lowerLimit', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', 'nums', ',', ' ', 'contains', '(', '0', ',', ' ', '1', ',', ' ', '2', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,numberBetweenIntIntZeroMinMax,"    public void numberBetweenIntIntZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"",
                faker.number().numberBetween(0, 0),
                is(0));
        assertThat(""Calling numberBetween with min==max yields min"",
                faker.number().numberBetween(2, 2),",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"    public void numberBetweenIntIntZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"",
                faker.number().numberBetween(0, 0),
                is(0));
        assertThat(""Calling numberBetween with min==max yields min"",
                faker.number().numberBetween(2, 2),
","['    ', 'public', ' ', 'void', ' ', 'numberBetweenIntIntZeroMinMax', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min, with 0', '""', ',', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '0', ',', ' ', '0', ')', ',', '\n', '                ', 'is', '(', '0', ')', ')', ';', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min', '""', ',', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '2', ',', ' ', '2', ')', ',', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,numberBetweenLongLongZeroMinMax,"    public void numberBetweenLongLongZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"",
                faker.number().numberBetween(0L, 0L),
                is(0L));
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween(2L, 2L),",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"    public void numberBetweenLongLongZeroMinMax() {
        assertThat(""Calling numberBetween with min==max yields min, with 0"",
                faker.number().numberBetween(0L, 0L),
                is(0L));
        assertThat(""Calling numberBetween with min==max yields min"", 
                faker.number().numberBetween(2L, 2L),
","['    ', 'public', ' ', 'void', ' ', 'numberBetweenLongLongZeroMinMax', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min, with 0', '""', ',', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '0', 'L', ',', ' ', '0', 'L', ')', ',', '\n', '                ', 'is', '(', '0', 'L', ')', ')', ';', '\n', '        ', 'assertThat', '(', '""', 'Calling numberBetween with min==max yields min', '""', ',', ' ', '\n', '                ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '2L', ',', ' ', '2L', ')', ',', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,apply,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(), max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Double>() {
                    @Override",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue(), max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Double>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'int', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', '.', 'intValue', '(', ')', ',', ' ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Double', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,NumberTest.java,apply,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue();
                final int max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Integer>() {
                    @Override",https://www.github.com/dius/java-faker/commit/f5159d76559bdbe9ae3cebdb82d9a6ed35de89f5,"            public Double apply(Pair<Long, Long> minMax) {
                final int min = minMax.getLeft().intValue();
                final int max = minMax.getRight().intValue();
                long numbersToGet = calculateNumbersToGet(min, max);

                return uniquePercentageOfResults(numbersToGet, new Callable<Integer>() {
                    @Override
","['            ', 'public', ' ', 'Double', ' ', 'apply', '(', 'Pair', '<', 'Long', ',', ' ', 'Long', '>', ' ', 'minMax', ')', ' ', '{', '\n', '                ', 'final', ' ', 'int', ' ', 'min', ' ', '=', ' ', 'minMax', '.', 'getLeft', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'final', ' ', 'int', ' ', 'max', ' ', '=', ' ', 'minMax', '.', 'getRight', '(', ')', '.', 'intValue', '(', ')', ';', '\n', '                ', 'long', ' ', 'numbersToGet', ' ', '=', ' ', 'calculateNumbersToGet', '(', 'min', ',', ' ', 'max', ')', ';', '\n', '\n', '                ', 'return', ' ', 'uniquePercentageOfResults', '(', 'numbersToGet', ',', ' ', 'new', ' ', 'Callable', '<', 'Integer', '>', '(', ')', ' ', '{', '\n', '                    ', '@Override', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,Job.java,field,"    public String field() {
        return faker.fakeValuesService().resolve(""job.field"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public String field() {
        return faker.fakeValuesService().resolve(""job.field"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'field', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'job.field', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,Job.java,seniority,"    public String seniority() {
        return faker.fakeValuesService().resolve(""job.seniority"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public String seniority() {
        return faker.fakeValuesService().resolve(""job.seniority"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'seniority', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'job.seniority', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,Job.java,position,"    public String position() {
        return faker.fakeValuesService().resolve(""job.position"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public String position() {
        return faker.fakeValuesService().resolve(""job.position"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'position', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'job.position', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,Job.java,keySkills,"    public String keySkills() {
        return faker.fakeValuesService().resolve(""job.key_skills"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public String keySkills() {
        return faker.fakeValuesService().resolve(""job.key_skills"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'keySkills', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'job.key_skills', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,Job.java,title,"    public String title() {
        return faker.fakeValuesService().resolve(""job.title"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public String title() {
        return faker.fakeValuesService().resolve(""job.title"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'job.title', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,JobTest.java,field,"    public void field() throws Exception {
        assertThat(faker.job().field(), matchesRegularExpression(""^[A-Z][A-Za-z-]+$""));
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public void field() throws Exception {
        assertThat(faker.job().field(), matchesRegularExpression(""^[A-Z][A-Za-z-]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'field', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'field', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z][A-Za-z-]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,JobTest.java,seniority,"    public void seniority() throws Exception {
        assertThat(faker.job().seniority(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public void seniority() throws Exception {
        assertThat(faker.job().seniority(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'seniority', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'seniority', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z][a-z]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,JobTest.java,position,"    public void position() throws Exception {
        assertThat(faker.job().position(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public void position() throws Exception {
        assertThat(faker.job().position(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'position', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'position', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z][a-z]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,JobTest.java,keySkills,"    public void keySkills() throws Exception {
        assertThat(faker.job().keySkills(), matchesRegularExpression(""([A-Za-z-]+ ?){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public void keySkills() throws Exception {
        assertThat(faker.job().keySkills(), matchesRegularExpression(""([A-Za-z-]+ ?){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'keySkills', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'keySkills', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Za-z-]+ ?){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a38088dafafc6b46a067a190d2fd57d7a1385924,JobTest.java,title,"    public void title() throws Exception {
        assertThat(faker.job().title(), matchesRegularExpression(""([A-Za-z-]+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/a38088dafafc6b46a067a190d2fd57d7a1385924,"    public void title() throws Exception {
        assertThat(faker.job().title(), matchesRegularExpression(""([A-Za-z-]+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'title', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'title', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Za-z-]+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4b7f018d84cf6bc7b6a62413e7e7c8edbeea1e49,Hipster.java,word,"    public String word() {
        return faker.resolve(""hipster.words"");
    }",https://www.github.com/dius/java-faker/commit/4b7f018d84cf6bc7b6a62413e7e7c8edbeea1e49,"    public String word() {
        return faker.resolve(""hipster.words"");
    }
","['    ', 'public', ' ', 'String', ' ', 'word', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'hipster.words', '""', ')', ';', '\n', '    ', '}', '\n']"
master,4b7f018d84cf6bc7b6a62413e7e7c8edbeea1e49,HipsterTest.java,word,"    public void word() throws Exception {
        assertThat(faker.hipster().word(), matchesRegularExpression(""^([\\w-+&']+ ?)+$""));
    }",https://www.github.com/dius/java-faker/commit/4b7f018d84cf6bc7b6a62413e7e7c8edbeea1e49,"    public void word() throws Exception {
        assertThat(faker.hipster().word(), matchesRegularExpression(""^([\\w-+&']+ ?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'word', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hipster', '(', ')', '.', 'word', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w-+&']+ ?)+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d3db25d4bd4072120b8107d779c4786a9c62a26f,TwinPeaks.java,character,"    public String character() {
        return faker.resolve(""twin_peaks.characters"");
    }",https://www.github.com/dius/java-faker/commit/d3db25d4bd4072120b8107d779c4786a9c62a26f,"    public String character() {
        return faker.resolve(""twin_peaks.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'twin_peaks.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,d3db25d4bd4072120b8107d779c4786a9c62a26f,TwinPeaks.java,location,"    public String location() {
        return faker.resolve(""twin_peaks.locations"");
    }",https://www.github.com/dius/java-faker/commit/d3db25d4bd4072120b8107d779c4786a9c62a26f,"    public String location() {
        return faker.resolve(""twin_peaks.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'twin_peaks.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,d3db25d4bd4072120b8107d779c4786a9c62a26f,TwinPeaks.java,quote,"    public String quote() {
        return faker.resolve(""twin_peaks.quotes"");
    }",https://www.github.com/dius/java-faker/commit/d3db25d4bd4072120b8107d779c4786a9c62a26f,"    public String quote() {
        return faker.resolve(""twin_peaks.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'twin_peaks.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,d3db25d4bd4072120b8107d779c4786a9c62a26f,TwinPeaksTest.java,character,"    public void character() throws Exception {
        assertThat(faker.twinPeaks().character(), matchesRegularExpression(""^([\\w']+ ?){2,}$""));
    }",https://www.github.com/dius/java-faker/commit/d3db25d4bd4072120b8107d779c4786a9c62a26f,"    public void character() throws Exception {
        assertThat(faker.twinPeaks().character(), matchesRegularExpression(""^([\\w']+ ?){2,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'twinPeaks', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w']+ ?){2,}$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d3db25d4bd4072120b8107d779c4786a9c62a26f,TwinPeaksTest.java,location,"    public void location() throws Exception {
        assertThat(faker.twinPeaks().location(), matchesRegularExpression(""^[A-Za-z0-9'&,\\- ]+$""));
    }",https://www.github.com/dius/java-faker/commit/d3db25d4bd4072120b8107d779c4786a9c62a26f,"    public void location() throws Exception {
        assertThat(faker.twinPeaks().location(), matchesRegularExpression(""^[A-Za-z0-9'&,\\- ]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'twinPeaks', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""^[A-Za-z0-9'&,"", '\\\\', '- ]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d3db25d4bd4072120b8107d779c4786a9c62a26f,TwinPeaksTest.java,quote,"    public void quote() throws Exception {
        assertThat(faker.twinPeaks().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/d3db25d4bd4072120b8107d779c4786a9c62a26f,"    public void quote() throws Exception {
        assertThat(faker.twinPeaks().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'twinPeaks', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c8b6823b3398c35b6b800ae72e2babd419504bd8,Yoda.java,quote,"    public String quote() {
        return faker.resolve(""yoda.quotes"");
    }",https://www.github.com/dius/java-faker/commit/c8b6823b3398c35b6b800ae72e2babd419504bd8,"    public String quote() {
        return faker.resolve(""yoda.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'yoda.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,c8b6823b3398c35b6b800ae72e2babd419504bd8,YodaTest.java,quote,"    public void quote() throws Exception {
        assertThat(faker.yoda().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/c8b6823b3398c35b6b800ae72e2babd419504bd8,"    public void quote() throws Exception {
        assertThat(faker.yoda().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'yoda', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,Faker.java,rickAndMorty,"    public RickAndMorty rickAndMorty() {
        return rickAndMorty;
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public RickAndMorty rickAndMorty() {
        return rickAndMorty;
    }
","['    ', 'public', ' ', 'RickAndMorty', ' ', 'rickAndMorty', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'rickAndMorty', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,RickAndMorty.java,character,"    public String character() {
        return faker.resolve(""rick_and_morty.characters"");
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public String character() {
        return faker.resolve(""rick_and_morty.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'rick_and_morty.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,RickAndMorty.java,location,"    public String location() {
        return faker.resolve(""rick_and_morty.locations"");
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public String location() {
        return faker.resolve(""rick_and_morty.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'rick_and_morty.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,RickAndMorty.java,quote,"    public String quote() {
        return faker.resolve(""rick_and_morty.quotes"");
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public String quote() {
        return faker.resolve(""rick_and_morty.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'rick_and_morty.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,RickAndMortyTest.java,character,"    public void character() throws Exception {
        assertThat(faker.rickAndMorty().character(), matchesRegularExpression(""^([\\w'-.]+ ?){2,}$""));
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public void character() throws Exception {
        assertThat(faker.rickAndMorty().character(), matchesRegularExpression(""^([\\w'-.]+ ?){2,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rickAndMorty', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w'-.]+ ?){2,}$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,RickAndMortyTest.java,location,"    public void location() throws Exception {
        assertThat(faker.rickAndMorty().location(), matchesRegularExpression(""^([\\w-.]+ ?){2,}$""));
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public void location() throws Exception {
        assertThat(faker.rickAndMorty().location(), matchesRegularExpression(""^([\\w-.]+ ?){2,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rickAndMorty', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', 'w-.]+ ?){2,}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a7768e23f4de031390145246eb29de6441a12cd7,RickAndMortyTest.java,quote,"    public void quote() throws Exception {
        assertThat(faker.rickAndMorty().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/a7768e23f4de031390145246eb29de6441a12cd7,"    public void quote() throws Exception {
        assertThat(faker.rickAndMorty().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rickAndMorty', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,37e702c97d4974828718cbc285057cae0e7f027d,Matz.java,quote,"    public String quote() {
        return faker.resolve(""matz.quotes"");
    }",https://www.github.com/dius/java-faker/commit/37e702c97d4974828718cbc285057cae0e7f027d,"    public String quote() {
        return faker.resolve(""matz.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'matz.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,37e702c97d4974828718cbc285057cae0e7f027d,MatzTest.java,quote,"    public void quote() throws Exception {
        assertThat(faker.matz().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/37e702c97d4974828718cbc285057cae0e7f027d,"    public void quote() throws Exception {
        assertThat(faker.matz().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', 'throws', ' ', 'Exception', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'matz', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa5b4da233ee315608e76c9bbab3db44d03f22bf,Faker.java,instance,"    public static Faker instance() {
        return new Faker();
    }",https://www.github.com/dius/java-faker/commit/fa5b4da233ee315608e76c9bbab3db44d03f22bf,"    public static Faker instance() {
        return new Faker();
    }
","['    ', 'public', ' ', 'static', ' ', 'Faker', ' ', 'instance', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'Faker', '(', ')', ';', '\n', '    ', '}', '\n']"
master,fa5b4da233ee315608e76c9bbab3db44d03f22bf,Faker.java,instance,"    public static Faker instance(Locale locale) {
        return new Faker(locale);
    }",https://www.github.com/dius/java-faker/commit/fa5b4da233ee315608e76c9bbab3db44d03f22bf,"    public static Faker instance(Locale locale) {
        return new Faker(locale);
    }
","['    ', 'public', ' ', 'static', ' ', 'Faker', ' ', 'instance', '(', 'Locale', ' ', 'locale', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'Faker', '(', 'locale', ')', ';', '\n', '    ', '}', '\n']"
master,fa5b4da233ee315608e76c9bbab3db44d03f22bf,Faker.java,instance,"    public static Faker instance(Random random) {
        return new Faker(random);
    }",https://www.github.com/dius/java-faker/commit/fa5b4da233ee315608e76c9bbab3db44d03f22bf,"    public static Faker instance(Random random) {
        return new Faker(random);
    }
","['    ', 'public', ' ', 'static', ' ', 'Faker', ' ', 'instance', '(', 'Random', ' ', 'random', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'Faker', '(', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,fa5b4da233ee315608e76c9bbab3db44d03f22bf,Faker.java,instance,"    public static Faker instance(Locale locale, Random random) {
        return new Faker(locale, random);
    }",https://www.github.com/dius/java-faker/commit/fa5b4da233ee315608e76c9bbab3db44d03f22bf,"    public static Faker instance(Locale locale, Random random) {
        return new Faker(locale, random);
    }
","['    ', 'public', ' ', 'static', ' ', 'Faker', ' ', 'instance', '(', 'Locale', ' ', 'locale', ',', ' ', 'Random', ' ', 'random', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'Faker', '(', 'locale', ',', ' ', 'random', ')', ';', '\n', '    ', '}', '\n']"
master,fa5b4da233ee315608e76c9bbab3db44d03f22bf,FakerTest.java,fakerInstanceCanBeAcquiredViaUtilityMethods,"    public void fakerInstanceCanBeAcquiredViaUtilityMethods() {
        assertThat(Faker.instance(), is(instanceOf(Faker.class)));
        assertThat(Faker.instance(Locale.CANADA), is(instanceOf(Faker.class)));
        assertThat(Faker.instance(new Random(1)), is(instanceOf(Faker.class)));
        assertThat(Faker.instance(Locale.CHINA, new Random(2)), is(instanceOf(Faker.class)));
    }",https://www.github.com/dius/java-faker/commit/fa5b4da233ee315608e76c9bbab3db44d03f22bf,"    public void fakerInstanceCanBeAcquiredViaUtilityMethods() {
        assertThat(Faker.instance(), is(instanceOf(Faker.class)));
        assertThat(Faker.instance(Locale.CANADA), is(instanceOf(Faker.class)));
        assertThat(Faker.instance(new Random(1)), is(instanceOf(Faker.class)));
        assertThat(Faker.instance(Locale.CHINA, new Random(2)), is(instanceOf(Faker.class)));
    }
","['    ', 'public', ' ', 'void', ' ', 'fakerInstanceCanBeAcquiredViaUtilityMethods', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'Faker', '.', 'instance', '(', ')', ',', ' ', 'is', '(', 'instanceOf', '(', 'Faker', '.', 'class', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'Faker', '.', 'instance', '(', 'Locale', '.', 'CANADA', ')', ',', ' ', 'is', '(', 'instanceOf', '(', 'Faker', '.', 'class', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'Faker', '.', 'instance', '(', 'new', ' ', 'Random', '(', '1', ')', ')', ',', ' ', 'is', '(', 'instanceOf', '(', 'Faker', '.', 'class', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'Faker', '.', 'instance', '(', 'Locale', '.', 'CHINA', ',', ' ', 'new', ' ', 'Random', '(', '2', ')', ')', ',', ' ', 'is', '(', 'instanceOf', '(', 'Faker', '.', 'class', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,EsportsTest.java,player,"    public void player() {
        assertThat(faker.esports().player(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void player() {
        assertThat(faker.esports().player(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'player', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'player', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,EsportsTest.java,team,"    public void team() {
        assertThat(faker.esports().team(),  matchesRegularExpression(""(\\w+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void team() {
        assertThat(faker.esports().team(),  matchesRegularExpression(""(\\w+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'team', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'team', '(', ')', ',', '  ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,EsportsTest.java,event,"    public void event() {
        assertThat(faker.esports().event(), matchesRegularExpression(""(\\w+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void event() {
        assertThat(faker.esports().event(), matchesRegularExpression(""(\\w+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'event', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'event', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,EsportsTest.java,league,"    public void league() {
        assertThat(faker.esports().league(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void league() {
        assertThat(faker.esports().league(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'league', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'league', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,EsportsTest.java,game,"    public void game() {
        assertThat(faker.esports().game(), matchesRegularExpression(""([\\w:.]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void game() {
        assertThat(faker.esports().game(), matchesRegularExpression(""([\\w:.]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'game', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'game', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w:.]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,FriendsTest.java,character,"    public void character() {
        assertThat(faker.friends().character(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void character() {
        assertThat(faker.friends().character(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,FriendsTest.java,location,"    public void location() {
        assertThat(faker.friends().location(), matchesRegularExpression(""[\\w., ]+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void location() {
        assertThat(faker.friends().location(), matchesRegularExpression(""[\\w., ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', 'w., ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,FriendsTest.java,quote,"    public void quote() {
        assertThat(faker.friends().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void quote() {
        assertThat(faker.friends().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,HarryPotterTest.java,character,"    public void character() {
        assertThat(faker.harryPotter().character(), matchesRegularExpression(""[A-Za-z,\\-\\.\\(\\) ]+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void character() {
        assertThat(faker.harryPotter().character(), matchesRegularExpression(""[A-Za-z,\\-\\.\\(\\) ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z,', '\\\\', '-', '\\\\', '.', '\\\\', '(', '\\\\', ') ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,HarryPotterTest.java,location,"    public void location() {
        assertThat(faker.harryPotter().location(), matchesRegularExpression(""[A-Za-z0-9'\\. &,/]+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void location() {
        assertThat(faker.harryPotter().location(), matchesRegularExpression(""[A-Za-z0-9'\\. &,/]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z0-9'"", '\\\\', '. &,/]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,HarryPotterTest.java,quote,"    public void quote() {
        assertThat(faker.harryPotter().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void quote() {
        assertThat(faker.harryPotter().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,HarryPotterTest.java,book,"    public void book() {
        assertThat(faker.harryPotter().book(), matchesRegularExpression(""Harry Potter and the ([A-Za-z'\\-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void book() {
        assertThat(faker.harryPotter().book(), matchesRegularExpression(""Harry Potter and the ([A-Za-z'\\-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'book', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'book', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""Harry Potter and the ([A-Za-z'"", '\\\\', '-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,HipsterTest.java,word,"    public void word() {
        assertThat(faker.hipster().word(), matchesRegularExpression(""^([\\w-+&']+ ?)+$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void word() {
        assertThat(faker.hipster().word(), matchesRegularExpression(""^([\\w-+&']+ ?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'word', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hipster', '(', ')', '.', 'word', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w-+&']+ ?)+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,JobTest.java,field,"    public void field() {
        assertThat(faker.job().field(), matchesRegularExpression(""^[A-Z][A-Za-z-]+$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void field() {
        assertThat(faker.job().field(), matchesRegularExpression(""^[A-Z][A-Za-z-]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'field', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'field', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z][A-Za-z-]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,JobTest.java,seniority,"    public void seniority() {
        assertThat(faker.job().seniority(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void seniority() {
        assertThat(faker.job().seniority(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'seniority', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'seniority', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z][a-z]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,JobTest.java,position,"    public void position() {
        assertThat(faker.job().position(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void position() {
        assertThat(faker.job().position(), matchesRegularExpression(""^[A-Z][a-z]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'position', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'position', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z][a-z]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,JobTest.java,keySkills,"    public void keySkills() {
        assertThat(faker.job().keySkills(), matchesRegularExpression(""([A-Za-z-]+ ?){1,3}""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void keySkills() {
        assertThat(faker.job().keySkills(), matchesRegularExpression(""([A-Za-z-]+ ?){1,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'keySkills', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'keySkills', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Za-z-]+ ?){1,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,JobTest.java,title,"    public void title() {
        assertThat(faker.job().title(), matchesRegularExpression(""([A-Za-z-]+ ?){2,3}""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void title() {
        assertThat(faker.job().title(), matchesRegularExpression(""([A-Za-z-]+ ?){2,3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'job', '(', ')', '.', 'title', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-Za-z-]+ ?){2,3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,LordOfTheRingsTest.java,character,"    public void character() {
        assertThat(faker.lordOfTheRings().character(), matchesRegularExpression(""(?U)([\\w ]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void character() {
        assertThat(faker.lordOfTheRings().character(), matchesRegularExpression(""(?U)([\\w ]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lordOfTheRings', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', 'w ]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,LordOfTheRingsTest.java,location,"    public void location() {
        assertThat(faker.lordOfTheRings().location(), matchesRegularExpression(""(?U)([\\w'\\- ]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void location() {
        assertThat(faker.lordOfTheRings().location(), matchesRegularExpression(""(?U)([\\w'\\- ]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lordOfTheRings', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', ""w'"", '\\\\', '- ]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,MatzTest.java,quote,"    public void quote() {
        assertThat(faker.matz().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void quote() {
        assertThat(faker.matz().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'matz', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,RickAndMortyTest.java,character,"    public void character() {
        assertThat(faker.rickAndMorty().character(), matchesRegularExpression(""^([\\w'-.]+ ?){2,}$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void character() {
        assertThat(faker.rickAndMorty().character(), matchesRegularExpression(""^([\\w'-.]+ ?){2,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rickAndMorty', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w'-.]+ ?){2,}$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,RickAndMortyTest.java,location,"    public void location() {
        assertThat(faker.rickAndMorty().location(), matchesRegularExpression(""^([\\w-.]+ ?){2,}$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void location() {
        assertThat(faker.rickAndMorty().location(), matchesRegularExpression(""^([\\w-.]+ ?){2,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rickAndMorty', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', 'w-.]+ ?){2,}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,RickAndMortyTest.java,quote,"    public void quote() {
        assertThat(faker.rickAndMorty().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void quote() {
        assertThat(faker.rickAndMorty().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rickAndMorty', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,RockBandTest.java,name,"    public void name() {
        assertThat(faker.rockBand().name(), matchesRegularExpression(""([\\w'/.,&]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void name() {
        assertThat(faker.rockBand().name(), matchesRegularExpression(""([\\w'/.,&]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'rockBand', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w'/.,&]+ ?)+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,TwinPeaksTest.java,character,"    public void character() {
        assertThat(faker.twinPeaks().character(), matchesRegularExpression(""^([\\w']+ ?){2,}$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void character() {
        assertThat(faker.twinPeaks().character(), matchesRegularExpression(""^([\\w']+ ?){2,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'twinPeaks', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w']+ ?){2,}$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,TwinPeaksTest.java,location,"    public void location() {
        assertThat(faker.twinPeaks().location(), matchesRegularExpression(""^[A-Za-z0-9'&,\\- ]+$""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void location() {
        assertThat(faker.twinPeaks().location(), matchesRegularExpression(""^[A-Za-z0-9'&,\\- ]+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'twinPeaks', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""^[A-Za-z0-9'&,"", '\\\\', '- ]+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,TwinPeaksTest.java,quote,"    public void quote() {
        assertThat(faker.twinPeaks().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void quote() {
        assertThat(faker.twinPeaks().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'twinPeaks', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,YodaTest.java,quote,"    public void quote() {
        assertThat(faker.yoda().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void quote() {
        assertThat(faker.yoda().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'yoda', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,ZeldaTest.java,game,"    public void game() {
        assertThat(faker.zelda().game(), matchesRegularExpression(""[A-Za-z'\\- :]+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void game() {
        assertThat(faker.zelda().game(), matchesRegularExpression(""[A-Za-z'\\- :]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'game', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'zelda', '(', ')', '.', 'game', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z'"", '\\\\', '- :]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48a35bb3d916afec9b791c00b6bf5a1006027e40,ZeldaTest.java,character,"    public void character() {
        assertThat(faker.zelda().character(), matchesRegularExpression(""(?U)([\\w'\\-.\\(\\)]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/48a35bb3d916afec9b791c00b6bf5a1006027e40,"    public void character() {
        assertThat(faker.zelda().character(), matchesRegularExpression(""(?U)([\\w'\\-.\\(\\)]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'zelda', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(?U)([', '\\\\', ""w'"", '\\\\', '-.', '\\\\', '(', '\\\\', ')]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6dd2c088b78ef9ee7cfa9490a15d888f1f72a881,StockTest.java,testNasdaq,"    public void testNasdaq() {
        assertThat(faker.stock().nsdqSymbol(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/6dd2c088b78ef9ee7cfa9490a15d888f1f72a881,"    public void testNasdaq() {
        assertThat(faker.stock().nsdqSymbol(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNasdaq', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'stock', '(', ')', '.', 'nsdqSymbol', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6dd2c088b78ef9ee7cfa9490a15d888f1f72a881,StockTest.java,testNYSE,"    public void testNYSE() {
        assertThat(faker.stock().nyseSymbol(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/6dd2c088b78ef9ee7cfa9490a15d888f1f72a881,"    public void testNYSE() {
        assertThat(faker.stock().nyseSymbol(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNYSE', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'stock', '(', ')', '.', 'nyseSymbol', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,Witcher.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""witcher.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public String character() {
        return faker.fakeValuesService().resolve(""witcher.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'witcher.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,Witcher.java,witcher,"    public String witcher() {
        return faker.fakeValuesService().resolve(""witcher.witchers"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public String witcher() {
        return faker.fakeValuesService().resolve(""witcher.witchers"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'witcher', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'witcher.witchers', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,Witcher.java,school,"    public String school() {
        return faker.fakeValuesService().resolve(""witcher.schools"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public String school() {
        return faker.fakeValuesService().resolve(""witcher.schools"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'school', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'witcher.schools', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,Witcher.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""witcher.locations"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public String location() {
        return faker.fakeValuesService().resolve(""witcher.locations"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'witcher.locations', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,Witcher.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""witcher.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public String quote() {
        return faker.fakeValuesService().resolve(""witcher.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'witcher.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,Witcher.java,monster,"    public String monster() {
        return faker.fakeValuesService().resolve(""witcher.monsters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public String monster() {
        return faker.fakeValuesService().resolve(""witcher.monsters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'monster', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'witcher.monsters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,WitcherTest.java,testSchool,"    public void testSchool() {
        assertThat(faker.witcher().school(), matchesRegularExpression(""[A-Za-z]+""));
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public void testSchool() {
        assertThat(faker.witcher().school(), matchesRegularExpression(""[A-Za-z]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSchool', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'witcher', '(', ')', '.', 'school', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,13cba3aadc83ac739fe14358d04b170ae256106f,WitcherTest.java,testMonster,"    public void testMonster() {
        assertThat(faker.witcher().monster(), matchesRegularExpression(""[A-Za-z -]+""));
    }",https://www.github.com/dius/java-faker/commit/13cba3aadc83ac739fe14358d04b170ae256106f,"    public void testMonster() {
        assertThat(faker.witcher().monster(), matchesRegularExpression(""[A-Za-z -]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMonster', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'witcher', '(', ')', '.', 'monster', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z -]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f698e1da115b30635d02b0ef3e7ded147f8fc681,PokemonTest.java,name,"    public void name() {
        assertThat(faker.pokemon().name(), matchesRegularExpression(""[\\w']+.?( \\w+)?""));
    }",https://www.github.com/dius/java-faker/commit/f698e1da115b30635d02b0ef3e7ded147f8fc681,"    public void name() {
        assertThat(faker.pokemon().name(), matchesRegularExpression(""[\\w']+.?( \\w+)?""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'pokemon', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', ""w']+.?( "", '\\\\', 'w+)?', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5434db823ec7f16b417d2fd3a39cb13c56e50d47,Finance.java,creditCard,"    public String creditCard() {
        CreditCardType type = randomCreditCardType();
        return creditCard(type);
    }",https://www.github.com/dius/java-faker/commit/5434db823ec7f16b417d2fd3a39cb13c56e50d47,"    public String creditCard() {
        CreditCardType type = randomCreditCardType();
        return creditCard(type);
    }
","['    ', 'public', ' ', 'String', ' ', 'creditCard', '(', ')', ' ', '{', '\n', '        ', 'CreditCardType', ' ', 'type', ' ', '=', ' ', 'randomCreditCardType', '(', ')', ';', '\n', '        ', 'return', ' ', 'creditCard', '(', 'type', ')', ';', '\n', '    ', '}', '\n']"
master,5434db823ec7f16b417d2fd3a39cb13c56e50d47,FinanceTest.java,assertCardLuhnDigit,"    private void assertCardLuhnDigit(String creditCard) {
        final String creditCardStripped = creditCard.replaceAll(""-"", """");
        assertThat(LuhnCheckDigit.LUHN_CHECK_DIGIT.isValid(creditCardStripped), is(true));
    }",https://www.github.com/dius/java-faker/commit/5434db823ec7f16b417d2fd3a39cb13c56e50d47,"    private void assertCardLuhnDigit(String creditCard) {
        final String creditCardStripped = creditCard.replaceAll(""-"", """");
        assertThat(LuhnCheckDigit.LUHN_CHECK_DIGIT.isValid(creditCardStripped), is(true));
    }
","['    ', 'private', ' ', 'void', ' ', 'assertCardLuhnDigit', '(', 'String', ' ', 'creditCard', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'creditCardStripped', ' ', '=', ' ', 'creditCard', '.', 'replaceAll', '(', '""', '-', '""', ',', ' ', '""', '""', ')', ';', '\n', '        ', 'assertThat', '(', 'LuhnCheckDigit', '.', 'LUHN_CHECK_DIGIT', '.', 'isValid', '(', 'creditCardStripped', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5434db823ec7f16b417d2fd3a39cb13c56e50d47,FinanceTest.java,creditCardWithType,"    public void creditCardWithType() {
        for(CreditCardType type : CreditCardType.values()) {
            final String creditCard = faker.finance().creditCard(type);",https://www.github.com/dius/java-faker/commit/5434db823ec7f16b417d2fd3a39cb13c56e50d47,"    public void creditCardWithType() {
        for(CreditCardType type : CreditCardType.values()) {
            final String creditCard = faker.finance().creditCard(type);
","['    ', 'public', ' ', 'void', ' ', 'creditCardWithType', '(', ')', ' ', '{', '\n', '        ', 'for', '(', 'CreditCardType', ' ', 'type', ' ', ':', ' ', 'CreditCardType', '.', 'values', '(', ')', ')', ' ', '{', '\n', '            ', 'final', ' ', 'String', ' ', 'creditCard', ' ', '=', ' ', 'faker', '.', 'finance', '(', ')', '.', 'creditCard', '(', 'type', ')', ';', '\n']"
master,644fda206de6a0da533118d27b6693d7bce8bf41,Internet.java,uuid,"    public String uuid() {
        return UUID.randomUUID().toString();
    }",https://www.github.com/dius/java-faker/commit/644fda206de6a0da533118d27b6693d7bce8bf41,"    public String uuid() {
        return UUID.randomUUID().toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'uuid', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'UUID', '.', 'randomUUID', '(', ')', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,644fda206de6a0da533118d27b6693d7bce8bf41,InternetTest.java,testUuid,"    public void testUuid() {
        assertThat(faker.internet().uuid(), matchesRegularExpression(""/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i""));
    }",https://www.github.com/dius/java-faker/commit/644fda206de6a0da533118d27b6693d7bce8bf41,"    public void testUuid() {
        assertThat(faker.internet().uuid(), matchesRegularExpression(""/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUuid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'uuid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,838c1fe2d7eb51a2b520d916860511bde67e2d42,Avatar.java,image,"    public String image() {
        return baseUrl + faker.fakeValuesService().resolve(""internet.avatar"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/838c1fe2d7eb51a2b520d916860511bde67e2d42,"    public String image() {
        return baseUrl + faker.fakeValuesService().resolve(""internet.avatar"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'image', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'baseUrl', ' ', '+', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.avatar', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,838c1fe2d7eb51a2b520d916860511bde67e2d42,AvatarTest.java,testAvatar,"    public void testAvatar() {
        String avatar = faker.avatar().image();
        assertThat(avatar, matchesRegularExpression(""^https:\\/\\/s3.amazonaws\\.com\\/uifaces\\/faces\\/twitter\\/[a-zA-Z0-9_]+\\/128\\.jpg$""));
    }",https://www.github.com/dius/java-faker/commit/838c1fe2d7eb51a2b520d916860511bde67e2d42,"    public void testAvatar() {
        String avatar = faker.avatar().image();
        assertThat(avatar, matchesRegularExpression(""^https:\\/\\/s3.amazonaws\\.com\\/uifaces\\/faces\\/twitter\\/[a-zA-Z0-9_]+\\/128\\.jpg$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAvatar', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'avatar', ' ', '=', ' ', 'faker', '.', 'avatar', '(', ')', '.', 'image', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'avatar', ',', ' ', 'matchesRegularExpression', '(', '""', '^https:', '\\\\', '/', '\\\\', '/s3.amazonaws', '\\\\', '.com', '\\\\', '/uifaces', '\\\\', '/faces', '\\\\', '/twitter', '\\\\', '/[a-zA-Z0-9_]+', '\\\\', '/128', '\\\\', '.jpg$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,838c1fe2d7eb51a2b520d916860511bde67e2d42,InternetTest.java,testUuid,"    public void testUuid() {
        assertThat(faker.internet().uuid(), matchesRegularExpression(""^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$""));
    }",https://www.github.com/dius/java-faker/commit/838c1fe2d7eb51a2b520d916860511bde67e2d42,"    public void testUuid() {
        assertThat(faker.internet().uuid(), matchesRegularExpression(""^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUuid', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'uuid', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,164144bc08a850ffd84c2c37203246dff3f21558,FakeValuesService.java,numerify,"    public String numerify(String numberString) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(randomService.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/164144bc08a850ffd84c2c37203246dff3f21558,"    public String numerify(String numberString) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < numberString.length(); i++) {
            if (numberString.charAt(i) == '#') {
                sb.append(randomService.nextInt(10));
            } else {
                sb.append(numberString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'numerify', '(', 'String', ' ', 'numberString', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'numberString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'#'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'randomService', '.', 'nextInt', '(', '10', ')', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'numberString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,164144bc08a850ffd84c2c37203246dff3f21558,FakeValuesService.java,letterHelper,"    private String letterHelper(int baseChar, String letterString) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (baseChar + randomService.nextInt(26))); // a-z
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }",https://www.github.com/dius/java-faker/commit/164144bc08a850ffd84c2c37203246dff3f21558,"    private String letterHelper(int baseChar, String letterString) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < letterString.length(); i++) {
            if (letterString.charAt(i) == '?') {
                sb.append((char) (baseChar + randomService.nextInt(26))); 
            } else {
                sb.append(letterString.charAt(i));
            }
        }

        return sb.toString();
    }
","['    ', 'private', ' ', 'String', ' ', 'letterHelper', '(', 'int', ' ', 'baseChar', ',', ' ', 'String', ' ', 'letterString', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'sb', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'letterString', '.', 'length', '(', ')', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ' ', '=', '=', ' ', ""'?'"", ')', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', '(', 'char', ')', ' ', '(', 'baseChar', ' ', '+', ' ', 'randomService', '.', 'nextInt', '(', '26', ')', ')', ')', ';', ' ', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'sb', '.', 'append', '(', 'letterString', '.', 'charAt', '(', 'i', ')', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'sb', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,Weather.java,description,"    public String description() {
        return faker.resolve(""weather.description"");
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public String description() {
        return faker.resolve(""weather.description"");
    }
","['    ', 'public', ' ', 'String', ' ', 'description', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'weather.description', '""', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,Weather.java,temperatureCelsius,"    public String temperatureCelsius() {
        return temperature(DEFAULT_MIN_TEMP_C, DEFAULT_MAX_TEMP_C, ""weather.temperature.celsius"");
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public String temperatureCelsius() {
        return temperature(DEFAULT_MIN_TEMP_C, DEFAULT_MAX_TEMP_C, ""weather.temperature.celsius"");
    }
","['    ', 'public', ' ', 'String', ' ', 'temperatureCelsius', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'temperature', '(', 'DEFAULT_MIN_TEMP_C', ',', ' ', 'DEFAULT_MAX_TEMP_C', ',', ' ', '""', 'weather.temperature.celsius', '""', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,Weather.java,temperatureFahrenheit,"    public String temperatureFahrenheit() {
        return temperature(DEFAULT_MIN_TEMP_F, DEFAULT_MAX_TEMP_F, ""weather.temperature.fahrenheit"");
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public String temperatureFahrenheit() {
        return temperature(DEFAULT_MIN_TEMP_F, DEFAULT_MAX_TEMP_F, ""weather.temperature.fahrenheit"");
    }
","['    ', 'public', ' ', 'String', ' ', 'temperatureFahrenheit', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'temperature', '(', 'DEFAULT_MIN_TEMP_F', ',', ' ', 'DEFAULT_MAX_TEMP_F', ',', ' ', '""', 'weather.temperature.fahrenheit', '""', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,Weather.java,temperatureCelsius,"    public String temperatureCelsius(int minTemperature, int maxTemperature) {
        return temperature(minTemperature, maxTemperature, ""weather.temperature.celsius"");
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public String temperatureCelsius(int minTemperature, int maxTemperature) {
        return temperature(minTemperature, maxTemperature, ""weather.temperature.celsius"");
    }
","['    ', 'public', ' ', 'String', ' ', 'temperatureCelsius', '(', 'int', ' ', 'minTemperature', ',', ' ', 'int', ' ', 'maxTemperature', ')', ' ', '{', '\n', '        ', 'return', ' ', 'temperature', '(', 'minTemperature', ',', ' ', 'maxTemperature', ',', ' ', '""', 'weather.temperature.celsius', '""', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,Weather.java,temperatureFahrenheit,"    public String temperatureFahrenheit(int minTemperature, int maxTemperature) {
        return temperature(minTemperature, maxTemperature, ""weather.temperature.fahrenheit"");
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public String temperatureFahrenheit(int minTemperature, int maxTemperature) {
        return temperature(minTemperature, maxTemperature, ""weather.temperature.fahrenheit"");
    }
","['    ', 'public', ' ', 'String', ' ', 'temperatureFahrenheit', '(', 'int', ' ', 'minTemperature', ',', ' ', 'int', ' ', 'maxTemperature', ')', ' ', '{', '\n', '        ', 'return', ' ', 'temperature', '(', 'minTemperature', ',', ' ', 'maxTemperature', ',', ' ', '""', 'weather.temperature.fahrenheit', '""', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,Weather.java,temperature,"    private String temperature(int minTemperature, int maxTemperature, String degreeKey) {
        return faker.random().nextInt(minTemperature, maxTemperature) + faker.resolve(degreeKey);
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    private String temperature(int minTemperature, int maxTemperature, String degreeKey) {
        return faker.random().nextInt(minTemperature, maxTemperature) + faker.resolve(degreeKey);
    }
","['    ', 'private', ' ', 'String', ' ', 'temperature', '(', 'int', ' ', 'minTemperature', ',', ' ', 'int', ' ', 'maxTemperature', ',', ' ', 'String', ' ', 'degreeKey', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'minTemperature', ',', ' ', 'maxTemperature', ')', ' ', '+', ' ', 'faker', '.', 'resolve', '(', 'degreeKey', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,RandomService.java,nextInt,"    public Integer nextInt(int min, int max) {
        return random.nextInt((max - min) + 1) + min;
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public Integer nextInt(int min, int max) {
        return random.nextInt((max - min) + 1) + min;
    }
","['    ', 'public', ' ', 'Integer', ' ', 'nextInt', '(', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'random', '.', 'nextInt', '(', '(', 'max', ' ', '-', ' ', 'min', ')', ' ', '+', ' ', '1', ')', ' ', '+', ' ', 'min', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,WeatherTest.java,description,"    public void description() {
        assertThat(faker.weather().description(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public void description() {
        assertThat(faker.weather().description(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'description', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'weather', '(', ')', '.', 'description', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,44cc4ec091c6e82136e762ab4cb6be0d47789793,RandomServiceTest.java,testIntInRange,"    public void testIntInRange() {
        for (int i = 1; i < 100; i++) {
            assertThat(randomService.nextInt(-5, 5), both(lessThanOrEqualTo(5)).and(greaterThanOrEqualTo(-5)));",https://www.github.com/dius/java-faker/commit/44cc4ec091c6e82136e762ab4cb6be0d47789793,"    public void testIntInRange() {
        for (int i = 1; i < 100; i++) {
            assertThat(randomService.nextInt(-5, 5), both(lessThanOrEqualTo(5)).and(greaterThanOrEqualTo(-5)));
","['    ', 'public', ' ', 'void', ' ', 'testIntInRange', '(', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '1', ';', ' ', 'i', ' ', '<', ' ', '100', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'randomService', '.', 'nextInt', '(', '-', '5', ',', ' ', '5', ')', ',', ' ', 'both', '(', 'lessThanOrEqualTo', '(', '5', ')', ')', '.', 'and', '(', 'greaterThanOrEqualTo', '(', '-', '5', ')', ')', ')', ';', '\n']"
master,be0504e992909504400e5b03956b5e97236a145e,Currency.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""currency.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/be0504e992909504400e5b03956b5e97236a145e,"    public String name() {
        return faker.fakeValuesService().resolve(""currency.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'currency.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,be0504e992909504400e5b03956b5e97236a145e,Currency.java,code,"    public String code() {
        return faker.fakeValuesService().resolve(""currency.code"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/be0504e992909504400e5b03956b5e97236a145e,"    public String code() {
        return faker.fakeValuesService().resolve(""currency.code"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'code', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'currency.code', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,be0504e992909504400e5b03956b5e97236a145e,CurrencyTest.java,testName,"    public void testName() {
        assertThat(faker.currency().name(), matchesRegularExpression(""[\\w\\' ]+""));
    }",https://www.github.com/dius/java-faker/commit/be0504e992909504400e5b03956b5e97236a145e,"    public void testName() {
        assertThat(faker.currency().name(), matchesRegularExpression(""[\\w\\' ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'currency', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', 'w', '\\\\', ""' ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,be0504e992909504400e5b03956b5e97236a145e,CurrencyTest.java,testCode,"    public void testCode() {
        final Currency currency = faker.currency();
        assertThat(currency.code(), matchesRegularExpression(""[A-Z]{3}""));
    }",https://www.github.com/dius/java-faker/commit/be0504e992909504400e5b03956b5e97236a145e,"    public void testCode() {
        final Currency currency = faker.currency();
        assertThat(currency.code(), matchesRegularExpression(""[A-Z]{3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCode', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Currency', ' ', 'currency', ' ', '=', ' ', 'faker', '.', 'currency', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'currency', '.', 'code', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z]{3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,Lebowski.java,actor,"    public String actor() {
        return faker.fakeValuesService().resolve(""lebowski.actors"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,"    public String actor() {
        return faker.fakeValuesService().resolve(""lebowski.actors"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'actor', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'lebowski.actors', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,Lebowski.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""lebowski.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,"    public String character() {
        return faker.fakeValuesService().resolve(""lebowski.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'lebowski.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,Lebowski.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""lebowski.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,"    public String quote() {
        return faker.fakeValuesService().resolve(""lebowski.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'lebowski.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,LebowskiTest.java,actor,"    public void actor() {
        assertThat(faker.lebowski().actor(), matchesRegularExpression(""^([\\w]+ ?){1,3}$""));
    }",https://www.github.com/dius/java-faker/commit/96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,"    public void actor() {
        assertThat(faker.lebowski().actor(), matchesRegularExpression(""^([\\w]+ ?){1,3}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'actor', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lebowski', '(', ')', '.', 'actor', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', 'w]+ ?){1,3}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,LebowskiTest.java,character,"    public void character() {
        assertThat(faker.lebowski().character(), matchesRegularExpression(""^([\\w]+ ?){1,3}$""));
    }",https://www.github.com/dius/java-faker/commit/96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,"    public void character() {
        assertThat(faker.lebowski().character(), matchesRegularExpression(""^([\\w]+ ?){1,3}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lebowski', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', 'w]+ ?){1,3}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,LebowskiTest.java,quote,"    public void quote() {
        assertThat(faker.lebowski().quote(), matchesRegularExpression(""^([\\w.,!?'-]+ ?)+$""));
    }",https://www.github.com/dius/java-faker/commit/96c62f8f0cf1fc34504872a56b5541dd1f9d58ef,"    public void quote() {
        assertThat(faker.lebowski().quote(), matchesRegularExpression(""^([\\w.,!?'-]+ ?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lebowski', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', ""w.,!?'-]+ ?)+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ea60ee3cbfa76ce75cc7c676bec44f7eaf027ba6,DateAndTime.java,birthday,"    public Date birthday() {
        return birthday(DEFAULT_MIN_AGE, DEFAULT_MAX_AGE);
    }",https://www.github.com/dius/java-faker/commit/ea60ee3cbfa76ce75cc7c676bec44f7eaf027ba6,"    public Date birthday() {
        return birthday(DEFAULT_MIN_AGE, DEFAULT_MAX_AGE);
    }
","['    ', 'public', ' ', 'Date', ' ', 'birthday', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'birthday', '(', 'DEFAULT_MIN_AGE', ',', ' ', 'DEFAULT_MAX_AGE', ')', ';', '\n', '    ', '}', '\n']"
master,ea60ee3cbfa76ce75cc7c676bec44f7eaf027ba6,DateAndTime.java,birthday,"    public Date birthday(int minAge, int maxAge) {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        Calendar from = new GregorianCalendar(currentYear - maxAge, 0, 1);
        Calendar to = new GregorianCalendar(currentYear - minAge, 11, 31);

        return between(from.getTime(), to.getTime());
    }",https://www.github.com/dius/java-faker/commit/ea60ee3cbfa76ce75cc7c676bec44f7eaf027ba6,"    public Date birthday(int minAge, int maxAge) {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        Calendar from = new GregorianCalendar(currentYear - maxAge, 0, 1);
        Calendar to = new GregorianCalendar(currentYear - minAge, 11, 31);

        return between(from.getTime(), to.getTime());
    }
","['    ', 'public', ' ', 'Date', ' ', 'birthday', '(', 'int', ' ', 'minAge', ',', ' ', 'int', ' ', 'maxAge', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'Calendar', ' ', 'from', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', 'maxAge', ',', ' ', '0', ',', ' ', '1', ')', ';', '\n', '        ', 'Calendar', ' ', 'to', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', 'minAge', ',', ' ', '11', ',', ' ', '31', ')', ';', '\n', '\n', '        ', 'return', ' ', 'between', '(', 'from', '.', 'getTime', '(', ')', ',', ' ', 'to', '.', 'getTime', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ea60ee3cbfa76ce75cc7c676bec44f7eaf027ba6,DateAndTimeTest.java,testBirthday,"    public void testBirthday() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        long from = new GregorianCalendar(currentYear - 65, 0, 1).getTime().getTime();
        long to = new GregorianCalendar(currentYear - 18, 11, 31).getTime().getTime();

        for (int i = 0; i < 1000; i++) {
            Date birthday = faker.date().birthday();",https://www.github.com/dius/java-faker/commit/ea60ee3cbfa76ce75cc7c676bec44f7eaf027ba6,"    public void testBirthday() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        long from = new GregorianCalendar(currentYear - 65, 0, 1).getTime().getTime();
        long to = new GregorianCalendar(currentYear - 18, 11, 31).getTime().getTime();

        for (int i = 0; i < 1000; i++) {
            Date birthday = faker.date().birthday();
","['    ', 'public', ' ', 'void', ' ', 'testBirthday', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'long', ' ', 'from', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', '65', ',', ' ', '0', ',', ' ', '1', ')', '.', 'getTime', '(', ')', '.', 'getTime', '(', ')', ';', '\n', '        ', 'long', ' ', 'to', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', '18', ',', ' ', '11', ',', ' ', '31', ')', '.', 'getTime', '(', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'birthday', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'birthday', '(', ')', ';', '\n']"
master,c07f01f06311c4c61a1ad73296cd0af382ac5ca1,CurrencyTest.java,testName,"    public void testName() {
        assertThat(faker.currency().name(), matchesRegularExpression(""[\\w\\'\\.\\-\\(\\) ]+""));
    }",https://www.github.com/dius/java-faker/commit/c07f01f06311c4c61a1ad73296cd0af382ac5ca1,"    public void testName() {
        assertThat(faker.currency().name(), matchesRegularExpression(""[\\w\\'\\.\\-\\(\\) ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'currency', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', 'w', '\\\\', ""'"", '\\\\', '.', '\\\\', '-', '\\\\', '(', '\\\\', ') ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,DragonBall.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""dragon_ball.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String character() {
        return faker.fakeValuesService().resolve(""dragon_ball.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dragon_ball.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Faker.java,dragonBall,"    public DragonBall dragonBall() {
        return dragonBall;
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public DragonBall dragonBall() {
        return dragonBall;
    }
","['    ', 'public', ' ', 'DragonBall', ' ', 'dragonBall', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'dragonBall', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Faker.java,hitchhikersGuideToTheGalaxy,"    public HitchhikersGuideToTheGalaxy hitchhikersGuideToTheGalaxy() {
        return hitchhikersGuideToTheGalaxy;
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public HitchhikersGuideToTheGalaxy hitchhikersGuideToTheGalaxy() {
        return hitchhikersGuideToTheGalaxy;
    }
","['    ', 'public', ' ', 'HitchhikersGuideToTheGalaxy', ' ', 'hitchhikersGuideToTheGalaxy', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'hitchhikersGuideToTheGalaxy', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Faker.java,howIMetYourMother,"    public HowIMetYourMother howIMetYourMother() {
        return howIMetYourMother;
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public HowIMetYourMother howIMetYourMother() {
        return howIMetYourMother;
    }
","['    ', 'public', ' ', 'HowIMetYourMother', ' ', 'howIMetYourMother', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'howIMetYourMother', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Faker.java,leagueOfLegends,"    public LeagueOfLegends leagueOfLegends() {
        return leagueOfLegends;
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public LeagueOfLegends leagueOfLegends() {
        return leagueOfLegends;
    }
","['    ', 'public', ' ', 'LeagueOfLegends', ' ', 'leagueOfLegends', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'leagueOfLegends', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,FunnyName.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""funny_name.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String name() {
        return faker.fakeValuesService().resolve(""funny_name.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'funny_name.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String character() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.locations"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String location() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.locations"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.locations', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,marvinQuote,"    public String marvinQuote() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.marvin_quote"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String marvinQuote() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.marvin_quote"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'marvinQuote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.marvin_quote', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,planet,"    public String planet() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.planets"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String planet() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.planets"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.planets', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String quote() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,specie,"    public String specie() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.species"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String specie() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.species"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'specie', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.species', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxy.java,starship,"    public String starship() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.starships"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String starship() {
        return faker.fakeValuesService().resolve(""hitchhikers_guide_to_the_galaxy.starships"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'starship', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hitchhikers_guide_to_the_galaxy.starships', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Hobbit.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""hobbit.character"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String character() {
        return faker.fakeValuesService().resolve(""hobbit.character"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hobbit.character', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Hobbit.java,thorinsCompany,"    public String thorinsCompany() {
        return faker.fakeValuesService().resolve(""hobbit.thorins_company"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String thorinsCompany() {
        return faker.fakeValuesService().resolve(""hobbit.thorins_company"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'thorinsCompany', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hobbit.thorins_company', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Hobbit.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""hobbit.quote"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String quote() {
        return faker.fakeValuesService().resolve(""hobbit.quote"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hobbit.quote', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Hobbit.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""hobbit.location"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String location() {
        return faker.fakeValuesService().resolve(""hobbit.location"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'hobbit.location', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMother.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.character"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String character() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.character"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'how_i_met_your_mother.character', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMother.java,catchPhrase,"    public String catchPhrase() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.catch_phrase"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String catchPhrase() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.catch_phrase"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'catchPhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'how_i_met_your_mother.catch_phrase', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMother.java,highFive,"    public String highFive() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.high_five"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String highFive() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.high_five"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'highFive', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'how_i_met_your_mother.high_five', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMother.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.quote"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String quote() {
        return faker.fakeValuesService().resolve(""how_i_met_your_mother.quote"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'how_i_met_your_mother.quote', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegends.java,champion,"    public String champion() {
        return faker.fakeValuesService().resolve(""league_of_legends.champion"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String champion() {
        return faker.fakeValuesService().resolve(""league_of_legends.champion"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'champion', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'league_of_legends.champion', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegends.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""league_of_legends.location"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String location() {
        return faker.fakeValuesService().resolve(""league_of_legends.location"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'league_of_legends.location', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegends.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""league_of_legends.quote"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String quote() {
        return faker.fakeValuesService().resolve(""league_of_legends.quote"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'league_of_legends.quote', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegends.java,summonerSpell,"    public String summonerSpell() {
        return faker.fakeValuesService().resolve(""league_of_legends.summoner_spell"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String summonerSpell() {
        return faker.fakeValuesService().resolve(""league_of_legends.summoner_spell"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'summonerSpell', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'league_of_legends.summoner_spell', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegends.java,masteries,"    public String masteries() {
        return faker.fakeValuesService().resolve(""league_of_legends.masteries"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String masteries() {
        return faker.fakeValuesService().resolve(""league_of_legends.masteries"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'masteries', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'league_of_legends.masteries', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegends.java,rank,"    public String rank() {
        return faker.fakeValuesService().resolve(""league_of_legends.rank"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String rank() {
        return faker.fakeValuesService().resolve(""league_of_legends.rank"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'rank', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'league_of_legends.rank', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Overwatch.java,hero,"    public String hero() {
        return faker.fakeValuesService().resolve(""overwatch.heroes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String hero() {
        return faker.fakeValuesService().resolve(""overwatch.heroes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'hero', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'overwatch.heroes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Overwatch.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""overwatch.locations"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String location() {
        return faker.fakeValuesService().resolve(""overwatch.locations"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'overwatch.locations', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Overwatch.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""overwatch.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String quote() {
        return faker.fakeValuesService().resolve(""overwatch.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'overwatch.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,Robin.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""robin.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String quote() {
        return faker.fakeValuesService().resolve(""robin.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'robin.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrek.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""star_trek.character"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String character() {
        return faker.fakeValuesService().resolve(""star_trek.character"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'star_trek.character', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrek.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""star_trek.location"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String location() {
        return faker.fakeValuesService().resolve(""star_trek.location"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'star_trek.location', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrek.java,specie,"    public String specie() {
        return faker.fakeValuesService().resolve(""star_trek.specie"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String specie() {
        return faker.fakeValuesService().resolve(""star_trek.specie"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'specie', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'star_trek.specie', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrek.java,villain,"    public String villain() {
        return faker.fakeValuesService().resolve(""star_trek.villain"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public String villain() {
        return faker.fakeValuesService().resolve(""star_trek.villain"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'villain', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'star_trek.villain', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,DragonBallTest.java,character,"    public void character() {
        assertThat(faker.dragonBall().character(), matchesRegularExpression(""^(\\w+\\.?\\s?-?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void character() {
        assertThat(faker.dragonBall().character(), matchesRegularExpression(""^(\\w+\\.?\\s?-?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dragonBall', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', '.?', '\\\\', 's?-?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,FunnyNameTest.java,name,"    public void name() {
        assertThat(faker.funnyName().name(), matchesRegularExpression(""^(\\w+\\.?\\s?'?-?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void name() {
        assertThat(faker.funnyName().name(), matchesRegularExpression(""^(\\w+\\.?\\s?'?-?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'funnyName', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', '.?', '\\\\', ""s?'?-?)+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxyTest.java,character,"    public void character() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().character(), matchesRegularExpression(""^(\\w+(\\.?\\s?'?))+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void character() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().character(), matchesRegularExpression(""^(\\w+(\\.?\\s?'?))+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hitchhikersGuideToTheGalaxy', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+(', '\\\\', '.?', '\\\\', ""s?'?))+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxyTest.java,location,"    public void location() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().location(), matchesRegularExpression(""^(\\w+\\S?\\.?\\s?'?-?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void location() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().location(), matchesRegularExpression(""^(\\w+\\S?\\.?\\s?'?-?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hitchhikersGuideToTheGalaxy', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', 'S?', '\\\\', '.?', '\\\\', ""s?'?-?)+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxyTest.java,marvinQuote,"    public void marvinQuote() {
        assertFalse(faker.hitchhikersGuideToTheGalaxy().marvinQuote().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void marvinQuote() {
        assertFalse(faker.hitchhikersGuideToTheGalaxy().marvinQuote().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'marvinQuote', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'hitchhikersGuideToTheGalaxy', '(', ')', '.', 'marvinQuote', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxyTest.java,planet,"    public void planet() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().planet(), matchesRegularExpression(""^(\\w+-?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void planet() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().planet(), matchesRegularExpression(""^(\\w+-?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hitchhikersGuideToTheGalaxy', '(', ')', '.', 'planet', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+-?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxyTest.java,quote,"    public void quote() {
        assertFalse(faker.hitchhikersGuideToTheGalaxy().quote().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void quote() {
        assertFalse(faker.hitchhikersGuideToTheGalaxy().quote().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'hitchhikersGuideToTheGalaxy', '(', ')', '.', 'quote', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HitchhikersGuideToTheGalaxyTest.java,specie,"    public void specie() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().specie(), matchesRegularExpression(""^(\\w+'?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void specie() {
        assertThat(faker.hitchhikersGuideToTheGalaxy().specie(), matchesRegularExpression(""^(\\w+'?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'specie', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hitchhikersGuideToTheGalaxy', '(', ')', '.', 'specie', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+'?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HobbitTest.java,character,"    public void character() {
        assertThat(faker.hobbit().character(), matchesRegularExpression(""^(\\(?\\w+\\.?\\s?\\)?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void character() {
        assertThat(faker.hobbit().character(), matchesRegularExpression(""^(\\(?\\w+\\.?\\s?\\)?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hobbit', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', '(?', '\\\\', 'w+', '\\\\', '.?', '\\\\', 's?', '\\\\', ')?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HobbitTest.java,thorinsCompany,"    public void thorinsCompany() {
        assertThat(faker.hobbit().thorinsCompany(), matchesRegularExpression(""^(\\w+\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void thorinsCompany() {
        assertThat(faker.hobbit().thorinsCompany(), matchesRegularExpression(""^(\\w+\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'thorinsCompany', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hobbit', '(', ')', '.', 'thorinsCompany', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HobbitTest.java,quote,"    public void quote() {
        assertFalse(faker.hobbit().quote().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void quote() {
        assertFalse(faker.hobbit().quote().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'hobbit', '(', ')', '.', 'quote', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HobbitTest.java,location,"    public void location() {
        assertThat(faker.hobbit().location(), matchesRegularExpression(""^(\\w+'?-?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void location() {
        assertThat(faker.hobbit().location(), matchesRegularExpression(""^(\\w+'?-?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'hobbit', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+'?-?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMotherTest.java,character,"    public void character() {
        assertThat(faker.howIMetYourMother().character(), matchesRegularExpression(""^(\\w+\\.?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void character() {
        assertThat(faker.howIMetYourMother().character(), matchesRegularExpression(""^(\\w+\\.?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'howIMetYourMother', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', '.?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMotherTest.java,catchPhrase,"    public void catchPhrase() {
        assertFalse(faker.howIMetYourMother().catchPhrase().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void catchPhrase() {
        assertFalse(faker.howIMetYourMother().catchPhrase().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'catchPhrase', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'howIMetYourMother', '(', ')', '.', 'catchPhrase', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMotherTest.java,highFive,"    public void highFive() {
        assertThat(faker.howIMetYourMother().highFive(), matchesRegularExpression(""^(\\w+-?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void highFive() {
        assertThat(faker.howIMetYourMother().highFive(), matchesRegularExpression(""^(\\w+-?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'highFive', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'howIMetYourMother', '(', ')', '.', 'highFive', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+-?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,HowIMetYourMotherTest.java,quote,"    public void quote() {
        assertFalse(faker.howIMetYourMother().quote().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void quote() {
        assertFalse(faker.howIMetYourMother().quote().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'howIMetYourMother', '(', ')', '.', 'quote', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegendsTest.java,champion,"    public void champion() {
        assertThat(faker.leagueOfLegends().champion(), matchesRegularExpression(""^(\\w+\\.?-?'?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void champion() {
        assertThat(faker.leagueOfLegends().champion(), matchesRegularExpression(""^(\\w+\\.?-?'?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'champion', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'champion', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', "".?-?'?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegendsTest.java,location,"    public void location() {
        assertThat(faker.leagueOfLegends().location(), matchesRegularExpression(""^(\\w+\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void location() {
        assertThat(faker.leagueOfLegends().location(), matchesRegularExpression(""^(\\w+\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegendsTest.java,quote,"    public void quote() {
        assertFalse(faker.leagueOfLegends().quote().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void quote() {
        assertFalse(faker.leagueOfLegends().quote().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'quote', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegendsTest.java,summonerSpell,"    public void summonerSpell() {
        assertThat(faker.leagueOfLegends().summonerSpell(), matchesRegularExpression(""^(\\w+\\s?!?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void summonerSpell() {
        assertThat(faker.leagueOfLegends().summonerSpell(), matchesRegularExpression(""^(\\w+\\s?!?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'summonerSpell', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'summonerSpell', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', 's?!?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegendsTest.java,masteries,"    public void masteries() {
        assertThat(faker.leagueOfLegends().masteries(), matchesRegularExpression(""^(\\w+\\s?'?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void masteries() {
        assertThat(faker.leagueOfLegends().masteries(), matchesRegularExpression(""^(\\w+\\s?'?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'masteries', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'masteries', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', ""s?'?)+$"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,LeagueOfLegendsTest.java,rank,"    public void rank() {
        assertThat(faker.leagueOfLegends().rank(), matchesRegularExpression(""^\\w+(\\s[IV]+)?$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void rank() {
        assertThat(faker.leagueOfLegends().rank(), matchesRegularExpression(""^\\w+(\\s[IV]+)?$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'rank', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'rank', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^', '\\\\', 'w+(', '\\\\', 's[IV]+)?$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,OverwatchTest.java,hero,"    public void hero() {
        assertThat(faker.overwatch().hero(), matchesRegularExpression(""^(\\w+\\.?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void hero() {
        assertThat(faker.overwatch().hero(), matchesRegularExpression(""^(\\w+\\.?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'hero', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'overwatch', '(', ')', '.', 'hero', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', '.?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,OverwatchTest.java,location,"    public void location() {
        assertThat(faker.overwatch().location(), matchesRegularExpression(""^(\\w+'?:?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void location() {
        assertThat(faker.overwatch().location(), matchesRegularExpression(""^(\\w+'?:?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'overwatch', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+'?:?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,OverwatchTest.java,quote,"    public void quote() {
        assertFalse(faker.overwatch().quote().isEmpty());
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void quote() {
        assertFalse(faker.overwatch().quote().isEmpty());
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'overwatch', '(', ')', '.', 'quote', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,RobinTest.java,quote,"    public void quote() {
        assertThat(faker.robin().quote(), matchesRegularExpression(""^(\\w+\\.?-?'?\\s?)+(\\(?)?(\\w+\\s?\\.?)+(\\))?$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void quote() {
        assertThat(faker.robin().quote(), matchesRegularExpression(""^(\\w+\\.?-?'?\\s?)+(\\(?)?(\\w+\\s?\\.?)+(\\))?$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'robin', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', "".?-?'?"", '\\\\', 's?)+(', '\\\\', '(?)?(', '\\\\', 'w+', '\\\\', 's?', '\\\\', '.?)+(', '\\\\', '))?$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrekTest.java,character,"    public void character() {
        assertThat(faker.starTrek().character(), matchesRegularExpression(""^(\\w+-?'?\\.?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void character() {
        assertThat(faker.starTrek().character(), matchesRegularExpression(""^(\\w+-?'?\\.?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'starTrek', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+-?'?"", '\\\\', '.?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrekTest.java,location,"    public void location() {
        assertThat(faker.starTrek().location(), matchesRegularExpression(""^(\\w+'?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void location() {
        assertThat(faker.starTrek().location(), matchesRegularExpression(""^(\\w+'?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'starTrek', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+'?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrekTest.java,specie,"    public void specie() {
        assertThat(faker.starTrek().specie(), matchesRegularExpression(""^(\\w+-?'?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void specie() {
        assertThat(faker.starTrek().specie(), matchesRegularExpression(""^(\\w+-?'?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'specie', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'starTrek', '(', ')', '.', 'specie', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+-?'?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45c476376e927fd296b2195860048ebe2a79860d,StarTrekTest.java,villain,"    public void villain() {
        assertThat(faker.starTrek().villain(), matchesRegularExpression(""^(\\w+'?\\.?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/45c476376e927fd296b2195860048ebe2a79860d,"    public void villain() {
        assertThat(faker.starTrek().villain(), matchesRegularExpression(""^(\\w+'?\\.?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'villain', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'starTrek', '(', ')', '.', 'villain', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', ""w+'?"", '\\\\', '.?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d7409c83752022f422bb7f6624fdffeb7bf403ee,Name.java,username,"    public String username() {

        String username = StringUtils.join(new String[]{
                firstName().replaceAll(""'"", """").toLowerCase(),
                ""."",
                lastName().replaceAll(""'"", """").toLowerCase()}
        );

        return StringUtils.deleteWhitespace(username);
    }",https://www.github.com/dius/java-faker/commit/d7409c83752022f422bb7f6624fdffeb7bf403ee,"    public String username() {

        String username = StringUtils.join(new String[]{
                firstName().replaceAll(""'"", """").toLowerCase(),
                ""."",
                lastName().replaceAll(""'"", """").toLowerCase()}
        );

        return StringUtils.deleteWhitespace(username);
    }
","['    ', 'public', ' ', 'String', ' ', 'username', '(', ')', ' ', '{', '\n', '\n', '        ', 'String', ' ', 'username', ' ', '=', ' ', 'StringUtils', '.', 'join', '(', 'new', ' ', 'String', '[', ']', '{', '\n', '                ', 'firstName', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', '.', 'toLowerCase', '(', ')', ',', '\n', '                ', '""', '.', '""', ',', '\n', '                ', 'lastName', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', '.', 'toLowerCase', '(', ')', '}', '\n', '        ', ')', ';', '\n', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'deleteWhitespace', '(', 'username', ')', ';', '\n', '    ', '}', '\n']"
master,d7409c83752022f422bb7f6624fdffeb7bf403ee,NameTest.java,testUsernameWithSpaces,"    public void testUsernameWithSpaces() {
        final Name name = spy(new Name(faker));
        doReturn(""Compound Name"").when(name).firstName();
        doReturn(name).when(faker).name();
        assertThat(faker.name().username(), matchesRegularExpression(""^(\\w+)\\.(\\w+)$""));
    }",https://www.github.com/dius/java-faker/commit/d7409c83752022f422bb7f6624fdffeb7bf403ee,"    public void testUsernameWithSpaces() {
        final Name name = spy(new Name(faker));
        doReturn(""Compound Name"").when(name).firstName();
        doReturn(name).when(faker).name();
        assertThat(faker.name().username(), matchesRegularExpression(""^(\\w+)\\.(\\w+)$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUsernameWithSpaces', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'Name', ' ', 'name', ' ', '=', ' ', 'spy', '(', 'new', ' ', 'Name', '(', 'faker', ')', ')', ';', '\n', '        ', 'doReturn', '(', '""', 'Compound Name', '""', ')', '.', 'when', '(', 'name', ')', '.', 'firstName', '(', ')', ';', '\n', '        ', 'doReturn', '(', 'name', ')', '.', 'when', '(', 'faker', ')', '.', 'name', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'username', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+)', '\\\\', '.(', '\\\\', 'w+)$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,33a1aa0801aa7e33d49407a92d915a62e57cca58,Options.java,option,"    public <E> E option(E... options) {
        return options[faker.random().nextInt(options.length)];
    }",https://www.github.com/dius/java-faker/commit/33a1aa0801aa7e33d49407a92d915a62e57cca58,"    public <E> E option(E... options) {
        return options[faker.random().nextInt(options.length)];
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'option', '(', 'E', '.', '.', '.', ' ', 'options', ')', ' ', '{', '\n', '        ', 'return', ' ', 'options', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'options', '.', 'length', ')', ']', ';', '\n', '    ', '}', '\n']"
master,33a1aa0801aa7e33d49407a92d915a62e57cca58,OptionsTest.java,testOptionWithVarargsString,"    public void testOptionWithVarargsString() {
        assertThat(faker.options().option(""A"", ""B"", ""C""), isOneOf(options));
    }",https://www.github.com/dius/java-faker/commit/33a1aa0801aa7e33d49407a92d915a62e57cca58,"    public void testOptionWithVarargsString() {
        assertThat(faker.options().option(""A"", ""B"", ""C""), isOneOf(options));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOptionWithVarargsString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', '""', 'A', '""', ',', ' ', '""', 'B', '""', ',', ' ', '""', 'C', '""', ')', ',', ' ', 'isOneOf', '(', 'options', ')', ')', ';', '\n', '    ', '}', '\n']"
master,33a1aa0801aa7e33d49407a92d915a62e57cca58,OptionsTest.java,testOptionWithVarargsInteger,"    public void testOptionWithVarargsInteger() {
        Integer[] integerOptions = new Integer[] { 1, 3, 4, 5};
        assertThat(faker.options().option(1, 3, 4, 5), isOneOf(integerOptions));
    }",https://www.github.com/dius/java-faker/commit/33a1aa0801aa7e33d49407a92d915a62e57cca58,"    public void testOptionWithVarargsInteger() {
        Integer[] integerOptions = new Integer[] { 1, 3, 4, 5};
        assertThat(faker.options().option(1, 3, 4, 5), isOneOf(integerOptions));
    }
","['    ', 'public', ' ', 'void', ' ', 'testOptionWithVarargsInteger', '(', ')', ' ', '{', '\n', '        ', 'Integer', '[', ']', ' ', 'integerOptions', ' ', '=', ' ', 'new', ' ', 'Integer', '[', ']', ' ', '{', ' ', '1', ',', ' ', '3', ',', ' ', '4', ',', ' ', '5', '}', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', '1', ',', ' ', '3', ',', ' ', '4', ',', ' ', '5', ')', ',', ' ', 'isOneOf', '(', 'integerOptions', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""dog.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String name() {
        return faker.fakeValuesService().resolve(""dog.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,breed,"    public String breed() {
        return faker.fakeValuesService().resolve(""dog.breed"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String breed() {
        return faker.fakeValuesService().resolve(""dog.breed"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.breed', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,sound,"    public String sound() {
        return faker.fakeValuesService().resolve(""dog.sound"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String sound() {
        return faker.fakeValuesService().resolve(""dog.sound"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'sound', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.sound', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,memePhrase,"    public String memePhrase() {
        return faker.fakeValuesService().resolve(""dog.meme_phrase"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String memePhrase() {
        return faker.fakeValuesService().resolve(""dog.meme_phrase"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'memePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.meme_phrase', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,age,"    public String age() {
        return faker.fakeValuesService().resolve(""dog.age"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String age() {
        return faker.fakeValuesService().resolve(""dog.age"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'age', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.age', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,coatLength,"    public String coatLength() {
        return faker.fakeValuesService().resolve(""dog.coat_length"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String coatLength() {
        return faker.fakeValuesService().resolve(""dog.coat_length"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'coatLength', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.coat_length', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,gender,"    public String gender() {
        return faker.fakeValuesService().resolve(""dog.gender"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String gender() {
        return faker.fakeValuesService().resolve(""dog.gender"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'gender', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.gender', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,Dog.java,size,"    public String size() {
        return faker.fakeValuesService().resolve(""dog.size"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public String size() {
        return faker.fakeValuesService().resolve(""dog.size"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'size', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dog.size', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,name,"    public void name() {
        assertThat(faker.dog().name(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void name() {
        assertThat(faker.dog().name(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,breed,"    public void breed() {
        assertThat(faker.dog().breed(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void breed() {
        assertThat(faker.dog().breed(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'breed', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,sound,"    public void sound() {
        assertThat(faker.dog().sound(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void sound() {
        assertThat(faker.dog().sound(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'sound', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'sound', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,memePhrase,"    public void memePhrase() {
        assertThat(faker.dog().memePhrase(), matchesRegularExpression(""[A-Za-z0-9'\\/ ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void memePhrase() {
        assertThat(faker.dog().memePhrase(), matchesRegularExpression(""[A-Za-z0-9'\\/ ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'memePhrase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'memePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z0-9'"", '\\\\', '/ ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,age,"    public void age() {
        assertThat(faker.dog().age(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void age() {
        assertThat(faker.dog().age(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'age', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'age', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,gender,"    public void gender() {
        assertThat(faker.dog().gender(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void gender() {
        assertThat(faker.dog().gender(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'gender', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'gender', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,coatLength,"    public void coatLength() {
        assertThat(faker.dog().coatLength(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void coatLength() {
        assertThat(faker.dog().coatLength(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'coatLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'coatLength', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c1d3e8009163875c93c2225bc2f51dfe7c33eeca,DogTest.java,size,"    public void size() {
        assertThat(faker.dog().size(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/c1d3e8009163875c93c2225bc2f51dfe7c33eeca,"    public void size() {
        assertThat(faker.dog().size(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'size', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dog', '(', ')', '.', 'size', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,Medical.java,medicineName,"    public String medicineName() {
        return faker.fakeValuesService().resolve(""medical.medicine_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public String medicineName() {
        return faker.fakeValuesService().resolve(""medical.medicine_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'medicineName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'medical.medicine_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,Medical.java,diseaseName,"    public String diseaseName() {
        return faker.fakeValuesService().resolve(""medical.disease_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public String diseaseName() {
        return faker.fakeValuesService().resolve(""medical.disease_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'diseaseName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'medical.disease_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,Medical.java,hospitalName,"    public String hospitalName() {
        return faker.fakeValuesService().resolve(""medical.hospital_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public String hospitalName() {
        return faker.fakeValuesService().resolve(""medical.hospital_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'hospitalName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'medical.hospital_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,Medical.java,symptoms,"    public String symptoms() {
        return faker.fakeValuesService().resolve(""medical.symptoms"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public String symptoms() {
        return faker.fakeValuesService().resolve(""medical.symptoms"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'symptoms', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'medical.symptoms', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,MedicalTest.java,testMedicineName,"    public void testMedicineName() {
        assertThat(faker.medical().medicineName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public void testMedicineName() {
        assertThat(faker.medical().medicineName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMedicineName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'medicineName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,MedicalTest.java,testDiseaseName,"    public void testDiseaseName() {
        assertThat(faker.medical().diseaseName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public void testDiseaseName() {
        assertThat(faker.medical().diseaseName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDiseaseName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'diseaseName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,MedicalTest.java,testHospitalName,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'hospitalName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6d64f8538bf5fd0ad623efaa637face0d5f88e60,MedicalTest.java,testSymptom,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/6d64f8538bf5fd0ad623efaa637face0d5f88e60,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""([\\w']+\\.?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptom', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'symptoms', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,414c2c8a7df17ab2bebbb99df1317eac26190ddc,MedicalTest.java,testSymptom,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/414c2c8a7df17ab2bebbb99df1317eac26190ddc,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptom', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'symptoms', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,414c2c8a7df17ab2bebbb99df1317eac26190ddc,MedicalTest.java,testSymptomStatic,"    public void testSymptomStatic() {
        assertThat(""Infertility (Female)"", matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/414c2c8a7df17ab2bebbb99df1317eac26190ddc,"    public void testSymptomStatic() {
        assertThat(""Infertility (Female)"", matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptomStatic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Infertility (Female)', '""', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ea463fed2b9e892d122b1d57db3e3463f0a4b0a5,MedicalTest.java,testMedicineName,"    public void testMedicineName() {
        assertThat(faker.medical().medicineName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,5}""));
    }",https://www.github.com/dius/java-faker/commit/ea463fed2b9e892d122b1d57db3e3463f0a4b0a5,"    public void testMedicineName() {
        assertThat(faker.medical().medicineName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMedicineName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'medicineName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ea463fed2b9e892d122b1d57db3e3463f0a4b0a5,MedicalTest.java,testHospitalName,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,8}""));
    }",https://www.github.com/dius/java-faker/commit/ea463fed2b9e892d122b1d57db3e3463f0a4b0a5,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,8}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'hospitalName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,8}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ea463fed2b9e892d122b1d57db3e3463f0a4b0a5,MedicalTest.java,testHospitalStatic,"    public void testHospitalStatic() {
        assertThat(""ST VINCENT SALEM HOSPITAL INC"", matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,5}""));
    }",https://www.github.com/dius/java-faker/commit/ea463fed2b9e892d122b1d57db3e3463f0a4b0a5,"    public void testHospitalStatic() {
        assertThat(""ST VINCENT SALEM HOSPITAL INC"", matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalStatic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'ST VINCENT SALEM HOSPITAL INC', '""', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6303ef3ba61ae72ca1356d6b7f32ba75e174524a,MedicalTest.java,testHospitalStatic,"    public void testHospitalStatic() {
        assertThat(""IREDELL MEMORIAL HOSPITAL, INCORPORATED"", matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/6303ef3ba61ae72ca1356d6b7f32ba75e174524a,"    public void testHospitalStatic() {
        assertThat(""IREDELL MEMORIAL HOSPITAL, INCORPORATED"", matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalStatic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'IREDELL MEMORIAL HOSPITAL, INCORPORATED', '""', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w',]+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,39eb326ebed07651e3674c2c7d4abb33ff2ee424,MedicalTest.java,testHospitalName,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,8}""));
    }",https://www.github.com/dius/java-faker/commit/39eb326ebed07651e3674c2c7d4abb33ff2ee424,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,8}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'hospitalName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w',]+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,8}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,39eb326ebed07651e3674c2c7d4abb33ff2ee424,MedicalTest.java,testHospitalStatic,"    public void testHospitalStatic() {
        assertThat(""LSU BOGALUSA MEDICAL CENTER (OUTPATIENT CAMPUS)"", matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/39eb326ebed07651e3674c2c7d4abb33ff2ee424,"    public void testHospitalStatic() {
        assertThat(""LSU BOGALUSA MEDICAL CENTER (OUTPATIENT CAMPUS)"", matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalStatic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'LSU BOGALUSA MEDICAL CENTER (OUTPATIENT CAMPUS)', '""', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w',]+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4806a440002816435870d6d2b84f4f4307bad7c3,MedicalTest.java,testDiseaseName,"    public void testDiseaseName() {
        assertThat(faker.medical().diseaseName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,8}""));
    }",https://www.github.com/dius/java-faker/commit/4806a440002816435870d6d2b84f4f4307bad7c3,"    public void testDiseaseName() {
        assertThat(faker.medical().diseaseName(), matchesRegularExpression(""([\\w']+\\.?( )?){2,8}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDiseaseName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'diseaseName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?( )?){2,8}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4806a440002816435870d6d2b84f4f4307bad7c3,MedicalTest.java,testHospitalName,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,10}""));
    }",https://www.github.com/dius/java-faker/commit/4806a440002816435870d6d2b84f4f4307bad7c3,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'hospitalName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w',]+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4806a440002816435870d6d2b84f4f4307bad7c3,MedicalTest.java,testSymptom,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,5}""));
    }",https://www.github.com/dius/java-faker/commit/4806a440002816435870d6d2b84f4f4307bad7c3,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptom', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'symptoms', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4806a440002816435870d6d2b84f4f4307bad7c3,MedicalTest.java,testSymptomStatic,"    public void testSymptomStatic() {
        assertThat(""Infertility (Female)"", matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,15}""));
    }",https://www.github.com/dius/java-faker/commit/4806a440002816435870d6d2b84f4f4307bad7c3,"    public void testSymptomStatic() {
        assertThat(""Infertility (Female)"", matchesRegularExpression(""([\\w']+\\.?.\\(?[\\w']\\)?( )?){2,15}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptomStatic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'Infertility (Female)', '""', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w']+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,15}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4806a440002816435870d6d2b84f4f4307bad7c3,MedicalTest.java,testHospitalStatic,"    public void testHospitalStatic() {
        assertThat(""LSU BOGALUSA MEDICAL CENTER (OUTPATIENT CAMPUS)"", matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,10}""));
    }",https://www.github.com/dius/java-faker/commit/4806a440002816435870d6d2b84f4f4307bad7c3,"    public void testHospitalStatic() {
        assertThat(""LSU BOGALUSA MEDICAL CENTER (OUTPATIENT CAMPUS)"", matchesRegularExpression(""([\\w',]+\\.?.\\(?[\\w']\\)?( )?){2,10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalStatic', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '""', 'LSU BOGALUSA MEDICAL CENTER (OUTPATIENT CAMPUS)', '""', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w',]+"", '\\\\', '.?.', '\\\\', '(?[', '\\\\', ""w']"", '\\\\', ')?( )?){2,10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,23e2e34c178463ad29b3339572e4258c469ffc56,Music.java,genre,"    public String genre() {
        return faker.resolve(""music.genre"");
    }",https://www.github.com/dius/java-faker/commit/23e2e34c178463ad29b3339572e4258c469ffc56,"    public String genre() {
        return faker.resolve(""music.genre"");
    }
","['    ', 'public', ' ', 'String', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'music.genre', '""', ')', ';', '\n', '    ', '}', '\n']"
master,23e2e34c178463ad29b3339572e4258c469ffc56,MusicTest.java,genre,"    public void genre() {
        assertThat(faker.music().genre(), matchesRegularExpression(""\\w+ ?\\w+""));
    }",https://www.github.com/dius/java-faker/commit/23e2e34c178463ad29b3339572e4258c469ffc56,"    public void genre() {
        assertThat(faker.music().genre(), matchesRegularExpression(""\\w+ ?\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'music', '(', ')', '.', 'genre', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+ ?', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6fc2a3b0a5a33fa3b921925303ef4a8e73dccbbb,Internet.java,emailAddress,"    public String emailAddress(String localPart) {
        return emailAddress(localPart, FakerIDN.toASCII(faker.fakeValuesService().resolve(""internet.free_email"", this, faker)));
    }",https://www.github.com/dius/java-faker/commit/6fc2a3b0a5a33fa3b921925303ef4a8e73dccbbb,"    public String emailAddress(String localPart) {
        return emailAddress(localPart, FakerIDN.toASCII(faker.fakeValuesService().resolve(""internet.free_email"", this, faker)));
    }
","['    ', 'public', ' ', 'String', ' ', 'emailAddress', '(', 'String', ' ', 'localPart', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'localPart', ',', ' ', 'FakerIDN', '.', 'toASCII', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.free_email', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6fc2a3b0a5a33fa3b921925303ef4a8e73dccbbb,Internet.java,safeEmailAddress,"    public String safeEmailAddress(String localPart) {
        return emailAddress(localPart, FakerIDN.toASCII(faker.fakeValuesService().resolve(""internet.safe_email"", this, faker)));
    }",https://www.github.com/dius/java-faker/commit/6fc2a3b0a5a33fa3b921925303ef4a8e73dccbbb,"    public String safeEmailAddress(String localPart) {
        return emailAddress(localPart, FakerIDN.toASCII(faker.fakeValuesService().resolve(""internet.safe_email"", this, faker)));
    }
","['    ', 'public', ' ', 'String', ' ', 'safeEmailAddress', '(', 'String', ' ', 'localPart', ')', ' ', '{', '\n', '        ', 'return', ' ', 'emailAddress', '(', 'localPart', ',', ' ', 'FakerIDN', '.', 'toASCII', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'internet.safe_email', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6fc2a3b0a5a33fa3b921925303ef4a8e73dccbbb,Internet.java,emailAddress,"    private String emailAddress(String localPart, String domain) {
        return join(stripAccents(localPart), ""@"", domain);
    }",https://www.github.com/dius/java-faker/commit/6fc2a3b0a5a33fa3b921925303ef4a8e73dccbbb,"    private String emailAddress(String localPart, String domain) {
        return join(stripAccents(localPart), ""@"", domain);
    }
","['    ', 'private', ' ', 'String', ' ', 'emailAddress', '(', 'String', ' ', 'localPart', ',', ' ', 'String', ' ', 'domain', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', 'stripAccents', '(', 'localPart', ')', ',', ' ', '""', '@', '""', ',', ' ', 'domain', ')', ';', '\n', '    ', '}', '\n']"
master,f73dd19086aa44e7dad0b95d4e0dd4bca7dfe1bd,Address.java,zipCodeByState,"    public String zipCodeByState(String stateAbbr) {
        return faker.fakeValuesService().resolve(""address.postcode_by_state."" + stateAbbr, this, faker);
    }",https://www.github.com/dius/java-faker/commit/f73dd19086aa44e7dad0b95d4e0dd4bca7dfe1bd,"    public String zipCodeByState(String stateAbbr) {
        return faker.fakeValuesService().resolve(""address.postcode_by_state."" + stateAbbr, this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'zipCodeByState', '(', 'String', ' ', 'stateAbbr', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.postcode_by_state.', '""', ' ', '+', ' ', 'stateAbbr', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f73dd19086aa44e7dad0b95d4e0dd4bca7dfe1bd,Address.java,countyByZipCode,"    public String countyByZipCode(String postCode) {
        return faker.fakeValuesService().resolve(""address.county_by_postcode."" + postCode, this, faker);
    }",https://www.github.com/dius/java-faker/commit/f73dd19086aa44e7dad0b95d4e0dd4bca7dfe1bd,"    public String countyByZipCode(String postCode) {
        return faker.fakeValuesService().resolve(""address.county_by_postcode."" + postCode, this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'countyByZipCode', '(', 'String', ' ', 'postCode', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.county_by_postcode.', '""', ' ', '+', ' ', 'postCode', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f73dd19086aa44e7dad0b95d4e0dd4bca7dfe1bd,AddressTest.java,testCountyByZipCode,"    public void testCountyByZipCode() {
        faker = new Faker(new Locale(""en-US""));
        assertThat(faker.address().countyByZipCode(faker.address().zipCodeByState(faker.address().stateAbbr())), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/f73dd19086aa44e7dad0b95d4e0dd4bca7dfe1bd,"    public void testCountyByZipCode() {
        faker = new Faker(new Locale(""en-US""));
        assertThat(faker.address().countyByZipCode(faker.address().zipCodeByState(faker.address().stateAbbr())), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountyByZipCode', '(', ')', ' ', '{', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'en-US', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'countyByZipCode', '(', 'faker', '.', 'address', '(', ')', '.', 'zipCodeByState', '(', 'faker', '.', 'address', '(', ')', '.', 'stateAbbr', '(', ')', ')', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c55c6416f07650b70b81a6dca09db73cc1689531,DateAndTime.java,future,"    public Date future(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() + unit.toMillis(minimum));
        return future(atMost, unit, minimumDate);
    }",https://www.github.com/dius/java-faker/commit/c55c6416f07650b70b81a6dca09db73cc1689531,"    public Date future(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() + unit.toMillis(minimum));
        return future(atMost, unit, minimumDate);
    }
","['    ', 'public', ' ', 'Date', ' ', 'future', '(', 'int', ' ', 'atMost', ',', ' ', 'int', ' ', 'minimum', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'minimumDate', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '+', ' ', 'unit', '.', 'toMillis', '(', 'minimum', ')', ')', ';', '\n', '        ', 'return', ' ', 'future', '(', 'atMost', ',', ' ', 'unit', ',', ' ', 'minimumDate', ')', ';', '\n', '    ', '}', '\n']"
master,c55c6416f07650b70b81a6dca09db73cc1689531,DateAndTime.java,past,"    public Date past(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() - unit.toMillis(minimum));
        return past(atMost, unit, minimumDate);
    }",https://www.github.com/dius/java-faker/commit/c55c6416f07650b70b81a6dca09db73cc1689531,"    public Date past(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() - unit.toMillis(minimum));
        return past(atMost, unit, minimumDate);
    }
","['    ', 'public', ' ', 'Date', ' ', 'past', '(', 'int', ' ', 'atMost', ',', ' ', 'int', ' ', 'minimum', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'minimumDate', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '-', ' ', 'unit', '.', 'toMillis', '(', 'minimum', ')', ')', ';', '\n', '        ', 'return', ' ', 'past', '(', 'atMost', ',', ' ', 'unit', ',', ' ', 'minimumDate', ')', ';', '\n', '    ', '}', '\n']"
master,f973acb33f91db0f1a581ab2ef4287083c3faa1a,NameTest.java,testNameWithMiddleDoesNotHaveRepeatedName,"    public void testNameWithMiddleDoesNotHaveRepeatedName() {
        String nameWithMiddle = faker.name().nameWithMiddle();
        String[] splitNames = nameWithMiddle.split("" "");
        String firstName = splitNames[0];
        String middleName = splitNames[1];
        assertThat(firstName, not(equalTo(middleName)));
    }",https://www.github.com/dius/java-faker/commit/f973acb33f91db0f1a581ab2ef4287083c3faa1a,"    public void testNameWithMiddleDoesNotHaveRepeatedName() {
        String nameWithMiddle = faker.name().nameWithMiddle();
        String[] splitNames = nameWithMiddle.split("" "");
        String firstName = splitNames[0];
        String middleName = splitNames[1];
        assertThat(firstName, not(equalTo(middleName)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testNameWithMiddleDoesNotHaveRepeatedName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'nameWithMiddle', ' ', '=', ' ', 'faker', '.', 'name', '(', ')', '.', 'nameWithMiddle', '(', ')', ';', '\n', '        ', 'String', '[', ']', ' ', 'splitNames', ' ', '=', ' ', 'nameWithMiddle', '.', 'split', '(', '""', ' ', '""', ')', ';', '\n', '        ', 'String', ' ', 'firstName', ' ', '=', ' ', 'splitNames', '[', '0', ']', ';', '\n', '        ', 'String', ' ', 'middleName', ' ', '=', ' ', 'splitNames', '[', '1', ']', ';', '\n', '        ', 'assertThat', '(', 'firstName', ',', ' ', 'not', '(', 'equalTo', '(', 'middleName', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f973acb33f91db0f1a581ab2ef4287083c3faa1a,FakeValuesServiceTest.java,resolveUsingTheSameKeyTwice,"    public void resolveUsingTheSameKeyTwice() {
        // #{hello} -> DummyService.hello

        // given
        final DummyService dummy = mock(DummyService.class);
        when(dummy.hello()).thenReturn(""1"").thenReturn(""2"");

        // when
        final String actual = fakeValuesService.resolve(""property.sameResolution"", dummy, faker);

        // then
        assertThat(actual, is(""1 2""));
        verifyZeroInteractions(faker);
    }",https://www.github.com/dius/java-faker/commit/f973acb33f91db0f1a581ab2ef4287083c3faa1a,"    public void resolveUsingTheSameKeyTwice() {
        

        
        final DummyService dummy = mock(DummyService.class);
        when(dummy.hello()).thenReturn(""1"").thenReturn(""2"");

        
        final String actual = fakeValuesService.resolve(""property.sameResolution"", dummy, faker);

        
        assertThat(actual, is(""1 2""));
        verifyZeroInteractions(faker);
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveUsingTheSameKeyTwice', '(', ')', ' ', '{', '\n', '        ', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '        ', 'when', '(', 'dummy', '.', 'hello', '(', ')', ')', '.', 'thenReturn', '(', '""', '1', '""', ')', '.', 'thenReturn', '(', '""', '2', '""', ')', ';', '\n', '\n', '        ', '\n', '        ', 'final', ' ', 'String', ' ', 'actual', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.sameResolution', '""', ',', ' ', 'dummy', ',', ' ', 'faker', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'is', '(', '""', '1 2', '""', ')', ')', ';', '\n', '        ', 'verifyZeroInteractions', '(', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,5ffcfd82b6851f808fcf64878f49b361092c3b77,MedicalTest.java,testHospitalName,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""[A-Z ,./&'()]+""));
    }",https://www.github.com/dius/java-faker/commit/5ffcfd82b6851f808fcf64878f49b361092c3b77,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), matchesRegularExpression(""[A-Z ,./&'()]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'hospitalName', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Z ,./&'()]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e5f444ec4c915af443ee8d24e50c47e5b16c293b,DateAndTimeTest.java,testFutureDateWithMinimum,"    public void testFutureDateWithMinimum(){
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date future = faker.date().future(5, 4, TimeUnit.SECONDS);",https://www.github.com/dius/java-faker/commit/e5f444ec4c915af443ee8d24e50c47e5b16c293b,"    public void testFutureDateWithMinimum(){
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date future = faker.date().future(5, 4, TimeUnit.SECONDS);
","['    ', 'public', ' ', 'void', ' ', 'testFutureDateWithMinimum', '(', ')', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'future', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'future', '(', '5', ',', ' ', '4', ',', ' ', 'TimeUnit', '.', 'SECONDS', ')', ';', '\n']"
master,e5f444ec4c915af443ee8d24e50c47e5b16c293b,DateAndTimeTest.java,testPastDateWithMinimum,"    public void testPastDateWithMinimum(){
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date past = faker.date().past(5, 4, TimeUnit.SECONDS);",https://www.github.com/dius/java-faker/commit/e5f444ec4c915af443ee8d24e50c47e5b16c293b,"    public void testPastDateWithMinimum(){
        Date now = new Date();

        for (int i = 0; i < 1000; i++) {
            Date past = faker.date().past(5, 4, TimeUnit.SECONDS);
","['    ', 'public', ' ', 'void', ' ', 'testPastDateWithMinimum', '(', ')', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'past', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'past', '(', '5', ',', ' ', '4', ',', ' ', 'TimeUnit', '.', 'SECONDS', ')', ';', '\n']"
master,578c13f135a3a9a0e0eebc1f08fb3447170053b3,DateAndTime.java,future,"    public Date future(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() + unit.toMillis(minimum));
        return future(atMost - minimum, unit, minimumDate);
    }",https://www.github.com/dius/java-faker/commit/578c13f135a3a9a0e0eebc1f08fb3447170053b3,"    public Date future(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() + unit.toMillis(minimum));
        return future(atMost - minimum, unit, minimumDate);
    }
","['    ', 'public', ' ', 'Date', ' ', 'future', '(', 'int', ' ', 'atMost', ',', ' ', 'int', ' ', 'minimum', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'minimumDate', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '+', ' ', 'unit', '.', 'toMillis', '(', 'minimum', ')', ')', ';', '\n', '        ', 'return', ' ', 'future', '(', 'atMost', ' ', '-', ' ', 'minimum', ',', ' ', 'unit', ',', ' ', 'minimumDate', ')', ';', '\n', '    ', '}', '\n']"
master,578c13f135a3a9a0e0eebc1f08fb3447170053b3,DateAndTime.java,past,"    public Date past(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() - unit.toMillis(minimum));
        return past(atMost - minimum, unit, minimumDate);
    }",https://www.github.com/dius/java-faker/commit/578c13f135a3a9a0e0eebc1f08fb3447170053b3,"    public Date past(int atMost, int minimum, TimeUnit unit) {
        Date now = new Date();
        Date minimumDate = new Date(now.getTime() - unit.toMillis(minimum));
        return past(atMost - minimum, unit, minimumDate);
    }
","['    ', 'public', ' ', 'Date', ' ', 'past', '(', 'int', ' ', 'atMost', ',', ' ', 'int', ' ', 'minimum', ',', ' ', 'TimeUnit', ' ', 'unit', ')', ' ', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'minimumDate', ' ', '=', ' ', 'new', ' ', 'Date', '(', 'now', '.', 'getTime', '(', ')', ' ', '-', ' ', 'unit', '.', 'toMillis', '(', 'minimum', ')', ')', ';', '\n', '        ', 'return', ' ', 'past', '(', 'atMost', ' ', '-', ' ', 'minimum', ',', ' ', 'unit', ',', ' ', 'minimumDate', ')', ';', '\n', '    ', '}', '\n']"
master,0098bd765602e32f45911ebb4300760070c72648,DateAndTimeTest.java,testFutureDateWithMinimum,"    public void testFutureDateWithMinimum(){
        for (int i = 0; i < 1000; i++) {
            Date now = new Date();",https://www.github.com/dius/java-faker/commit/0098bd765602e32f45911ebb4300760070c72648,"    public void testFutureDateWithMinimum(){
        for (int i = 0; i < 1000; i++) {
            Date now = new Date();
","['    ', 'public', ' ', 'void', ' ', 'testFutureDateWithMinimum', '(', ')', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n']"
master,0098bd765602e32f45911ebb4300760070c72648,DateAndTimeTest.java,testPastDateWithMinimum,"    public void testPastDateWithMinimum(){
        for (int i = 0; i < 1000; i++) {
            Date now = new Date();",https://www.github.com/dius/java-faker/commit/0098bd765602e32f45911ebb4300760070c72648,"    public void testPastDateWithMinimum(){
        for (int i = 0; i < 1000; i++) {
            Date now = new Date();
","['    ', 'public', ' ', 'void', ' ', 'testPastDateWithMinimum', '(', ')', '{', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n']"
master,2024176a48331717ec67b055d7ecd0ab94662f89,MusicTest.java,genre,"    public void genre() {
        assertThat(faker.music().genre(), matchesRegularExpression(""[[ -]?\\w+]+""));
    }",https://www.github.com/dius/java-faker/commit/2024176a48331717ec67b055d7ecd0ab94662f89,"    public void genre() {
        assertThat(faker.music().genre(), matchesRegularExpression(""[[ -]?\\w+]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'music', '(', ')', '.', 'genre', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[[ -]?', '\\\\', 'w+]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Cat.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""creature.cat.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String name() {
        return faker.fakeValuesService().resolve(""creature.cat.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.cat.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Cat.java,breed,"    public String breed() {
        return faker.fakeValuesService().resolve(""creature.cat.breed"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String breed() {
        return faker.fakeValuesService().resolve(""creature.cat.breed"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.cat.breed', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Cat.java,registry,"    public String registry() {
        return faker.fakeValuesService().resolve(""creature.cat.registry"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String registry() {
        return faker.fakeValuesService().resolve(""creature.cat.registry"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'registry', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.cat.registry', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""creature.dog.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String name() {
        return faker.fakeValuesService().resolve(""creature.dog.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,breed,"    public String breed() {
        return faker.fakeValuesService().resolve(""creature.dog.breed"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String breed() {
        return faker.fakeValuesService().resolve(""creature.dog.breed"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'breed', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.breed', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,sound,"    public String sound() {
        return faker.fakeValuesService().resolve(""creature.dog.sound"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String sound() {
        return faker.fakeValuesService().resolve(""creature.dog.sound"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'sound', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.sound', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,memePhrase,"    public String memePhrase() {
        return faker.fakeValuesService().resolve(""creature.dog.meme_phrase"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String memePhrase() {
        return faker.fakeValuesService().resolve(""creature.dog.meme_phrase"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'memePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.meme_phrase', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,age,"    public String age() {
        return faker.fakeValuesService().resolve(""creature.dog.age"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String age() {
        return faker.fakeValuesService().resolve(""creature.dog.age"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'age', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.age', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,coatLength,"    public String coatLength() {
        return faker.fakeValuesService().resolve(""creature.dog.coat_length"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String coatLength() {
        return faker.fakeValuesService().resolve(""creature.dog.coat_length"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'coatLength', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.coat_length', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,gender,"    public String gender() {
        return faker.fakeValuesService().resolve(""creature.dog.gender"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String gender() {
        return faker.fakeValuesService().resolve(""creature.dog.gender"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'gender', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.gender', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Dog.java,size,"    public String size() {
        return faker.fakeValuesService().resolve(""creature.dog.size"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String size() {
        return faker.fakeValuesService().resolve(""creature.dog.size"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'size', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.dog.size', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Educator.java,course,"    public String course() {
        return faker.fakeValuesService().resolve(""educator.tertiary.degree.type"", this, faker)
                + "" """,https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String course() {
        return faker.fakeValuesService().resolve(""educator.tertiary.degree.type"", this, faker)
                + "" ""
","['    ', 'public', ' ', 'String', ' ', 'course', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'educator.tertiary.degree.type', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', '\n', '                ', '+', ' ', '""', ' ', '""', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Esports.java,player,"    public String player() {
        return faker.resolve(""esport.players"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String player() {
        return faker.resolve(""esport.players"");
    }
","['    ', 'public', ' ', 'String', ' ', 'player', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esport.players', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Esports.java,team,"    public String team() {
        return faker.resolve(""esport.teams"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String team() {
        return faker.resolve(""esport.teams"");
    }
","['    ', 'public', ' ', 'String', ' ', 'team', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esport.teams', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Esports.java,event,"    public String event() {
        return faker.resolve(""esport.events"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String event() {
        return faker.resolve(""esport.events"");
    }
","['    ', 'public', ' ', 'String', ' ', 'event', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esport.events', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Esports.java,league,"    public String league() {
        return faker.resolve(""esport.leagues"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String league() {
        return faker.resolve(""esport.leagues"");
    }
","['    ', 'public', ' ', 'String', ' ', 'league', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esport.leagues', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Esports.java,game,"    public String game() {
        return faker.resolve(""esport.games"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String game() {
        return faker.resolve(""esport.games"");
    }
","['    ', 'public', ' ', 'String', ' ', 'game', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'esport.games', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,LeagueOfLegends.java,champion,"    public String champion() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.champion"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String champion() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.champion"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'champion', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.league_of_legends.champion', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,LeagueOfLegends.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.location"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String location() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.location"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.league_of_legends.location', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,LeagueOfLegends.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.quote"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String quote() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.quote"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.league_of_legends.quote', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,LeagueOfLegends.java,summonerSpell,"    public String summonerSpell() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.summoner_spell"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String summonerSpell() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.summoner_spell"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'summonerSpell', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.league_of_legends.summoner_spell', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,LeagueOfLegends.java,masteries,"    public String masteries() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.masteries"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String masteries() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.masteries"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'masteries', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.league_of_legends.masteries', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,LeagueOfLegends.java,rank,"    public String rank() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.rank"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String rank() {
        return faker.fakeValuesService().resolve(""games.league_of_legends.rank"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'rank', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.league_of_legends.rank', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Music.java,genre,"    public String genre() {
        return faker.resolve(""music.genres"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String genre() {
        return faker.resolve(""music.genres"");
    }
","['    ', 'public', ' ', 'String', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'music.genres', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Overwatch.java,hero,"    public String hero() {
        return faker.fakeValuesService().resolve(""games.overwatch.heroes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String hero() {
        return faker.fakeValuesService().resolve(""games.overwatch.heroes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'hero', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.overwatch.heroes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Overwatch.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""games.overwatch.locations"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String location() {
        return faker.fakeValuesService().resolve(""games.overwatch.locations"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.overwatch.locations', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Overwatch.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""games.overwatch.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String quote() {
        return faker.fakeValuesService().resolve(""games.overwatch.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.overwatch.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Pokemon.java,name,"    public String name() {
        return faker.resolve(""games.pokemon.names"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String name() {
        return faker.resolve(""games.pokemon.names"");
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'games.pokemon.names', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Pokemon.java,location,"    public String location() {
        return faker.resolve(""games.pokemon.locations"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String location() {
        return faker.resolve(""games.pokemon.locations"");
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'games.pokemon.locations', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Witcher.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""games.witcher.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String character() {
        return faker.fakeValuesService().resolve(""games.witcher.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.witcher.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Witcher.java,witcher,"    public String witcher() {
        return faker.fakeValuesService().resolve(""games.witcher.witchers"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String witcher() {
        return faker.fakeValuesService().resolve(""games.witcher.witchers"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'witcher', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.witcher.witchers', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Witcher.java,school,"    public String school() {
        return faker.fakeValuesService().resolve(""games.witcher.schools"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String school() {
        return faker.fakeValuesService().resolve(""games.witcher.schools"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'school', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.witcher.schools', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Witcher.java,location,"    public String location() {
        return faker.fakeValuesService().resolve(""games.witcher.locations"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String location() {
        return faker.fakeValuesService().resolve(""games.witcher.locations"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.witcher.locations', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Witcher.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""games.witcher.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String quote() {
        return faker.fakeValuesService().resolve(""games.witcher.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.witcher.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Witcher.java,monster,"    public String monster() {
        return faker.fakeValuesService().resolve(""games.witcher.monsters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String monster() {
        return faker.fakeValuesService().resolve(""games.witcher.monsters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'monster', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.witcher.monsters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Zelda.java,game,"    public String game() {
        return faker.resolve(""games.zelda.games"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String game() {
        return faker.resolve(""games.zelda.games"");
    }
","['    ', 'public', ' ', 'String', ' ', 'game', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'games.zelda.games', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,Zelda.java,character,"    public String character() {
        return faker.resolve(""games.zelda.characters"");
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public String character() {
        return faker.resolve(""games.zelda.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'games.zelda.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,FakeValuesService.java,listFilesInDirectoryOnClasspath,"    private File[] listFilesInDirectoryOnClasspath(String dir) {
        ClassLoader loader = getClass().getClassLoader();
        URL url = loader.getResource(dir);
        return (url != null) ? new File(url.getPath()).listFiles() : new File[0];
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    private File[] listFilesInDirectoryOnClasspath(String dir) {
        ClassLoader loader = getClass().getClassLoader();
        URL url = loader.getResource(dir);
        return (url != null) ? new File(url.getPath()).listFiles() : new File[0];
    }
","['    ', 'private', ' ', 'File', '[', ']', ' ', 'listFilesInDirectoryOnClasspath', '(', 'String', ' ', 'dir', ')', ' ', '{', '\n', '        ', 'ClassLoader', ' ', 'loader', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', ';', '\n', '        ', 'URL', ' ', 'url', ' ', '=', ' ', 'loader', '.', 'getResource', '(', 'dir', ')', ';', '\n', '        ', 'return', ' ', '(', 'url', ' ', '!', '=', ' ', 'null', ')', ' ', '?', ' ', 'new', ' ', 'File', '(', 'url', '.', 'getPath', '(', ')', ')', '.', 'listFiles', '(', ')', ' ', ':', ' ', 'new', ' ', 'File', '[', '0', ']', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,FriendsTest.java,location,"    public void location() {
        assertThat(faker.friends().location(), matchesRegularExpression(""[\\w.', ]+""));
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public void location() {
        assertThat(faker.friends().location(), matchesRegularExpression(""[\\w.', ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', ""w.', ]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,FakeValuesServiceTest.java,resolveWithLocaleSimpleValuesInAnotherFile,"    public void resolveWithLocaleSimpleValuesInAnotherFile() {
        assertThat(fakeValuesService.safeFetch(""other1.simple"", null), is(""hello""));
        assertThat(fakeValuesService.safeFetch(""other2.simple"", null), is(""goodbye""));
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public void resolveWithLocaleSimpleValuesInAnotherFile() {
        assertThat(fakeValuesService.safeFetch(""other1.simple"", null), is(""hello""));
        assertThat(fakeValuesService.safeFetch(""other2.simple"", null), is(""goodbye""));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveWithLocaleSimpleValuesInAnotherFile', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'other1.simple', '""', ',', ' ', 'null', ')', ',', ' ', 'is', '(', '""', 'hello', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'safeFetch', '(', '""', 'other2.simple', '""', ',', ' ', 'null', ')', ',', ' ', 'is', '(', '""', 'goodbye', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1fae9ce05e50537af3d15ea348c2949dec43d06a,FakeValuesServiceTest.java,resolveWithLocaleSimpleArrayValuesInAnotherFile,"    public void resolveWithLocaleSimpleArrayValuesInAnotherFile() {
        assertThat(fakeValuesService.fetchObject(""other1.dummy""), Is.<Object>is(Arrays.asList(""x"", ""y"", ""z"")));
        assertThat(fakeValuesService.fetchObject(""other2.dummy""), Is.<Object>is(Arrays.asList(1, 2, 3)));
    }",https://www.github.com/dius/java-faker/commit/1fae9ce05e50537af3d15ea348c2949dec43d06a,"    public void resolveWithLocaleSimpleArrayValuesInAnotherFile() {
        assertThat(fakeValuesService.fetchObject(""other1.dummy""), Is.<Object>is(Arrays.asList(""x"", ""y"", ""z"")));
        assertThat(fakeValuesService.fetchObject(""other2.dummy""), Is.<Object>is(Arrays.asList(1, 2, 3)));
    }
","['    ', 'public', ' ', 'void', ' ', 'resolveWithLocaleSimpleArrayValuesInAnotherFile', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'other1.dummy', '""', ')', ',', ' ', 'Is', '.', '<', 'Object', '>', 'is', '(', 'Arrays', '.', 'asList', '(', '""', 'x', '""', ',', ' ', '""', 'y', '""', ',', ' ', '""', 'z', '""', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'fetchObject', '(', '""', 'other2.dummy', '""', ')', ',', ' ', 'Is', '.', '<', 'Object', '>', 'is', '(', 'Arrays', '.', 'asList', '(', '1', ',', ' ', '2', ',', ' ', '3', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,eb84ebe79a5d22ecdf398ed4d1d1667da94f9478,TeamTest.java,testSport,"    public void testSport() {
        assertThat(faker.team().sport(), matchesRegularExpression(""(\\w|\\s)+""));
    }",https://www.github.com/dius/java-faker/commit/eb84ebe79a5d22ecdf398ed4d1d1667da94f9478,"    public void testSport() {
        assertThat(faker.team().sport(), matchesRegularExpression(""(\\w|\\s)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSport', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'team', '(', ')', '.', 'sport', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w|', '\\\\', 's)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,69eb4d8c6bc5774ac95b4e1bc7b4ddf306d8ba5d,EsportsTest.java,player,"    public void player() {
        assertThat(faker.esports().player(), matchesRegularExpression(""(\\w|.)+""));
    }",https://www.github.com/dius/java-faker/commit/69eb4d8c6bc5774ac95b4e1bc7b4ddf306d8ba5d,"    public void player() {
        assertThat(faker.esports().player(), matchesRegularExpression(""(\\w|.)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'player', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'player', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w|.)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,69eb4d8c6bc5774ac95b4e1bc7b4ddf306d8ba5d,EsportsTest.java,team,"    public void team() {
        assertThat(faker.esports().team(),  matchesRegularExpression(""((\\w|.)+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/69eb4d8c6bc5774ac95b4e1bc7b4ddf306d8ba5d,"    public void team() {
        assertThat(faker.esports().team(),  matchesRegularExpression(""((\\w|.)+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'team', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'esports', '(', ')', '.', 'team', '(', ')', ',', '  ', 'matchesRegularExpression', '(', '""', '((', '\\\\', 'w|.)+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,69eb4d8c6bc5774ac95b4e1bc7b4ddf306d8ba5d,SpaceTest.java,company,"    public void company() {
        assertThat(faker.space().company(), matchesRegularExpression(""(\\w+ ?){1,4}""));
    }",https://www.github.com/dius/java-faker/commit/69eb4d8c6bc5774ac95b4e1bc7b4ddf306d8ba5d,"    public void company() {
        assertThat(faker.space().company(), matchesRegularExpression(""(\\w+ ?){1,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'company', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'company', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){1,4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,18eba0fb14288190632faff006d126fdc851776f,SpaceTest.java,company,"    public void company() {
        assertThat(faker.space().company(), matchesRegularExpression(""((\\w|')+ ?){2,4}""));
    }",https://www.github.com/dius/java-faker/commit/18eba0fb14288190632faff006d126fdc851776f,"    public void company() {
        assertThat(faker.space().company(), matchesRegularExpression(""((\\w|')+ ?){2,4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'company', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'space', '(', ')', '.', 'company', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '((', '\\\\', ""w|')+ ?){2,4}"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b15bf3e6ae423dfd80415e88397987a7216446c5,MedicalTest.java,testSymptom,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""[\\w'\\s\\(\\)]+""));
    }",https://www.github.com/dius/java-faker/commit/b15bf3e6ae423dfd80415e88397987a7216446c5,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), matchesRegularExpression(""[\\w'\\s\\(\\)]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptom', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'symptoms', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[', '\\\\', ""w'"", '\\\\', 's', '\\\\', '(', '\\\\', ')]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9ee036cf25d4a99bf479cb2e0aa4c835eab760e0,OverwatchTest.java,location,"    public void location() {
        assertThat(faker.overwatch().location(), matchesRegularExpression(""^(.+'?:?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/9ee036cf25d4a99bf479cb2e0aa4c835eab760e0,"    public void location() {
        assertThat(faker.overwatch().location(), matchesRegularExpression(""^(.+'?:?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'location', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'overwatch', '(', ')', '.', 'location', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""^(.+'?:?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7d5c263d8ea653d238378fee1f663216671c7661,FriendsTest.java,character,"    public void character() {
        assertThat(faker.friends().character(), matchesRegularExpression(""[A-Za-z .,]+""));
    }",https://www.github.com/dius/java-faker/commit/7d5c263d8ea653d238378fee1f663216671c7661,"    public void character() {
        assertThat(faker.friends().character(), matchesRegularExpression(""[A-Za-z .,]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'friends', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z .,]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3aaef1b5271c8ab34244219438f0568268fb0536,TeamTest.java,testSport,"    public void testSport() {
        assertThat(faker.team().sport(), matchesRegularExpression(""(\\p{L}|\\s)+""));
    }",https://www.github.com/dius/java-faker/commit/3aaef1b5271c8ab34244219438f0568268fb0536,"    public void testSport() {
        assertThat(faker.team().sport(), matchesRegularExpression(""(\\p{L}|\\s)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSport', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'team', '(', ')', '.', 'sport', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'p{L}|', '\\\\', 's)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,FakeValuesService.java,loadFromJarFile,"    private void loadFromJarFile(List<Map<String, Object>> all, Set<Locale> loadedLocales, Locale locale, StringBuilder filename) {
        try {
            ClassLoader loader = getClass().getClassLoader();",https://www.github.com/dius/java-faker/commit/eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,"    private void loadFromJarFile(List<Map<String, Object>> all, Set<Locale> loadedLocales, Locale locale, StringBuilder filename) {
        try {
            ClassLoader loader = getClass().getClassLoader();
","['    ', 'private', ' ', 'void', ' ', 'loadFromJarFile', '(', 'List', '<', 'Map', '<', 'String', ',', ' ', 'Object', '>', '>', ' ', 'all', ',', ' ', 'Set', '<', 'Locale', '>', ' ', 'loadedLocales', ',', ' ', 'Locale', ' ', 'locale', ',', ' ', 'StringBuilder', ' ', 'filename', ')', ' ', '{', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'ClassLoader', ' ', 'loader', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', ';', '\n']"
master,eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,FakeValuesService.java,isJarFile,"    private boolean isJarFile(String fileName) {
        ClassLoader loader = getClass().getClassLoader();
        URL url = loader.getResource(fileName);
        return url != null && url.getProtocol().equals(""jar"");
    }",https://www.github.com/dius/java-faker/commit/eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,"    private boolean isJarFile(String fileName) {
        ClassLoader loader = getClass().getClassLoader();
        URL url = loader.getResource(fileName);
        return url != null && url.getProtocol().equals(""jar"");
    }
","['    ', 'private', ' ', 'boolean', ' ', 'isJarFile', '(', 'String', ' ', 'fileName', ')', ' ', '{', '\n', '        ', 'ClassLoader', ' ', 'loader', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', ';', '\n', '        ', 'URL', ' ', 'url', ' ', '=', ' ', 'loader', '.', 'getResource', '(', 'fileName', ')', ';', '\n', '        ', 'return', ' ', 'url', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'url', '.', 'getProtocol', '(', ')', '.', 'equals', '(', '""', 'jar', '""', ')', ';', '\n', '    ', '}', '\n']"
master,eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,FakeValuesService.java,listFilesInDirectoryOnClasspath,"    private File[] listFilesInDirectoryOnClasspath(String dir) {
        ClassLoader loader = getClass().getClassLoader();
        URL url = loader.getResource(dir);
        if (url == null) {
            return new File[0];",https://www.github.com/dius/java-faker/commit/eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,"    private File[] listFilesInDirectoryOnClasspath(String dir) {
        ClassLoader loader = getClass().getClassLoader();
        URL url = loader.getResource(dir);
        if (url == null) {
            return new File[0];
","['    ', 'private', ' ', 'File', '[', ']', ' ', 'listFilesInDirectoryOnClasspath', '(', 'String', ' ', 'dir', ')', ' ', '{', '\n', '        ', 'ClassLoader', ' ', 'loader', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', ';', '\n', '        ', 'URL', ' ', 'url', ' ', '=', ' ', 'loader', '.', 'getResource', '(', 'dir', ')', ';', '\n', '        ', 'if', ' ', '(', 'url', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'File', '[', '0', ']', ';', '\n']"
master,eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,FakeValuesService.java,normalizeLocale,"    private Locale normalizeLocale(Locale locale) {
        final String[] parts = locale.toString().split(""[-\\_]"");

        if (parts.length == 1) {
            return new Locale(parts[0]);",https://www.github.com/dius/java-faker/commit/eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,"    private Locale normalizeLocale(Locale locale) {
        final String[] parts = locale.toString().split(""[-\\_]"");

        if (parts.length == 1) {
            return new Locale(parts[0]);
","['    ', 'private', ' ', 'Locale', ' ', 'normalizeLocale', '(', 'Locale', ' ', 'locale', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'parts', ' ', '=', ' ', 'locale', '.', 'toString', '(', ')', '.', 'split', '(', '""', '[-', '\\\\', '_]', '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'parts', '.', 'length', ' ', '=', '=', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'Locale', '(', 'parts', '[', '0', ']', ')', ';', '\n']"
master,eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,FakeValuesService.java,findStream,"    private InputStream findStream(String filename) {
        String filenameWithExtension = ""/"" + filename + "".yml"";
        InputStream streamOnClass = getClass().getResourceAsStream(filenameWithExtension);
        if (streamOnClass != null) {
            return streamOnClass;
        }
        return getClass().getClassLoader().getResourceAsStream(filenameWithExtension);
    }",https://www.github.com/dius/java-faker/commit/eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,"    private InputStream findStream(String filename) {
        String filenameWithExtension = ""/"" + filename + "".yml"";
        InputStream streamOnClass = getClass().getResourceAsStream(filenameWithExtension);
        if (streamOnClass != null) {
            return streamOnClass;
        }
        return getClass().getClassLoader().getResourceAsStream(filenameWithExtension);
    }
","['    ', 'private', ' ', 'InputStream', ' ', 'findStream', '(', 'String', ' ', 'filename', ')', ' ', '{', '\n', '        ', 'String', ' ', 'filenameWithExtension', ' ', '=', ' ', '""', '/', '""', ' ', '+', ' ', 'filename', ' ', '+', ' ', '""', '.yml', '""', ';', '\n', '        ', 'InputStream', ' ', 'streamOnClass', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'filenameWithExtension', ')', ';', '\n', '        ', 'if', ' ', '(', 'streamOnClass', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'return', ' ', 'streamOnClass', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', 'filenameWithExtension', ')', ';', '\n', '    ', '}', '\n']"
master,eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,FakeValuesService.java,resolveFakerObjectAndMethod,"    private String resolveFakerObjectAndMethod(Faker faker, String key, List<String> args) {
        final String[] classAndMethod = key.split(""\\."", 2);

        try {
            String fakerMethodName = classAndMethod[0].replaceAll(""_"", """");",https://www.github.com/dius/java-faker/commit/eb66eb9385b1214bcbfb1449b70bdc05375fd5f4,"    private String resolveFakerObjectAndMethod(Faker faker, String key, List<String> args) {
        final String[] classAndMethod = key.split(""\\."", 2);

        try {
            String fakerMethodName = classAndMethod[0].replaceAll(""_"", """");
","['    ', 'private', ' ', 'String', ' ', 'resolveFakerObjectAndMethod', '(', 'Faker', ' ', 'faker', ',', ' ', 'String', ' ', 'key', ',', ' ', 'List', '<', 'String', '>', ' ', 'args', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'classAndMethod', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ',', ' ', '2', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'String', ' ', 'fakerMethodName', ' ', '=', ' ', 'classAndMethod', '[', '0', ']', '.', 'replaceAll', '(', '""', '_', '""', ',', ' ', '""', '""', ')', ';', '\n']"
master,eb693c37cc64a54989fdb40803313ee03d4bc805,FakeValuesServiceTest.java,before,"    public void before() {
        super.before();
        MockitoAnnotations.initMocks(this);

        // always return the first element
        when(randomService.nextInt(anyInt())).thenReturn(0);

        fakeValuesService = spy(new FakeValuesService(new Locale(""test""), randomService));
    }",https://www.github.com/dius/java-faker/commit/eb693c37cc64a54989fdb40803313ee03d4bc805,"    public void before() {
        super.before();
        MockitoAnnotations.initMocks(this);

        
        when(randomService.nextInt(anyInt())).thenReturn(0);

        fakeValuesService = spy(new FakeValuesService(new Locale(""test""), randomService));
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'before', '(', ')', ';', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '\n', '        ', '\n', '        ', 'when', '(', 'randomService', '.', 'nextInt', '(', 'anyInt', '(', ')', ')', ')', '.', 'thenReturn', '(', '0', ')', ';', '\n', '\n', '        ', 'fakeValuesService', ' ', '=', ' ', 'spy', '(', 'new', ' ', 'FakeValuesService', '(', 'new', ' ', 'Locale', '(', '""', 'test', '""', ')', ',', ' ', 'randomService', ')', ')', ';', '\n', '    ', '}', '\n']"
master,eb693c37cc64a54989fdb40803313ee03d4bc805,FakeValuesServiceTest.java,bothify2Args,"    public void bothify2Args() {
        final DummyService dummy = mock(DummyService.class);

        Faker f = new Faker();

        String value = fakeValuesService.resolve(""property.bothify_2"", dummy, f);
        assertThat(value, matchesRegularExpression(""[A-Z]{2}\\d{2}""));
    }",https://www.github.com/dius/java-faker/commit/eb693c37cc64a54989fdb40803313ee03d4bc805,"    public void bothify2Args() {
        final DummyService dummy = mock(DummyService.class);

        Faker f = new Faker();

        String value = fakeValuesService.resolve(""property.bothify_2"", dummy, f);
        assertThat(value, matchesRegularExpression(""[A-Z]{2}\\d{2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'bothify2Args', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'DummyService', ' ', 'dummy', ' ', '=', ' ', 'mock', '(', 'DummyService', '.', 'class', ')', ';', '\n', '\n', '        ', 'Faker', ' ', 'f', ' ', '=', ' ', 'new', ' ', 'Faker', '(', ')', ';', '\n', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'fakeValuesService', '.', 'resolve', '(', '""', 'property.bothify_2', '""', ',', ' ', 'dummy', ',', ' ', 'f', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Z]{2}', '\\\\', 'd{2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,eb693c37cc64a54989fdb40803313ee03d4bc805,FakeValuesServiceTest.java,expressionWithInvalidFakerObject,"    public void expressionWithInvalidFakerObject() {
        expressionShouldFailWith(""#{ObjectNotOnFaker.methodName}"",
                ""Unable to resolve #{ObjectNotOnFaker.methodName} directive."");",https://www.github.com/dius/java-faker/commit/eb693c37cc64a54989fdb40803313ee03d4bc805,"    public void expressionWithInvalidFakerObject() {
        expressionShouldFailWith(""#{ObjectNotOnFaker.methodName}"",
                ""Unable to resolve #{ObjectNotOnFaker.methodName} directive."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithInvalidFakerObject', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{ObjectNotOnFaker.methodName}', '""', ',', '\n', '                ', '""', 'Unable to resolve #{ObjectNotOnFaker.methodName} directive.', '""', ')', ';', '\n']"
master,eb693c37cc64a54989fdb40803313ee03d4bc805,FakeValuesServiceTest.java,expressionWithValidFakerObjectButInvalidMethod,"    public void expressionWithValidFakerObjectButInvalidMethod() {
        expressionShouldFailWith(""#{Name.nonExistentMethod}"",
                ""Unable to resolve #{Name.nonExistentMethod} directive."");",https://www.github.com/dius/java-faker/commit/eb693c37cc64a54989fdb40803313ee03d4bc805,"    public void expressionWithValidFakerObjectButInvalidMethod() {
        expressionShouldFailWith(""#{Name.nonExistentMethod}"",
                ""Unable to resolve #{Name.nonExistentMethod} directive."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectButInvalidMethod', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', '#{Name.nonExistentMethod}', '""', ',', '\n', '                ', '""', 'Unable to resolve #{Name.nonExistentMethod} directive.', '""', ')', ';', '\n']"
master,eb693c37cc64a54989fdb40803313ee03d4bc805,FakeValuesServiceTest.java,expressionWithValidFakerObjectValidMethodInvalidArgs,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"",
                ""Unable to resolve #{Number.number_between 'x','y'} directive."");",https://www.github.com/dius/java-faker/commit/eb693c37cc64a54989fdb40803313ee03d4bc805,"    public void expressionWithValidFakerObjectValidMethodInvalidArgs() {
        expressionShouldFailWith(""#{Number.number_between 'x','y'}"",
                ""Unable to resolve #{Number.number_between 'x','y'} directive."");
","['    ', 'public', ' ', 'void', ' ', 'expressionWithValidFakerObjectValidMethodInvalidArgs', '(', ')', ' ', '{', '\n', '        ', 'expressionShouldFailWith', '(', '""', ""#{Number.number_between 'x','y'}"", '""', ',', '\n', '                ', '""', ""Unable to resolve #{Number.number_between 'x','y'} directive."", '""', ')', ';', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,Country.java,flag,"    public String flag() {
        return flagUrl + faker.fakeValuesService().resolve(""country.code2"", this, faker) + "".png"";
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public String flag() {
        return flagUrl + faker.fakeValuesService().resolve(""country.code2"", this, faker) + "".png"";
    }
","['    ', 'public', ' ', 'String', ' ', 'flag', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'flagUrl', ' ', '+', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.code2', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ' ', '+', ' ', '""', '.png', '""', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,Country.java,country_code2,"    public String country_code2() {
        return faker.fakeValuesService().resolve(""country.code2"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public String country_code2() {
        return faker.fakeValuesService().resolve(""country.code2"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'country_code2', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.code2', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,Country.java,country_code3,"    public String country_code3() {
        return faker.fakeValuesService().resolve(""country.code3"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public String country_code3() {
        return faker.fakeValuesService().resolve(""country.code3"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'country_code3', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.code3', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,Country.java,capital,"    public String capital() {
        return faker.fakeValuesService().resolve(""country.capital"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public String capital() {
        return faker.fakeValuesService().resolve(""country.capital"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'capital', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.capital', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,CountryTest.java,testFlag,"    public void testFlag() {
        String flag = faker.country().flag();
        assertThat(flag, matchesRegularExpression(""^http:\\/\\/flags.fmcdn\\.net\\/data\\/flags\\/w580\\/[a-zA-Z0-9_]+\\.png$""));
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public void testFlag() {
        String flag = faker.country().flag();
        assertThat(flag, matchesRegularExpression(""^http:\\/\\/flags.fmcdn\\.net\\/data\\/flags\\/w580\\/[a-zA-Z0-9_]+\\.png$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFlag', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'flag', ' ', '=', ' ', 'faker', '.', 'country', '(', ')', '.', 'flag', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'flag', ',', ' ', 'matchesRegularExpression', '(', '""', '^http:', '\\\\', '/', '\\\\', '/flags.fmcdn', '\\\\', '.net', '\\\\', '/data', '\\\\', '/flags', '\\\\', '/w580', '\\\\', '/[a-zA-Z0-9_]+', '\\\\', '.png$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,CountryTest.java,testCode2,"    public void testCode2() {
        assertThat(faker.country().country_code2(), matchesRegularExpression(""([a-z]{2})""));
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public void testCode2() {
        assertThat(faker.country().country_code2(), matchesRegularExpression(""([a-z]{2})""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCode2', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'country_code2', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([a-z]{2})', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,CountryTest.java,testCode3,"    public void testCode3() {
        assertThat(faker.country().country_code3(), matchesRegularExpression(""([a-z]{3})""));
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public void testCode3() {
        assertThat(faker.country().country_code3(), matchesRegularExpression(""([a-z]{3})""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCode3', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'country_code3', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([a-z]{3})', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,10311350266184de4c9b9265b604d3865d0e0873,CountryTest.java,testCapital,"    public void testCapital() {
        assertThat(faker.country().capital(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/10311350266184de4c9b9265b604d3865d0e0873,"    public void testCapital() {
        assertThat(faker.country().capital(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCapital', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'capital', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f377b486e375c270d2598a61cf7b299b5dea4581,Country.java,currency,"    public String currency() {
        return faker.fakeValuesService().resolve(""country.currency"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f377b486e375c270d2598a61cf7b299b5dea4581,"    public String currency() {
        return faker.fakeValuesService().resolve(""country.currency"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'currency', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.currency', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f377b486e375c270d2598a61cf7b299b5dea4581,Country.java,currency_code,"    public String currency_code() {
        return faker.fakeValuesService().resolve(""country.currency_code"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f377b486e375c270d2598a61cf7b299b5dea4581,"    public String currency_code() {
        return faker.fakeValuesService().resolve(""country.currency_code"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'currency_code', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.currency_code', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f377b486e375c270d2598a61cf7b299b5dea4581,CountryTest.java,testCurrency,"    public void testCurrency() {
        assertThat(faker.country().currency(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f377b486e375c270d2598a61cf7b299b5dea4581,"    public void testCurrency() {
        assertThat(faker.country().currency(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCurrency', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'currency', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f377b486e375c270d2598a61cf7b299b5dea4581,CountryTest.java,testCurrencyCode,"    public void testCurrencyCode() {
        assertThat(faker.country().currency_code(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/f377b486e375c270d2598a61cf7b299b5dea4581,"    public void testCurrencyCode() {
        assertThat(faker.country().currency_code(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCurrencyCode', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'currency_code', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1f75676a77039d43057d9ce736e65428646eff36,Country.java,countryCode2,"    public String countryCode2() {
        return faker.fakeValuesService().resolve(""country.code2"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1f75676a77039d43057d9ce736e65428646eff36,"    public String countryCode2() {
        return faker.fakeValuesService().resolve(""country.code2"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'countryCode2', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.code2', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1f75676a77039d43057d9ce736e65428646eff36,Country.java,countryCode3,"    public String countryCode3() {
        return faker.fakeValuesService().resolve(""country.code3"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1f75676a77039d43057d9ce736e65428646eff36,"    public String countryCode3() {
        return faker.fakeValuesService().resolve(""country.code3"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'countryCode3', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.code3', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1f75676a77039d43057d9ce736e65428646eff36,Country.java,currencyCode,"    public String currencyCode() {
        return faker.fakeValuesService().resolve(""country.currency_code"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/1f75676a77039d43057d9ce736e65428646eff36,"    public String currencyCode() {
        return faker.fakeValuesService().resolve(""country.currency_code"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'currencyCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.currency_code', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,1f75676a77039d43057d9ce736e65428646eff36,CountryTest.java,testCode2,"    public void testCode2() {
        assertThat(faker.country().countryCode2(), matchesRegularExpression(""([a-z]{2})""));
    }",https://www.github.com/dius/java-faker/commit/1f75676a77039d43057d9ce736e65428646eff36,"    public void testCode2() {
        assertThat(faker.country().countryCode2(), matchesRegularExpression(""([a-z]{2})""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCode2', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'countryCode2', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([a-z]{2})', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1f75676a77039d43057d9ce736e65428646eff36,CountryTest.java,testCode3,"    public void testCode3() {
        assertThat(faker.country().countryCode3(), matchesRegularExpression(""([a-z]{3})""));
    }",https://www.github.com/dius/java-faker/commit/1f75676a77039d43057d9ce736e65428646eff36,"    public void testCode3() {
        assertThat(faker.country().countryCode3(), matchesRegularExpression(""([a-z]{3})""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCode3', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'countryCode3', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([a-z]{3})', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,1f75676a77039d43057d9ce736e65428646eff36,CountryTest.java,testCurrencyCode,"    public void testCurrencyCode() {
        assertThat(faker.country().currencyCode(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/1f75676a77039d43057d9ce736e65428646eff36,"    public void testCurrencyCode() {
        assertThat(faker.country().currencyCode(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCurrencyCode', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'currencyCode', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0da6663c1e74e0300f79bd43cd0544e6f5548c5d,Internet.java,userAgent,"    public String userAgent(USER_AGENT userAgent){
        USER_AGENT agent = userAgent;

        if(agent == null) {
            agent = USER_AGENT.any();
        }

        String userAgentKey = ""internet.user_agent."" + agent.toString();
        return faker.fakeValuesService().resolve(userAgentKey, this, faker);
    }",https://www.github.com/dius/java-faker/commit/0da6663c1e74e0300f79bd43cd0544e6f5548c5d,"    public String userAgent(USER_AGENT userAgent){
        USER_AGENT agent = userAgent;

        if(agent == null) {
            agent = USER_AGENT.any();
        }

        String userAgentKey = ""internet.user_agent."" + agent.toString();
        return faker.fakeValuesService().resolve(userAgentKey, this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'userAgent', '(', 'USER_AGENT', ' ', 'userAgent', ')', '{', '\n', '        ', 'USER_AGENT', ' ', 'agent', ' ', '=', ' ', 'userAgent', ';', '\n', '\n', '        ', 'if', '(', 'agent', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'agent', ' ', '=', ' ', 'USER_AGENT', '.', 'any', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'userAgentKey', ' ', '=', ' ', '""', 'internet.user_agent.', '""', ' ', '+', ' ', 'agent', '.', 'toString', '(', ')', ';', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', 'userAgentKey', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,0da6663c1e74e0300f79bd43cd0544e6f5548c5d,Internet.java,userAgentAny,"    public String userAgentAny(){
        return userAgent(null);
    }",https://www.github.com/dius/java-faker/commit/0da6663c1e74e0300f79bd43cd0544e6f5548c5d,"    public String userAgentAny(){
        return userAgent(null);
    }
","['    ', 'public', ' ', 'String', ' ', 'userAgentAny', '(', ')', '{', '\n', '        ', 'return', ' ', 'userAgent', '(', 'null', ')', ';', '\n', '    ', '}', '\n']"
master,0da6663c1e74e0300f79bd43cd0544e6f5548c5d,Internet.java,any,"        private static USER_AGENT any(){
            USER_AGENT[] agents = USER_AGENT.values();
            int randomIndex = (int)(Math.random() * agents.length);
            return agents[randomIndex];
        }",https://www.github.com/dius/java-faker/commit/0da6663c1e74e0300f79bd43cd0544e6f5548c5d,"        private static USER_AGENT any(){
            USER_AGENT[] agents = USER_AGENT.values();
            int randomIndex = (int)(Math.random() * agents.length);
            return agents[randomIndex];
        }
","['        ', 'private', ' ', 'static', ' ', 'USER_AGENT', ' ', 'any', '(', ')', '{', '\n', '            ', 'USER_AGENT', '[', ']', ' ', 'agents', ' ', '=', ' ', 'USER_AGENT', '.', 'values', '(', ')', ';', '\n', '            ', 'int', ' ', 'randomIndex', ' ', '=', ' ', '(', 'int', ')', '(', 'Math', '.', 'random', '(', ')', ' ', '*', ' ', 'agents', '.', 'length', ')', ';', '\n', '            ', 'return', ' ', 'agents', '[', 'randomIndex', ']', ';', '\n', '        ', '}', '\n']"
master,0da6663c1e74e0300f79bd43cd0544e6f5548c5d,Internet.java,toString,"        public String toString(){
            return browserName;
        }",https://www.github.com/dius/java-faker/commit/0da6663c1e74e0300f79bd43cd0544e6f5548c5d,"        public String toString(){
            return browserName;
        }
","['        ', 'public', ' ', 'String', ' ', 'toString', '(', ')', '{', '\n', '            ', 'return', ' ', 'browserName', ';', '\n', '        ', '}', '\n']"
master,0da6663c1e74e0300f79bd43cd0544e6f5548c5d,InternetTest.java,testUserAgent,"    public void testUserAgent() {
        Internet.USER_AGENT[] agents = Internet.USER_AGENT.values();
        for(Internet.USER_AGENT agent : agents){
            assertThat(faker.internet().userAgent(agent), IsNot.not(isEmptyOrNullString()));
            assertThat(faker.resolve(""internet.user_agent."" + agent.toString()), IsNot.not(isEmptyOrNullString()));
        }

        //Test faker.internet().userAgentAny() for random user_agent retrieval.
        assertThat(faker.internet().userAgentAny(), IsNot.not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/0da6663c1e74e0300f79bd43cd0544e6f5548c5d,"    public void testUserAgent() {
        Internet.USER_AGENT[] agents = Internet.USER_AGENT.values();
        for(Internet.USER_AGENT agent : agents){
            assertThat(faker.internet().userAgent(agent), IsNot.not(isEmptyOrNullString()));
            assertThat(faker.resolve(""internet.user_agent."" + agent.toString()), IsNot.not(isEmptyOrNullString()));
        }

        
        assertThat(faker.internet().userAgentAny(), IsNot.not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUserAgent', '(', ')', ' ', '{', '\n', '        ', 'Internet', '.', 'USER_AGENT', '[', ']', ' ', 'agents', ' ', '=', ' ', 'Internet', '.', 'USER_AGENT', '.', 'values', '(', ')', ';', '\n', '        ', 'for', '(', 'Internet', '.', 'USER_AGENT', ' ', 'agent', ' ', ':', ' ', 'agents', ')', '{', '\n', '            ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'userAgent', '(', 'agent', ')', ',', ' ', 'IsNot', '.', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'faker', '.', 'resolve', '(', '""', 'internet.user_agent.', '""', ' ', '+', ' ', 'agent', '.', 'toString', '(', ')', ')', ',', ' ', 'IsNot', '.', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'userAgentAny', '(', ')', ',', ' ', 'IsNot', '.', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,99bcbd4e74e04906ca0ce06455a3c79ad2537587,Internet.java,userAgent,"    public String userAgent(UserAgent userAgent) {
        UserAgent agent = userAgent;

        if(agent == null) {
            agent = UserAgent.any();
        }

        String userAgentKey = ""internet.user_agent."" + agent.toString();
        return faker.fakeValuesService().resolve(userAgentKey, this, faker);
    }",https://www.github.com/dius/java-faker/commit/99bcbd4e74e04906ca0ce06455a3c79ad2537587,"    public String userAgent(UserAgent userAgent) {
        UserAgent agent = userAgent;

        if(agent == null) {
            agent = UserAgent.any();
        }

        String userAgentKey = ""internet.user_agent."" + agent.toString();
        return faker.fakeValuesService().resolve(userAgentKey, this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'userAgent', '(', 'UserAgent', ' ', 'userAgent', ')', ' ', '{', '\n', '        ', 'UserAgent', ' ', 'agent', ' ', '=', ' ', 'userAgent', ';', '\n', '\n', '        ', 'if', '(', 'agent', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'agent', ' ', '=', ' ', 'UserAgent', '.', 'any', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'String', ' ', 'userAgentKey', ' ', '=', ' ', '""', 'internet.user_agent.', '""', ' ', '+', ' ', 'agent', '.', 'toString', '(', ')', ';', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', 'userAgentKey', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,99bcbd4e74e04906ca0ce06455a3c79ad2537587,Internet.java,userAgentAny,"    public String userAgentAny() {
        return userAgent(null);
    }",https://www.github.com/dius/java-faker/commit/99bcbd4e74e04906ca0ce06455a3c79ad2537587,"    public String userAgentAny() {
        return userAgent(null);
    }
","['    ', 'public', ' ', 'String', ' ', 'userAgentAny', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'userAgent', '(', 'null', ')', ';', '\n', '    ', '}', '\n']"
master,99bcbd4e74e04906ca0ce06455a3c79ad2537587,Internet.java,any,"        private static UserAgent any() {
            UserAgent[] agents = UserAgent.values();
            int randomIndex = (int)(Math.random() * agents.length);
            return agents[randomIndex];
        }",https://www.github.com/dius/java-faker/commit/99bcbd4e74e04906ca0ce06455a3c79ad2537587,"        private static UserAgent any() {
            UserAgent[] agents = UserAgent.values();
            int randomIndex = (int)(Math.random() * agents.length);
            return agents[randomIndex];
        }
","['        ', 'private', ' ', 'static', ' ', 'UserAgent', ' ', 'any', '(', ')', ' ', '{', '\n', '            ', 'UserAgent', '[', ']', ' ', 'agents', ' ', '=', ' ', 'UserAgent', '.', 'values', '(', ')', ';', '\n', '            ', 'int', ' ', 'randomIndex', ' ', '=', ' ', '(', 'int', ')', '(', 'Math', '.', 'random', '(', ')', ' ', '*', ' ', 'agents', '.', 'length', ')', ';', '\n', '            ', 'return', ' ', 'agents', '[', 'randomIndex', ']', ';', '\n', '        ', '}', '\n']"
master,99bcbd4e74e04906ca0ce06455a3c79ad2537587,Internet.java,toString,"        public String toString() {
            return browserName;
        }",https://www.github.com/dius/java-faker/commit/99bcbd4e74e04906ca0ce06455a3c79ad2537587,"        public String toString() {
            return browserName;
        }
","['        ', 'public', ' ', 'String', ' ', 'toString', '(', ')', ' ', '{', '\n', '            ', 'return', ' ', 'browserName', ';', '\n', '        ', '}', '\n']"
master,99bcbd4e74e04906ca0ce06455a3c79ad2537587,InternetTest.java,testUserAgent,"    public void testUserAgent() {
        Internet.UserAgent[] agents = Internet.UserAgent.values();
        for(Internet.UserAgent agent : agents) {
            assertThat(faker.internet().userAgent(agent), not(isEmptyOrNullString()));
        }

        //Test faker.internet().userAgentAny() for random user_agent retrieval.
        assertThat(faker.internet().userAgentAny(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/99bcbd4e74e04906ca0ce06455a3c79ad2537587,"    public void testUserAgent() {
        Internet.UserAgent[] agents = Internet.UserAgent.values();
        for(Internet.UserAgent agent : agents) {
            assertThat(faker.internet().userAgent(agent), not(isEmptyOrNullString()));
        }

        
        assertThat(faker.internet().userAgentAny(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUserAgent', '(', ')', ' ', '{', '\n', '        ', 'Internet', '.', 'UserAgent', '[', ']', ' ', 'agents', ' ', '=', ' ', 'Internet', '.', 'UserAgent', '.', 'values', '(', ')', ';', '\n', '        ', 'for', '(', 'Internet', '.', 'UserAgent', ' ', 'agent', ' ', ':', ' ', 'agents', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'userAgent', '(', 'agent', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'userAgentAny', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,Internet.java,password,"    public String password(boolean includeDigit) {
        return password(8, 16, false, false, includeDigit);
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public String password(boolean includeDigit) {
        return password(8, 16, false, false, includeDigit);
    }
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'boolean', ' ', 'includeDigit', ')', ' ', '{', '\n', '        ', 'return', ' ', 'password', '(', '8', ',', ' ', '16', ',', ' ', 'false', ',', ' ', 'false', ',', ' ', 'includeDigit', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,Internet.java,password,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial) {
        return password(minimumLength, maximumLength, includeUppercase, includeSpecial, true);
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial) {
        return password(minimumLength, maximumLength, includeUppercase, includeSpecial, true);
    }
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ',', ' ', 'boolean', ' ', 'includeSpecial', ')', ' ', '{', '\n', '        ', 'return', ' ', 'password', '(', 'minimumLength', ',', ' ', 'maximumLength', ',', ' ', 'includeUppercase', ',', ' ', 'includeSpecial', ',', ' ', 'true', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,Internet.java,password,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial, boolean includeDigit) {
        if (includeSpecial) {
            char[] password = faker.lorem().characters(minimumLength, maximumLength, includeUppercase, includeDigit).toCharArray();",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public String password(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeSpecial, boolean includeDigit) {
        if (includeSpecial) {
            char[] password = faker.lorem().characters(minimumLength, maximumLength, includeUppercase, includeDigit).toCharArray();
","['    ', 'public', ' ', 'String', ' ', 'password', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ',', ' ', 'boolean', ' ', 'includeSpecial', ',', ' ', 'boolean', ' ', 'includeDigit', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'includeSpecial', ')', ' ', '{', '\n', '            ', 'char', '[', ']', ' ', 'password', ' ', '=', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', 'minimumLength', ',', ' ', 'maximumLength', ',', ' ', 'includeUppercase', ',', ' ', 'includeDigit', ')', '.', 'toCharArray', '(', ')', ';', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,Lorem.java,characters,"    public String characters(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeDigit) {
        return characters(faker.random().nextInt(maximumLength - minimumLength) + minimumLength, includeUppercase, includeDigit);
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public String characters(int minimumLength, int maximumLength, boolean includeUppercase, boolean includeDigit) {
        return characters(faker.random().nextInt(maximumLength - minimumLength) + minimumLength, includeUppercase, includeDigit);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'minimumLength', ',', ' ', 'int', ' ', 'maximumLength', ',', ' ', 'boolean', ' ', 'includeUppercase', ',', ' ', 'boolean', ' ', 'includeDigit', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'maximumLength', ' ', '-', ' ', 'minimumLength', ')', ' ', '+', ' ', 'minimumLength', ',', ' ', 'includeUppercase', ',', ' ', 'includeDigit', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,Lorem.java,characters,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase) {
        return characters(fixedNumberOfCharacters, includeUppercase, true);
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase) {
        return characters(fixedNumberOfCharacters, includeUppercase, true);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'fixedNumberOfCharacters', ',', ' ', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', 'fixedNumberOfCharacters', ',', ' ', 'includeUppercase', ',', ' ', 'true', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,Lorem.java,characters,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase, boolean includeDigit) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            char randomCharacter;

            if (includeDigit) {
                randomCharacter = characters[faker.random().nextInt(characters.length)];
            } else {
                randomCharacter = letters[faker.random().nextInt(letters.length)];
            }

            if (includeUppercase && faker.bool().bool()) {
                randomCharacter = Character.toUpperCase(randomCharacter);
            }
            buffer[i] = randomCharacter;
        }
        return new String(buffer);
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public String characters(int fixedNumberOfCharacters, boolean includeUppercase, boolean includeDigit) {
        if (fixedNumberOfCharacters < 1) {
            return """";
        }
        char[] buffer = new char[fixedNumberOfCharacters];
        for (int i = 0; i < buffer.length; i++) {
            char randomCharacter;

            if (includeDigit) {
                randomCharacter = characters[faker.random().nextInt(characters.length)];
            } else {
                randomCharacter = letters[faker.random().nextInt(letters.length)];
            }

            if (includeUppercase && faker.bool().bool()) {
                randomCharacter = Character.toUpperCase(randomCharacter);
            }
            buffer[i] = randomCharacter;
        }
        return new String(buffer);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'int', ' ', 'fixedNumberOfCharacters', ',', ' ', 'boolean', ' ', 'includeUppercase', ',', ' ', 'boolean', ' ', 'includeDigit', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'fixedNumberOfCharacters', ' ', '<', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', '""', ';', '\n', '        ', '}', '\n', '        ', 'char', '[', ']', ' ', 'buffer', ' ', '=', ' ', 'new', ' ', 'char', '[', 'fixedNumberOfCharacters', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'buffer', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'char', ' ', 'randomCharacter', ';', '\n', '\n', '            ', 'if', ' ', '(', 'includeDigit', ')', ' ', '{', '\n', '                ', 'randomCharacter', ' ', '=', ' ', 'characters', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'characters', '.', 'length', ')', ']', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'randomCharacter', ' ', '=', ' ', 'letters', '[', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', 'letters', '.', 'length', ')', ']', ';', '\n', '            ', '}', '\n', '\n', '            ', 'if', ' ', '(', 'includeUppercase', ' ', '&', '&', ' ', 'faker', '.', 'bool', '(', ')', '.', 'bool', '(', ')', ')', ' ', '{', '\n', '                ', 'randomCharacter', ' ', '=', ' ', 'Character', '.', 'toUpperCase', '(', 'randomCharacter', ')', ';', '\n', '            ', '}', '\n', '            ', 'buffer', '[', 'i', ']', ' ', '=', ' ', 'randomCharacter', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'buffer', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,InternetTest.java,testPasswordIncludeDigit,"    public void testPasswordIncludeDigit() {
        assertThat(faker.internet().password(), matchesRegularExpression(""[a-z\\d]{8,16}""));
        assertThat(faker.internet().password(false), matchesRegularExpression(""[a-z]{8,16}""));
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public void testPasswordIncludeDigit() {
        assertThat(faker.internet().password(), matchesRegularExpression(""[a-z\\d]{8,16}""));
        assertThat(faker.internet().password(false), matchesRegularExpression(""[a-z]{8,16}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswordIncludeDigit', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd]{8,16}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z]{8,16}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,InternetTest.java,testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecialIncludeDigit,"    public void testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecialIncludeDigit() {
        assertThat(faker.internet().password(10, 25, false, false, false), matchesRegularExpression(""[a-z]{10,25}""));
        assertThat(faker.internet().password(10, 25, false, true, true), matchesRegularExpression(""[a-z\\d!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true, false), matchesRegularExpression(""[a-zA-Z!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true, true), matchesRegularExpression(""[a-zA-Z\\d!@#$%^&*]{10,25}""));
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public void testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecialIncludeDigit() {
        assertThat(faker.internet().password(10, 25, false, false, false), matchesRegularExpression(""[a-z]{10,25}""));
        assertThat(faker.internet().password(10, 25, false, true, true), matchesRegularExpression(""[a-z\\d!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true, false), matchesRegularExpression(""[a-zA-Z!@#$%^&*]{10,25}""));
        assertThat(faker.internet().password(10, 25, true, true, true), matchesRegularExpression(""[a-zA-Z\\d!@#$%^&*]{10,25}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecialIncludeDigit', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'false', ',', ' ', 'false', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'false', ',', ' ', 'true', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-z', '\\\\', 'd!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'true', ',', ' ', 'true', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'password', '(', '10', ',', ' ', '25', ',', ' ', 'true', ',', ' ', 'true', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd!@#$%^&*]{10,25}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e2eec2f5528ef2b005c6de85fb72836992116bdc,LoremTest.java,testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit,"    public void testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit() {
        assertThat(faker.lorem().characters(1, 10, false, false), matchesRegularExpression(""[a-zA-Z]{1,10}""));
        assertThat(faker.lorem().characters(1, 10, true, true), matchesRegularExpression(""[a-zA-Z\\d]{1,10}""));
    }",https://www.github.com/dius/java-faker/commit/e2eec2f5528ef2b005c6de85fb72836992116bdc,"    public void testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit() {
        assertThat(faker.lorem().characters(1, 10, false, false), matchesRegularExpression(""[a-zA-Z]{1,10}""));
        assertThat(faker.lorem().characters(1, 10, true, true), matchesRegularExpression(""[a-zA-Z\\d]{1,10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '1', ',', ' ', '10', ',', ' ', 'false', ',', ' ', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z]{1,10}', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '1', ',', ' ', '10', ',', ' ', 'true', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{1,10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6b2e98a56dda635b0d9689bdf9fafecbb1dd6df2,Barcode.java,type,"    public String type() {
        return faker.resolve(""barcode.types"");
    }",https://www.github.com/dius/java-faker/commit/6b2e98a56dda635b0d9689bdf9fafecbb1dd6df2,"    public String type() {
        return faker.resolve(""barcode.types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'type', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'barcode.types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6b2e98a56dda635b0d9689bdf9fafecbb1dd6df2,Barcode.java,data,"    public String data(){
        return faker.resolve(""barcode.datas"");
    }",https://www.github.com/dius/java-faker/commit/6b2e98a56dda635b0d9689bdf9fafecbb1dd6df2,"    public String data(){
        return faker.resolve(""barcode.datas"");
    }
","['    ', 'public', ' ', 'String', ' ', 'data', '(', ')', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'barcode.datas', '""', ')', ';', '\n', '    ', '}', '\n']"
master,6b2e98a56dda635b0d9689bdf9fafecbb1dd6df2,Barcode.java,typeAndData,"    public String typeAndData(){
        return faker.resolve(""barcode.typeAndData"");
    }",https://www.github.com/dius/java-faker/commit/6b2e98a56dda635b0d9689bdf9fafecbb1dd6df2,"    public String typeAndData(){
        return faker.resolve(""barcode.typeAndData"");
    }
","['    ', 'public', ' ', 'String', ' ', 'typeAndData', '(', ')', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'barcode.typeAndData', '""', ')', ';', '\n', '    ', '}', '\n']"
master,617db0c1980caafd0698c795251a0895cb8a98c7,BarcodeTest.java,type,"    public void type() {
        assertThat(faker.barcode().type(),
                matchesRegularExpression(""(Code(128|39|93))|(E|J)AN(-\\d{1,2})*|Codabar|UCC|UPC(-(A|E))*|IS(B|S)N|ITF|"" +",https://www.github.com/dius/java-faker/commit/617db0c1980caafd0698c795251a0895cb8a98c7,"    public void type() {
        assertThat(faker.barcode().type(),
                matchesRegularExpression(""(Code(128|39|93))|(E|J)AN(-\\d{1,2})*|Codabar|UCC|UPC(-(A|E))*|IS(B|S)N|ITF|"" +
","['    ', 'public', ' ', 'void', ' ', 'type', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'barcode', '(', ')', '.', 'type', '(', ')', ',', '\n', '                ', 'matchesRegularExpression', '(', '""', '(Code(128|39|93))|(E|J)AN(-', '\\\\', 'd{1,2})*|Codabar|UCC|UPC(-(A|E))*|IS(B|S)N|ITF|', '""', ' ', '+', '\n']"
master,617db0c1980caafd0698c795251a0895cb8a98c7,BarcodeTest.java,data,"    public void data(){
        assertThat(faker.barcode().data(), matchesRegularExpression(""\\d+""));
    }",https://www.github.com/dius/java-faker/commit/617db0c1980caafd0698c795251a0895cb8a98c7,"    public void data(){
        assertThat(faker.barcode().data(), matchesRegularExpression(""\\d+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'data', '(', ')', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'barcode', '(', ')', '.', 'data', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,617db0c1980caafd0698c795251a0895cb8a98c7,BarcodeTest.java,random,"    public void random(){
        assertThat(faker.barcode().typeAndData(), matchesRegularExpression(""(\\w|\\W)+\\s\\d+$""));
    }",https://www.github.com/dius/java-faker/commit/617db0c1980caafd0698c795251a0895cb8a98c7,"    public void random(){
        assertThat(faker.barcode().typeAndData(), matchesRegularExpression(""(\\w|\\W)+\\s\\d+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'random', '(', ')', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'barcode', '(', ')', '.', 'typeAndData', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w|', '\\\\', 'W)+', '\\\\', 's', '\\\\', 'd+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4296a648a4f89cca231dc430f54a7de1da4eb2d1,CommerceTest.java,testPromotionCode,"    public void testPromotionCode() {
        assertThat(faker.commerce().promotionCode(), matchesRegularExpression(PROMOTION_CODE_REGEX + PROMOTION_CODE_REGEX + ""\\d{6}""));
    }",https://www.github.com/dius/java-faker/commit/4296a648a4f89cca231dc430f54a7de1da4eb2d1,"    public void testPromotionCode() {
        assertThat(faker.commerce().promotionCode(), matchesRegularExpression(PROMOTION_CODE_REGEX + PROMOTION_CODE_REGEX + ""\\d{6}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPromotionCode', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'promotionCode', '(', ')', ',', ' ', 'matchesRegularExpression', '(', 'PROMOTION_CODE_REGEX', ' ', '+', ' ', 'PROMOTION_CODE_REGEX', ' ', '+', ' ', '""', '\\\\', 'd{6}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,4296a648a4f89cca231dc430f54a7de1da4eb2d1,CommerceTest.java,testPromotionCodeDigits,"    public void testPromotionCodeDigits() {
        assertThat(faker.commerce().promotionCode(3), matchesRegularExpression(PROMOTION_CODE_REGEX + PROMOTION_CODE_REGEX + ""\\d{3}""));
    }",https://www.github.com/dius/java-faker/commit/4296a648a4f89cca231dc430f54a7de1da4eb2d1,"    public void testPromotionCodeDigits() {
        assertThat(faker.commerce().promotionCode(3), matchesRegularExpression(PROMOTION_CODE_REGEX + PROMOTION_CODE_REGEX + ""\\d{3}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPromotionCodeDigits', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'commerce', '(', ')', '.', 'promotionCode', '(', '3', ')', ',', ' ', 'matchesRegularExpression', '(', 'PROMOTION_CODE_REGEX', ' ', '+', ' ', 'PROMOTION_CODE_REGEX', ' ', '+', ' ', '""', '\\\\', 'd{3}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,45a5315cd4acf70e67c30868dd63203f5cf0c4f0,CountryTest.java,testCapital,"    public void testCapital() {
        assertThat(faker.country().capital(), matchesRegularExpression(""([\\w'-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/45a5315cd4acf70e67c30868dd63203f5cf0c4f0,"    public void testCapital() {
        assertThat(faker.country().capital(), matchesRegularExpression(""([\\w'-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCapital', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'capital', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', ""w'-]+ ?)+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,race,"    public String race() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.race"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String race() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.race"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'race', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.race', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,creature,"    public String creature() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.creature"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String creature() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.creature"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'creature', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.creature', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,region,"    public String region() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.region"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String region() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.region"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'region', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.region', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,dragon,"    public String dragon() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.dragon"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String dragon() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.dragon"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'dragon', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.dragon', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,city,"    public String city() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.city"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String city() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.city"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'city', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.city', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,firstName,"    public String firstName() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.first_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String firstName() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.first_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'firstName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.first_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrolls.java,lastName,"    public String lastName() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.last_name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public String lastName() {
        return faker.fakeValuesService().resolve(""games.elder_scrolls.last_name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'lastName', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.last_name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,Faker.java,elderScrolls,"    public ElderScrolls elderScrolls() {
        return elderScrolls;
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public ElderScrolls elderScrolls() {
        return elderScrolls;
    }
","['    ', 'public', ' ', 'ElderScrolls', ' ', 'elderScrolls', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'elderScrolls', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testCity,"    public void testCity() {
        assertThat(faker.elderScrolls().city(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testCity() {
        assertThat(faker.elderScrolls().city(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'city', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testCreature,"    public void testCreature() {
        assertThat(faker.elderScrolls().creature(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testCreature() {
        assertThat(faker.elderScrolls().creature(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCreature', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'creature', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testDragon,"    public void testDragon() {
        assertThat(faker.elderScrolls().dragon(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testDragon() {
        assertThat(faker.elderScrolls().dragon(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDragon', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'dragon', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testFirstName,"    public void testFirstName() {
        assertThat(faker.elderScrolls().firstName(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testFirstName() {
        assertThat(faker.elderScrolls().firstName(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testFirstName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'firstName', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testLastName,"    public void testLastName() {
        assertThat(faker.elderScrolls().lastName(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testLastName() {
        assertThat(faker.elderScrolls().lastName(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLastName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'lastName', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testRace,"    public void testRace() {
        assertThat(faker.elderScrolls().race(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testRace() {
        assertThat(faker.elderScrolls().race(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRace', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'race', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,fa44670b4163207cd26d587082f7f69753828cd9,ElderScrollsTest.java,testRegion,"    public void testRegion() {
        assertThat(faker.elderScrolls().region(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/fa44670b4163207cd26d587082f7f69753828cd9,"    public void testRegion() {
        assertThat(faker.elderScrolls().region(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRegion', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'region', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3b3bc3ad5af6a8d29cdbe02826072c0b20caf7e1,ElderScrolls.java,quote,"    public String quote() {return faker.fakeValuesService().resolve(""games.elder_scrolls.quote"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/3b3bc3ad5af6a8d29cdbe02826072c0b20caf7e1,"    public String quote() {return faker.fakeValuesService().resolve(""games.elder_scrolls.quote"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'games.elder_scrolls.quote', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,3b3bc3ad5af6a8d29cdbe02826072c0b20caf7e1,ElderScrollsTest.java,testQuote,"    public void testQuote() {
        assertThat(faker.elderScrolls().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/3b3bc3ad5af6a8d29cdbe02826072c0b20caf7e1,"    public void testQuote() {
        assertThat(faker.elderScrolls().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testQuote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'elderScrolls', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6440b082ecec72766f649406189180d27c475ca9,Color.java,hex,"    public String hex(boolean excludeHashSign) {
        String hexString = faker.random().hex(6);
        if(excludeHashSign)
            return hexString;
        return ""#"" + hexString;
    }",https://www.github.com/dius/java-faker/commit/6440b082ecec72766f649406189180d27c475ca9,"    public String hex(boolean excludeHashSign) {
        String hexString = faker.random().hex(6);
        if(excludeHashSign)
            return hexString;
        return ""#"" + hexString;
    }
","['    ', 'public', ' ', 'String', ' ', 'hex', '(', 'boolean', ' ', 'excludeHashSign', ')', ' ', '{', '\n', '        ', 'String', ' ', 'hexString', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'hex', '(', '6', ')', ';', '\n', '        ', 'if', '(', 'excludeHashSign', ')', '\n', '            ', 'return', ' ', 'hexString', ';', '\n', '        ', 'return', ' ', '""', '#', '""', ' ', '+', ' ', 'hexString', ';', '\n', '    ', '}', '\n']"
master,6440b082ecec72766f649406189180d27c475ca9,RandomService.java,hex,"    public String hex(int length) {
        StringBuilder hexString = new StringBuilder();
        for(int i = 0; i < length; i++) {
            hexString.append(hexValues[nextInt(16)]);
        }
        return hexString.toString();
    }",https://www.github.com/dius/java-faker/commit/6440b082ecec72766f649406189180d27c475ca9,"    public String hex(int length) {
        StringBuilder hexString = new StringBuilder();
        for(int i = 0; i < length; i++) {
            hexString.append(hexValues[nextInt(16)]);
        }
        return hexString.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'hex', '(', 'int', ' ', 'length', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'hexString', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'hexString', '.', 'append', '(', 'hexValues', '[', 'nextInt', '(', '16', ')', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'hexString', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,6440b082ecec72766f649406189180d27c475ca9,ColorTest.java,testHex,"    public void testHex() {
        assertThat(faker.color().hex(), matchesRegularExpression(""^#[0-9A-F]{6}$""));
    }",https://www.github.com/dius/java-faker/commit/6440b082ecec72766f649406189180d27c475ca9,"    public void testHex() {
        assertThat(faker.color().hex(), matchesRegularExpression(""^#[0-9A-F]{6}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHex', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'color', '(', ')', '.', 'hex', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^#[0-9A-F]{6}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6440b082ecec72766f649406189180d27c475ca9,ColorTest.java,testHexNoHashSign,"    public void testHexNoHashSign() {
        assertThat(faker.color().hex(true), matchesRegularExpression(""^[0-9A-F]{6}$""));
    }",https://www.github.com/dius/java-faker/commit/6440b082ecec72766f649406189180d27c475ca9,"    public void testHexNoHashSign() {
        assertThat(faker.color().hex(true), matchesRegularExpression(""^[0-9A-F]{6}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHexNoHashSign', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'color', '(', ')', '.', 'hex', '(', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[0-9A-F]{6}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6440b082ecec72766f649406189180d27c475ca9,RandomServiceTest.java,testHex,"    public void testHex() {
        assertThat(faker.random().hex(8), matchesRegularExpression(""^[0-9A-F]{8}$""));
    }",https://www.github.com/dius/java-faker/commit/6440b082ecec72766f649406189180d27c475ca9,"    public void testHex() {
        assertThat(faker.random().hex(8), matchesRegularExpression(""^[0-9A-F]{8}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHex', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'random', '(', ')', '.', 'hex', '(', '8', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[0-9A-F]{8}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8b34ad5983696d5d65e6f5908bbd12015c7ca159,RandomService.java,hex,"    public String hex(int length) {
        StringBuilder hexString = new StringBuilder();
        for(int i = 0; i < length; i++) {
            hexString.append(hexValues[nextInt(hexValues.length)]);
        }
        return hexString.toString();
    }",https://www.github.com/dius/java-faker/commit/8b34ad5983696d5d65e6f5908bbd12015c7ca159,"    public String hex(int length) {
        StringBuilder hexString = new StringBuilder();
        for(int i = 0; i < length; i++) {
            hexString.append(hexValues[nextInt(hexValues.length)]);
        }
        return hexString.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'hex', '(', 'int', ' ', 'length', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'hexString', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'hexString', '.', 'append', '(', 'hexValues', '[', 'nextInt', '(', 'hexValues', '.', 'length', ')', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'hexString', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,Color.java,hex,"    public String hex(boolean includeHashSign) {
        String hexString = faker.random().hex(6);
        if(includeHashSign)
            return ""#"" + hexString;
        return hexString;
    }",https://www.github.com/dius/java-faker/commit/357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,"    public String hex(boolean includeHashSign) {
        String hexString = faker.random().hex(6);
        if(includeHashSign)
            return ""#"" + hexString;
        return hexString;
    }
","['    ', 'public', ' ', 'String', ' ', 'hex', '(', 'boolean', ' ', 'includeHashSign', ')', ' ', '{', '\n', '        ', 'String', ' ', 'hexString', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'hex', '(', '6', ')', ';', '\n', '        ', 'if', '(', 'includeHashSign', ')', '\n', '            ', 'return', ' ', '""', '#', '""', ' ', '+', ' ', 'hexString', ';', '\n', '        ', 'return', ' ', 'hexString', ';', '\n', '    ', '}', '\n']"
master,357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,RandomService.java,hex,"    public String hex(int length) {
        char[] hexValues = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
        StringBuilder hexString = new StringBuilder();
        for(int i = 0; i < length; i++) {
            hexString.append(hexValues[nextInt(hexValues.length)]);
        }
        return hexString.toString();
    }",https://www.github.com/dius/java-faker/commit/357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,"    public String hex(int length) {
        char[] hexValues = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
        StringBuilder hexString = new StringBuilder();
        for(int i = 0; i < length; i++) {
            hexString.append(hexValues[nextInt(hexValues.length)]);
        }
        return hexString.toString();
    }
","['    ', 'public', ' ', 'String', ' ', 'hex', '(', 'int', ' ', 'length', ')', ' ', '{', '\n', '        ', 'char', '[', ']', ' ', 'hexValues', ' ', '=', ' ', 'new', ' ', 'char', '[', ']', '{', ""'0'"", ',', ' ', ""'1'"", ',', ' ', ""'2'"", ',', ' ', ""'3'"", ',', ' ', ""'4'"", ',', ' ', ""'5'"", ',', ' ', ""'6'"", ',', ' ', ""'7'"", ',', ' ', ""'8'"", ',', ' ', ""'9'"", ',', ' ', ""'A'"", ',', ' ', ""'B'"", ',', ' ', ""'C'"", ',', ' ', ""'D'"", ',', ' ', ""'E'"", ',', ' ', ""'F'"", '}', ';', '\n', '        ', 'StringBuilder', ' ', 'hexString', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'hexString', '.', 'append', '(', 'hexValues', '[', 'nextInt', '(', 'hexValues', '.', 'length', ')', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'hexString', '.', 'toString', '(', ')', ';', '\n', '    ', '}', '\n']"
master,357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,ColorTest.java,testHexNoHashSign,"    public void testHexNoHashSign() {
        assertThat(faker.color().hex(false), matchesRegularExpression(""^[0-9A-F]{6}$""));
    }",https://www.github.com/dius/java-faker/commit/357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,"    public void testHexNoHashSign() {
        assertThat(faker.color().hex(false), matchesRegularExpression(""^[0-9A-F]{6}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHexNoHashSign', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'color', '(', ')', '.', 'hex', '(', 'false', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[0-9A-F]{6}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,RandomServiceTest.java,testHex,"    public void testHex() {
        assertThat(randomService.hex(8), matchesRegularExpression(""^[0-9A-F]{8}$""));
    }",https://www.github.com/dius/java-faker/commit/357d0c4333bfdc2b9cf1ac415b740ed5fb7f4118,"    public void testHex() {
        assertThat(randomService.hex(8), matchesRegularExpression(""^[0-9A-F]{8}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHex', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'randomService', '.', 'hex', '(', '8', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[0-9A-F]{8}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,85a3464e71eb5c91c85a38645f1f4b3edd3accdd,FakeValues.java,get,"    public Object get(String key) {
        if (values == null) {
            loadValues();
        }
        return values.get(key);
    }",https://www.github.com/dius/java-faker/commit/85a3464e71eb5c91c85a38645f1f4b3edd3accdd,"    public Object get(String key) {
        if (values == null) {
            loadValues();
        }
        return values.get(key);
    }
","['    ', 'public', ' ', 'Object', ' ', 'get', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'values', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'loadValues', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'values', '.', 'get', '(', 'key', ')', ';', '\n', '    ', '}', '\n']"
master,85a3464e71eb5c91c85a38645f1f4b3edd3accdd,FakeValues.java,supportsPath,"    public boolean supportsPath(String path) {
        return filename.replaceAll("".yml"", """").equals(path);
    }",https://www.github.com/dius/java-faker/commit/85a3464e71eb5c91c85a38645f1f4b3edd3accdd,"    public boolean supportsPath(String path) {
        return filename.replaceAll("".yml"", """").equals(path);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'supportsPath', '(', 'String', ' ', 'path', ')', ' ', '{', '\n', '        ', 'return', ' ', 'filename', '.', 'replaceAll', '(', '""', '.yml', '""', ',', ' ', '""', '""', ')', '.', 'equals', '(', 'path', ')', ';', '\n', '    ', '}', '\n']"
master,85a3464e71eb5c91c85a38645f1f4b3edd3accdd,FakeValuesGrouping.java,add,"    public void add(FakeValues fakeValues) {
        fakeValuesList.add(fakeValues);
    }",https://www.github.com/dius/java-faker/commit/85a3464e71eb5c91c85a38645f1f4b3edd3accdd,"    public void add(FakeValues fakeValues) {
        fakeValuesList.add(fakeValues);
    }
","['    ', 'public', ' ', 'void', ' ', 'add', '(', 'FakeValues', ' ', 'fakeValues', ')', ' ', '{', '\n', '        ', 'fakeValuesList', '.', 'add', '(', 'fakeValues', ')', ';', '\n', '    ', '}', '\n']"
master,85a3464e71eb5c91c85a38645f1f4b3edd3accdd,FakeValuesGrouping.java,get,"    public Object get(String key) {
        for (FakeValues fakeValues : fakeValuesList) {
            if (fakeValues.supportsPath(key)) {
                return fakeValues.get(key);
            }
        }
        return null;
    }",https://www.github.com/dius/java-faker/commit/85a3464e71eb5c91c85a38645f1f4b3edd3accdd,"    public Object get(String key) {
        for (FakeValues fakeValues : fakeValuesList) {
            if (fakeValues.supportsPath(key)) {
                return fakeValues.get(key);
            }
        }
        return null;
    }
","['    ', 'public', ' ', 'Object', ' ', 'get', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'for', ' ', '(', 'FakeValues', ' ', 'fakeValues', ' ', ':', ' ', 'fakeValuesList', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'fakeValues', '.', 'supportsPath', '(', 'key', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'fakeValues', '.', 'get', '(', 'key', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'null', ';', '\n', '    ', '}', '\n']"
master,85a3464e71eb5c91c85a38645f1f4b3edd3accdd,FakeValuesService.java,fetchObject,"    public Object fetchObject(String key) {
        String[] path = key.split(""\\."");

        Object result = null;
        for (FakeValuesInterface fakeValuesInterface : fakeValuesList) {
            Object currentValue = fakeValuesInterface;
            for (int p = 0; currentValue != null && p < path.length; p++) {
                String currentPath = path[p];
                if (currentValue instanceof Map) {
                    currentValue = ((Map) currentValue).get(currentPath);
                } else  {
                    currentValue = ((FakeValuesInterface) currentValue).get(currentPath);
                }
            }
            result = currentValue;
            if (result != null) {
                break;
            }
        }
        return result;
    }",https://www.github.com/dius/java-faker/commit/85a3464e71eb5c91c85a38645f1f4b3edd3accdd,"    public Object fetchObject(String key) {
        String[] path = key.split(""\\."");

        Object result = null;
        for (FakeValuesInterface fakeValuesInterface : fakeValuesList) {
            Object currentValue = fakeValuesInterface;
            for (int p = 0; currentValue != null && p < path.length; p++) {
                String currentPath = path[p];
                if (currentValue instanceof Map) {
                    currentValue = ((Map) currentValue).get(currentPath);
                } else  {
                    currentValue = ((FakeValuesInterface) currentValue).get(currentPath);
                }
            }
            result = currentValue;
            if (result != null) {
                break;
            }
        }
        return result;
    }
","['    ', 'public', ' ', 'Object', ' ', 'fetchObject', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'path', ' ', '=', ' ', 'key', '.', 'split', '(', '""', '\\\\', '.', '""', ')', ';', '\n', '\n', '        ', 'Object', ' ', 'result', ' ', '=', ' ', 'null', ';', '\n', '        ', 'for', ' ', '(', 'FakeValuesInterface', ' ', 'fakeValuesInterface', ' ', ':', ' ', 'fakeValuesList', ')', ' ', '{', '\n', '            ', 'Object', ' ', 'currentValue', ' ', '=', ' ', 'fakeValuesInterface', ';', '\n', '            ', 'for', ' ', '(', 'int', ' ', 'p', ' ', '=', ' ', '0', ';', ' ', 'currentValue', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', 'p', ' ', '<', ' ', 'path', '.', 'length', ';', ' ', 'p', '+', '+', ')', ' ', '{', '\n', '                ', 'String', ' ', 'currentPath', ' ', '=', ' ', 'path', '[', 'p', ']', ';', '\n', '                ', 'if', ' ', '(', 'currentValue', ' ', 'instanceof', ' ', 'Map', ')', ' ', '{', '\n', '                    ', 'currentValue', ' ', '=', ' ', '(', '(', 'Map', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'currentPath', ')', ';', '\n', '                ', '}', ' ', 'else', '  ', '{', '\n', '                    ', 'currentValue', ' ', '=', ' ', '(', '(', 'FakeValuesInterface', ')', ' ', 'currentValue', ')', '.', 'get', '(', 'currentPath', ')', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '            ', 'result', ' ', '=', ' ', 'currentValue', ';', '\n', '            ', 'if', ' ', '(', 'result', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                ', 'break', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n']"
master,381879331fc4fb34d29fd5276fdf156bbad221a2,FakeValues.java,get,"    public Object get(String key) {
        if (values == null) {
            values = loadValues();
        }
        return values == null ? null : values.get(key);
    }",https://www.github.com/dius/java-faker/commit/381879331fc4fb34d29fd5276fdf156bbad221a2,"    public Object get(String key) {
        if (values == null) {
            values = loadValues();
        }
        return values == null ? null : values.get(key);
    }
","['    ', 'public', ' ', 'Object', ' ', 'get', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'values', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'values', ' ', '=', ' ', 'loadValues', '(', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'values', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'null', ' ', ':', ' ', 'values', '.', 'get', '(', 'key', ')', ';', '\n', '    ', '}', '\n']"
master,381879331fc4fb34d29fd5276fdf156bbad221a2,FakeValues.java,supportsPath,"    public boolean supportsPath(String path) {
        return this.path.equals(path);
    }",https://www.github.com/dius/java-faker/commit/381879331fc4fb34d29fd5276fdf156bbad221a2,"    public boolean supportsPath(String path) {
        return this.path.equals(path);
    }
","['    ', 'public', ' ', 'boolean', ' ', 'supportsPath', '(', 'String', ' ', 'path', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'path', '.', 'equals', '(', 'path', ')', ';', '\n', '    ', '}', '\n']"
master,381879331fc4fb34d29fd5276fdf156bbad221a2,FakeValuesGrouping.java,get,"    public Object get(String key) {
        Object result = null;
        for (FakeValues fakeValues : fakeValuesList) {
            if (fakeValues.supportsPath(key)) {
                if (result != null) {
                    final Object newResult = fakeValues.get(key);
                    if (isMergeable(newResult) && isMergeable(result)) {
                        result = merge(newResult, result);
                    }
                } else {
                    result = fakeValues.get(key);
                }
            }

            // if we get a result that's not mergable, return
            if (result != null && !isMergeable(result)) {
                return result;
            }

        }
        return result;
    }",https://www.github.com/dius/java-faker/commit/381879331fc4fb34d29fd5276fdf156bbad221a2,"    public Object get(String key) {
        Object result = null;
        for (FakeValues fakeValues : fakeValuesList) {
            if (fakeValues.supportsPath(key)) {
                if (result != null) {
                    final Object newResult = fakeValues.get(key);
                    if (isMergeable(newResult) && isMergeable(result)) {
                        result = merge(newResult, result);
                    }
                } else {
                    result = fakeValues.get(key);
                }
            }

            
            if (result != null && !isMergeable(result)) {
                return result;
            }

        }
        return result;
    }
","['    ', 'public', ' ', 'Object', ' ', 'get', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'Object', ' ', 'result', ' ', '=', ' ', 'null', ';', '\n', '        ', 'for', ' ', '(', 'FakeValues', ' ', 'fakeValues', ' ', ':', ' ', 'fakeValuesList', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'fakeValues', '.', 'supportsPath', '(', 'key', ')', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'result', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'final', ' ', 'Object', ' ', 'newResult', ' ', '=', ' ', 'fakeValues', '.', 'get', '(', 'key', ')', ';', '\n', '                    ', 'if', ' ', '(', 'isMergeable', '(', 'newResult', ')', ' ', '&', '&', ' ', 'isMergeable', '(', 'result', ')', ')', ' ', '{', '\n', '                        ', 'result', ' ', '=', ' ', 'merge', '(', 'newResult', ',', ' ', 'result', ')', ';', '\n', '                    ', '}', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'result', ' ', '=', ' ', 'fakeValues', '.', 'get', '(', 'key', ')', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '\n', '            ', '\n', '            ', 'if', ' ', '(', 'result', ' ', '!', '=', ' ', 'null', ' ', '&', '&', ' ', '!', 'isMergeable', '(', 'result', ')', ')', ' ', '{', '\n', '                ', 'return', ' ', 'result', ';', '\n', '            ', '}', '\n', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n']"
master,381879331fc4fb34d29fd5276fdf156bbad221a2,FakeValuesGrouping.java,merge,"    private static Map merge(Object result1, Object result2) {
        Map map = new HashMap((Map) result1);
        map.putAll((Map) result2);
        return map;
    }",https://www.github.com/dius/java-faker/commit/381879331fc4fb34d29fd5276fdf156bbad221a2,"    private static Map merge(Object result1, Object result2) {
        Map map = new HashMap((Map) result1);
        map.putAll((Map) result2);
        return map;
    }
","['    ', 'private', ' ', 'static', ' ', 'Map', ' ', 'merge', '(', 'Object', ' ', 'result1', ',', ' ', 'Object', ' ', 'result2', ')', ' ', '{', '\n', '        ', 'Map', ' ', 'map', ' ', '=', ' ', 'new', ' ', 'HashMap', '(', '(', 'Map', ')', ' ', 'result1', ')', ';', '\n', '        ', 'map', '.', 'putAll', '(', '(', 'Map', ')', ' ', 'result2', ')', ';', '\n', '        ', 'return', ' ', 'map', ';', '\n', '    ', '}', '\n']"
master,381879331fc4fb34d29fd5276fdf156bbad221a2,FakeValuesGrouping.java,isMergeable,"    private static boolean isMergeable(Object result) {
        return result instanceof Map;
    }",https://www.github.com/dius/java-faker/commit/381879331fc4fb34d29fd5276fdf156bbad221a2,"    private static boolean isMergeable(Object result) {
        return result instanceof Map;
    }
","['    ', 'private', ' ', 'static', ' ', 'boolean', ' ', 'isMergeable', '(', 'Object', ' ', 'result', ')', ' ', '{', '\n', '        ', 'return', ' ', 'result', ' ', 'instanceof', ' ', 'Map', ';', '\n', '    ', '}', '\n']"
master,381879331fc4fb34d29fd5276fdf156bbad221a2,FakeValuesService.java,resolve,"    public String resolve(String key, Object current, Faker root) {
        final String expression = safeFetch(key, null);

        if (expression == null) {
            throw new RuntimeException(key + "" resulted in null expression"");
        }

        return resolveExpression(expression, current, root);
    }",https://www.github.com/dius/java-faker/commit/381879331fc4fb34d29fd5276fdf156bbad221a2,"    public String resolve(String key, Object current, Faker root) {
        final String expression = safeFetch(key, null);

        if (expression == null) {
            throw new RuntimeException(key + "" resulted in null expression"");
        }

        return resolveExpression(expression, current, root);
    }
","['    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ',', ' ', 'Object', ' ', 'current', ',', ' ', 'Faker', ' ', 'root', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'expression', ' ', '=', ' ', 'safeFetch', '(', 'key', ',', ' ', 'null', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'expression', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'RuntimeException', '(', 'key', ' ', '+', ' ', '""', ' resulted in null expression', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'resolveExpression', '(', 'expression', ',', ' ', 'current', ',', ' ', 'root', ')', ';', '\n', '    ', '}', '\n']"
master,381501666c1c7a1e40e65465ea88f34462042ef1,FakeValues.java,get,"    public Map get(String key) {
        if (values == null) {
            values = loadValues();
        }

        return values == null ? null : (Map) values.get(key);
    }",https://www.github.com/dius/java-faker/commit/381501666c1c7a1e40e65465ea88f34462042ef1,"    public Map get(String key) {
        if (values == null) {
            values = loadValues();
        }

        return values == null ? null : (Map) values.get(key);
    }
","['    ', 'public', ' ', 'Map', ' ', 'get', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'values', ' ', '=', '=', ' ', 'null', ')', ' ', '{', '\n', '            ', 'values', ' ', '=', ' ', 'loadValues', '(', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'values', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'null', ' ', ':', ' ', '(', 'Map', ')', ' ', 'values', '.', 'get', '(', 'key', ')', ';', '\n', '    ', '}', '\n']"
master,381501666c1c7a1e40e65465ea88f34462042ef1,FakeValuesGrouping.java,get,"    public Map get(String key) {
        Map result = null;
        for (FakeValues fakeValues : fakeValuesList) {
            if (fakeValues.supportsPath(key)) {
                if (result != null) {
                    final Map newResult = fakeValues.get(key);
                    result.putAll(newResult);
                } else {
                    result = fakeValues.get(key);
                }
            }
        }
        return result;
    }",https://www.github.com/dius/java-faker/commit/381501666c1c7a1e40e65465ea88f34462042ef1,"    public Map get(String key) {
        Map result = null;
        for (FakeValues fakeValues : fakeValuesList) {
            if (fakeValues.supportsPath(key)) {
                if (result != null) {
                    final Map newResult = fakeValues.get(key);
                    result.putAll(newResult);
                } else {
                    result = fakeValues.get(key);
                }
            }
        }
        return result;
    }
","['    ', 'public', ' ', 'Map', ' ', 'get', '(', 'String', ' ', 'key', ')', ' ', '{', '\n', '        ', 'Map', ' ', 'result', ' ', '=', ' ', 'null', ';', '\n', '        ', 'for', ' ', '(', 'FakeValues', ' ', 'fakeValues', ' ', ':', ' ', 'fakeValuesList', ')', ' ', '{', '\n', '            ', 'if', ' ', '(', 'fakeValues', '.', 'supportsPath', '(', 'key', ')', ')', ' ', '{', '\n', '                ', 'if', ' ', '(', 'result', ' ', '!', '=', ' ', 'null', ')', ' ', '{', '\n', '                    ', 'final', ' ', 'Map', ' ', 'newResult', ' ', '=', ' ', 'fakeValues', '.', 'get', '(', 'key', ')', ';', '\n', '                    ', 'result', '.', 'putAll', '(', 'newResult', ')', ';', '\n', '                ', '}', ' ', 'else', ' ', '{', '\n', '                    ', 'result', ' ', '=', ' ', 'fakeValues', '.', 'get', '(', 'key', ')', ';', '\n', '                ', '}', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'result', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValues.java,supportsPath,"    boolean supportsPath(String path) {
        return this.path.equals(path);
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    boolean supportsPath(String path) {
        return this.path.equals(path);
    }
","['    ', 'boolean', ' ', 'supportsPath', '(', 'String', ' ', 'path', ')', ' ', '{', '\n', '        ', 'return', ' ', 'this', '.', 'path', '.', 'equals', '(', 'path', ')', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValuesGroupingTest.java,before,"    public void before() {
        fakeValuesGrouping = new FakeValuesGrouping();
        addressValues = new FakeValues(Locale.ENGLISH, ""address.yml"", ""address"");
        fakeValuesGrouping.add(addressValues);
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    public void before() {
        fakeValuesGrouping = new FakeValuesGrouping();
        addressValues = new FakeValues(Locale.ENGLISH, ""address.yml"", ""address"");
        fakeValuesGrouping.add(addressValues);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'fakeValuesGrouping', ' ', '=', ' ', 'new', ' ', 'FakeValuesGrouping', '(', ')', ';', '\n', '        ', 'addressValues', ' ', '=', ' ', 'new', ' ', 'FakeValues', '(', 'Locale', '.', 'ENGLISH', ',', ' ', '""', 'address.yml', '""', ',', ' ', '""', 'address', '""', ')', ';', '\n', '        ', 'fakeValuesGrouping', '.', 'add', '(', 'addressValues', ')', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValuesGroupingTest.java,handlesOneFakeValue,"    public void handlesOneFakeValue() {
        assertThat(fakeValuesGrouping.get(""address""), is(addressValues.get(""address"")));
        assertThat(fakeValuesGrouping.get(""address""), is(notNullValue()));
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    public void handlesOneFakeValue() {
        assertThat(fakeValuesGrouping.get(""address""), is(addressValues.get(""address"")));
        assertThat(fakeValuesGrouping.get(""address""), is(notNullValue()));
    }
","['    ', 'public', ' ', 'void', ' ', 'handlesOneFakeValue', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValuesGrouping', '.', 'get', '(', '""', 'address', '""', ')', ',', ' ', 'is', '(', 'addressValues', '.', 'get', '(', '""', 'address', '""', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValuesGrouping', '.', 'get', '(', '""', 'address', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValuesGroupingTest.java,handlesMultipleFakeValues,"    public void handlesMultipleFakeValues() {
        FakeValues catValues = new FakeValues(Locale.ENGLISH, ""cat.yml"", ""creature"");
        fakeValuesGrouping.add(catValues);

        assertThat(fakeValuesGrouping.get(""address""), is(addressValues.get(""address"")));
        assertThat(fakeValuesGrouping.get(""address""), is(notNullValue()));

        assertThat(fakeValuesGrouping.get(""creature""), is(catValues.get(""creature"")));
        assertThat(fakeValuesGrouping.get(""creature""), is(notNullValue()));
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    public void handlesMultipleFakeValues() {
        FakeValues catValues = new FakeValues(Locale.ENGLISH, ""cat.yml"", ""creature"");
        fakeValuesGrouping.add(catValues);

        assertThat(fakeValuesGrouping.get(""address""), is(addressValues.get(""address"")));
        assertThat(fakeValuesGrouping.get(""address""), is(notNullValue()));

        assertThat(fakeValuesGrouping.get(""creature""), is(catValues.get(""creature"")));
        assertThat(fakeValuesGrouping.get(""creature""), is(notNullValue()));
    }
","['    ', 'public', ' ', 'void', ' ', 'handlesMultipleFakeValues', '(', ')', ' ', '{', '\n', '        ', 'FakeValues', ' ', 'catValues', ' ', '=', ' ', 'new', ' ', 'FakeValues', '(', 'Locale', '.', 'ENGLISH', ',', ' ', '""', 'cat.yml', '""', ',', ' ', '""', 'creature', '""', ')', ';', '\n', '        ', 'fakeValuesGrouping', '.', 'add', '(', 'catValues', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'fakeValuesGrouping', '.', 'get', '(', '""', 'address', '""', ')', ',', ' ', 'is', '(', 'addressValues', '.', 'get', '(', '""', 'address', '""', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValuesGrouping', '.', 'get', '(', '""', 'address', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'fakeValuesGrouping', '.', 'get', '(', '""', 'creature', '""', ')', ',', ' ', 'is', '(', 'catValues', '.', 'get', '(', '""', 'creature', '""', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'fakeValuesGrouping', '.', 'get', '(', '""', 'creature', '""', ')', ',', ' ', 'is', '(', 'notNullValue', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValuesTest.java,before,"    public void before() {
        fakeValues = new FakeValues(Locale.ENGLISH, ""address.yml"", PATH);
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    public void before() {
        fakeValues = new FakeValues(Locale.ENGLISH, ""address.yml"", PATH);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'fakeValues', ' ', '=', ' ', 'new', ' ', 'FakeValues', '(', 'Locale', '.', 'ENGLISH', ',', ' ', '""', 'address.yml', '""', ',', ' ', 'PATH', ')', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValuesTest.java,supportsPathIsTrueWithTheSameValueAsThePath,"    public void supportsPathIsTrueWithTheSameValueAsThePath() {
        assertThat(fakeValues.supportsPath(PATH), is(true));
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    public void supportsPathIsTrueWithTheSameValueAsThePath() {
        assertThat(fakeValues.supportsPath(PATH), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'supportsPathIsTrueWithTheSameValueAsThePath', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValues', '.', 'supportsPath', '(', 'PATH', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,FakeValuesTest.java,supportsPathIsFalseWhenValueIsNotTheSame,"    public void supportsPathIsFalseWhenValueIsNotTheSame() {
        assertThat(fakeValues.supportsPath(""dog""), is(false));
    }",https://www.github.com/dius/java-faker/commit/056e67f5d72b5acc0f50904c83e3e1ee5587e0b9,"    public void supportsPathIsFalseWhenValueIsNotTheSame() {
        assertThat(fakeValues.supportsPath(""dog""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'supportsPathIsFalseWhenValueIsNotTheSame', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'fakeValues', '.', 'supportsPath', '(', '""', 'dog', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6a2123b3d7454e322002eca427158c69af9e2d36,FakeValuesServiceTest.java,futureDateExpression,"    public void futureDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"" );

        Date now = new Date();
        Date nowPlus10Days = new Date( now.getTime() + MILLIS_IN_A_DAY * 10 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.future '10','TimeUnit.DAYS'}"", faker ));

        assertThat( date.getTime(), greaterThan( now.getTime() ));
        assertThat( date.getTime(), lessThan( nowPlus10Days.getTime() ));
    }",https://www.github.com/dius/java-faker/commit/6a2123b3d7454e322002eca427158c69af9e2d36,"    public void futureDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"" );

        Date now = new Date();
        Date nowPlus10Days = new Date( now.getTime() + MILLIS_IN_A_DAY * 10 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.future '10','TimeUnit.DAYS'}"", faker ));

        assertThat( date.getTime(), greaterThan( now.getTime() ));
        assertThat( date.getTime(), lessThan( nowPlus10Days.getTime() ));
    }
","['    ', 'public', ' ', 'void', ' ', 'futureDateExpression', '(', ')', ' ', 'throws', ' ', 'ParseException', ' ', '{', '\n', '        ', 'SimpleDateFormat', ' ', 'dateFormat', ' ', '=', ' ', 'new', ' ', 'SimpleDateFormat', '(', ' ', '""', 'EEE MMM dd HH:mm:ss z yyyy', '""', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'nowPlus10Days', ' ', '=', ' ', 'new', ' ', 'Date', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', '+', ' ', 'MILLIS_IN_A_DAY', ' ', '*', ' ', '10', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'date', ' ', '=', ' ', 'dateFormat', '.', 'parse', '(', ' ', 'fakeValuesService', '.', 'expression', '(', ' ', '""', ""#{date.future '10','TimeUnit.DAYS'}"", '""', ',', ' ', 'faker', ' ', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'greaterThan', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'lessThan', '(', ' ', 'nowPlus10Days', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6a2123b3d7454e322002eca427158c69af9e2d36,FakeValuesServiceTest.java,pastDateExpression,"    public void pastDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"" );

        Date now = new Date();
        Date nowMinus5Hours = new Date( now.getTime() - MILLIS_IN_AN_HOUR * 5 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.past '5','TimeUnit.HOURS'}"", faker ));

        assertThat( date.getTime(), greaterThan( nowMinus5Hours.getTime() ));
        assertThat( date.getTime(), lessThan( now.getTime() ));
    }",https://www.github.com/dius/java-faker/commit/6a2123b3d7454e322002eca427158c69af9e2d36,"    public void pastDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"" );

        Date now = new Date();
        Date nowMinus5Hours = new Date( now.getTime() - MILLIS_IN_AN_HOUR * 5 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.past '5','TimeUnit.HOURS'}"", faker ));

        assertThat( date.getTime(), greaterThan( nowMinus5Hours.getTime() ));
        assertThat( date.getTime(), lessThan( now.getTime() ));
    }
","['    ', 'public', ' ', 'void', ' ', 'pastDateExpression', '(', ')', ' ', 'throws', ' ', 'ParseException', ' ', '{', '\n', '        ', 'SimpleDateFormat', ' ', 'dateFormat', ' ', '=', ' ', 'new', ' ', 'SimpleDateFormat', '(', ' ', '""', 'EEE MMM dd HH:mm:ss z yyyy', '""', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'nowMinus5Hours', ' ', '=', ' ', 'new', ' ', 'Date', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', '-', ' ', 'MILLIS_IN_AN_HOUR', ' ', '*', ' ', '5', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'date', ' ', '=', ' ', 'dateFormat', '.', 'parse', '(', ' ', 'fakeValuesService', '.', 'expression', '(', ' ', '""', ""#{date.past '5','TimeUnit.HOURS'}"", '""', ',', ' ', 'faker', ' ', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'greaterThan', '(', ' ', 'nowMinus5Hours', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'lessThan', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '    ', '}', '\n']"
master,48bbe2aeb95341100b48df7ee0e7d0d02624cc0e,Animal.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""creature.animal.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/48bbe2aeb95341100b48df7ee0e7d0d02624cc0e,"    public String name() {
        return faker.fakeValuesService().resolve(""creature.animal.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'creature.animal.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,48bbe2aeb95341100b48df7ee0e7d0d02624cc0e,AnimalTest.java,name,"    public void name() {
        assertThat(faker.animal().name(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/48bbe2aeb95341100b48df7ee0e7d0d02624cc0e,"    public void name() {
        assertThat(faker.animal().name(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'animal', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,BackToTheFuture.java,character,"    public String character() {
        return faker.resolve(""back_to_the_future.characters"");
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public String character() {
        return faker.resolve(""back_to_the_future.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'back_to_the_future.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,BackToTheFuture.java,date,"    public String date() {
        return faker.resolve(""back_to_the_future.dates"");
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public String date() {
        return faker.resolve(""back_to_the_future.dates"");
    }
","['    ', 'public', ' ', 'String', ' ', 'date', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'back_to_the_future.dates', '""', ')', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,BackToTheFuture.java,quote,"    public String quote() {
        return faker.resolve(""back_to_the_future.quotes"");
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public String quote() {
        return faker.resolve(""back_to_the_future.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'back_to_the_future.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,Faker.java,backToTheFuture,"    public BackToTheFuture backToTheFuture() {
        return  backToTheFuture;
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public BackToTheFuture backToTheFuture() {
        return  backToTheFuture;
    }
","['    ', 'public', ' ', 'BackToTheFuture', ' ', 'backToTheFuture', '(', ')', ' ', '{', '\n', '        ', 'return', '  ', 'backToTheFuture', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,BackToTheFutureTest.java,character,"    public void character() {
        assertThat(faker.backToTheFuture().character(), matchesRegularExpression(""[A-Za-z .,]+""));
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public void character() {
        assertThat(faker.backToTheFuture().character(), matchesRegularExpression(""[A-Za-z .,]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'backToTheFuture', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z .,]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,BackToTheFutureTest.java,date,"    public void date() {
        assertThat(faker.backToTheFuture().date(), matchesRegularExpression(""([A-za-z]{3,8}) ([1-9]|[1-2]\\d|3[0-1]), (18[8-9]\\d|19[0-9]\\d|200\\d|201[0-5])""));
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public void date() {
        assertThat(faker.backToTheFuture().date(), matchesRegularExpression(""([A-za-z]{3,8}) ([1-9]|[1-2]\\d|3[0-1]), (18[8-9]\\d|19[0-9]\\d|200\\d|201[0-5])""));
    }
","['    ', 'public', ' ', 'void', ' ', 'date', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'backToTheFuture', '(', ')', '.', 'date', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([A-za-z]{3,8}) ([1-9]|[1-2]', '\\\\', 'd|3[0-1]), (18[8-9]', '\\\\', 'd|19[0-9]', '\\\\', 'd|200', '\\\\', 'd|201[0-5])', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,043ad3edc646ca0471c23bfecc55691dcf32f2f2,BackToTheFutureTest.java,quote,"    public void quote() {
        assertThat(faker.backToTheFuture().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/043ad3edc646ca0471c23bfecc55691dcf32f2f2,"    public void quote() {
        assertThat(faker.backToTheFuture().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'backToTheFuture', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,bdd923612aa06325b769c48011372ba699c077ed,BackToTheFutureTest.java,character,"    public void character() {
        assertThat(faker.backToTheFuture().character(), matchesRegularExpression(""[A-Za-z .-]+""));
    }",https://www.github.com/dius/java-faker/commit/bdd923612aa06325b769c48011372ba699c077ed,"    public void character() {
        assertThat(faker.backToTheFuture().character(), matchesRegularExpression(""[A-Za-z .-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'backToTheFuture', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z .-]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,02ba126596aae979e0d0dabd6f13fb19aed38740,Faker.java,princessBride,"    public PrincessBride princessBride() {
        return princessBride;
    }",https://www.github.com/dius/java-faker/commit/02ba126596aae979e0d0dabd6f13fb19aed38740,"    public PrincessBride princessBride() {
        return princessBride;
    }
","['    ', 'public', ' ', 'PrincessBride', ' ', 'princessBride', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'princessBride', ';', '\n', '    ', '}', '\n']"
master,02ba126596aae979e0d0dabd6f13fb19aed38740,PrincessBride.java,character,"    public String character() {
        return faker.resolve(""princess_bride.characters"");
    }",https://www.github.com/dius/java-faker/commit/02ba126596aae979e0d0dabd6f13fb19aed38740,"    public String character() {
        return faker.resolve(""princess_bride.characters"");
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'princess_bride.characters', '""', ')', ';', '\n', '    ', '}', '\n']"
master,02ba126596aae979e0d0dabd6f13fb19aed38740,PrincessBride.java,quote,"    public String quote() {
        return faker.resolve(""princess_bride.quotes"");
    }",https://www.github.com/dius/java-faker/commit/02ba126596aae979e0d0dabd6f13fb19aed38740,"    public String quote() {
        return faker.resolve(""princess_bride.quotes"");
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'princess_bride.quotes', '""', ')', ';', '\n', '    ', '}', '\n']"
master,02ba126596aae979e0d0dabd6f13fb19aed38740,PrincessBrideTest.java,character,"    public void character() {
        assertThat(faker.princessBride().character(), matchesRegularExpression(""[A-Za-z .-]+""));
    }",https://www.github.com/dius/java-faker/commit/02ba126596aae979e0d0dabd6f13fb19aed38740,"    public void character() {
        assertThat(faker.princessBride().character(), matchesRegularExpression(""[A-Za-z .-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'princessBride', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z .-]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,02ba126596aae979e0d0dabd6f13fb19aed38740,PrincessBrideTest.java,quote,"    public void quote() {
        assertThat(faker.princessBride().quote(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/02ba126596aae979e0d0dabd6f13fb19aed38740,"    public void quote() {
        assertThat(faker.princessBride().quote(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'princessBride', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,598b00fe7a85e652283534d8209c4ade308cbbbc,Country.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""country.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/598b00fe7a85e652283534d8209c4ade308cbbbc,"    public String name() {
        return faker.fakeValuesService().resolve(""country.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'country.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,598b00fe7a85e652283534d8209c4ade308cbbbc,CountryTest.java,testName,"    public void testName() {
        assertThat(faker.country().name(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }",https://www.github.com/dius/java-faker/commit/598b00fe7a85e652283534d8209c4ade308cbbbc,"    public void testName() {
        assertThat(faker.country().name(), matchesRegularExpression(""([\\w-]+ ?)+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'name', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '([', '\\\\', 'w-]+ ?)+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,Aviation.java,aircraft,"    public String aircraft() {
        return faker.fakeValuesService().fetchString(""aviation.aircraft"");
    }",https://www.github.com/dius/java-faker/commit/a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,"    public String aircraft() {
        return faker.fakeValuesService().fetchString(""aviation.aircraft"");
    }
","['    ', 'public', ' ', 'String', ' ', 'aircraft', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'aviation.aircraft', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,Aviation.java,airport,"    public String airport() {
        return faker.fakeValuesService().fetchString(""aviation.airport"");
    }",https://www.github.com/dius/java-faker/commit/a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,"    public String airport() {
        return faker.fakeValuesService().fetchString(""aviation.airport"");
    }
","['    ', 'public', ' ', 'String', ' ', 'airport', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'aviation.airport', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,Aviation.java,METAR,"    public String METAR() {
        return faker.fakeValuesService().fetchString(""aviation.metar"");
    }",https://www.github.com/dius/java-faker/commit/a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,"    public String METAR() {
        return faker.fakeValuesService().fetchString(""aviation.metar"");
    }
","['    ', 'public', ' ', 'String', ' ', 'METAR', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'aviation.metar', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,AviationTest.java,testAviation,"    public void testAviation() {
        String airport = faker.aviation().airport();
        assertThat(airport, matchesRegularExpression(""\\w{4}""));
    }",https://www.github.com/dius/java-faker/commit/a8a1c2687bf6ba8e379180e0ef52272b11f87a9e,"    public void testAviation() {
        String airport = faker.aviation().airport();
        assertThat(airport, matchesRegularExpression(""\\w{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAviation', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'airport', ' ', '=', ' ', 'faker', '.', 'aviation', '(', ')', '.', 'airport', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'airport', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,AbstractFakerTest.java,before,"    public void before() {
        MockitoAnnotations.initMocks(this);
        
        Logger rootLogger = LogManager.getLogManager().getLogger("""");
        Handler[] handlers = rootLogger.getHandlers();
        rootLogger.setLevel(Level.INFO);
        for (Handler h : handlers) {
            h.setLevel(Level.INFO);",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void before() {
        MockitoAnnotations.initMocks(this);
        
        Logger rootLogger = LogManager.getLogManager().getLogger("""");
        Handler[] handlers = rootLogger.getHandlers();
        rootLogger.setLevel(Level.INFO);
        for (Handler h : handlers) {
            h.setLevel(Level.INFO);
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'MockitoAnnotations', '.', 'initMocks', '(', 'this', ')', ';', '\n', '        ', '\n', '        ', 'Logger', ' ', 'rootLogger', ' ', '=', ' ', 'LogManager', '.', 'getLogManager', '(', ')', '.', 'getLogger', '(', '""', '""', ')', ';', '\n', '        ', 'Handler', '[', ']', ' ', 'handlers', ' ', '=', ' ', 'rootLogger', '.', 'getHandlers', '(', ')', ';', '\n', '        ', 'rootLogger', '.', 'setLevel', '(', 'Level', '.', 'INFO', ')', ';', '\n', '        ', 'for', ' ', '(', 'Handler', ' ', 'h', ' ', ':', ' ', 'handlers', ')', ' ', '{', '\n', '            ', 'h', '.', 'setLevel', '(', 'Level', '.', 'INFO', ')', ';', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,BackToTheFutureTest.java,character,"    public void character() {
        assertThat(faker.backToTheFuture().character(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void character() {
        assertThat(faker.backToTheFuture().character(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'backToTheFuture', '(', ')', '.', 'character', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,BackToTheFutureTest.java,quote,"    public void quote() {
        assertThat(faker.backToTheFuture().quote(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void quote() {
        assertThat(faker.backToTheFuture().quote(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'backToTheFuture', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,MedicalTest.java,testMedicineName,"    public void testMedicineName() {
        assertThat(faker.medical().medicineName(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void testMedicineName() {
        assertThat(faker.medical().medicineName(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testMedicineName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'medicineName', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,MedicalTest.java,testDiseaseName,"    public void testDiseaseName() {
        assertThat(faker.medical().diseaseName(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void testDiseaseName() {
        assertThat(faker.medical().diseaseName(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testDiseaseName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'diseaseName', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,MedicalTest.java,testHospitalName,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void testHospitalName() {
        assertThat(faker.medical().hospitalName(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testHospitalName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'hospitalName', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,MedicalTest.java,testSymptom,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void testSymptom() {
        assertThat(faker.medical().symptoms(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testSymptom', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'medical', '(', ')', '.', 'symptoms', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContents.java,matchesSafely,"    protected boolean matchesSafely(String s) {
        if (s == null) return false;

        return s.trim().length() > 0;
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    protected boolean matchesSafely(String s) {
        if (s == null) return false;

        return s.trim().length() > 0;
    }
","['    ', 'protected', ' ', 'boolean', ' ', 'matchesSafely', '(', 'String', ' ', 's', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 's', ' ', '=', '=', ' ', 'null', ')', ' ', 'return', ' ', 'false', ';', '\n', '\n', '        ', 'return', ' ', 's', '.', 'trim', '(', ')', '.', 'length', '(', ')', ' ', '>', ' ', '0', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContents.java,describeTo,"    public void describeTo(Description description) {
        description.appendText(""is string with contents"");
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void describeTo(Description description) {
        description.appendText(""is string with contents"");
    }
","['    ', 'public', ' ', 'void', ' ', 'describeTo', '(', 'Description', ' ', 'description', ')', ' ', '{', '\n', '        ', 'description', '.', 'appendText', '(', '""', 'is string with contents', '""', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContents.java,isStringWithContents,"    public static <T> Matcher<String> isStringWithContents() {
        return new IsStringWithContents();
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public static <T> Matcher<String> isStringWithContents() {
        return new IsStringWithContents();
    }
","['    ', 'public', ' ', 'static', ' ', '<', 'T', '>', ' ', 'Matcher', '<', 'String', '>', ' ', 'isStringWithContents', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'new', ' ', 'IsStringWithContents', '(', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContentsTest.java,before,"    public void before() {
        matcher = new IsStringWithContents();
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void before() {
        matcher = new IsStringWithContents();
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'matcher', ' ', '=', ' ', 'new', ' ', 'IsStringWithContents', '(', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContentsTest.java,emptyStringShouldFail,"    public void emptyStringShouldFail() {
        assertThat(matcher.matchesSafely(""""), is(false));
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void emptyStringShouldFail() {
        assertThat(matcher.matchesSafely(""""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'emptyStringShouldFail', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'matcher', '.', 'matchesSafely', '(', '""', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContentsTest.java,nullStringShouldFail,"    public void nullStringShouldFail() {
        assertThat(matcher.matchesSafely(null), is(false));
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void nullStringShouldFail() {
        assertThat(matcher.matchesSafely(null), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'nullStringShouldFail', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'matcher', '.', 'matchesSafely', '(', 'null', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContentsTest.java,stringShouldPass,"    public void stringShouldPass() {
        assertThat(matcher.matchesSafely(""123""), is(true));
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void stringShouldPass() {
        assertThat(matcher.matchesSafely(""123""), is(true));
    }
","['    ', 'public', ' ', 'void', ' ', 'stringShouldPass', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'matcher', '.', 'matchesSafely', '(', '""', '123', '""', ')', ',', ' ', 'is', '(', 'true', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d1749e793ced1a95e08981be25c113304fc38067,IsStringWithContentsTest.java,whiteSpaceShouldFail,"    public void whiteSpaceShouldFail() {
        assertThat(matcher.matchesSafely(""    ""), is(false));
    }",https://www.github.com/dius/java-faker/commit/d1749e793ced1a95e08981be25c113304fc38067,"    public void whiteSpaceShouldFail() {
        assertThat(matcher.matchesSafely(""    ""), is(false));
    }
","['    ', 'public', ' ', 'void', ' ', 'whiteSpaceShouldFail', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'matcher', '.', 'matchesSafely', '(', '""', '    ', '""', ')', ',', ' ', 'is', '(', 'false', ')', ')', ';', '\n', '    ', '}', '\n']"
master,469f007d6dc183e62b24c4b6292fe194926fd8c8,CountryTest.java,testName,"    public void testName() {
        assertThat(faker.country().name(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/469f007d6dc183e62b24c4b6292fe194926fd8c8,"    public void testName() {
        assertThat(faker.country().name(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testName', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'country', '(', ')', '.', 'name', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,aa1735a6b5bb33ae52e977b8682ba089ec41d0b2,AddressTest.java,testCountyByZipCode,"    public void testCountyByZipCode() {
        faker = new Faker(new Locale(""en-US""));
        assertThat(faker.address().countyByZipCode(""47732""), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/aa1735a6b5bb33ae52e977b8682ba089ec41d0b2,"    public void testCountyByZipCode() {
        faker = new Faker(new Locale(""en-US""));
        assertThat(faker.address().countyByZipCode(""47732""), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCountyByZipCode', '(', ')', ' ', '{', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'en-US', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'countyByZipCode', '(', '""', '47732', '""', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,PhoneNumber.java,subscriberNumber,"    public String subscriberNumber(int length) {
        StringBuilder subscriberNumber = new StringBuilder();
        for (int i = 0; i < length; i++) {
            subscriberNumber.append(""#"");
        }
        return faker.numerify(subscriberNumber.toString());
    }",https://www.github.com/dius/java-faker/commit/f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,"    public String subscriberNumber(int length) {
        StringBuilder subscriberNumber = new StringBuilder();
        for (int i = 0; i < length; i++) {
            subscriberNumber.append(""#"");
        }
        return faker.numerify(subscriberNumber.toString());
    }
","['    ', 'public', ' ', 'String', ' ', 'subscriberNumber', '(', 'int', ' ', 'length', ')', ' ', '{', '\n', '        ', 'StringBuilder', ' ', 'subscriberNumber', ' ', '=', ' ', 'new', ' ', 'StringBuilder', '(', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'subscriberNumber', '.', 'append', '(', '""', '#', '""', ')', ';', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'faker', '.', 'numerify', '(', 'subscriberNumber', '.', 'toString', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,PhoneNumber.java,subscriberNumber,"    public String subscriberNumber() {
        return subscriberNumber(4);
    }",https://www.github.com/dius/java-faker/commit/f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,"    public String subscriberNumber() {
        return subscriberNumber(4);
    }
","['    ', 'public', ' ', 'String', ' ', 'subscriberNumber', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'subscriberNumber', '(', '4', ')', ';', '\n', '    ', '}', '\n']"
master,f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,PhoneNumberTest.java,testSubscriberNumber,"    public void testSubscriberNumber() {
        assertThat(faker.phoneNumber().subscriberNumber(), matchesRegularExpression(""\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,"    public void testSubscriberNumber() {
        assertThat(faker.phoneNumber().subscriberNumber(), matchesRegularExpression(""\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSubscriberNumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'phoneNumber', '(', ')', '.', 'subscriberNumber', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,PhoneNumberTest.java,testSubscriberNumberWithLength,"    public void testSubscriberNumberWithLength() {
        assertThat(faker.phoneNumber().subscriberNumber(10), matchesRegularExpression(""\\d{10}""));
    }",https://www.github.com/dius/java-faker/commit/f86ee64d3f4cbf40a9873e4c70f225d761c8fd79,"    public void testSubscriberNumberWithLength() {
        assertThat(faker.phoneNumber().subscriberNumber(10), matchesRegularExpression(""\\d{10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testSubscriberNumberWithLength', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'phoneNumber', '(', ')', '.', 'subscriberNumber', '(', '10', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,de3d339323d901a99e2e19fad6f7bcb36ee2aefc,PhoneNumber.java,extension,"    public String extension() {
        return subscriberNumber();
    }",https://www.github.com/dius/java-faker/commit/de3d339323d901a99e2e19fad6f7bcb36ee2aefc,"    public String extension() {
        return subscriberNumber();
    }
","['    ', 'public', ' ', 'String', ' ', 'extension', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'subscriberNumber', '(', ')', ';', '\n', '    ', '}', '\n']"
master,de3d339323d901a99e2e19fad6f7bcb36ee2aefc,PhoneNumberTest.java,testExtension,"    public void testExtension() {
        assertThat(faker.phoneNumber().extension(), matchesRegularExpression(""\\d{4}""));
    }",https://www.github.com/dius/java-faker/commit/de3d339323d901a99e2e19fad6f7bcb36ee2aefc,"    public void testExtension() {
        assertThat(faker.phoneNumber().extension(), matchesRegularExpression(""\\d{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testExtension', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'phoneNumber', '(', ')', '.', 'extension', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,de3d339323d901a99e2e19fad6f7bcb36ee2aefc,TeamTest.java,testStateWithZaLocale,"    public void testStateWithZaLocale() {
        Faker zaFaker = new Faker(new Locale(""en-ZA""));
        assertThat(zaFaker.team().state(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/de3d339323d901a99e2e19fad6f7bcb36ee2aefc,"    public void testStateWithZaLocale() {
        Faker zaFaker = new Faker(new Locale(""en-ZA""));
        assertThat(zaFaker.team().state(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testStateWithZaLocale', '(', ')', ' ', '{', '\n', '        ', 'Faker', ' ', 'zaFaker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'en-ZA', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'zaFaker', '.', 'team', '(', ')', '.', 'state', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Faker.java,relationships,"    public Relationships relationships() {
        return relationships;
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public Relationships relationships() {
        return relationships;
    }
","['    ', 'public', ' ', 'Relationships', ' ', 'relationships', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'relationships', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Relationships.java,direct,"    public String direct() {
        return faker.resolve(""relationship.familial.direct"");
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public String direct() {
        return faker.resolve(""relationship.familial.direct"");
    }
","['    ', 'public', ' ', 'String', ' ', 'direct', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.familial.direct', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Relationships.java,extended,"    public String extended() {
        return faker.resolve(""relationship.familial.extended"");
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public String extended() {
        return faker.resolve(""relationship.familial.extended"");
    }
","['    ', 'public', ' ', 'String', ' ', 'extended', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.familial.extended', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Relationships.java,in_law,"    public String in_law() {
        return faker.resolve(""relationship.in_law"");
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public String in_law() {
        return faker.resolve(""relationship.in_law"");
    }
","['    ', 'public', ' ', 'String', ' ', 'in_law', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.in_law', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Relationships.java,spouse,"    public String spouse() {
        return faker.resolve(""relationship.spouse"");
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public String spouse() {
        return faker.resolve(""relationship.spouse"");
    }
","['    ', 'public', ' ', 'String', ' ', 'spouse', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.spouse', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Relationships.java,parent,"    public String parent() {
        return faker.resolve(""relationship.parent"");
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public String parent() {
        return faker.resolve(""relationship.parent"");
    }
","['    ', 'public', ' ', 'String', ' ', 'parent', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.parent', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,Relationships.java,sibling,"    public String sibling() {
        return faker.resolve(""relationship.sibling"");
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public String sibling() {
        return faker.resolve(""relationship.sibling"");
    }
","['    ', 'public', ' ', 'String', ' ', 'sibling', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.sibling', '""', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,anyTest,"    public void anyTest() {
        assertThat(faker.relationships().any(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void anyTest() {
        assertThat(faker.relationships().any(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'anyTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'any', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,directTest,"    public void directTest() {
        assertThat(faker.relationships().direct(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void directTest() {
        assertThat(faker.relationships().direct(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'directTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'direct', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,extendedTest,"    public void extendedTest() {
        assertThat(faker.relationships().extended(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void extendedTest() {
        assertThat(faker.relationships().extended(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'extendedTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'extended', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,in_lawTest,"    public void in_lawTest() {
        assertThat(faker.relationships().in_law(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void in_lawTest() {
        assertThat(faker.relationships().in_law(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'in_lawTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'in_law', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,spouseTest,"    public void spouseTest() {
        assertThat(faker.relationships().spouse(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void spouseTest() {
        assertThat(faker.relationships().spouse(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'spouseTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'spouse', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,parentTest,"    public void parentTest() {
        assertThat(faker.relationships().parent(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void parentTest() {
        assertThat(faker.relationships().parent(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'parentTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'parent', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,5bbfbeeb39975ae070b79d40e3f291ffb327326b,RelationshipTest.java,siblingTest,"    public void siblingTest() {
        assertThat(faker.relationships().sibling(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/5bbfbeeb39975ae070b79d40e3f291ffb327326b,"    public void siblingTest() {
        assertThat(faker.relationships().sibling(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'siblingTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'sibling', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,069aed23008286daaa8f739f0f52844c55bc8daf,Relationships.java,inLaw,"    public String inLaw() {
        return faker.resolve(""relationship.in_law"");
    }",https://www.github.com/dius/java-faker/commit/069aed23008286daaa8f739f0f52844c55bc8daf,"    public String inLaw() {
        return faker.resolve(""relationship.in_law"");
    }
","['    ', 'public', ' ', 'String', ' ', 'inLaw', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'relationship.in_law', '""', ')', ';', '\n', '    ', '}', '\n']"
master,069aed23008286daaa8f739f0f52844c55bc8daf,Relationships.java,any,"    public String any() {
        Method currentMethod = Relationships.class.getClass().getEnclosingMethod();

        try {
            Method[] methods = Relationships.class.getDeclaredMethods();",https://www.github.com/dius/java-faker/commit/069aed23008286daaa8f739f0f52844c55bc8daf,"    public String any() {
        Method currentMethod = Relationships.class.getClass().getEnclosingMethod();

        try {
            Method[] methods = Relationships.class.getDeclaredMethods();
","['    ', 'public', ' ', 'String', ' ', 'any', '(', ')', ' ', '{', '\n', '        ', 'Method', ' ', 'currentMethod', ' ', '=', ' ', 'Relationships', '.', 'class', '.', 'getClass', '(', ')', '.', 'getEnclosingMethod', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Method', '[', ']', ' ', 'methods', ' ', '=', ' ', 'Relationships', '.', 'class', '.', 'getDeclaredMethods', '(', ')', ';', '\n']"
master,069aed23008286daaa8f739f0f52844c55bc8daf,RelationshipTest.java,inLawTest,"    public void inLawTest() {
        assertThat(faker.relationships().inLaw(), not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/069aed23008286daaa8f739f0f52844c55bc8daf,"    public void inLawTest() {
        assertThat(faker.relationships().inLaw(), not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'inLawTest', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'relationships', '(', ')', '.', 'inLaw', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,Buffy.java,characters,"    public String characters() {
        return faker.fakeValuesService().resolve(""buffy.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public String characters() {
        return faker.fakeValuesService().resolve(""buffy.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'buffy.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,Buffy.java,quotes,"    public String quotes() {
        return faker.fakeValuesService().resolve(""buffy.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public String quotes() {
        return faker.fakeValuesService().resolve(""buffy.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quotes', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'buffy.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,Buffy.java,celebrities,"    public String celebrities() {
        return faker.fakeValuesService().resolve(""buffy.celebrities"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public String celebrities() {
        return faker.fakeValuesService().resolve(""buffy.celebrities"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'celebrities', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'buffy.celebrities', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,Buffy.java,bigBads,"    public String bigBads() {
        return faker.fakeValuesService().resolve(""buffy.big_bads"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public String bigBads() {
        return faker.fakeValuesService().resolve(""buffy.big_bads"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'bigBads', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'buffy.big_bads', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,Buffy.java,episodes,"    public String episodes() {
        return faker.fakeValuesService().resolve(""buffy.episodes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public String episodes() {
        return faker.fakeValuesService().resolve(""buffy.episodes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'episodes', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'buffy.episodes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,BuffyTest.java,testCharacters,"    public void testCharacters() {
        assertThat(faker.buffy().characters(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public void testCharacters() {
        assertThat(faker.buffy().characters(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharacters', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'buffy', '(', ')', '.', 'characters', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,BuffyTest.java,testQuotes,"    public void testQuotes() {
        assertThat(faker.buffy().quotes(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public void testQuotes() {
        assertThat(faker.buffy().quotes(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testQuotes', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'buffy', '(', ')', '.', 'quotes', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,BuffyTest.java,testCelebrities,"    public void testCelebrities() {
        assertThat(faker.buffy().celebrities(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public void testCelebrities() {
        assertThat(faker.buffy().celebrities(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testCelebrities', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'buffy', '(', ')', '.', 'celebrities', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,BuffyTest.java,testBigBads,"    public void testBigBads() {
        assertThat(faker.buffy().bigBads(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public void testBigBads() {
        assertThat(faker.buffy().bigBads(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testBigBads', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'buffy', '(', ')', '.', 'bigBads', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9e23a7a161fe218e82078abda68f9912d06bce64,BuffyTest.java,testEpisodes,"    public void testEpisodes() {
        assertThat(faker.buffy().episodes(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9e23a7a161fe218e82078abda68f9912d06bce64,"    public void testEpisodes() {
        assertThat(faker.buffy().episodes(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testEpisodes', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'buffy', '(', ')', '.', 'episodes', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6b3a464acc250e60f9b3c0de23a193dd77eee5ef,AddressTest.java,testStreetPrefix,"    public void testStreetPrefix() {
        assertThat(faker.address().streetPrefix(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/6b3a464acc250e60f9b3c0de23a193dd77eee5ef,"    public void testStreetPrefix() {
        assertThat(faker.address().streetPrefix(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'testStreetPrefix', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'streetPrefix', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8ce9308bc1928da9a935e8718d83f7cb71e098d3,Name.java,bloodGroup,"    public String bloodGroup() {
        return faker.fakeValuesService().resolve(""name.blood_group"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/8ce9308bc1928da9a935e8718d83f7cb71e098d3,"    public String bloodGroup() {
        return faker.fakeValuesService().resolve(""name.blood_group"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'bloodGroup', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'name.blood_group', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,8ce9308bc1928da9a935e8718d83f7cb71e098d3,NameTest.java,testBloodGroup,"    public void testBloodGroup() {
        assertThat(faker.name().bloodGroup(), matchesRegularExpression(""(A|B|AB|O)[+-]""));
    }",https://www.github.com/dius/java-faker/commit/8ce9308bc1928da9a935e8718d83f7cb71e098d3,"    public void testBloodGroup() {
        assertThat(faker.name().bloodGroup(), matchesRegularExpression(""(A|B|AB|O)[+-]""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBloodGroup', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'name', '(', ')', '.', 'bloodGroup', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(A|B|AB|O)[+-]', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,2e553c40ed825e48945650bc4b244788b4c47b7f,Lorem.java,character,"    public char character(boolean includeUppercase) {
        return characters(1, includeUppercase).charAt(0);
    }",https://www.github.com/dius/java-faker/commit/2e553c40ed825e48945650bc4b244788b4c47b7f,"    public char character(boolean includeUppercase) {
        return characters(1, includeUppercase).charAt(0);
    }
","['    ', 'public', ' ', 'char', ' ', 'character', '(', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '1', ',', ' ', 'includeUppercase', ')', '.', 'charAt', '(', '0', ')', ';', '\n', '    ', '}', '\n']"
master,2e553c40ed825e48945650bc4b244788b4c47b7f,Lorem.java,characters,"    public String characters(boolean includeUppercase) {
        return characters(255, includeUppercase);
    }",https://www.github.com/dius/java-faker/commit/2e553c40ed825e48945650bc4b244788b4c47b7f,"    public String characters(boolean includeUppercase) {
        return characters(255, includeUppercase);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', 'boolean', ' ', 'includeUppercase', ')', ' ', '{', '\n', '        ', 'return', ' ', 'characters', '(', '255', ',', ' ', 'includeUppercase', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,Food.java,dish,"    public String dish() {
        return faker.fakeValuesService().resolve(""food.dish"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public String dish() {
        return faker.fakeValuesService().resolve(""food.dish"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'dish', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.dish', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,Food.java,fruit,"    public String fruit() {
        return faker.fakeValuesService().resolve(""food.fruits"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public String fruit() {
        return faker.fakeValuesService().resolve(""food.fruits"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'fruit', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.fruits', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,Food.java,vegetable,"    public String vegetable() {
        return faker.fakeValuesService().resolve(""food.vegetables"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public String vegetable() {
        return faker.fakeValuesService().resolve(""food.vegetables"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'vegetable', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.vegetables', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,Food.java,sushi,"    public String sushi() {
        return faker.fakeValuesService().resolve(""food.sushi"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public String sushi() {
        return faker.fakeValuesService().resolve(""food.sushi"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'sushi', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'food.sushi', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,FoodTest.java,dish,"    public void dish() {
        assertThat(faker.food().dish(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public void dish() {
        assertThat(faker.food().dish(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'dish', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'dish', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,FoodTest.java,fruit,"    public void fruit() {
        assertThat(faker.food().fruit(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public void fruit() {
        assertThat(faker.food().fruit(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'fruit', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'fruit', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,FoodTest.java,vegetable,"    public void vegetable() {
        assertThat(faker.food().vegetable(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public void vegetable() {
        assertThat(faker.food().vegetable(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'vegetable', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'vegetable', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,FoodTest.java,sushi,"    public void sushi() {
        assertThat(faker.food().sushi(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }",https://www.github.com/dius/java-faker/commit/e55d87f6fa2c49b6ff4238015bd7f7d98e736e55,"    public void sushi() {
        assertThat(faker.food().sushi(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'sushi', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'sushi', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,279fbf7503e4a6cc8afe7ee880bd1ca14058c555,Nation.java,nationality,"    public String nationality() {
        return faker.fakeValuesService().resolve(""nation.nationality"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/279fbf7503e4a6cc8afe7ee880bd1ca14058c555,"    public String nationality() {
        return faker.fakeValuesService().resolve(""nation.nationality"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'nationality', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'nation.nationality', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,279fbf7503e4a6cc8afe7ee880bd1ca14058c555,Nation.java,language,"    public String language() {
        return faker.fakeValuesService().resolve(""nation.language"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/279fbf7503e4a6cc8afe7ee880bd1ca14058c555,"    public String language() {
        return faker.fakeValuesService().resolve(""nation.language"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'language', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'nation.language', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,279fbf7503e4a6cc8afe7ee880bd1ca14058c555,Nation.java,capitalCity,"    public String capitalCity() {
        return faker.fakeValuesService().resolve(""nation.capital_city"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/279fbf7503e4a6cc8afe7ee880bd1ca14058c555,"    public String capitalCity() {
        return faker.fakeValuesService().resolve(""nation.capital_city"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'capitalCity', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'nation.capital_city', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,279fbf7503e4a6cc8afe7ee880bd1ca14058c555,NationTest.java,spice,"    public void spice() {
        assertThat(faker.nation().spice(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }",https://www.github.com/dius/java-faker/commit/279fbf7503e4a6cc8afe7ee880bd1ca14058c555,"    public void spice() {
        assertThat(faker.nation().spice(), matchesRegularExpression(""[A-Za-z1-9- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'spice', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'nation', '(', ')', '.', 'spice', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z1-9- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f2de7a3f1d6b8e491a90f63ac4f4262bf5e7e1d9,FoodTest.java,dish,"    public void dish() {
        assertThat(faker.food().dish(), matchesRegularExpression(""\\P{Cc}+""));
    }",https://www.github.com/dius/java-faker/commit/f2de7a3f1d6b8e491a90f63ac4f4262bf5e7e1d9,"    public void dish() {
        assertThat(faker.food().dish(), matchesRegularExpression(""\\P{Cc}+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'dish', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'dish', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'P{Cc}+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ef6662b97f064b80d47cbf4cab4d7505054c36eb,Nation.java,flag,"    public String flag() {
        @SuppressWarnings(""unchecked"")
        List<Integer> flagInts = (List<Integer>) faker.fakeValuesService().fetch(""nation.flag"");

        ByteBuffer byteBuffer = MappedByteBuffer.allocate(flagInts.size());

        for (Integer flagInt : flagInts) {
            byteBuffer.put(flagInt.byteValue());
        }

        return new String(byteBuffer.array(), UTF8_CHARSET);
    }",https://www.github.com/dius/java-faker/commit/ef6662b97f064b80d47cbf4cab4d7505054c36eb,"    public String flag() {
        @SuppressWarnings(""unchecked"")
        List<Integer> flagInts = (List<Integer>) faker.fakeValuesService().fetch(""nation.flag"");

        ByteBuffer byteBuffer = MappedByteBuffer.allocate(flagInts.size());

        for (Integer flagInt : flagInts) {
            byteBuffer.put(flagInt.byteValue());
        }

        return new String(byteBuffer.array(), UTF8_CHARSET);
    }
","['    ', 'public', ' ', 'String', ' ', 'flag', '(', ')', ' ', '{', '\n', '        ', '@SuppressWarnings', '(', '""', 'unchecked', '""', ')', '\n', '        ', 'List', '<', 'Integer', '>', ' ', 'flagInts', ' ', '=', ' ', '(', 'List', '<', 'Integer', '>', ')', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetch', '(', '""', 'nation.flag', '""', ')', ';', '\n', '\n', '        ', 'ByteBuffer', ' ', 'byteBuffer', ' ', '=', ' ', 'MappedByteBuffer', '.', 'allocate', '(', 'flagInts', '.', 'size', '(', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'Integer', ' ', 'flagInt', ' ', ':', ' ', 'flagInts', ')', ' ', '{', '\n', '            ', 'byteBuffer', '.', 'put', '(', 'flagInt', '.', 'byteValue', '(', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'byteBuffer', '.', 'array', '(', ')', ',', ' ', 'UTF8_CHARSET', ')', ';', '\n', '    ', '}', '\n']"
master,ef6662b97f064b80d47cbf4cab4d7505054c36eb,NationTest.java,nationality,"    public void nationality() {
        assertThat(faker.nation().nationality(), matchesRegularExpression(""\\P{Cc}+""));
    }",https://www.github.com/dius/java-faker/commit/ef6662b97f064b80d47cbf4cab4d7505054c36eb,"    public void nationality() {
        assertThat(faker.nation().nationality(), matchesRegularExpression(""\\P{Cc}+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'nationality', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'nation', '(', ')', '.', 'nationality', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'P{Cc}+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ef6662b97f064b80d47cbf4cab4d7505054c36eb,NationTest.java,language,"    public void language() {
        assertThat(faker.nation().language(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/ef6662b97f064b80d47cbf4cab4d7505054c36eb,"    public void language() {
        assertThat(faker.nation().language(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'language', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'nation', '(', ')', '.', 'language', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ef6662b97f064b80d47cbf4cab4d7505054c36eb,NationTest.java,capitalCity,"    public void capitalCity() {
        assertThat(faker.nation().capitalCity(), matchesRegularExpression(""[A-Za-z .'()-]+""));
    }",https://www.github.com/dius/java-faker/commit/ef6662b97f064b80d47cbf4cab4d7505054c36eb,"    public void capitalCity() {
        assertThat(faker.nation().capitalCity(), matchesRegularExpression(""[A-Za-z .'()-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'capitalCity', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'nation', '(', ')', '.', 'capitalCity', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z .'()-]+"", '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ef6662b97f064b80d47cbf4cab4d7505054c36eb,NationTest.java,flag,"    public void flag() {
        String flag = faker.nation().flag();

        // all utf8 emoji flags are at least 4 characters long and start with the same char
        assertThat(flag.length(), is(greaterThanOrEqualTo(4)));
        assertThat(flag.charAt(0), is('\uD83C'));
    }",https://www.github.com/dius/java-faker/commit/ef6662b97f064b80d47cbf4cab4d7505054c36eb,"    public void flag() {
        String flag = faker.nation().flag();

        
        assertThat(flag.length(), is(greaterThanOrEqualTo(4)));
        assertThat(flag.charAt(0), is('\uD83C'));
    }
","['    ', 'public', ' ', 'void', ' ', 'flag', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'flag', ' ', '=', ' ', 'faker', '.', 'nation', '(', ')', '.', 'flag', '(', ')', ';', '\n', '\n', '        ', '\n', '        ', 'assertThat', '(', 'flag', '.', 'length', '(', ')', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', '4', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'flag', '.', 'charAt', '(', '0', ')', ',', ' ', 'is', '(', ""'\\uD83C'"", ')', ')', ';', '\n', '    ', '}', '\n']"
master,3a39c2f22e9d79ff715d031844d5c18f87689587,Number.java,numberBetween,"    public long numberBetween(long min, long max) {
        return decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).longValue();
    }",https://www.github.com/dius/java-faker/commit/3a39c2f22e9d79ff715d031844d5c18f87689587,"    public long numberBetween(long min, long max) {
        return decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).longValue();
    }
","['    ', 'public', ' ', 'long', ' ', 'numberBetween', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'return', ' ', 'decimalBetween', '(', 'min', ',', 'max', ')', '.', 'setScale', '(', '0', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_DOWN', ')', '.', 'longValue', '(', ')', ';', '\n', '    ', '}', '\n']"
master,3a39c2f22e9d79ff715d031844d5c18f87689587,FoodTest.java,ingredient,"    public void ingredient() {
        assertThat(faker.food().ingredient(), matchesRegularExpression(""[A-Za-z- ]+""));
    }",https://www.github.com/dius/java-faker/commit/3a39c2f22e9d79ff715d031844d5c18f87689587,"    public void ingredient() {
        assertThat(faker.food().ingredient(), matchesRegularExpression(""[A-Za-z- ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'ingredient', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'food', '(', ')', '.', 'ingredient', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z- ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3a39c2f22e9d79ff715d031844d5c18f87689587,NumberTest.java,testLongBetweenOneAndThree,"    public void testLongBetweenOneAndThree() {
        Set<Long> nums = Sets.newHashSet();
        final long lowerLimit = 0;
        final long upperLimit = 3;
        for (int i = 0; i < 1000; ++i) {
            long value = faker.number().numberBetween(lowerLimit, upperLimit);
            assertThat(value, is(lessThan(upperLimit)));
            assertThat(value, is(greaterThanOrEqualTo(lowerLimit)));
            nums.add(value);
        }
        assertThat(nums, contains(0L, 1L, 2L));
    }",https://www.github.com/dius/java-faker/commit/3a39c2f22e9d79ff715d031844d5c18f87689587,"    public void testLongBetweenOneAndThree() {
        Set<Long> nums = Sets.newHashSet();
        final long lowerLimit = 0;
        final long upperLimit = 3;
        for (int i = 0; i < 1000; ++i) {
            long value = faker.number().numberBetween(lowerLimit, upperLimit);
            assertThat(value, is(lessThan(upperLimit)));
            assertThat(value, is(greaterThanOrEqualTo(lowerLimit)));
            nums.add(value);
        }
        assertThat(nums, contains(0L, 1L, 2L));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLongBetweenOneAndThree', '(', ')', ' ', '{', '\n', '        ', 'Set', '<', 'Long', '>', ' ', 'nums', ' ', '=', ' ', 'Sets', '.', 'newHashSet', '(', ')', ';', '\n', '        ', 'final', ' ', 'long', ' ', 'lowerLimit', ' ', '=', ' ', '0', ';', '\n', '        ', 'final', ' ', 'long', ' ', 'upperLimit', ' ', '=', ' ', '3', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', '+', '+', 'i', ')', ' ', '{', '\n', '            ', 'long', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'lowerLimit', ',', ' ', 'upperLimit', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'lessThan', '(', 'upperLimit', ')', ')', ')', ';', '\n', '            ', 'assertThat', '(', 'value', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', 'lowerLimit', ')', ')', ')', ';', '\n', '            ', 'nums', '.', 'add', '(', 'value', ')', ';', '\n', '        ', '}', '\n', '        ', 'assertThat', '(', 'nums', ',', ' ', 'contains', '(', '0', 'L', ',', ' ', '1L', ',', ' ', '2L', ')', ')', ';', '\n', '    ', '}', '\n']"
master,92c6458d1fca12633c0f6c20971dc4521a0de12c,LeagueOfLegendsTest.java,champion,"    public void champion() {
        assertThat(faker.leagueOfLegends().champion(), matchesRegularExpression(""^([\\w &]+\\.?-?'?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/92c6458d1fca12633c0f6c20971dc4521a0de12c,"    public void champion() {
        assertThat(faker.leagueOfLegends().champion(), matchesRegularExpression(""^([\\w &]+\\.?-?'?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'champion', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'champion', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^([', '\\\\', 'w &]+', '\\\\', "".?-?'?"", '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dfc446a73e0d11b51440bddd95942603b6098c02,FakeValuesService.java,normalizeLocale,"    private Locale normalizeLocale(Locale locale) {
        final String[] parts = locale.toString().split(""[-_]"");

        if (parts.length == 1) {
            return new Locale(parts[0]);",https://www.github.com/dius/java-faker/commit/dfc446a73e0d11b51440bddd95942603b6098c02,"    private Locale normalizeLocale(Locale locale) {
        final String[] parts = locale.toString().split(""[-_]"");

        if (parts.length == 1) {
            return new Locale(parts[0]);
","['    ', 'private', ' ', 'Locale', ' ', 'normalizeLocale', '(', 'Locale', ' ', 'locale', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', '[', ']', ' ', 'parts', ' ', '=', ' ', 'locale', '.', 'toString', '(', ')', '.', 'split', '(', '""', '[-_]', '""', ')', ';', '\n', '\n', '        ', 'if', ' ', '(', 'parts', '.', 'length', ' ', '=', '=', ' ', '1', ')', ' ', '{', '\n', '            ', 'return', ' ', 'new', ' ', 'Locale', '(', 'parts', '[', '0', ']', ')', ';', '\n']"
master,dfc446a73e0d11b51440bddd95942603b6098c02,InternetTest.java,testIpV4Cidr,"    public void testIpV4Cidr() {
        assertThat(faker.internet().ipV4Cidr(), countOf('.', is(3)));
        assertThat(faker.internet().ipV4Cidr(), countOf('/', is(1)));
        
        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV4Cidr().split(""/"")[1]),",https://www.github.com/dius/java-faker/commit/dfc446a73e0d11b51440bddd95942603b6098c02,"    public void testIpV4Cidr() {
        assertThat(faker.internet().ipV4Cidr(), countOf('.', is(3)));
        assertThat(faker.internet().ipV4Cidr(), countOf('/', is(1)));
        
        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV4Cidr().split(""/"")[1]),
","['    ', 'public', ' ', 'void', ' ', 'testIpV4Cidr', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Cidr', '(', ')', ',', ' ', 'countOf', '(', ""'.'"", ',', ' ', 'is', '(', '3', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Cidr', '(', ')', ',', ' ', 'countOf', '(', ""'/'"", ',', ' ', 'is', '(', '1', ')', ')', ')', ';', '\n', '        ', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'parseInt', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Cidr', '(', ')', '.', 'split', '(', '""', '/', '""', ')', '[', '1', ']', ')', ',', '\n']"
master,dfc446a73e0d11b51440bddd95942603b6098c02,InternetTest.java,testIpV6Cidr,"    public void testIpV6Cidr() {
        assertThat(faker.internet().ipV6Cidr(), countOf(':', is(7)));
        assertThat(faker.internet().ipV6Cidr(), countOf('/', is(1)));

        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV6Cidr().split(""/"")[1]),",https://www.github.com/dius/java-faker/commit/dfc446a73e0d11b51440bddd95942603b6098c02,"    public void testIpV6Cidr() {
        assertThat(faker.internet().ipV6Cidr(), countOf(':', is(7)));
        assertThat(faker.internet().ipV6Cidr(), countOf('/', is(1)));

        for (int i = 0; i < 1000; i++) {
            assertThat(parseInt(faker.internet().ipV6Cidr().split(""/"")[1]),
","['    ', 'public', ' ', 'void', ' ', 'testIpV6Cidr', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Cidr', '(', ')', ',', ' ', 'countOf', '(', ""':'"", ',', ' ', 'is', '(', '7', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Cidr', '(', ')', ',', ' ', 'countOf', '(', ""'/'"", ',', ' ', 'is', '(', '1', ')', ')', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '1000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'assertThat', '(', 'parseInt', '(', 'faker', '.', 'internet', '(', ')', '.', 'ipV6Cidr', '(', ')', '.', 'split', '(', '""', '/', '""', ')', '[', '1', ']', ')', ',', '\n']"
master,082feffeba173c147d8a68d5a761ab775a2d2bf2,Relationships.java,any,"    public String any() {
        Method currentMethod = getClass().getEnclosingMethod();

        try {
            Method[] methods = Relationships.class.getDeclaredMethods();",https://www.github.com/dius/java-faker/commit/082feffeba173c147d8a68d5a761ab775a2d2bf2,"    public String any() {
        Method currentMethod = getClass().getEnclosingMethod();

        try {
            Method[] methods = Relationships.class.getDeclaredMethods();
","['    ', 'public', ' ', 'String', ' ', 'any', '(', ')', ' ', '{', '\n', '        ', 'Method', ' ', 'currentMethod', ' ', '=', ' ', 'getClass', '(', ')', '.', 'getEnclosingMethod', '(', ')', ';', '\n', '\n', '        ', 'try', ' ', '{', '\n', '            ', 'Method', '[', ']', ' ', 'methods', ' ', '=', ' ', 'Relationships', '.', 'class', '.', 'getDeclaredMethods', '(', ')', ';', '\n']"
master,9c5c00f169e8528f1db026266bc4ce76675ed16c,File.java,fileName,"    public String fileName(String dirOrNull, String nameOrNull, String extensionOrNull, String separatorOrNull) {
        final String sep = separatorOrNull == null ? System.getProperty(""file.separator"") : separatorOrNull;
        final String dir = dirOrNull == null ? faker.internet().slug() : dirOrNull;
        final String name = nameOrNull == null ? faker.lorem().word().toLowerCase() : nameOrNull;
        final String ext = extensionOrNull == null ? extension() : extensionOrNull;
        return dir + sep + name + ""."" + ext;
    }",https://www.github.com/dius/java-faker/commit/9c5c00f169e8528f1db026266bc4ce76675ed16c,"    public String fileName(String dirOrNull, String nameOrNull, String extensionOrNull, String separatorOrNull) {
        final String sep = separatorOrNull == null ? System.getProperty(""file.separator"") : separatorOrNull;
        final String dir = dirOrNull == null ? faker.internet().slug() : dirOrNull;
        final String name = nameOrNull == null ? faker.lorem().word().toLowerCase() : nameOrNull;
        final String ext = extensionOrNull == null ? extension() : extensionOrNull;
        return dir + sep + name + ""."" + ext;
    }
","['    ', 'public', ' ', 'String', ' ', 'fileName', '(', 'String', ' ', 'dirOrNull', ',', ' ', 'String', ' ', 'nameOrNull', ',', ' ', 'String', ' ', 'extensionOrNull', ',', ' ', 'String', ' ', 'separatorOrNull', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'sep', ' ', '=', ' ', 'separatorOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'System', '.', 'getProperty', '(', '""', 'file.separator', '""', ')', ' ', ':', ' ', 'separatorOrNull', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'dir', ' ', '=', ' ', 'dirOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'faker', '.', 'internet', '(', ')', '.', 'slug', '(', ')', ' ', ':', ' ', 'dirOrNull', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'name', ' ', '=', ' ', 'nameOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'faker', '.', 'lorem', '(', ')', '.', 'word', '(', ')', '.', 'toLowerCase', '(', ')', ' ', ':', ' ', 'nameOrNull', ';', '\n', '        ', 'final', ' ', 'String', ' ', 'ext', ' ', '=', ' ', 'extensionOrNull', ' ', '=', '=', ' ', 'null', ' ', '?', ' ', 'extension', '(', ')', ' ', ':', ' ', 'extensionOrNull', ';', '\n', '        ', 'return', ' ', 'dir', ' ', '+', ' ', 'sep', ' ', '+', ' ', 'name', ' ', '+', ' ', '""', '.', '""', ' ', '+', ' ', 'ext', ';', '\n', '    ', '}', '\n']"
master,59fb7208e5714ae9a2ef31c3a4d4a00fe9f1826a,Company.java,url,"    public String url() {
        return join(
                ""www"",",https://www.github.com/dius/java-faker/commit/59fb7208e5714ae9a2ef31c3a4d4a00fe9f1826a,"    public String url() {
        return join(
                ""www"",
","['    ', 'public', ' ', 'String', ' ', 'url', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'join', '(', '\n', '                ', '""', 'www', '""', ',', '\n']"
master,59fb7208e5714ae9a2ef31c3a4d4a00fe9f1826a,Name.java,username,"    public String username() {

        String username = StringUtils.join(
                firstName().replaceAll(""'"", """").toLowerCase(),
                ""."",
                lastName().replaceAll(""'"", """").toLowerCase()
        );

        return StringUtils.deleteWhitespace(username);
    }",https://www.github.com/dius/java-faker/commit/59fb7208e5714ae9a2ef31c3a4d4a00fe9f1826a,"    public String username() {

        String username = StringUtils.join(
                firstName().replaceAll(""'"", """").toLowerCase(),
                ""."",
                lastName().replaceAll(""'"", """").toLowerCase()
        );

        return StringUtils.deleteWhitespace(username);
    }
","['    ', 'public', ' ', 'String', ' ', 'username', '(', ')', ' ', '{', '\n', '\n', '        ', 'String', ' ', 'username', ' ', '=', ' ', 'StringUtils', '.', 'join', '(', '\n', '                ', 'firstName', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', '.', 'toLowerCase', '(', ')', ',', '\n', '                ', '""', '.', '""', ',', '\n', '                ', 'lastName', '(', ')', '.', 'replaceAll', '(', '""', ""'"", '""', ',', ' ', '""', '""', ')', '.', 'toLowerCase', '(', ')', '\n', '        ', ')', ';', '\n', '\n', '        ', 'return', ' ', 'StringUtils', '.', 'deleteWhitespace', '(', 'username', ')', ';', '\n', '    ', '}', '\n']"
master,12be503e8719c912cac6a3271705a3580e7de390,LeagueOfLegendsTest.java,champion,"    public void champion() {
        assertThat(faker.leagueOfLegends().champion(), matchesRegularExpression(""^(\\w+\\.?-?'?\\s?&?\\s?)+$""));
    }",https://www.github.com/dius/java-faker/commit/12be503e8719c912cac6a3271705a3580e7de390,"    public void champion() {
        assertThat(faker.leagueOfLegends().champion(), matchesRegularExpression(""^(\\w+\\.?-?'?\\s?&?\\s?)+$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'champion', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'leagueOfLegends', '(', ')', '.', 'champion', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^(', '\\\\', 'w+', '\\\\', "".?-?'?"", '\\\\', 's?&?', '\\\\', 's?)+$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""dune.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String character() {
        return faker.fakeValuesService().resolve(""dune.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dune.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,title,"    public String title() {
        return faker.fakeValuesService().resolve(""dune.titles"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String title() {
        return faker.fakeValuesService().resolve(""dune.titles"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dune.titles', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,planet,"    public String planet() {
        return faker.fakeValuesService().resolve(""dune.planets"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String planet() {
        return faker.fakeValuesService().resolve(""dune.planets"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dune.planets', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,quote,"    public String quote() {
        return quote(faker.options().option(Dune.Quote.class));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String quote() {
        return quote(faker.options().option(Dune.Quote.class));
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'quote', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'Dune', '.', 'Quote', '.', 'class', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,quote,"    public String quote(Quote quote) {
        return faker.fakeValuesService().resolve(""dune.quotes."" + quote.yamlKey, this, faker);
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String quote(Quote quote) {
        return faker.fakeValuesService().resolve(""dune.quotes."" + quote.yamlKey, this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', 'Quote', ' ', 'quote', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dune.quotes.', '""', ' ', '+', ' ', 'quote', '.', 'yamlKey', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,saying,"    public String saying() {
        return saying(faker.options().option(Dune.Saying.class));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String saying() {
        return saying(faker.options().option(Dune.Saying.class));
    }
","['    ', 'public', ' ', 'String', ' ', 'saying', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'saying', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'Dune', '.', 'Saying', '.', 'class', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,Dune.java,saying,"    public String saying(Saying saying) {
        return faker.fakeValuesService().resolve(""dune.sayings."" + saying.yamlKey, this, faker);
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public String saying(Saying saying) {
        return faker.fakeValuesService().resolve(""dune.sayings."" + saying.yamlKey, this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'saying', '(', 'Saying', ' ', 'saying', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'dune.sayings.', '""', ' ', '+', ' ', 'saying', '.', 'yamlKey', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,character,"    public void character() {
        assertThat(faker.dune().character(), matchesRegularExpression(""[A-Za-z '\\-\""]+""));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void character() {
        assertThat(faker.dune().character(), matchesRegularExpression(""[A-Za-z '\\-\""]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dune', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', ""[A-Za-z '"", '\\\\', '-', '\\""', ']+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,title,"    public void title() {
        assertThat(faker.dune().title(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void title() {
        assertThat(faker.dune().title(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'title', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dune', '(', ')', '.', 'title', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,planet,"    public void planet() {
        assertThat(faker.dune().planet(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void planet() {
        assertThat(faker.dune().planet(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dune', '(', ')', '.', 'planet', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,quote,"    public void quote() {
        assertThat(faker.dune().quote(), matchesRegularExpression(""\\P{Cc}+""));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void quote() {
        assertThat(faker.dune().quote(), matchesRegularExpression(""\\P{Cc}+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dune', '(', ')', '.', 'quote', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'P{Cc}+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,randomQuote,"    public void randomQuote() {
        assertThat(
                faker.dune().quote(faker.options().option(Dune.Quote.class)),",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void randomQuote() {
        assertThat(
                faker.dune().quote(faker.options().option(Dune.Quote.class)),
","['    ', 'public', ' ', 'void', ' ', 'randomQuote', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '\n', '                ', 'faker', '.', 'dune', '(', ')', '.', 'quote', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'Dune', '.', 'Quote', '.', 'class', ')', ')', ',', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,saying,"    public void saying() {
        assertThat(faker.dune().saying(), matchesRegularExpression(""\\P{Cc}+""));
    }",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void saying() {
        assertThat(faker.dune().saying(), matchesRegularExpression(""\\P{Cc}+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'saying', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'dune', '(', ')', '.', 'saying', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'P{Cc}+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,458429c2911c1c354b6b1b2b0a356da529cdf6c5,DuneTest.java,randomSaying,"    public void randomSaying() {
        assertThat(
                faker.dune().saying(faker.options().option(Dune.Saying.class)),",https://www.github.com/dius/java-faker/commit/458429c2911c1c354b6b1b2b0a356da529cdf6c5,"    public void randomSaying() {
        assertThat(
                faker.dune().saying(faker.options().option(Dune.Saying.class)),
","['    ', 'public', ' ', 'void', ' ', 'randomSaying', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', '\n', '                ', 'faker', '.', 'dune', '(', ')', '.', 'saying', '(', 'faker', '.', 'options', '(', ')', '.', 'option', '(', 'Dune', '.', 'Saying', '.', 'class', ')', ')', ',', '\n']"
master,d7560762a588f66997d1577b67b8095a6ca810f1,Number.java,numberBetween,"    public int numberBetween(int min, int max) {
        if (min == max) return min;

        int value = decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).intValue();
        return value == max ? value - 1 : value;
    }",https://www.github.com/dius/java-faker/commit/d7560762a588f66997d1577b67b8095a6ca810f1,"    public int numberBetween(int min, int max) {
        if (min == max) return min;

        int value = decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).intValue();
        return value == max ? value - 1 : value;
    }
","['    ', 'public', ' ', 'int', ' ', 'numberBetween', '(', 'int', ' ', 'min', ',', ' ', 'int', ' ', 'max', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'min', ' ', '=', '=', ' ', 'max', ')', ' ', 'return', ' ', 'min', ';', '\n', '\n', '        ', 'int', ' ', 'value', ' ', '=', ' ', 'decimalBetween', '(', 'min', ',', 'max', ')', '.', 'setScale', '(', '0', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_DOWN', ')', '.', 'intValue', '(', ')', ';', '\n', '        ', 'return', ' ', 'value', ' ', '=', '=', ' ', 'max', ' ', '?', ' ', 'value', ' ', '-', ' ', '1', ' ', ':', ' ', 'value', ';', '\n', '    ', '}', '\n']"
master,d7560762a588f66997d1577b67b8095a6ca810f1,Number.java,numberBetween,"    public long numberBetween(long min, long max) {
        if (min == max) return min;

        long value = decimalBetween(min, max).setScale(0, BigDecimal.ROUND_HALF_DOWN).longValue();
        return value == max ? value - 1 : value;
    }",https://www.github.com/dius/java-faker/commit/d7560762a588f66997d1577b67b8095a6ca810f1,"    public long numberBetween(long min, long max) {
        if (min == max) return min;

        long value = decimalBetween(min, max).setScale(0, BigDecimal.ROUND_HALF_DOWN).longValue();
        return value == max ? value - 1 : value;
    }
","['    ', 'public', ' ', 'long', ' ', 'numberBetween', '(', 'long', ' ', 'min', ',', ' ', 'long', ' ', 'max', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'min', ' ', '=', '=', ' ', 'max', ')', ' ', 'return', ' ', 'min', ';', '\n', '\n', '        ', 'long', ' ', 'value', ' ', '=', ' ', 'decimalBetween', '(', 'min', ',', ' ', 'max', ')', '.', 'setScale', '(', '0', ',', ' ', 'BigDecimal', '.', 'ROUND_HALF_DOWN', ')', '.', 'longValue', '(', ')', ';', '\n', '        ', 'return', ' ', 'value', ' ', '=', '=', ' ', 'max', ' ', '?', ' ', 'value', ' ', '-', ' ', '1', ' ', ':', ' ', 'value', ';', '\n', '    ', '}', '\n']"
master,d7560762a588f66997d1577b67b8095a6ca810f1,FakerTest.java,numberBetweenRepeated,"    public void numberBetweenRepeated() {
        assertThat(faker.expression(""#{number.number_between '1','10'}""), matchesRegularExpression(""[1-9]""));
    }",https://www.github.com/dius/java-faker/commit/d7560762a588f66997d1577b67b8095a6ca810f1,"    public void numberBetweenRepeated() {
        assertThat(faker.expression(""#{number.number_between '1','10'}""), matchesRegularExpression(""[1-9]""));
    }
","['    ', 'public', ' ', 'void', ' ', 'numberBetweenRepeated', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'expression', '(', '""', ""#{number.number_between '1','10'}"", '""', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[1-9]', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d7560762a588f66997d1577b67b8095a6ca810f1,NumberTest.java,testLongNumberBetweenRepeated,"    public void testLongNumberBetweenRepeated() {
        long low = 1;
        long high = 10;
        long v = faker.number().numberBetween(low, high);
        assertThat(v, is(lessThan(high)));
        assertThat(v, is(greaterThanOrEqualTo(low)));
    }",https://www.github.com/dius/java-faker/commit/d7560762a588f66997d1577b67b8095a6ca810f1,"    public void testLongNumberBetweenRepeated() {
        long low = 1;
        long high = 10;
        long v = faker.number().numberBetween(low, high);
        assertThat(v, is(lessThan(high)));
        assertThat(v, is(greaterThanOrEqualTo(low)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLongNumberBetweenRepeated', '(', ')', ' ', '{', '\n', '        ', 'long', ' ', 'low', ' ', '=', ' ', '1', ';', '\n', '        ', 'long', ' ', 'high', ' ', '=', ' ', '10', ';', '\n', '        ', 'long', ' ', 'v', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'low', ',', ' ', 'high', ')', ';', '\n', '        ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'lessThan', '(', 'high', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', 'low', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,d7560762a588f66997d1577b67b8095a6ca810f1,NumberTest.java,testIntNumberBetweenRepeated,"    public void testIntNumberBetweenRepeated() {
        int low = 1;
        int high = 10;
        int v = faker.number().numberBetween(low, high);
        assertThat(v, is(lessThan(high)));
        assertThat(v, is(greaterThanOrEqualTo(low)));
    }",https://www.github.com/dius/java-faker/commit/d7560762a588f66997d1577b67b8095a6ca810f1,"    public void testIntNumberBetweenRepeated() {
        int low = 1;
        int high = 10;
        int v = faker.number().numberBetween(low, high);
        assertThat(v, is(lessThan(high)));
        assertThat(v, is(greaterThanOrEqualTo(low)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testIntNumberBetweenRepeated', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'low', ' ', '=', ' ', '1', ';', '\n', '        ', 'int', ' ', 'high', ' ', '=', ' ', '10', ';', '\n', '        ', 'int', ' ', 'v', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', 'low', ',', ' ', 'high', ')', ';', '\n', '        ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'lessThan', '(', 'high', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'v', ',', ' ', 'is', '(', 'greaterThanOrEqualTo', '(', 'low', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9713dd3e649f92fabd99d3f2047092db3fec824f,BusinessTest.java,creditCardNumber,"    public void creditCardNumber() {
        assertThat(faker.business().creditCardNumber(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9713dd3e649f92fabd99d3f2047092db3fec824f,"    public void creditCardNumber() {
        assertThat(faker.business().creditCardNumber(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'creditCardNumber', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'business', '(', ')', '.', 'creditCardNumber', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9713dd3e649f92fabd99d3f2047092db3fec824f,BusinessTest.java,creditCardType,"    public void creditCardType() {
        assertThat(faker.business().creditCardType(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9713dd3e649f92fabd99d3f2047092db3fec824f,"    public void creditCardType() {
        assertThat(faker.business().creditCardType(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'creditCardType', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'business', '(', ')', '.', 'creditCardType', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9713dd3e649f92fabd99d3f2047092db3fec824f,BusinessTest.java,creditCardExpiry,"    public void creditCardExpiry() {
        assertThat(faker.business().creditCardExpiry(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/9713dd3e649f92fabd99d3f2047092db3fec824f,"    public void creditCardExpiry() {
        assertThat(faker.business().creditCardExpiry(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'creditCardExpiry', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'business', '(', ')', '.', 'creditCardExpiry', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dddc00fbc771ad4c2eb72e3af02f8dcef295b39f,AviationTest.java,airport,"    public void airport() {
        assertThat(faker.aviation().airport(), matchesRegularExpression(""\\w{4}""));
    }",https://www.github.com/dius/java-faker/commit/dddc00fbc771ad4c2eb72e3af02f8dcef295b39f,"    public void airport() {
        assertThat(faker.aviation().airport(), matchesRegularExpression(""\\w{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'airport', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'aviation', '(', ')', '.', 'airport', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dddc00fbc771ad4c2eb72e3af02f8dcef295b39f,AviationTest.java,aircraft,"    public void aircraft() {
        assertThat(faker.aviation().aircraft(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/dddc00fbc771ad4c2eb72e3af02f8dcef295b39f,"    public void aircraft() {
        assertThat(faker.aviation().aircraft(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'aircraft', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'aviation', '(', ')', '.', 'aircraft', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,dddc00fbc771ad4c2eb72e3af02f8dcef295b39f,AviationTest.java,metar,"    public void metar() {
        assertThat(faker.aviation().METAR(), isStringWithContents());
    }",https://www.github.com/dius/java-faker/commit/dddc00fbc771ad4c2eb72e3af02f8dcef295b39f,"    public void metar() {
        assertThat(faker.aviation().METAR(), isStringWithContents());
    }
","['    ', 'public', ' ', 'void', ' ', 'metar', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'aviation', '(', ')', '.', 'METAR', '(', ')', ',', ' ', 'isStringWithContents', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,82b06497c71b877a0bc333f35009980695582e61,RelationshipTest.java,before,"    public void before() {
        super.before();
        mockFaker = Mockito.mock(Faker.class);
    }",https://www.github.com/dius/java-faker/commit/82b06497c71b877a0bc333f35009980695582e61,"    public void before() {
        super.before();
        mockFaker = Mockito.mock(Faker.class);
    }
","['    ', 'public', ' ', 'void', ' ', 'before', '(', ')', ' ', '{', '\n', '        ', 'super', '.', 'before', '(', ')', ';', '\n', '        ', 'mockFaker', ' ', '=', ' ', 'Mockito', '.', 'mock', '(', 'Faker', '.', 'class', ')', ';', '\n', '    ', '}', '\n']"
master,82b06497c71b877a0bc333f35009980695582e61,RelationshipTest.java,anyWithIllegalArgumentExceptionThrown,"    public void anyWithIllegalArgumentExceptionThrown() {
        when(mockFaker.random()).thenThrow(new IllegalArgumentException());
        new Relationships(mockFaker).any();
    }",https://www.github.com/dius/java-faker/commit/82b06497c71b877a0bc333f35009980695582e61,"    public void anyWithIllegalArgumentExceptionThrown() {
        when(mockFaker.random()).thenThrow(new IllegalArgumentException());
        new Relationships(mockFaker).any();
    }
","['    ', 'public', ' ', 'void', ' ', 'anyWithIllegalArgumentExceptionThrown', '(', ')', ' ', '{', '\n', '        ', 'when', '(', 'mockFaker', '.', 'random', '(', ')', ')', '.', 'thenThrow', '(', 'new', ' ', 'IllegalArgumentException', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Relationships', '(', 'mockFaker', ')', '.', 'any', '(', ')', ';', '\n', '    ', '}', '\n']"
master,82b06497c71b877a0bc333f35009980695582e61,RelationshipTest.java,anyWithSecurityExceptionThrown,"    public void anyWithSecurityExceptionThrown() {
        when(mockFaker.random()).thenThrow(new SecurityException());
        new Relationships(mockFaker).any();
    }",https://www.github.com/dius/java-faker/commit/82b06497c71b877a0bc333f35009980695582e61,"    public void anyWithSecurityExceptionThrown() {
        when(mockFaker.random()).thenThrow(new SecurityException());
        new Relationships(mockFaker).any();
    }
","['    ', 'public', ' ', 'void', ' ', 'anyWithSecurityExceptionThrown', '(', ')', ' ', '{', '\n', '        ', 'when', '(', 'mockFaker', '.', 'random', '(', ')', ')', '.', 'thenThrow', '(', 'new', ' ', 'SecurityException', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Relationships', '(', 'mockFaker', ')', '.', 'any', '(', ')', ';', '\n', '    ', '}', '\n']"
master,82b06497c71b877a0bc333f35009980695582e61,RelationshipTest.java,anyWithIllegalAccessExceptionThrown,"    public void anyWithIllegalAccessExceptionThrown() {
        when(mockFaker.random()).thenThrow(new IllegalArgumentException());
        new Relationships(mockFaker).any();
    }",https://www.github.com/dius/java-faker/commit/82b06497c71b877a0bc333f35009980695582e61,"    public void anyWithIllegalAccessExceptionThrown() {
        when(mockFaker.random()).thenThrow(new IllegalArgumentException());
        new Relationships(mockFaker).any();
    }
","['    ', 'public', ' ', 'void', ' ', 'anyWithIllegalAccessExceptionThrown', '(', ')', ' ', '{', '\n', '        ', 'when', '(', 'mockFaker', '.', 'random', '(', ')', ')', '.', 'thenThrow', '(', 'new', ' ', 'IllegalArgumentException', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Relationships', '(', 'mockFaker', ')', '.', 'any', '(', ')', ';', '\n', '    ', '}', '\n']"
master,82b06497c71b877a0bc333f35009980695582e61,RelationshipTest.java,anyWithInvocationTargetExceptionThrown,"    public void anyWithInvocationTargetExceptionThrown() {
        when(mockFaker.random()).thenThrow(new InvocationTargetException(new Exception()));
        new Relationships(mockFaker).any();
    }",https://www.github.com/dius/java-faker/commit/82b06497c71b877a0bc333f35009980695582e61,"    public void anyWithInvocationTargetExceptionThrown() {
        when(mockFaker.random()).thenThrow(new InvocationTargetException(new Exception()));
        new Relationships(mockFaker).any();
    }
","['    ', 'public', ' ', 'void', ' ', 'anyWithInvocationTargetExceptionThrown', '(', ')', ' ', '{', '\n', '        ', 'when', '(', 'mockFaker', '.', 'random', '(', ')', ')', '.', 'thenThrow', '(', 'new', ' ', 'InvocationTargetException', '(', 'new', ' ', 'Exception', '(', ')', ')', ')', ';', '\n', '        ', 'new', ' ', 'Relationships', '(', 'mockFaker', ')', '.', 'any', '(', ')', ';', '\n', '    ', '}', '\n']"
master,5f357f7e80550231952958f422fc8cdce5e719dc,RelationshipTest.java,anyWithIllegalAccessExceptionThrown,"    public void anyWithIllegalAccessExceptionThrown() {
        when(mockFaker.random()).thenThrow(new IllegalAccessException());
        new Relationships(mockFaker).any();
    }",https://www.github.com/dius/java-faker/commit/5f357f7e80550231952958f422fc8cdce5e719dc,"    public void anyWithIllegalAccessExceptionThrown() {
        when(mockFaker.random()).thenThrow(new IllegalAccessException());
        new Relationships(mockFaker).any();
    }
","['    ', 'public', ' ', 'void', ' ', 'anyWithIllegalAccessExceptionThrown', '(', ')', ' ', '{', '\n', '        ', 'when', '(', 'mockFaker', '.', 'random', '(', ')', ')', '.', 'thenThrow', '(', 'new', ' ', 'IllegalAccessException', '(', ')', ')', ';', '\n', '        ', 'new', ' ', 'Relationships', '(', 'mockFaker', ')', '.', 'any', '(', ')', ';', '\n', '    ', '}', '\n']"
master,e481bde9cb7eb98e694089094fdd1aa861cd76c3,HarryPotter.java,house,"    public String house() {
        return faker.resolve(""harry_potter.houses"");
    }",https://www.github.com/dius/java-faker/commit/e481bde9cb7eb98e694089094fdd1aa861cd76c3,"    public String house() {
        return faker.resolve(""harry_potter.houses"");
    }
","['    ', 'public', ' ', 'String', ' ', 'house', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'harry_potter.houses', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e481bde9cb7eb98e694089094fdd1aa861cd76c3,HarryPotter.java,spell,"    public String spell() {
        return faker.resolve(""harry_potter.spells"");
    }",https://www.github.com/dius/java-faker/commit/e481bde9cb7eb98e694089094fdd1aa861cd76c3,"    public String spell() {
        return faker.resolve(""harry_potter.spells"");
    }
","['    ', 'public', ' ', 'String', ' ', 'spell', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'harry_potter.spells', '""', ')', ';', '\n', '    ', '}', '\n']"
master,e481bde9cb7eb98e694089094fdd1aa861cd76c3,HarryPotterTest.java,house,"    public void house() {
        assertThat(faker.harryPotter().house(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/e481bde9cb7eb98e694089094fdd1aa861cd76c3,"    public void house() {
        assertThat(faker.harryPotter().house(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'house', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'house', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e481bde9cb7eb98e694089094fdd1aa861cd76c3,HarryPotterTest.java,spell,"    public void spell() {
        assertThat(faker.harryPotter().spell(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/e481bde9cb7eb98e694089094fdd1aa861cd76c3,"    public void spell() {
        assertThat(faker.harryPotter().spell(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'spell', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'harryPotter', '(', ')', '.', 'spell', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,7753b39a835ede95fd08004955f6b28d21bcf213,AquaTeenHungerForce.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""aqua_teen_hunger_force.character"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/7753b39a835ede95fd08004955f6b28d21bcf213,"    public String character() {
        return faker.fakeValuesService().resolve(""aqua_teen_hunger_force.character"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'aqua_teen_hunger_force.character', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,7753b39a835ede95fd08004955f6b28d21bcf213,Faker.java,aquaTeenHungerForce,"    public AquaTeenHungerForce aquaTeenHungerForce() {
        return aquaTeenHungerForce;
    }",https://www.github.com/dius/java-faker/commit/7753b39a835ede95fd08004955f6b28d21bcf213,"    public AquaTeenHungerForce aquaTeenHungerForce() {
        return aquaTeenHungerForce;
    }
","['    ', 'public', ' ', 'AquaTeenHungerForce', ' ', 'aquaTeenHungerForce', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'aquaTeenHungerForce', ';', '\n', '    ', '}', '\n']"
master,7753b39a835ede95fd08004955f6b28d21bcf213,AquaTeenHungerForceTest.java,character,"    public void character() {
        assertThat(faker.aquaTeenHungerForce().character(), matchesRegularExpression(""[A-Za-z .]+""));
    }",https://www.github.com/dius/java-faker/commit/7753b39a835ede95fd08004955f6b28d21bcf213,"    public void character() {
        assertThat(faker.aquaTeenHungerForce().character(), matchesRegularExpression(""[A-Za-z .]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'aquaTeenHungerForce', '(', ')', '.', 'character', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z .]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,6df096ceaf136cddae08e4419887411d1e9b82bd,Faker.java,programmingLanguage,"    public ProgrammingLanguage programmingLanguage() {
        return programmingLanguage;
    }",https://www.github.com/dius/java-faker/commit/6df096ceaf136cddae08e4419887411d1e9b82bd,"    public ProgrammingLanguage programmingLanguage() {
        return programmingLanguage;
    }
","['    ', 'public', ' ', 'ProgrammingLanguage', ' ', 'programmingLanguage', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'programmingLanguage', ';', '\n', '    ', '}', '\n']"
master,6df096ceaf136cddae08e4419887411d1e9b82bd,ProgrammingLanguage.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""programming_language.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6df096ceaf136cddae08e4419887411d1e9b82bd,"    public String name() {
        return faker.fakeValuesService().resolve(""programming_language.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'programming_language.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6df096ceaf136cddae08e4419887411d1e9b82bd,ProgrammingLanguage.java,creator,"    public String creator() {
        return faker.fakeValuesService().resolve(""programming_language.creator"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/6df096ceaf136cddae08e4419887411d1e9b82bd,"    public String creator() {
        return faker.fakeValuesService().resolve(""programming_language.creator"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'creator', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'programming_language.creator', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,6df096ceaf136cddae08e4419887411d1e9b82bd,ProgrammingLanguageTest.java,creator,"    public void creator() {
        assertThat(faker.programmingLanguage().creator(), matchesRegularExpression(""[A-Za-z .,\\-]+""));
    }",https://www.github.com/dius/java-faker/commit/6df096ceaf136cddae08e4419887411d1e9b82bd,"    public void creator() {
        assertThat(faker.programmingLanguage().creator(), matchesRegularExpression(""[A-Za-z .,\\-]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'creator', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'programmingLanguage', '(', ')', '.', 'creator', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z .,', '\\\\', '-]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,19b3557f64b5daf2dad9b7623ec8062e0783efc9,AddressTest.java,testHungarianZipCodeByState,"    public void testHungarianZipCodeByState() {
        faker = new Faker(new Locale(""hu""));
        assertThat(faker.address().zipCodeByState(faker.address().stateAbbr()), matchesRegularExpression(""[0-9]{4}""));
    }",https://www.github.com/dius/java-faker/commit/19b3557f64b5daf2dad9b7623ec8062e0783efc9,"    public void testHungarianZipCodeByState() {
        faker = new Faker(new Locale(""hu""));
        assertThat(faker.address().zipCodeByState(faker.address().stateAbbr()), matchesRegularExpression(""[0-9]{4}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testHungarianZipCodeByState', '(', ')', ' ', '{', '\n', '        ', 'faker', ' ', '=', ' ', 'new', ' ', 'Faker', '(', 'new', ' ', 'Locale', '(', '""', 'hu', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'faker', '.', 'address', '(', ')', '.', 'zipCodeByState', '(', 'faker', '.', 'address', '(', ')', '.', 'stateAbbr', '(', ')', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]{4}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9f5064b20f994ae75b3d6253d26abf00555b558d,NumberTest.java,testRandomDoubleMaxEqualsMin,"    public void testRandomDoubleMaxEqualsMin() {
        double actual = faker.number().randomDouble(1, 42, 42);

        double expected = BigDecimal.valueOf(42).doubleValue();

        assertThat(actual, equalTo(expected));
    }",https://www.github.com/dius/java-faker/commit/9f5064b20f994ae75b3d6253d26abf00555b558d,"    public void testRandomDoubleMaxEqualsMin() {
        double actual = faker.number().randomDouble(1, 42, 42);

        double expected = BigDecimal.valueOf(42).doubleValue();

        assertThat(actual, equalTo(expected));
    }
","['    ', 'public', ' ', 'void', ' ', 'testRandomDoubleMaxEqualsMin', '(', ')', ' ', '{', '\n', '        ', 'double', ' ', 'actual', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'randomDouble', '(', '1', ',', ' ', '42', ',', ' ', '42', ')', ';', '\n', '\n', '        ', 'double', ' ', 'expected', ' ', '=', ' ', 'BigDecimal', '.', 'valueOf', '(', '42', ')', '.', 'doubleValue', '(', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'actual', ',', ' ', 'equalTo', '(', 'expected', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9f5064b20f994ae75b3d6253d26abf00555b558d,NumberTest.java,testDigit,"    public void testDigit() {
        String digit = faker.number().digit();

        assertThat(digit, matchesRegularExpression(""[0-9]""));
    }",https://www.github.com/dius/java-faker/commit/9f5064b20f994ae75b3d6253d26abf00555b558d,"    public void testDigit() {
        String digit = faker.number().digit();

        assertThat(digit, matchesRegularExpression(""[0-9]""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDigit', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'digit', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'digit', '(', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'digit', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9f5064b20f994ae75b3d6253d26abf00555b558d,NumberTest.java,testDigits,"    public void testDigits() {
        String digits = faker.number().digits(5);

        assertThat(digits, matchesRegularExpression(""[0-9]{5}""));
    }",https://www.github.com/dius/java-faker/commit/9f5064b20f994ae75b3d6253d26abf00555b558d,"    public void testDigits() {
        String digits = faker.number().digits(5);

        assertThat(digits, matchesRegularExpression(""[0-9]{5}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDigits', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'digits', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'digits', '(', '5', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'digits', ',', ' ', 'matchesRegularExpression', '(', '""', '[0-9]{5}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c5fbba8e73fe71f4831eea44622dd41927001999,DateAndTime.java,between,"    public Date between(Date from, Date to) throws IllegalArgumentException {
        if (to.before(from)) {
            throw new IllegalArgumentException(""Invalid date range, the upper bound date is before the lower bound."");
        }

        if (from.equals(to)) {
            return from;
        }

        long offsetMillis = faker.random().nextLong(to.getTime() - from.getTime());
        return new Date(from.getTime() + offsetMillis);
    }",https://www.github.com/dius/java-faker/commit/c5fbba8e73fe71f4831eea44622dd41927001999,"    public Date between(Date from, Date to) throws IllegalArgumentException {
        if (to.before(from)) {
            throw new IllegalArgumentException(""Invalid date range, the upper bound date is before the lower bound."");
        }

        if (from.equals(to)) {
            return from;
        }

        long offsetMillis = faker.random().nextLong(to.getTime() - from.getTime());
        return new Date(from.getTime() + offsetMillis);
    }
","['    ', 'public', ' ', 'Date', ' ', 'between', '(', 'Date', ' ', 'from', ',', ' ', 'Date', ' ', 'to', ')', ' ', 'throws', ' ', 'IllegalArgumentException', ' ', '{', '\n', '        ', 'if', ' ', '(', 'to', '.', 'before', '(', 'from', ')', ')', ' ', '{', '\n', '            ', 'throw', ' ', 'new', ' ', 'IllegalArgumentException', '(', '""', 'Invalid date range, the upper bound date is before the lower bound.', '""', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'if', ' ', '(', 'from', '.', 'equals', '(', 'to', ')', ')', ' ', '{', '\n', '            ', 'return', ' ', 'from', ';', '\n', '        ', '}', '\n', '\n', '        ', 'long', ' ', 'offsetMillis', ' ', '=', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextLong', '(', 'to', '.', 'getTime', '(', ')', ' ', '-', ' ', 'from', '.', 'getTime', '(', ')', ')', ';', '\n', '        ', 'return', ' ', 'new', ' ', 'Date', '(', 'from', '.', 'getTime', '(', ')', ' ', '+', ' ', 'offsetMillis', ')', ';', '\n', '    ', '}', '\n']"
master,c5fbba8e73fe71f4831eea44622dd41927001999,DateAndTime.java,birthday,"    public Date birthday(int minAge, int maxAge) {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        int currentMonth = Calendar.getInstance().get(Calendar.MONTH);
        int currentDay = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        Calendar from = new GregorianCalendar(currentYear - maxAge, currentMonth, currentDay);
        Calendar to = new GregorianCalendar(currentYear - minAge, currentMonth, currentDay);

        return between(from.getTime(), to.getTime());
    }",https://www.github.com/dius/java-faker/commit/c5fbba8e73fe71f4831eea44622dd41927001999,"    public Date birthday(int minAge, int maxAge) {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        int currentMonth = Calendar.getInstance().get(Calendar.MONTH);
        int currentDay = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        Calendar from = new GregorianCalendar(currentYear - maxAge, currentMonth, currentDay);
        Calendar to = new GregorianCalendar(currentYear - minAge, currentMonth, currentDay);

        return between(from.getTime(), to.getTime());
    }
","['    ', 'public', ' ', 'Date', ' ', 'birthday', '(', 'int', ' ', 'minAge', ',', ' ', 'int', ' ', 'maxAge', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'int', ' ', 'currentMonth', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'MONTH', ')', ';', '\n', '        ', 'int', ' ', 'currentDay', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'DAY_OF_MONTH', ')', ';', '\n', '        ', 'Calendar', ' ', 'from', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', 'maxAge', ',', ' ', 'currentMonth', ',', ' ', 'currentDay', ')', ';', '\n', '        ', 'Calendar', ' ', 'to', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', 'minAge', ',', ' ', 'currentMonth', ',', ' ', 'currentDay', ')', ';', '\n', '\n', '        ', 'return', ' ', 'between', '(', 'from', '.', 'getTime', '(', ')', ',', ' ', 'to', '.', 'getTime', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c5fbba8e73fe71f4831eea44622dd41927001999,DateAndTimeTest.java,testBirthday,"    public void testBirthday() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        int currentMonth = Calendar.getInstance().get(Calendar.MONTH);
        int currentDay = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        long from = new GregorianCalendar(currentYear - 65, currentMonth, currentDay).getTime().getTime();
        long to = new GregorianCalendar(currentYear - 18, currentMonth, currentDay).getTime().getTime();

        for (int i = 0; i < 5000; i++) {
            Date birthday = faker.date().birthday();",https://www.github.com/dius/java-faker/commit/c5fbba8e73fe71f4831eea44622dd41927001999,"    public void testBirthday() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        int currentMonth = Calendar.getInstance().get(Calendar.MONTH);
        int currentDay = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        long from = new GregorianCalendar(currentYear - 65, currentMonth, currentDay).getTime().getTime();
        long to = new GregorianCalendar(currentYear - 18, currentMonth, currentDay).getTime().getTime();

        for (int i = 0; i < 5000; i++) {
            Date birthday = faker.date().birthday();
","['    ', 'public', ' ', 'void', ' ', 'testBirthday', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'int', ' ', 'currentMonth', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'MONTH', ')', ';', '\n', '        ', 'int', ' ', 'currentDay', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'DAY_OF_MONTH', ')', ';', '\n', '        ', 'long', ' ', 'from', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', '65', ',', ' ', 'currentMonth', ',', ' ', 'currentDay', ')', '.', 'getTime', '(', ')', '.', 'getTime', '(', ')', ';', '\n', '        ', 'long', ' ', 'to', ' ', '=', ' ', 'new', ' ', 'GregorianCalendar', '(', 'currentYear', ' ', '-', ' ', '18', ',', ' ', 'currentMonth', ',', ' ', 'currentDay', ')', '.', 'getTime', '(', ')', '.', 'getTime', '(', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '5000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Date', ' ', 'birthday', ' ', '=', ' ', 'faker', '.', 'date', '(', ')', '.', 'birthday', '(', ')', ';', '\n']"
master,c5fbba8e73fe71f4831eea44622dd41927001999,DateAndTimeTest.java,testBirthdayWithAges,"    public void testBirthdayWithAges() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        int currentMonth = Calendar.getInstance().get(Calendar.MONTH);
        int currentDay = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);

        for (int i = 0; i < 5000; i++) {
            int minAge = faker.number().numberBetween(1, 99);",https://www.github.com/dius/java-faker/commit/c5fbba8e73fe71f4831eea44622dd41927001999,"    public void testBirthdayWithAges() {
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        int currentMonth = Calendar.getInstance().get(Calendar.MONTH);
        int currentDay = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);

        for (int i = 0; i < 5000; i++) {
            int minAge = faker.number().numberBetween(1, 99);
","['    ', 'public', ' ', 'void', ' ', 'testBirthdayWithAges', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'currentYear', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ';', '\n', '        ', 'int', ' ', 'currentMonth', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'MONTH', ')', ';', '\n', '        ', 'int', ' ', 'currentDay', ' ', '=', ' ', 'Calendar', '.', 'getInstance', '(', ')', '.', 'get', '(', 'Calendar', '.', 'DAY_OF_MONTH', ')', ';', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', '5000', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'int', ' ', 'minAge', ' ', '=', ' ', 'faker', '.', 'number', '(', ')', '.', 'numberBetween', '(', '1', ',', ' ', '99', ')', ';', '\n']"
master,9cfdde18e8e82d6004521f445c9b6a91b8ef4138,FakeValuesServiceTest.java,futureDateExpression,"    public void futureDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"", Locale.ENGLISH  );

        Date now = new Date();
        Date nowPlus10Days = new Date( now.getTime() + MILLIS_IN_A_DAY * 10 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.future '10','TimeUnit.DAYS'}"", faker ));

        assertThat( date.getTime(), greaterThan( now.getTime() ));
        assertThat( date.getTime(), lessThan( nowPlus10Days.getTime() ));
    }",https://www.github.com/dius/java-faker/commit/9cfdde18e8e82d6004521f445c9b6a91b8ef4138,"    public void futureDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"", Locale.ENGLISH  );

        Date now = new Date();
        Date nowPlus10Days = new Date( now.getTime() + MILLIS_IN_A_DAY * 10 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.future '10','TimeUnit.DAYS'}"", faker ));

        assertThat( date.getTime(), greaterThan( now.getTime() ));
        assertThat( date.getTime(), lessThan( nowPlus10Days.getTime() ));
    }
","['    ', 'public', ' ', 'void', ' ', 'futureDateExpression', '(', ')', ' ', 'throws', ' ', 'ParseException', ' ', '{', '\n', '        ', 'SimpleDateFormat', ' ', 'dateFormat', ' ', '=', ' ', 'new', ' ', 'SimpleDateFormat', '(', ' ', '""', 'EEE MMM dd HH:mm:ss z yyyy', '""', ',', ' ', 'Locale', '.', 'ENGLISH', '  ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'nowPlus10Days', ' ', '=', ' ', 'new', ' ', 'Date', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', '+', ' ', 'MILLIS_IN_A_DAY', ' ', '*', ' ', '10', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'date', ' ', '=', ' ', 'dateFormat', '.', 'parse', '(', ' ', 'fakeValuesService', '.', 'expression', '(', ' ', '""', ""#{date.future '10','TimeUnit.DAYS'}"", '""', ',', ' ', 'faker', ' ', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'greaterThan', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'lessThan', '(', ' ', 'nowPlus10Days', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9cfdde18e8e82d6004521f445c9b6a91b8ef4138,FakeValuesServiceTest.java,pastDateExpression,"    public void pastDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"", Locale.ENGLISH );

        Date now = new Date();
        Date nowMinus5Hours = new Date( now.getTime() - MILLIS_IN_AN_HOUR * 5 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.past '5','TimeUnit.HOURS'}"", faker ));

        assertThat( date.getTime(), greaterThan( nowMinus5Hours.getTime() ));
        assertThat( date.getTime(), lessThan( now.getTime() ));
    }",https://www.github.com/dius/java-faker/commit/9cfdde18e8e82d6004521f445c9b6a91b8ef4138,"    public void pastDateExpression() throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat( ""EEE MMM dd HH:mm:ss z yyyy"", Locale.ENGLISH );

        Date now = new Date();
        Date nowMinus5Hours = new Date( now.getTime() - MILLIS_IN_AN_HOUR * 5 );

        Date date = dateFormat.parse( fakeValuesService.expression( ""#{date.past '5','TimeUnit.HOURS'}"", faker ));

        assertThat( date.getTime(), greaterThan( nowMinus5Hours.getTime() ));
        assertThat( date.getTime(), lessThan( now.getTime() ));
    }
","['    ', 'public', ' ', 'void', ' ', 'pastDateExpression', '(', ')', ' ', 'throws', ' ', 'ParseException', ' ', '{', '\n', '        ', 'SimpleDateFormat', ' ', 'dateFormat', ' ', '=', ' ', 'new', ' ', 'SimpleDateFormat', '(', ' ', '""', 'EEE MMM dd HH:mm:ss z yyyy', '""', ',', ' ', 'Locale', '.', 'ENGLISH', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n', '        ', 'Date', ' ', 'nowMinus5Hours', ' ', '=', ' ', 'new', ' ', 'Date', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', '-', ' ', 'MILLIS_IN_AN_HOUR', ' ', '*', ' ', '5', ' ', ')', ';', '\n', '\n', '        ', 'Date', ' ', 'date', ' ', '=', ' ', 'dateFormat', '.', 'parse', '(', ' ', 'fakeValuesService', '.', 'expression', '(', ' ', '""', ""#{date.past '5','TimeUnit.HOURS'}"", '""', ',', ' ', 'faker', ' ', ')', ')', ';', '\n', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'greaterThan', '(', ' ', 'nowMinus5Hours', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '        ', 'assertThat', '(', ' ', 'date', '.', 'getTime', '(', ')', ',', ' ', 'lessThan', '(', ' ', 'now', '.', 'getTime', '(', ')', ' ', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8fe21b5009a6ed3bca94c0e7df38b39b59ccafb3,LoremTest.java,testCharactersMinimumMaximumLengthIncludeUppercase,"    public void testCharactersMinimumMaximumLengthIncludeUppercase() {
        assertThat(faker.lorem().characters(1, 10, true), matchesRegularExpression(""[a-zA-Z\\d]{1,10}""));
    }",https://www.github.com/dius/java-faker/commit/8fe21b5009a6ed3bca94c0e7df38b39b59ccafb3,"    public void testCharactersMinimumMaximumLengthIncludeUppercase() {
        assertThat(faker.lorem().characters(1, 10, true), matchesRegularExpression(""[a-zA-Z\\d]{1,10}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersMinimumMaximumLengthIncludeUppercase', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'characters', '(', '1', ',', ' ', '10', ',', ' ', 'true', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[a-zA-Z', '\\\\', 'd]{1,10}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8fe21b5009a6ed3bca94c0e7df38b39b59ccafb3,LoremTest.java,testWords,"    public void testWords() {
        assertThat(faker.lorem().words(), hasSize(greaterThanOrEqualTo(1)));
    }",https://www.github.com/dius/java-faker/commit/8fe21b5009a6ed3bca94c0e7df38b39b59ccafb3,"    public void testWords() {
        assertThat(faker.lorem().words(), hasSize(greaterThanOrEqualTo(1)));
    }
","['    ', 'public', ' ', 'void', ' ', 'testWords', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'lorem', '(', ')', '.', 'words', '(', ')', ',', ' ', 'hasSize', '(', 'greaterThanOrEqualTo', '(', '1', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8fe21b5009a6ed3bca94c0e7df38b39b59ccafb3,FakeValuesServiceTest.java,expressionWithFourArguments,"    public void expressionWithFourArguments() throws ParseException {

        assertThat(fakeValuesService.expression(""#{Internet.password '5','8','true','true'}"", faker),
            matchesRegularExpression(""[\\w\\d\\!%#$@_\\^&\\*]{5,8}""));",https://www.github.com/dius/java-faker/commit/8fe21b5009a6ed3bca94c0e7df38b39b59ccafb3,"    public void expressionWithFourArguments() throws ParseException {

        assertThat(fakeValuesService.expression(""#{Internet.password '5','8','true','true'}"", faker),
            matchesRegularExpression(""[\\w\\d\\!%#$@_\\^&\\*]{5,8}""));
","['    ', 'public', ' ', 'void', ' ', 'expressionWithFourArguments', '(', ')', ' ', 'throws', ' ', 'ParseException', ' ', '{', '\n', '\n', '        ', 'assertThat', '(', 'fakeValuesService', '.', 'expression', '(', '""', ""#{Internet.password '5','8','true','true'}"", '""', ',', ' ', 'faker', ')', ',', '\n', '            ', 'matchesRegularExpression', '(', '""', '[', '\\\\', 'w', '\\\\', 'd', '\\\\', '!%#$@_', '\\\\', '^&', '\\\\', '*]{5,8}', '""', ')', ')', ';', '\n']"
master,2b1d0e4c52f86398a18e478e04c36c38b1ae53c3,Kaamelott.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""kaamelott.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/2b1d0e4c52f86398a18e478e04c36c38b1ae53c3,"    public String character() {
        return faker.fakeValuesService().resolve(""kaamelott.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'kaamelott.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,2b1d0e4c52f86398a18e478e04c36c38b1ae53c3,Kaamelott.java,quote,"    public String quote() {
        return faker.fakeValuesService().resolve(""kaamelott.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/2b1d0e4c52f86398a18e478e04c36c38b1ae53c3,"    public String quote() {
        return faker.fakeValuesService().resolve(""kaamelott.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quote', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'kaamelott.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,abacfd41882b8cdda5aa4f06dac7a1b37a263e88,Coin.java,flip,"    public String flip() {
        return faker.fakeValuesService().resolve(""coin.flip"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/abacfd41882b8cdda5aa4f06dac7a1b37a263e88,"    public String flip() {
        return faker.fakeValuesService().resolve(""coin.flip"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'flip', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'coin.flip', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,0bc9266b948324b693a130672652388c0e814c90,CoinTest.java,coinFlip,"    public void coinFlip() {
        assertThat(faker.coin().flip(), matchesRegularExpression(""\\w+""));
    }",https://www.github.com/dius/java-faker/commit/0bc9266b948324b693a130672652388c0e814c90,"    public void coinFlip() {
        assertThat(faker.coin().flip(), matchesRegularExpression(""\\w+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'coinFlip', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'coin', '(', ')', '.', 'flip', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,f32790fda746d730eeca50cefbe1d74899323c87,StarCraft.java,unit,"    public String unit() {
        return faker.fakeValuesService().resolve(""starcraft.units"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f32790fda746d730eeca50cefbe1d74899323c87,"    public String unit() {
        return faker.fakeValuesService().resolve(""starcraft.units"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'unit', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'starcraft.units', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f32790fda746d730eeca50cefbe1d74899323c87,StarCraft.java,building,"    public String building() {
        return faker.fakeValuesService().resolve(""starcraft.buildings"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f32790fda746d730eeca50cefbe1d74899323c87,"    public String building() {
        return faker.fakeValuesService().resolve(""starcraft.buildings"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'building', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'starcraft.buildings', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f32790fda746d730eeca50cefbe1d74899323c87,StarCraft.java,character,"    public String character() {
        return faker.fakeValuesService().resolve(""starcraft.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f32790fda746d730eeca50cefbe1d74899323c87,"    public String character() {
        return faker.fakeValuesService().resolve(""starcraft.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'character', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'starcraft.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,f32790fda746d730eeca50cefbe1d74899323c87,StarCraft.java,planet,"    public String planet() {
        return faker.fakeValuesService().resolve(""starcraft.planets"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/f32790fda746d730eeca50cefbe1d74899323c87,"    public String planet() {
        return faker.fakeValuesService().resolve(""starcraft.planets"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'planet', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'starcraft.planets', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9050336b4431ee675493ffdb941225a394120228,StarCraftTest.java,testUnit,"    public void testUnit() {
        String unit = faker.starCraft().unit();
        assertThat(unit, not(isEmptyOrNullString()));
        assertThat(unit, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/9050336b4431ee675493ffdb941225a394120228,"    public void testUnit() {
        String unit = faker.starCraft().unit();
        assertThat(unit, not(isEmptyOrNullString()));
        assertThat(unit, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testUnit', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'unit', ' ', '=', ' ', 'faker', '.', 'starCraft', '(', ')', '.', 'unit', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'unit', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'unit', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9050336b4431ee675493ffdb941225a394120228,StarCraftTest.java,testBuilding,"    public void testBuilding() {
        String building = faker.starCraft().building();
        assertThat(building, not(isEmptyOrNullString()));
        assertThat(building, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/9050336b4431ee675493ffdb941225a394120228,"    public void testBuilding() {
        String building = faker.starCraft().building();
        assertThat(building, not(isEmptyOrNullString()));
        assertThat(building, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testBuilding', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'building', ' ', '=', ' ', 'faker', '.', 'starCraft', '(', ')', '.', 'building', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'building', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'building', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,9050336b4431ee675493ffdb941225a394120228,StarCraftTest.java,testCharacter,"    public void testCharacter() {
        String character = faker.starCraft().character();
        assertThat(character, not(isEmptyOrNullString()));
        assertThat(character, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
",https://www.github.com/dius/java-faker/commit/9050336b4431ee675493ffdb941225a394120228,"    public void testCharacter() {
        String character = faker.starCraft().character();
        assertThat(character, not(isEmptyOrNullString()));
        assertThat(character, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
","['    ', 'public', ' ', 'void', ' ', 'testCharacter', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'character', ' ', '=', ' ', 'faker', '.', 'starCraft', '(', ')', '.', 'character', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'character', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'character', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n']"
master,9050336b4431ee675493ffdb941225a394120228,StarCraftTest.java,testPlanet,"    public void testPlanet() {
        String planet = faker.starCraft().planet();
        assertThat(planet, not(isEmptyOrNullString()));
        assertThat(planet, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
",https://www.github.com/dius/java-faker/commit/9050336b4431ee675493ffdb941225a394120228,"    public void testPlanet() {
        String planet = faker.starCraft().planet();
        assertThat(planet, not(isEmptyOrNullString()));
        assertThat(planet, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
","['    ', 'public', ' ', 'void', ' ', 'testPlanet', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'planet', ' ', '=', ' ', 'faker', '.', 'starCraft', '(', ')', '.', 'planet', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'planet', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'planet', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n']"
master,e09c6d4d31b373f8e68fc6c8d00353b77d472730,StarCraftTest.java,testCharacter,"    public void testCharacter() {
        String character = faker.starCraft().character();
        assertThat(character, not(isEmptyOrNullString()));
        assertThat(character, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/e09c6d4d31b373f8e68fc6c8d00353b77d472730,"    public void testCharacter() {
        String character = faker.starCraft().character();
        assertThat(character, not(isEmptyOrNullString()));
        assertThat(character, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharacter', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'character', ' ', '=', ' ', 'faker', '.', 'starCraft', '(', ')', '.', 'character', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'character', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'character', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,e09c6d4d31b373f8e68fc6c8d00353b77d472730,StarCraftTest.java,testPlanet,"    public void testPlanet() {
        String planet = faker.starCraft().planet();
        assertThat(planet, not(isEmptyOrNullString()));
        assertThat(planet, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/e09c6d4d31b373f8e68fc6c8d00353b77d472730,"    public void testPlanet() {
        String planet = faker.starCraft().planet();
        assertThat(planet, not(isEmptyOrNullString()));
        assertThat(planet, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testPlanet', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'planet', ' ', '=', ' ', 'faker', '.', 'starCraft', '(', ')', '.', 'planet', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'planet', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'planet', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Faker.java,photography,"    public Photography photography() {
        return  photography;
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public Photography photography() {
        return  photography;
    }
","['    ', 'public', ' ', 'Photography', ' ', 'photography', '(', ')', ' ', '{', '\n', '        ', 'return', '  ', 'photography', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,term,"    public String term() {
        return faker.fakeValuesService().fetchString(""photography.term"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String term() {
        return faker.fakeValuesService().fetchString(""photography.term"");
    }
","['    ', 'public', ' ', 'String', ' ', 'term', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.term', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,brand,"    public String brand() {
        return faker.fakeValuesService().fetchString(""photography.brand"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String brand() {
        return faker.fakeValuesService().fetchString(""photography.brand"");
    }
","['    ', 'public', ' ', 'String', ' ', 'brand', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.brand', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,camera,"    public String camera() {
        return faker.fakeValuesService().fetchString(""photography.camera"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String camera() {
        return faker.fakeValuesService().fetchString(""photography.camera"");
    }
","['    ', 'public', ' ', 'String', ' ', 'camera', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.camera', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,lens,"    public String lens() {
        return faker.fakeValuesService().fetchString(""photography.lens"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String lens() {
        return faker.fakeValuesService().fetchString(""photography.lens"");
    }
","['    ', 'public', ' ', 'String', ' ', 'lens', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.lens', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,gengre,"    public String gengre() {
        return faker.fakeValuesService().fetchString(""photography.gengre"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String gengre() {
        return faker.fakeValuesService().fetchString(""photography.gengre"");
    }
","['    ', 'public', ' ', 'String', ' ', 'gengre', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.gengre', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,imageTag,"    public String imageTag() {
        return faker.fakeValuesService().fetchString(""photography.imagetag"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String imageTag() {
        return faker.fakeValuesService().fetchString(""photography.imagetag"");
    }
","['    ', 'public', ' ', 'String', ' ', 'imageTag', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.imagetag', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,aperture,"    public String aperture() {
        return faker.fakeValuesService().fetchString(""photography.aperture"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String aperture() {
        return faker.fakeValuesService().fetchString(""photography.aperture"");
    }
","['    ', 'public', ' ', 'String', ' ', 'aperture', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.aperture', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,shutter,"    public String shutter() {
        return faker.fakeValuesService().fetchString(""photography.shutter"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String shutter() {
        return faker.fakeValuesService().fetchString(""photography.shutter"");
    }
","['    ', 'public', ' ', 'String', ' ', 'shutter', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.shutter', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,Photography.java,iso,"    public String iso() {
        return faker.fakeValuesService().fetchString(""photography.iso"");
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public String iso() {
        return faker.fakeValuesService().fetchString(""photography.iso"");
    }
","['    ', 'public', ' ', 'String', ' ', 'iso', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.iso', '""', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,testAperture,"    public void testAperture() {
        String value = faker.photography().aperture();
        assertTrue(value.startsWith(""f""));
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void testAperture() {
        String value = faker.photography().aperture();
        assertTrue(value.startsWith(""f""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAperture', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'aperture', '(', ')', ';', '\n', '        ', 'assertTrue', '(', 'value', '.', 'startsWith', '(', '""', 'f', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,testTerm,"    public void testTerm() {
        String value = faker.photography().term();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void testTerm() {
        String value = faker.photography().term();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'testTerm', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'term', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,brand,"    public void brand() {
        String value = faker.photography().brand();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void brand() {
        String value = faker.photography().brand();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'brand', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'brand', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,camera,"    public void camera() {
        String value = faker.photography().camera();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void camera() {
        String value = faker.photography().camera();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'camera', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'camera', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,lens,"    public void lens() {
        String value = faker.photography().lens();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void lens() {
        String value = faker.photography().lens();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'lens', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'lens', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,gengre,"    public void gengre() {
        String value = faker.photography().gengre();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void gengre() {
        String value = faker.photography().gengre();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'gengre', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'gengre', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,imageTag,"    public void imageTag() {
        String value = faker.photography().imageTag();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void imageTag() {
        String value = faker.photography().imageTag();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'imageTag', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'imageTag', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,assertNonNullOrEmpty,"    private void assertNonNullOrEmpty(String value) {
        assertNotNull(value);
        assertFalse(value.isEmpty());
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    private void assertNonNullOrEmpty(String value) {
        assertNotNull(value);
        assertFalse(value.isEmpty());
    }
","['    ', 'private', ' ', 'void', ' ', 'assertNonNullOrEmpty', '(', 'String', ' ', 'value', ')', ' ', '{', '\n', '        ', 'assertNotNull', '(', 'value', ')', ';', '\n', '        ', 'assertFalse', '(', 'value', '.', 'isEmpty', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,shutter,"    public void shutter() {
        String value = faker.photography().shutter();
        assertThat(value, matchesRegularExpression(""\\d{1,}\\/{0,1}\\d*""));
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void shutter() {
        String value = faker.photography().shutter();
        assertThat(value, matchesRegularExpression(""\\d{1,}\\/{0,1}\\d*""));
    }
","['    ', 'public', ' ', 'void', ' ', 'shutter', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'shutter', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{1,}', '\\\\', '/{0,1}', '\\\\', 'd*', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,63ed3212dea4c30c52074bf3cfb75ffc86d69c07,PhotographyTest.java,iso,"    public void iso() {
        String value = faker.photography().iso();
        assertThat(value, matchesRegularExpression(""\\d{1,}""));
    }",https://www.github.com/dius/java-faker/commit/63ed3212dea4c30c52074bf3cfb75ffc86d69c07,"    public void iso() {
        String value = faker.photography().iso();
        assertThat(value, matchesRegularExpression(""\\d{1,}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'iso', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'iso', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{1,}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,29d0778430f35480c643ffce79852ed5c92a98dc,RandomService.java,hex,"    public String hex(int length) {
        if (length <= 0) {
            return """"; // Keep the existing behavior instead of throwing an error.
        }
        final char[] hexChars = new char[length];
        for (int i = 0; i < length; i++) {
            final int nextHex = nextInt(16);
            if (nextHex < 10) {
                hexChars[i] = (char) ('0' + nextHex);
            } else {
                hexChars[i] = (char) ('A' + nextHex - 10);
            }
        }
        return new String(hexChars);
    }",https://www.github.com/dius/java-faker/commit/29d0778430f35480c643ffce79852ed5c92a98dc,"    public String hex(int length) {
        if (length <= 0) {
            return """"; 
        }
        final char[] hexChars = new char[length];
        for (int i = 0; i < length; i++) {
            final int nextHex = nextInt(16);
            if (nextHex < 10) {
                hexChars[i] = (char) ('0' + nextHex);
            } else {
                hexChars[i] = (char) ('A' + nextHex - 10);
            }
        }
        return new String(hexChars);
    }
","['    ', 'public', ' ', 'String', ' ', 'hex', '(', 'int', ' ', 'length', ')', ' ', '{', '\n', '        ', 'if', ' ', '(', 'length', ' ', '<', '=', ' ', '0', ')', ' ', '{', '\n', '            ', 'return', ' ', '""', '""', ';', ' ', '\n', '        ', '}', '\n', '        ', 'final', ' ', 'char', '[', ']', ' ', 'hexChars', ' ', '=', ' ', 'new', ' ', 'char', '[', 'length', ']', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'final', ' ', 'int', ' ', 'nextHex', ' ', '=', ' ', 'nextInt', '(', '16', ')', ';', '\n', '            ', 'if', ' ', '(', 'nextHex', ' ', '<', ' ', '10', ')', ' ', '{', '\n', '                ', 'hexChars', '[', 'i', ']', ' ', '=', ' ', '(', 'char', ')', ' ', '(', ""'0'"", ' ', '+', ' ', 'nextHex', ')', ';', '\n', '            ', '}', ' ', 'else', ' ', '{', '\n', '                ', 'hexChars', '[', 'i', ']', ' ', '=', ' ', '(', 'char', ')', ' ', '(', ""'A'"", ' ', '+', ' ', 'nextHex', ' ', '-', ' ', '10', ')', ';', '\n', '            ', '}', '\n', '        ', '}', '\n', '        ', 'return', ' ', 'new', ' ', 'String', '(', 'hexChars', ')', ';', '\n', '    ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorseman.java,characters,"    public String characters() {
        return faker.fakeValuesService().resolve(""bojack_horseman.characters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public String characters() {
        return faker.fakeValuesService().resolve(""bojack_horseman.characters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'characters', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'bojack_horseman.characters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorseman.java,quotes,"    public String quotes() {
        return faker.fakeValuesService().resolve(""bojack_horseman.quotes"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public String quotes() {
        return faker.fakeValuesService().resolve(""bojack_horseman.quotes"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'quotes', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'bojack_horseman.quotes', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorseman.java,tongueTwisters,"    public String tongueTwisters() {
        return faker.fakeValuesService().resolve(""bojack_horseman.tongue_twisters"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public String tongueTwisters() {
        return faker.fakeValuesService().resolve(""bojack_horseman.tongue_twisters"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'tongueTwisters', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'bojack_horseman.tongue_twisters', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,Faker.java,bojackHorseman,"    public BojackHorseman bojackHorseman() { return bojackHorseman; }
",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public BojackHorseman bojackHorseman() { return bojackHorseman; }
","['    ', 'public', ' ', 'BojackHorseman', ' ', 'bojackHorseman', '(', ')', ' ', '{', ' ', 'return', ' ', 'bojackHorseman', ';', ' ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorsemanTest.java,testQuotes1,"    public void testQuotes1(){
        Faker faker=new Faker();
        assertFalse(faker.bojackHorseman().quotes().isEmpty()); }
",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public void testQuotes1(){
        Faker faker=new Faker();
        assertFalse(faker.bojackHorseman().quotes().isEmpty()); }
","['    ', 'public', ' ', 'void', ' ', 'testQuotes1', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'bojackHorseman', '(', ')', '.', 'quotes', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', ' ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorsemanTest.java,testTongueTwisters1,"    public void testTongueTwisters1(){
        Faker faker=new Faker();
        assertFalse(faker.bojackHorseman().tongueTwisters().isEmpty());}
",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public void testTongueTwisters1(){
        Faker faker=new Faker();
        assertFalse(faker.bojackHorseman().tongueTwisters().isEmpty());}
","['    ', 'public', ' ', 'void', ' ', 'testTongueTwisters1', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'assertFalse', '(', 'faker', '.', 'bojackHorseman', '(', ')', '.', 'tongueTwisters', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorsemanTest.java,testCharactersWith10000Times,"    public void testCharactersWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.bojackHorseman().characters();
            if(generateString.equals(""Joseph Sugarman"")){isExist=true;}
        }
       assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public void testCharactersWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.bojackHorseman().characters();
            if(generateString.equals(""Joseph Sugarman"")){isExist=true;}
        }
       assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCharactersWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'bojackHorseman', '(', ')', '.', 'characters', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'Joseph Sugarman', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '       ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,485c54df4290501634fbb478f09b031e0d1ad5a9,BojackHorsemanTest.java,testQuotesWith10000Times,"    public void testQuotesWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.bojackHorseman().quotes();
            if(generateString.equals(""It gets easier. But you have to do it every day, that's the hard part. But it does get easier""))
                {isExist=true;}
        }
        assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/485c54df4290501634fbb478f09b031e0d1ad5a9,"    public void testQuotesWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.bojackHorseman().quotes();
            if(generateString.equals(""It gets easier. But you have to do it every day, that's the hard part. But it does get easier""))
                {isExist=true;}
        }
        assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testQuotesWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'bojackHorseman', '(', ')', '.', 'quotes', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', ""It gets easier. But you have to do it every day, that's the hard part. But it does get easier"", '""', ')', ')', '\n', '                ', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,Basketball.java,teams,"    public String teams() {
        return faker.fakeValuesService().resolve(""basketball.teams"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public String teams() {
        return faker.fakeValuesService().resolve(""basketball.teams"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'teams', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'basketball.teams', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,Basketball.java,coaches,"    public String coaches() {
        return faker.fakeValuesService().resolve(""basketball.coaches"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public String coaches() {
        return faker.fakeValuesService().resolve(""basketball.coaches"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'coaches', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'basketball.coaches', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,Basketball.java,positions,"    public String positions() {
        return faker.fakeValuesService().resolve(""basketball.positions"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public String positions() {
        return faker.fakeValuesService().resolve(""basketball.positions"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'positions', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'basketball.positions', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,Basketball.java,players,"    public String players() {
        return faker.fakeValuesService().resolve(""basketball.players"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public String players() {
        return faker.fakeValuesService().resolve(""basketball.players"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'players', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'basketball.players', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,Faker.java,basketball,"    public Basketball basketball() { return basketball; }
    public String resolve(String key) {",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public Basketball basketball() { return basketball; }
    public String resolve(String key) {
","['    ', 'public', ' ', 'Basketball', ' ', 'basketball', '(', ')', ' ', '{', ' ', 'return', ' ', 'basketball', ';', ' ', '}', '\n', '    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ')', ' ', '{', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,BasketballTest.java,testPositionsWith10000Times,"    public void testPositionsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().positions();
            if(generateString.equals(""Point Guard"")){isExist=true;}
        }
        assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public void testPositionsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().positions();
            if(generateString.equals(""Point Guard"")){isExist=true;}
        }
        assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testPositionsWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'basketball', '(', ')', '.', 'positions', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'Point Guard', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,BasketballTest.java,testTeamsWith10000Times,"    public void testTeamsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().teams();
            if(generateString.equals(""Atlanta Hawks"")){isExist=true;}
        }
        assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public void testTeamsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().teams();
            if(generateString.equals(""Atlanta Hawks"")){isExist=true;}
        }
        assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testTeamsWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'basketball', '(', ')', '.', 'teams', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'Atlanta Hawks', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,BasketballTest.java,testCoachesWith10000Times,"    public void testCoachesWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().coaches();
            if(generateString.equals(""Kenny Atkinson"")){isExist=true;}
        }
        assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public void testCoachesWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().coaches();
            if(generateString.equals(""Kenny Atkinson"")){isExist=true;}
        }
        assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testCoachesWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'basketball', '(', ')', '.', 'coaches', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'Kenny Atkinson', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,db07d31848ae797cbd0070fed5da6622b1bd054d,BasketballTest.java,testPlayersWith10000Times,"    public void testPlayersWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().players();
            if(generateString.equals(""Joel Embiid"")){isExist=true;}
        }
        assertTrue(isExist); }
}",https://www.github.com/dius/java-faker/commit/db07d31848ae797cbd0070fed5da6622b1bd054d,"    public void testPlayersWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.basketball().players();
            if(generateString.equals(""Joel Embiid"")){isExist=true;}
        }
        assertTrue(isExist); }
}
","['    ', 'public', ' ', 'void', ' ', 'testPlayersWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'basketball', '(', ')', '.', 'players', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'Joel Embiid', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', ' ', '}', '\n', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,internalDisease,"    public String internalDisease() {
        return faker.fakeValuesService().resolve(""disease.internal_disease"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String internalDisease() {
        return faker.fakeValuesService().resolve(""disease.internal_disease"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'internalDisease', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.internal_disease', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,neurology,"    public String neurology() {
        return faker.fakeValuesService().resolve(""disease.neurology"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String neurology() {
        return faker.fakeValuesService().resolve(""disease.neurology"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'neurology', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.neurology', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,surgery,"    public String surgery() {
        return faker.fakeValuesService().resolve(""disease.surgery"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String surgery() {
        return faker.fakeValuesService().resolve(""disease.surgery"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'surgery', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.surgery', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,paediatrics,"    public String paediatrics() {
        return faker.fakeValuesService().resolve(""disease.paediatrics"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String paediatrics() {
        return faker.fakeValuesService().resolve(""disease.paediatrics"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'paediatrics', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.paediatrics', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,gynecologyAndObstetrics,"    public String gynecologyAndObstetrics() {
        return faker.fakeValuesService().resolve(""disease.gynecology_and_obstetrics"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String gynecologyAndObstetrics() {
        return faker.fakeValuesService().resolve(""disease.gynecology_and_obstetrics"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'gynecologyAndObstetrics', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.gynecology_and_obstetrics', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,ophthalmologyAndOtorhinolaryngology,"    public String ophthalmologyAndOtorhinolaryngology() {
        return faker.fakeValuesService().resolve(""disease.ophthalmology_and_otorhinolaryngology"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String ophthalmologyAndOtorhinolaryngology() {
        return faker.fakeValuesService().resolve(""disease.ophthalmology_and_otorhinolaryngology"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'ophthalmologyAndOtorhinolaryngology', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.ophthalmology_and_otorhinolaryngology', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Disease.java,dermatolory,"    public String dermatolory() {
        return faker.fakeValuesService().resolve(""disease.dermatolory"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public String dermatolory() {
        return faker.fakeValuesService().resolve(""disease.dermatolory"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'dermatolory', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'disease.dermatolory', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,Faker.java,disease,"    public Disease disease() {return disease; }
    public String resolve(String key) {",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public Disease disease() {return disease; }
    public String resolve(String key) {
","['    ', 'public', ' ', 'Disease', ' ', 'disease', '(', ')', ' ', '{', 'return', ' ', 'disease', ';', ' ', '}', '\n', '    ', 'public', ' ', 'String', ' ', 'resolve', '(', 'String', ' ', 'key', ')', ' ', '{', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testInternalDiseaseWith10000Times,"    public void testInternalDiseaseWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().internalDisease();
            if(generateString.equals(""anaphylaxis"")){isExist=true;}
        }
        assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testInternalDiseaseWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().internalDisease();
            if(generateString.equals(""anaphylaxis"")){isExist=true;}
        }
        assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testInternalDiseaseWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'internalDisease', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'anaphylaxis', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testNeurologyWith10000Times,"    public void testNeurologyWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().neurology();
            if(generateString.equals(""cerebral hemorrhage"")){isExist=true;}
        }
        assertTrue(isExist); }
",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testNeurologyWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().neurology();
            if(generateString.equals(""cerebral hemorrhage"")){isExist=true;}
        }
        assertTrue(isExist); }
","['    ', 'public', ' ', 'void', ' ', 'testNeurologyWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'neurology', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'cerebral hemorrhage', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', ' ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testSurgeryWith10000Times,"    public void testSurgeryWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().surgery();
            if(generateString.equals(""acute mastitis"")){isExist=true;}
        }
        assertTrue(isExist); }
",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testSurgeryWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().surgery();
            if(generateString.equals(""acute mastitis"")){isExist=true;}
        }
        assertTrue(isExist); }
","['    ', 'public', ' ', 'void', ' ', 'testSurgeryWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'surgery', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'acute mastitis', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', ' ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testPaediatricsWith10000Times,"    public void testPaediatricsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().paediatrics();
            if(generateString.equals(""anaphylactic purpura"")){isExist=true;}
        }
        assertTrue(isExist); }
",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testPaediatricsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().paediatrics();
            if(generateString.equals(""anaphylactic purpura"")){isExist=true;}
        }
        assertTrue(isExist); }
","['    ', 'public', ' ', 'void', ' ', 'testPaediatricsWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'paediatrics', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'anaphylactic purpura', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', ' ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testGynecologyAndObstetricsWith10000Times,"    public void testGynecologyAndObstetricsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().gynecologyAndObstetrics();
            if(generateString.equals(""Bartholins cyst"")){isExist=true;}
        }
        assertTrue(isExist);}
",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testGynecologyAndObstetricsWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().gynecologyAndObstetrics();
            if(generateString.equals(""Bartholins cyst"")){isExist=true;}
        }
        assertTrue(isExist);}
","['    ', 'public', ' ', 'void', ' ', 'testGynecologyAndObstetricsWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'gynecologyAndObstetrics', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'Bartholins cyst', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testOphthalmologyAndOtorhinolaryngologyWith10000Times,"    public void testOphthalmologyAndOtorhinolaryngologyWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().ophthalmologyAndOtorhinolaryngology();
            if(generateString.equals(""astigmatism"")){isExist=true;}
        }
        assertTrue(isExist); }
",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testOphthalmologyAndOtorhinolaryngologyWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().ophthalmologyAndOtorhinolaryngology();
            if(generateString.equals(""astigmatism"")){isExist=true;}
        }
        assertTrue(isExist); }
","['    ', 'public', ' ', 'void', ' ', 'testOphthalmologyAndOtorhinolaryngologyWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'ophthalmologyAndOtorhinolaryngology', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'astigmatism', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', ' ', '}', '\n']"
master,43ee9749517994b5008447c7fe6a2c91a70798c9,DiseaseTest.java,testDermatoloryWith10000Times,"    public void testDermatoloryWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().dermatolory();
            if(generateString.equals(""eczema"")){isExist=true;}
        }
        assertTrue(isExist);
    }",https://www.github.com/dius/java-faker/commit/43ee9749517994b5008447c7fe6a2c91a70798c9,"    public void testDermatoloryWith10000Times(){
        Faker faker=new Faker();
        boolean isExist=false;
        for(int i=0;i<10000;i++){
            String generateString=faker.disease().dermatolory();
            if(generateString.equals(""eczema"")){isExist=true;}
        }
        assertTrue(isExist);
    }
","['    ', 'public', ' ', 'void', ' ', 'testDermatoloryWith10000Times', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'faker', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'boolean', ' ', 'isExist', '=', 'false', ';', '\n', '        ', 'for', '(', 'int', ' ', 'i', '=', '0', ';', 'i', '<', '10000', ';', 'i', '+', '+', ')', '{', '\n', '            ', 'String', ' ', 'generateString', '=', 'faker', '.', 'disease', '(', ')', '.', 'dermatolory', '(', ')', ';', '\n', '            ', 'if', '(', 'generateString', '.', 'equals', '(', '""', 'eczema', '""', ')', ')', '{', 'isExist', '=', 'true', ';', '}', '\n', '        ', '}', '\n', '        ', 'assertTrue', '(', 'isExist', ')', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,Faker.java,backToTheFuture,"    public BackToTheFuture backToTheFuture() {
        return backToTheFuture;
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public BackToTheFuture backToTheFuture() {
        return backToTheFuture;
    }
","['    ', 'public', ' ', 'BackToTheFuture', ' ', 'backToTheFuture', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'backToTheFuture', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,Gender.java,types,"    public String types() {

        return faker.fakeValuesService().fetchString(""gender.types"");
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public String types() {

        return faker.fakeValuesService().fetchString(""gender.types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'types', '(', ')', ' ', '{', '\n', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'gender.types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,Gender.java,binaryTypes,"    public String binaryTypes() {

        return faker.fakeValuesService().fetchString(""gender.binary_types"");
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public String binaryTypes() {

        return faker.fakeValuesService().fetchString(""gender.binary_types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'binaryTypes', '(', ')', ' ', '{', '\n', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'gender.binary_types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,Gender.java,shortBinaryTypes,"    public String shortBinaryTypes() {

        return faker.fakeValuesService().fetchString(""gender.short_binary_types"");
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public String shortBinaryTypes() {

        return faker.fakeValuesService().fetchString(""gender.short_binary_types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'shortBinaryTypes', '(', ')', ' ', '{', '\n', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'gender.short_binary_types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,GenderTest.java,types,"    public void types() {
        assertThat(faker.gender().types(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public void types() {
        assertThat(faker.gender().types(), matchesRegularExpression(""(\\w+ ?){1,2}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'types', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gender', '(', ')', '.', 'types', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '(', '\\\\', 'w+ ?){1,2}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,GenderTest.java,binaryTypes,"    public void binaryTypes() {
        assertThat(faker.gender().binaryTypes(), matchesRegularExpression(""[A-Za-z ]+""));
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public void binaryTypes() {
        assertThat(faker.gender().binaryTypes(), matchesRegularExpression(""[A-Za-z ]+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'binaryTypes', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gender', '(', ')', '.', 'binaryTypes', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '[A-Za-z ]+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,048cbfc8aa903527705887119e24fd956cce6615,GenderTest.java,shortBinaryTypes,"    public void shortBinaryTypes() {
        assertThat(faker.gender().shortBinaryTypes(), matchesRegularExpression(""f|m""));
    }",https://www.github.com/dius/java-faker/commit/048cbfc8aa903527705887119e24fd956cce6615,"    public void shortBinaryTypes() {
        assertThat(faker.gender().shortBinaryTypes(), matchesRegularExpression(""f|m""));
    }
","['    ', 'public', ' ', 'void', ' ', 'shortBinaryTypes', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'gender', '(', ')', '.', 'shortBinaryTypes', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', 'f|m', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,645e001b23d60d9ce7cc9c95408d363be8c6f068,InternetTest.java,testSlugWithNull,"    public void testSlugWithNull(){
        Faker f=new Faker();
        assertThat(f.internet().slug(null,""_""),notNullValue());
    }",https://www.github.com/dius/java-faker/commit/645e001b23d60d9ce7cc9c95408d363be8c6f068,"    public void testSlugWithNull(){
        Faker f=new Faker();
        assertThat(f.internet().slug(null,""_""),notNullValue());
    }
","['    ', 'public', ' ', 'void', ' ', 'testSlugWithNull', '(', ')', '{', '\n', '        ', 'Faker', ' ', 'f', '=', 'new', ' ', 'Faker', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'f', '.', 'internet', '(', ')', '.', 'slug', '(', 'null', ',', '""', '_', '""', ')', ',', 'notNullValue', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,645e001b23d60d9ce7cc9c95408d363be8c6f068,FakeValuesServiceTest.java,FakeValuesServiceWithNullLocaleTest,"    public void FakeValuesServiceWithNullLocaleTest(){
        try{
            RandomService r=new RandomService();",https://www.github.com/dius/java-faker/commit/645e001b23d60d9ce7cc9c95408d363be8c6f068,"    public void FakeValuesServiceWithNullLocaleTest(){
        try{
            RandomService r=new RandomService();
","['    ', 'public', ' ', 'void', ' ', 'FakeValuesServiceWithNullLocaleTest', '(', ')', '{', '\n', '        ', 'try', '{', '\n', '            ', 'RandomService', ' ', 'r', '=', 'new', ' ', 'RandomService', '(', ')', ';', '\n']"
master,645e001b23d60d9ce7cc9c95408d363be8c6f068,RandomServiceTest.java,testDefaultHex,"    public void testDefaultHex() {
        assertThat(randomService.hex(), matchesRegularExpression(""^[0-9A-F]{8}$""));
    }",https://www.github.com/dius/java-faker/commit/645e001b23d60d9ce7cc9c95408d363be8c6f068,"    public void testDefaultHex() {
        assertThat(randomService.hex(), matchesRegularExpression(""^[0-9A-F]{8}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testDefaultHex', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'randomService', '.', 'hex', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[0-9A-F]{8}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,3ac95c949541bec032819dc641e46df00b29fd73,DateAndTimeTest.java,testBetweenThenLargerThanNow,"    public void testBetweenThenLargerThanNow(){
        try{
        Date now = new Date();",https://www.github.com/dius/java-faker/commit/3ac95c949541bec032819dc641e46df00b29fd73,"    public void testBetweenThenLargerThanNow(){
        try{
        Date now = new Date();
","['    ', 'public', ' ', 'void', ' ', 'testBetweenThenLargerThanNow', '(', ')', '{', '\n', '        ', 'try', '{', '\n', '        ', 'Date', ' ', 'now', ' ', '=', ' ', 'new', ' ', 'Date', '(', ')', ';', '\n']"
master,9cdc12b892c968734219a63393ba790588fa9379,StarTrek.java,klingon,"    public String klingon() {
        return faker.fakeValuesService().resolve(""star_trek.klingon"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/9cdc12b892c968734219a63393ba790588fa9379,"    public String klingon() {
        return faker.fakeValuesService().resolve(""star_trek.klingon"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'klingon', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'star_trek.klingon', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,9cdc12b892c968734219a63393ba790588fa9379,StarTrekTest.java,klingon,"    public void klingon() { assertFalse(faker.starTrek().klingon().isEmpty()); }
}",https://www.github.com/dius/java-faker/commit/9cdc12b892c968734219a63393ba790588fa9379,"    public void klingon() { assertFalse(faker.starTrek().klingon().isEmpty()); }
}
","['    ', 'public', ' ', 'void', ' ', 'klingon', '(', ')', ' ', '{', ' ', 'assertFalse', '(', 'faker', '.', 'starTrek', '(', ')', '.', 'klingon', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', ' ', '}', '\n', '}', '\n']"
master,3aa5cf2d9cf40cf377c0dfda7067b12c4ec4e7d9,StarTrekTest.java,klingon,"    public void klingon() { assertThat(faker.starTrek().klingon(), not(isEmptyOrNullString())); }
}",https://www.github.com/dius/java-faker/commit/3aa5cf2d9cf40cf377c0dfda7067b12c4ec4e7d9,"    public void klingon() { assertThat(faker.starTrek().klingon(), not(isEmptyOrNullString())); }
}
","['    ', 'public', ' ', 'void', ' ', 'klingon', '(', ')', ' ', '{', ' ', 'assertThat', '(', 'faker', '.', 'starTrek', '(', ')', '.', 'klingon', '(', ')', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', ' ', '}', '\n', '}', '\n']"
master,a48f018f63a4dddc583c275f1eb9cd610fed40c3,Gender.java,types,"    public String types() {
        return faker.fakeValuesService().fetchString(""gender.types"");
    }",https://www.github.com/dius/java-faker/commit/a48f018f63a4dddc583c275f1eb9cd610fed40c3,"    public String types() {
        return faker.fakeValuesService().fetchString(""gender.types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'types', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'gender.types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a48f018f63a4dddc583c275f1eb9cd610fed40c3,Gender.java,binaryTypes,"    public String binaryTypes() {
        return faker.fakeValuesService().fetchString(""gender.binary_types"");
    }",https://www.github.com/dius/java-faker/commit/a48f018f63a4dddc583c275f1eb9cd610fed40c3,"    public String binaryTypes() {
        return faker.fakeValuesService().fetchString(""gender.binary_types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'binaryTypes', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'gender.binary_types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,a48f018f63a4dddc583c275f1eb9cd610fed40c3,Gender.java,shortBinaryTypes,"    public String shortBinaryTypes() {
        return faker.fakeValuesService().fetchString(""gender.short_binary_types"");
    }",https://www.github.com/dius/java-faker/commit/a48f018f63a4dddc583c275f1eb9cd610fed40c3,"    public String shortBinaryTypes() {
        return faker.fakeValuesService().fetchString(""gender.short_binary_types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'shortBinaryTypes', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'gender.short_binary_types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,method,"    public String method() {
        return faker.resolve(""sip.methods"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String method() {
        return faker.resolve(""sip.methods"");
    }
","['    ', 'public', ' ', 'String', ' ', 'method', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.methods', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,contentType,"    public String contentType() {
        return faker.resolve(""sip.content.types"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String contentType() {
        return faker.resolve(""sip.content.types"");
    }
","['    ', 'public', ' ', 'String', ' ', 'contentType', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.content.types', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,messagingPort,"    public int messagingPort() {
        return faker.random().nextInt(1000, 9999);
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int messagingPort() {
        return faker.random().nextInt(1000, 9999);
    }
","['    ', 'public', ' ', 'int', ' ', 'messagingPort', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '1000', ',', ' ', '9999', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,rtpPort,"    public int rtpPort() {
        return portPool.get(faker.random().nextInt(0, portPool.size()));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int rtpPort() {
        return portPool.get(faker.random().nextInt(0, portPool.size()));
    }
","['    ', 'public', ' ', 'int', ' ', 'rtpPort', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'portPool', '.', 'get', '(', 'faker', '.', 'random', '(', ')', '.', 'nextInt', '(', '0', ',', ' ', 'portPool', '.', 'size', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,provisionalResponseCode,"    public int provisionalResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.provisional""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int provisionalResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.provisional""));
    }
","['    ', 'public', ' ', 'int', ' ', 'provisionalResponseCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'Integer', '.', 'parseInt', '(', 'faker', '.', 'resolve', '(', '""', 'sip.response.codes.provisional', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,successResponseCode,"    public int successResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.success""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int successResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.success""));
    }
","['    ', 'public', ' ', 'int', ' ', 'successResponseCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'Integer', '.', 'parseInt', '(', 'faker', '.', 'resolve', '(', '""', 'sip.response.codes.success', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,redirectResponseCode,"    public int redirectResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.redirection""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int redirectResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.redirection""));
    }
","['    ', 'public', ' ', 'int', ' ', 'redirectResponseCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'Integer', '.', 'parseInt', '(', 'faker', '.', 'resolve', '(', '""', 'sip.response.codes.redirection', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,clientErrorResponseCode,"    public int clientErrorResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.clientError""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int clientErrorResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.clientError""));
    }
","['    ', 'public', ' ', 'int', ' ', 'clientErrorResponseCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'Integer', '.', 'parseInt', '(', 'faker', '.', 'resolve', '(', '""', 'sip.response.codes.clientError', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,serverErrorResponseCode,"    public int serverErrorResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.serverError""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int serverErrorResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.serverError""));
    }
","['    ', 'public', ' ', 'int', ' ', 'serverErrorResponseCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'Integer', '.', 'parseInt', '(', 'faker', '.', 'resolve', '(', '""', 'sip.response.codes.serverError', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,globalErrorResponseCode,"    public int globalErrorResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.globalError""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public int globalErrorResponseCode() {
        return Integer.parseInt(faker.resolve(""sip.response.codes.globalError""));
    }
","['    ', 'public', ' ', 'int', ' ', 'globalErrorResponseCode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'Integer', '.', 'parseInt', '(', 'faker', '.', 'resolve', '(', '""', 'sip.response.codes.globalError', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,provisionalResponsePhrase,"    public String provisionalResponsePhrase() {
        return faker.resolve(""sip.response.phrases.provisional"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String provisionalResponsePhrase() {
        return faker.resolve(""sip.response.phrases.provisional"");
    }
","['    ', 'public', ' ', 'String', ' ', 'provisionalResponsePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.response.phrases.provisional', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,successResponsePhrase,"    public String successResponsePhrase() {
        return faker.resolve(""sip.response.phrases.success"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String successResponsePhrase() {
        return faker.resolve(""sip.response.phrases.success"");
    }
","['    ', 'public', ' ', 'String', ' ', 'successResponsePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.response.phrases.success', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,redirectResponsePhrase,"    public String redirectResponsePhrase() {
        return faker.resolve(""sip.response.phrases.redirection"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String redirectResponsePhrase() {
        return faker.resolve(""sip.response.phrases.redirection"");
    }
","['    ', 'public', ' ', 'String', ' ', 'redirectResponsePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.response.phrases.redirection', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,clientErrorResponsePhrase,"    public String clientErrorResponsePhrase() {
        return faker.resolve(""sip.response.phrases.clientError"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String clientErrorResponsePhrase() {
        return faker.resolve(""sip.response.phrases.clientError"");
    }
","['    ', 'public', ' ', 'String', ' ', 'clientErrorResponsePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.response.phrases.clientError', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,serverErrorResponsePhrase,"    public String serverErrorResponsePhrase() {
        return faker.resolve(""sip.response.phrases.serverError"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String serverErrorResponsePhrase() {
        return faker.resolve(""sip.response.phrases.serverError"");
    }
","['    ', 'public', ' ', 'String', ' ', 'serverErrorResponsePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.response.phrases.serverError', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,globalErrorResponsePhrase,"    public String globalErrorResponsePhrase() {
        return faker.resolve(""sip.response.phrases.globalError"");
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String globalErrorResponsePhrase() {
        return faker.resolve(""sip.response.phrases.globalError"");
    }
","['    ', 'public', ' ', 'String', ' ', 'globalErrorResponsePhrase', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'resolve', '(', '""', 'sip.response.phrases.globalError', '""', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,bodyString,"    public String bodyString() {
        return ""v=0\n"" +
        ""o="" + faker.name().firstName() + "" "" + faker.internet().uuid() + "" IN IP4 "" + faker.internet().domainName() + ""\n"" +",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String bodyString() {
        return ""v=0\n"" +
        ""o="" + faker.name().firstName() + "" "" + faker.internet().uuid() + "" IN IP4 "" + faker.internet().domainName() + ""\n"" +
","['    ', 'public', ' ', 'String', ' ', 'bodyString', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', 'v=0', '\\', 'n', '""', ' ', '+', '\n', '        ', '""', 'o=', '""', ' ', '+', ' ', 'faker', '.', 'name', '(', ')', '.', 'firstName', '(', ')', ' ', '+', ' ', '""', ' ', '""', ' ', '+', ' ', 'faker', '.', 'internet', '(', ')', '.', 'uuid', '(', ')', ' ', '+', ' ', '""', ' IN IP4 ', '""', ' ', '+', ' ', 'faker', '.', 'internet', '(', ')', '.', 'domainName', '(', ')', ' ', '+', ' ', '""', '\\', 'n', '""', ' ', '+', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,bodyBytes,"    public byte[] bodyBytes() {
        return bodyString().getBytes(UTF_8);
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public byte[] bodyBytes() {
        return bodyString().getBytes(UTF_8);
    }
","['    ', 'public', ' ', 'byte', '[', ']', ' ', 'bodyBytes', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'bodyString', '(', ')', '.', 'getBytes', '(', 'UTF_8', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,Sip.java,nameAddress,"    public String nameAddress() {
        return ""<sip:"" + faker.name().firstName() + ""@"" + faker.internet().ipV4Address() + "":"" + messagingPort() + "">"";
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public String nameAddress() {
        return ""<sip:"" + faker.name().firstName() + ""@"" + faker.internet().ipV4Address() + "":"" + messagingPort() + "">"";
    }
","['    ', 'public', ' ', 'String', ' ', 'nameAddress', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', '""', '<sip:', '""', ' ', '+', ' ', 'faker', '.', 'name', '(', ')', '.', 'firstName', '(', ')', ' ', '+', ' ', '""', '@', '""', ' ', '+', ' ', 'faker', '.', 'internet', '(', ')', '.', 'ipV4Address', '(', ')', ' ', '+', ' ', '""', ':', '""', ' ', '+', ' ', 'messagingPort', '(', ')', ' ', '+', ' ', '""', '>', '""', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,method_returnUpperCaseWithMinimum3Chars,"    public void method_returnUpperCaseWithMinimum3Chars() {
        assertThat(faker.sip().method(), matchesRegularExpression(""^[A-Z]{3,}$""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void method_returnUpperCaseWithMinimum3Chars() {
        assertThat(faker.sip().method(), matchesRegularExpression(""^[A-Z]{3,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'method_returnUpperCaseWithMinimum3Chars', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'method', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[A-Z]{3,}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars,"    public void contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars() {
        assertThat(faker.sip().contentType(), matchesRegularExpression(""^[a-z]{4,}[/]{1,}[a-z0-9-]{3,}$""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars() {
        assertThat(faker.sip().contentType(), matchesRegularExpression(""^[a-z]{4,}[/]{1,}[a-z0-9-]{3,}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'contentType', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '^[a-z]{4,}[/]{1,}[a-z0-9-]{3,}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,messagingPort_return4DigitIntBetween1000And9999,"    public void messagingPort_return4DigitIntBetween1000And9999() {
        assertThat(faker.sip().messagingPort(), both(greaterThanOrEqualTo(1000)).and(lessThan(10000)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void messagingPort_return4DigitIntBetween1000And9999() {
        assertThat(faker.sip().messagingPort(), both(greaterThanOrEqualTo(1000)).and(lessThan(10000)));
    }
","['    ', 'public', ' ', 'void', ' ', 'messagingPort_return4DigitIntBetween1000And9999', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'messagingPort', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '1000', ')', ')', '.', 'and', '(', 'lessThan', '(', '10000', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,rtpPort_returnPositiveEvenInt,"    public void rtpPort_returnPositiveEvenInt() {
        int sut = faker.sip().rtpPort();
        assertThat(sut, greaterThanOrEqualTo(2));
        assertThat(sut % 2, is(0));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void rtpPort_returnPositiveEvenInt() {
        int sut = faker.sip().rtpPort();
        assertThat(sut, greaterThanOrEqualTo(2));
        assertThat(sut % 2, is(0));
    }
","['    ', 'public', ' ', 'void', ' ', 'rtpPort_returnPositiveEvenInt', '(', ')', ' ', '{', '\n', '        ', 'int', ' ', 'sut', ' ', '=', ' ', 'faker', '.', 'sip', '(', ')', '.', 'rtpPort', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'sut', ',', ' ', 'greaterThanOrEqualTo', '(', '2', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'sut', ' ', '%', ' ', '2', ',', ' ', 'is', '(', '0', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,provisionalResponseCode_return3DigitIntBetween100And199,"    public void provisionalResponseCode_return3DigitIntBetween100And199() {
        assertThat(faker.sip().provisionalResponseCode(), both(greaterThanOrEqualTo(100)).and(lessThan(200)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void provisionalResponseCode_return3DigitIntBetween100And199() {
        assertThat(faker.sip().provisionalResponseCode(), both(greaterThanOrEqualTo(100)).and(lessThan(200)));
    }
","['    ', 'public', ' ', 'void', ' ', 'provisionalResponseCode_return3DigitIntBetween100And199', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'provisionalResponseCode', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '100', ')', ')', '.', 'and', '(', 'lessThan', '(', '200', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,successResponse_Codereturn3DigitIntBetween200And299,"    public void successResponse_Codereturn3DigitIntBetween200And299() {
        assertThat(faker.sip().successResponseCode(), both(greaterThanOrEqualTo(200)).and(lessThan(300)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void successResponse_Codereturn3DigitIntBetween200And299() {
        assertThat(faker.sip().successResponseCode(), both(greaterThanOrEqualTo(200)).and(lessThan(300)));
    }
","['    ', 'public', ' ', 'void', ' ', 'successResponse_Codereturn3DigitIntBetween200And299', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'successResponseCode', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '200', ')', ')', '.', 'and', '(', 'lessThan', '(', '300', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,redirectResponseCode_Codereturn3DigitIntBetween300And399,"    public void redirectResponseCode_Codereturn3DigitIntBetween300And399() {
        assertThat(faker.sip().redirectResponseCode(), both(greaterThanOrEqualTo(300)).and(lessThan(400)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void redirectResponseCode_Codereturn3DigitIntBetween300And399() {
        assertThat(faker.sip().redirectResponseCode(), both(greaterThanOrEqualTo(300)).and(lessThan(400)));
    }
","['    ', 'public', ' ', 'void', ' ', 'redirectResponseCode_Codereturn3DigitIntBetween300And399', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'redirectResponseCode', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '300', ')', ')', '.', 'and', '(', 'lessThan', '(', '400', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,clientErrorResponseCode_Codereturn3DigitIntBetween400And499,"    public void clientErrorResponseCode_Codereturn3DigitIntBetween400And499() {
        assertThat(faker.sip().clientErrorResponseCode(), both(greaterThanOrEqualTo(400)).and(lessThan(500)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void clientErrorResponseCode_Codereturn3DigitIntBetween400And499() {
        assertThat(faker.sip().clientErrorResponseCode(), both(greaterThanOrEqualTo(400)).and(lessThan(500)));
    }
","['    ', 'public', ' ', 'void', ' ', 'clientErrorResponseCode_Codereturn3DigitIntBetween400And499', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'clientErrorResponseCode', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '400', ')', ')', '.', 'and', '(', 'lessThan', '(', '500', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,serverErrorResponseCode_Codereturn3DigitIntBetween500And599,"    public void serverErrorResponseCode_Codereturn3DigitIntBetween500And599() {
        assertThat(faker.sip().serverErrorResponseCode(), both(greaterThanOrEqualTo(500)).and(lessThan(600)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void serverErrorResponseCode_Codereturn3DigitIntBetween500And599() {
        assertThat(faker.sip().serverErrorResponseCode(), both(greaterThanOrEqualTo(500)).and(lessThan(600)));
    }
","['    ', 'public', ' ', 'void', ' ', 'serverErrorResponseCode_Codereturn3DigitIntBetween500And599', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'serverErrorResponseCode', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '500', ')', ')', '.', 'and', '(', 'lessThan', '(', '600', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,globalErrorResponseCode_Codereturn3DigitIntBetween600And699,"    public void globalErrorResponseCode_Codereturn3DigitIntBetween600And699() {
        assertThat(faker.sip().globalErrorResponseCode(), both(greaterThanOrEqualTo(600)).and(lessThan(700)));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void globalErrorResponseCode_Codereturn3DigitIntBetween600And699() {
        assertThat(faker.sip().globalErrorResponseCode(), both(greaterThanOrEqualTo(600)).and(lessThan(700)));
    }
","['    ', 'public', ' ', 'void', ' ', 'globalErrorResponseCode_Codereturn3DigitIntBetween600And699', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'globalErrorResponseCode', '(', ')', ',', ' ', 'both', '(', 'greaterThanOrEqualTo', '(', '600', ')', ')', '.', 'and', '(', 'lessThan', '(', '700', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,provisionalResponsePhrase_returnAnyNonDigitString,"    public void provisionalResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().provisionalResponsePhrase(), matchesRegularExpression(""\\D+""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void provisionalResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().provisionalResponsePhrase(), matchesRegularExpression(""\\D+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'provisionalResponsePhrase_returnAnyNonDigitString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'provisionalResponsePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'D+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,successResponsePhrase_returnAnyNonDigitString,"    public void successResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().successResponsePhrase(), matchesRegularExpression(""\\D+""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void successResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().successResponsePhrase(), matchesRegularExpression(""\\D+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'successResponsePhrase_returnAnyNonDigitString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'successResponsePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'D+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,redirectResponsePhrase_returnAnyNonDigitString,"    public void redirectResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().redirectResponsePhrase(), matchesRegularExpression(""\\D+""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void redirectResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().redirectResponsePhrase(), matchesRegularExpression(""\\D+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'redirectResponsePhrase_returnAnyNonDigitString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'redirectResponsePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'D+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,clientErrorResponsePhrase_returnAnyNonDigitString,"    public void clientErrorResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().clientErrorResponsePhrase(), matchesRegularExpression(""\\D+""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void clientErrorResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().clientErrorResponsePhrase(), matchesRegularExpression(""\\D+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'clientErrorResponsePhrase_returnAnyNonDigitString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'clientErrorResponsePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'D+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,serverErrorResponsePhrase_returnAnyNonDigitString,"    public void serverErrorResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().serverErrorResponsePhrase(), matchesRegularExpression(""\\D+""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void serverErrorResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().serverErrorResponsePhrase(), matchesRegularExpression(""\\D+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'serverErrorResponsePhrase_returnAnyNonDigitString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'serverErrorResponsePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'D+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,globalErrorResponsePhrase_returnAnyNonDigitString,"    public void globalErrorResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().globalErrorResponsePhrase(), matchesRegularExpression(""\\D+""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void globalErrorResponsePhrase_returnAnyNonDigitString() {
        assertThat(faker.sip().globalErrorResponsePhrase(), matchesRegularExpression(""\\D+""));
    }
","['    ', 'public', ' ', 'void', ' ', 'globalErrorResponsePhrase_returnAnyNonDigitString', '(', ')', ' ', '{', '\n', '        ', 'assertThat', '(', 'faker', '.', 'sip', '(', ')', '.', 'globalErrorResponsePhrase', '(', ')', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'D+', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,bodyBytes_isNotNull,"    public void bodyBytes_isNotNull() {
        byte[] sut = faker.sip().bodyBytes();

        assertThat(sut.length, notNullValue());
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void bodyBytes_isNotNull() {
        byte[] sut = faker.sip().bodyBytes();

        assertThat(sut.length, notNullValue());
    }
","['    ', 'public', ' ', 'void', ' ', 'bodyBytes_isNotNull', '(', ')', ' ', '{', '\n', '        ', 'byte', '[', ']', ' ', 'sut', ' ', '=', ' ', 'faker', '.', 'sip', '(', ')', '.', 'bodyBytes', '(', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'sut', '.', 'length', ',', ' ', 'notNullValue', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,0bc4a58efd77f404f6bdab4782f0d9fb001f1183,SipTest.java,nameAddress_returnValidNameAddressString,"    public void nameAddress_returnValidNameAddressString() {
        String[] sut = faker.sip().nameAddress().split(""@"");

        assertThat(sut[0].split("":"")[1], matchesRegularExpression(""\\w+""));
        assertThat(sut[1].split("":"")[0], matchesRegularExpression(""^\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}$""));
    }",https://www.github.com/dius/java-faker/commit/0bc4a58efd77f404f6bdab4782f0d9fb001f1183,"    public void nameAddress_returnValidNameAddressString() {
        String[] sut = faker.sip().nameAddress().split(""@"");

        assertThat(sut[0].split("":"")[1], matchesRegularExpression(""\\w+""));
        assertThat(sut[1].split("":"")[0], matchesRegularExpression(""^\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}$""));
    }
","['    ', 'public', ' ', 'void', ' ', 'nameAddress_returnValidNameAddressString', '(', ')', ' ', '{', '\n', '        ', 'String', '[', ']', ' ', 'sut', ' ', '=', ' ', 'faker', '.', 'sip', '(', ')', '.', 'nameAddress', '(', ')', '.', 'split', '(', '""', '@', '""', ')', ';', '\n', '\n', '        ', 'assertThat', '(', 'sut', '[', '0', ']', '.', 'split', '(', '""', ':', '""', ')', '[', '1', ']', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'w+', '""', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'sut', '[', '1', ']', '.', 'split', '(', '""', ':', '""', ')', '[', '0', ']', ',', ' ', 'matchesRegularExpression', '(', '""', '^', '\\\\', 'd{1,3}.', '\\\\', 'd{1,3}.', '\\\\', 'd{1,3}.', '\\\\', 'd{1,3}$', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,01f5c45c5793d4f2633a81b5515d7d6b2eceb606,EnglandFootBallTest.java,testLeague,"    public void testLeague() {
        String league = faker.englandfootball().league();
        assertThat(league, not(isEmptyOrNullString()));
        assertThat(league, MatchesRegularExpression.matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/01f5c45c5793d4f2633a81b5515d7d6b2eceb606,"    public void testLeague() {
        String league = faker.englandfootball().league();
        assertThat(league, not(isEmptyOrNullString()));
        assertThat(league, MatchesRegularExpression.matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLeague', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'league', ' ', '=', ' ', 'faker', '.', 'englandfootball', '(', ')', '.', 'league', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'league', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'league', ',', ' ', 'MatchesRegularExpression', '.', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,01f5c45c5793d4f2633a81b5515d7d6b2eceb606,EnglandFootBallTest.java,testTeam,"    public void testTeam() {
        String team = faker.englandfootball().team();
        assertThat(team, not(isEmptyOrNullString()));
        assertThat(team, MatchesRegularExpression.matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/01f5c45c5793d4f2633a81b5515d7d6b2eceb606,"    public void testTeam() {
        String team = faker.englandfootball().team();
        assertThat(team, not(isEmptyOrNullString()));
        assertThat(team, MatchesRegularExpression.matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testTeam', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'team', ' ', '=', ' ', 'faker', '.', 'englandfootball', '(', ')', '.', 'team', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'team', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'team', ',', ' ', 'MatchesRegularExpression', '.', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b39a546852f2b26dcd2d3ecf8f128e71c21ca927,EnglandFootBall.java,league,"    public String league() {
        return faker.fakeValuesService().resolve(""englandfootball.leagues"",this,faker);
    }",https://www.github.com/dius/java-faker/commit/b39a546852f2b26dcd2d3ecf8f128e71c21ca927,"    public String league() {
        return faker.fakeValuesService().resolve(""englandfootball.leagues"",this,faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'league', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'englandfootball.leagues', '""', ',', 'this', ',', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,b39a546852f2b26dcd2d3ecf8f128e71c21ca927,EnglandFootBall.java,team,"    public String team() {
        return faker.fakeValuesService().resolve(""englandfootball.teams"",this,faker);
    }",https://www.github.com/dius/java-faker/commit/b39a546852f2b26dcd2d3ecf8f128e71c21ca927,"    public String team() {
        return faker.fakeValuesService().resolve(""englandfootball.teams"",this,faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'team', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'englandfootball.teams', '""', ',', 'this', ',', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,b39a546852f2b26dcd2d3ecf8f128e71c21ca927,Faker.java,englandfootball,"    public EnglandFootBall englandfootball() { return englandfootball; }
",https://www.github.com/dius/java-faker/commit/b39a546852f2b26dcd2d3ecf8f128e71c21ca927,"    public EnglandFootBall englandfootball() { return englandfootball; }
","['    ', 'public', ' ', 'EnglandFootBall', ' ', 'englandfootball', '(', ')', ' ', '{', ' ', 'return', ' ', 'englandfootball', ';', ' ', '}', '\n']"
master,308358cc29d42a230d2aea3ff91d4640f1e18dce,Photography.java,genre,"    public String genre() {
        return faker.fakeValuesService().fetchString(""photography.genre"");
    }",https://www.github.com/dius/java-faker/commit/308358cc29d42a230d2aea3ff91d4640f1e18dce,"    public String genre() {
        return faker.fakeValuesService().fetchString(""photography.genre"");
    }
","['    ', 'public', ' ', 'String', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'fetchString', '(', '""', 'photography.genre', '""', ')', ';', '\n', '    ', '}', '\n']"
master,ac8203fe513456c412b1f4aecfa20beed03dc66d,EnglandFootBallTest.java,testLeague,"    public void testLeague() {
        String league = faker.englandfootball().league();
        assertThat(league, not(isEmptyOrNullString()));
        assertThat(league, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/ac8203fe513456c412b1f4aecfa20beed03dc66d,"    public void testLeague() {
        String league = faker.englandfootball().league();
        assertThat(league, not(isEmptyOrNullString()));
        assertThat(league, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testLeague', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'league', ' ', '=', ' ', 'faker', '.', 'englandfootball', '(', ')', '.', 'league', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'league', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'league', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,ac8203fe513456c412b1f4aecfa20beed03dc66d,EnglandFootBallTest.java,testTeam,"    public void testTeam() {
        String team = faker.englandfootball().team();
        assertThat(team, not(isEmptyOrNullString()));
        assertThat(team, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }",https://www.github.com/dius/java-faker/commit/ac8203fe513456c412b1f4aecfa20beed03dc66d,"    public void testTeam() {
        String team = faker.englandfootball().team();
        assertThat(team, not(isEmptyOrNullString()));
        assertThat(team, matchesRegularExpression(noLeadingTrailingWhitespaceRegex));
    }
","['    ', 'public', ' ', 'void', ' ', 'testTeam', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'team', ' ', '=', ' ', 'faker', '.', 'englandfootball', '(', ')', '.', 'team', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'team', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '        ', 'assertThat', '(', 'team', ',', ' ', 'matchesRegularExpression', '(', 'noLeadingTrailingWhitespaceRegex', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,testAperture,"    public void testAperture() {
        final String value = faker.photography().aperture();
        assertTrue(value.startsWith(""f""));
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void testAperture() {
        final String value = faker.photography().aperture();
        assertTrue(value.startsWith(""f""));
    }
","['    ', 'public', ' ', 'void', ' ', 'testAperture', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'aperture', '(', ')', ';', '\n', '        ', 'assertTrue', '(', 'value', '.', 'startsWith', '(', '""', 'f', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,testTerm,"    public void testTerm() {
        final String value = faker.photography().term();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void testTerm() {
        final String value = faker.photography().term();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'testTerm', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'term', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,brand,"    public void brand() {
        final String value = faker.photography().brand();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void brand() {
        final String value = faker.photography().brand();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'brand', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'brand', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,camera,"    public void camera() {
        final String value = faker.photography().camera();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void camera() {
        final String value = faker.photography().camera();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'camera', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'camera', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,lens,"    public void lens() {
        final String value = faker.photography().lens();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void lens() {
        final String value = faker.photography().lens();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'lens', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'lens', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,genre,"    public void genre() {
        final String value = faker.photography().genre();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void genre() {
        final String value = faker.photography().genre();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'genre', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'genre', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,imageTag,"    public void imageTag() {
        final String value = faker.photography().imageTag();
        assertNonNullOrEmpty(value);
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void imageTag() {
        final String value = faker.photography().imageTag();
        assertNonNullOrEmpty(value);
    }
","['    ', 'public', ' ', 'void', ' ', 'imageTag', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'imageTag', '(', ')', ';', '\n', '        ', 'assertNonNullOrEmpty', '(', 'value', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,shutter,"    public void shutter() {
        final String value = faker.photography().shutter();
        assertThat(value, matchesRegularExpression(""\\d{1,}\\/{0,1}\\d*""));
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void shutter() {
        final String value = faker.photography().shutter();
        assertThat(value, matchesRegularExpression(""\\d{1,}\\/{0,1}\\d*""));
    }
","['    ', 'public', ' ', 'void', ' ', 'shutter', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'shutter', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{1,}', '\\\\', '/{0,1}', '\\\\', 'd*', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,b38dbdc69056fcd9376ff8063d5f525b56d4154b,PhotographyTest.java,iso,"    public void iso() {
        final String value = faker.photography().iso();
        assertThat(value, matchesRegularExpression(""\\d{1,}""));
    }",https://www.github.com/dius/java-faker/commit/b38dbdc69056fcd9376ff8063d5f525b56d4154b,"    public void iso() {
        final String value = faker.photography().iso();
        assertThat(value, matchesRegularExpression(""\\d{1,}""));
    }
","['    ', 'public', ' ', 'void', ' ', 'iso', '(', ')', ' ', '{', '\n', '        ', 'final', ' ', 'String', ' ', 'value', ' ', '=', ' ', 'faker', '.', 'photography', '(', ')', '.', 'iso', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'value', ',', ' ', 'matchesRegularExpression', '(', '""', '\\\\', 'd{1,}', '""', ')', ')', ';', '\n', '    ', '}', '\n']"
master,23c1eb238fbcdecd57361c39d02f19439fce0eea,EnglandFootBallTest.java,testLeague,"    public void testLeague() {
        String league = faker.englandfootball().league();
        assertThat(league, not(isEmptyOrNullString()));
",https://www.github.com/dius/java-faker/commit/23c1eb238fbcdecd57361c39d02f19439fce0eea,"    public void testLeague() {
        String league = faker.englandfootball().league();
        assertThat(league, not(isEmptyOrNullString()));
","['    ', 'public', ' ', 'void', ' ', 'testLeague', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'league', ' ', '=', ' ', 'faker', '.', 'englandfootball', '(', ')', '.', 'league', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'league', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n']"
master,23c1eb238fbcdecd57361c39d02f19439fce0eea,EnglandFootBallTest.java,testTeam,"    public void testTeam() {
        String team = faker.englandfootball().team();
        assertThat(team, not(isEmptyOrNullString()));
",https://www.github.com/dius/java-faker/commit/23c1eb238fbcdecd57361c39d02f19439fce0eea,"    public void testTeam() {
        String team = faker.englandfootball().team();
        assertThat(team, not(isEmptyOrNullString()));
","['    ', 'public', ' ', 'void', ' ', 'testTeam', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'team', ' ', '=', ' ', 'faker', '.', 'englandfootball', '(', ')', '.', 'team', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'team', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n']"
master,89a63c9f3019540a1a31516373d87fa6301bb6e6,Address.java,postcode,"    public String postcode() {
        return faker.bothify(faker.fakeValuesService().resolve(""address.postcode"", this,faker));
    }",https://www.github.com/dius/java-faker/commit/89a63c9f3019540a1a31516373d87fa6301bb6e6,"    public String postcode() {
        return faker.bothify(faker.fakeValuesService().resolve(""address.postcode"", this,faker));
    }
","['    ', 'public', ' ', 'String', ' ', 'postcode', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'bothify', '(', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'address.postcode', '""', ',', ' ', 'this', ',', 'faker', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c83d329c5a7c47b2e0fe867df6b2c1d2c6c1a10b,Options.java,randomlyNull,"    public <E> E randomlyNull(E... value) {
        List<E> elements;
        elements = new ArrayList<>(value.length);
        for (int i = 0; i < value.length; i++) {
            elements.add(i, value[i]);
        }
        elements.add(value.length, null);
        return faker.options().option((E[]) elements.toArray());
    }",https://www.github.com/dius/java-faker/commit/c83d329c5a7c47b2e0fe867df6b2c1d2c6c1a10b,"    public <E> E randomlyNull(E... value) {
        List<E> elements;
        elements = new ArrayList<>(value.length);
        for (int i = 0; i < value.length; i++) {
            elements.add(i, value[i]);
        }
        elements.add(value.length, null);
        return faker.options().option((E[]) elements.toArray());
    }
","['    ', 'public', ' ', '<', 'E', '>', ' ', 'E', ' ', 'randomlyNull', '(', 'E', '.', '.', '.', ' ', 'value', ')', ' ', '{', '\n', '        ', 'List', '<', 'E', '>', ' ', 'elements', ';', '\n', '        ', 'elements', ' ', '=', ' ', 'new', ' ', 'ArrayList', '<', '>', '(', 'value', '.', 'length', ')', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'value', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'elements', '.', 'add', '(', 'i', ',', ' ', 'value', '[', 'i', ']', ')', ';', '\n', '        ', '}', '\n', '        ', 'elements', '.', 'add', '(', 'value', '.', 'length', ',', ' ', 'null', ')', ';', '\n', '        ', 'return', ' ', 'faker', '.', 'options', '(', ')', '.', 'option', '(', '(', 'E', '[', ']', ')', ' ', 'elements', '.', 'toArray', '(', ')', ')', ';', '\n', '    ', '}', '\n']"
master,c83d329c5a7c47b2e0fe867df6b2c1d2c6c1a10b,OptionsTest.java,testRandomlyNull,"    public void testRandomlyNull() {
        Integer[] int_list = new Integer[] {1,3,4,5,21,13,45};
        Integer[] int_list_check = new Integer[] {1,3,4,5,21,13,45,null};
        String[] string_list = new String[] {""hello"", ""Goodbye"", ""Hi"", ""near"", ""far""};
        String[] string_list_check = new String[] {""hello"", ""Goodbye"", ""Hi"", ""near"", ""far"", null};
        for (int i = 0; i < int_list.length; i++) {
            Integer temp = faker.options().randomlyNull(int_list);
            assertThat( temp, isOneOf(int_list_check));
        }

        for (int i = 0; i < string_list.length; i++) {
            String temp = faker.options().randomlyNull(string_list);",https://www.github.com/dius/java-faker/commit/c83d329c5a7c47b2e0fe867df6b2c1d2c6c1a10b,"    public void testRandomlyNull() {
        Integer[] int_list = new Integer[] {1,3,4,5,21,13,45};
        Integer[] int_list_check = new Integer[] {1,3,4,5,21,13,45,null};
        String[] string_list = new String[] {""hello"", ""Goodbye"", ""Hi"", ""near"", ""far""};
        String[] string_list_check = new String[] {""hello"", ""Goodbye"", ""Hi"", ""near"", ""far"", null};
        for (int i = 0; i < int_list.length; i++) {
            Integer temp = faker.options().randomlyNull(int_list);
            assertThat( temp, isOneOf(int_list_check));
        }

        for (int i = 0; i < string_list.length; i++) {
            String temp = faker.options().randomlyNull(string_list);
","['    ', 'public', ' ', 'void', ' ', 'testRandomlyNull', '(', ')', ' ', '{', '\n', '        ', 'Integer', '[', ']', ' ', 'int_list', ' ', '=', ' ', 'new', ' ', 'Integer', '[', ']', ' ', '{', '1', ',', '3', ',', '4', ',', '5', ',', '21', ',', '13', ',', '45', '}', ';', '\n', '        ', 'Integer', '[', ']', ' ', 'int_list_check', ' ', '=', ' ', 'new', ' ', 'Integer', '[', ']', ' ', '{', '1', ',', '3', ',', '4', ',', '5', ',', '21', ',', '13', ',', '45', ',', 'null', '}', ';', '\n', '        ', 'String', '[', ']', ' ', 'string_list', ' ', '=', ' ', 'new', ' ', 'String', '[', ']', ' ', '{', '""', 'hello', '""', ',', ' ', '""', 'Goodbye', '""', ',', ' ', '""', 'Hi', '""', ',', ' ', '""', 'near', '""', ',', ' ', '""', 'far', '""', '}', ';', '\n', '        ', 'String', '[', ']', ' ', 'string_list_check', ' ', '=', ' ', 'new', ' ', 'String', '[', ']', ' ', '{', '""', 'hello', '""', ',', ' ', '""', 'Goodbye', '""', ',', ' ', '""', 'Hi', '""', ',', ' ', '""', 'near', '""', ',', ' ', '""', 'far', '""', ',', ' ', 'null', '}', ';', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'int_list', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'Integer', ' ', 'temp', ' ', '=', ' ', 'faker', '.', 'options', '(', ')', '.', 'randomlyNull', '(', 'int_list', ')', ';', '\n', '            ', 'assertThat', '(', ' ', 'temp', ',', ' ', 'isOneOf', '(', 'int_list_check', ')', ')', ';', '\n', '        ', '}', '\n', '\n', '        ', 'for', ' ', '(', 'int', ' ', 'i', ' ', '=', ' ', '0', ';', ' ', 'i', ' ', '<', ' ', 'string_list', '.', 'length', ';', ' ', 'i', '+', '+', ')', ' ', '{', '\n', '            ', 'String', ' ', 'temp', ' ', '=', ' ', 'faker', '.', 'options', '(', ')', '.', 'randomlyNull', '(', 'string_list', ')', ';', '\n']"
master,8d7036a66fcad54bf652d1bae91fa4ab668c1334,Mountain.java,name,"    public String name() {
        return faker.fakeValuesService().resolve(""mountain.name"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/8d7036a66fcad54bf652d1bae91fa4ab668c1334,"    public String name() {
        return faker.fakeValuesService().resolve(""mountain.name"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'name', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'mountain.name', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,8d7036a66fcad54bf652d1bae91fa4ab668c1334,Mountain.java,range,"    public String range() {
        return faker.fakeValuesService().resolve(""mountain.range"", this, faker);
    }",https://www.github.com/dius/java-faker/commit/8d7036a66fcad54bf652d1bae91fa4ab668c1334,"    public String range() {
        return faker.fakeValuesService().resolve(""mountain.range"", this, faker);
    }
","['    ', 'public', ' ', 'String', ' ', 'range', '(', ')', ' ', '{', '\n', '        ', 'return', ' ', 'faker', '.', 'fakeValuesService', '(', ')', '.', 'resolve', '(', '""', 'mountain.range', '""', ',', ' ', 'this', ',', ' ', 'faker', ')', ';', '\n', '    ', '}', '\n']"
master,8d7036a66fcad54bf652d1bae91fa4ab668c1334,MountainTest.java,testMountainName,"    public void testMountainName() {
        String mountainName = faker.mountain().name();
        assertThat(mountainName, not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/8d7036a66fcad54bf652d1bae91fa4ab668c1334,"    public void testMountainName() {
        String mountainName = faker.mountain().name();
        assertThat(mountainName, not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMountainName', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'mountainName', ' ', '=', ' ', 'faker', '.', 'mountain', '(', ')', '.', 'name', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'mountainName', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
master,8d7036a66fcad54bf652d1bae91fa4ab668c1334,MountainTest.java,testMountainLeague,"    public void testMountainLeague() {
        String mountainLeague = faker.mountain().range();
        assertThat(mountainLeague, not(isEmptyOrNullString()));
    }",https://www.github.com/dius/java-faker/commit/8d7036a66fcad54bf652d1bae91fa4ab668c1334,"    public void testMountainLeague() {
        String mountainLeague = faker.mountain().range();
        assertThat(mountainLeague, not(isEmptyOrNullString()));
    }
","['    ', 'public', ' ', 'void', ' ', 'testMountainLeague', '(', ')', ' ', '{', '\n', '        ', 'String', ' ', 'mountainLeague', ' ', '=', ' ', 'faker', '.', 'mountain', '(', ')', '.', 'range', '(', ')', ';', '\n', '        ', 'assertThat', '(', 'mountainLeague', ',', ' ', 'not', '(', 'isEmptyOrNullString', '(', ')', ')', ')', ';', '\n', '    ', '}', '\n']"
